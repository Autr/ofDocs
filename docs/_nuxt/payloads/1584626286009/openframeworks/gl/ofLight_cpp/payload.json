{"data":[{"page":{"entry":{"name":"ofLight.cpp","filename":"ofLight.cpp","absolute":"/Users/gilbertsinnott/Code/openFrameworks/libs/openFrameworks/gl/ofLight.cpp","path":"/openframeworks/gl/ofLight_cpp","route":"/openframeworks/gl/ofLight.cpp","dir":"../libs/openFrameworks/gl","ext":"cpp","type":"source","id":247,"parent":235,"breadcrumbs":[235,195],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">/*\n *  ofLight.cpp\n *  openFrameworksLib\n *\n *  Created by Memo Akten on 14/01/2011.\n *  Copyright 2011 MSA Visuals Ltd. All rights reserved.\n *\n */</span>\n\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofLight.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"of3dUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGLBaseTypes.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGLUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;map></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;glm/gtc/quaternion.hpp></span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">static</span> ofFloatColor <span class=\"token function\">globalAmbient</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofEnableLighting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofGetGLRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">enableLighting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDisableLighting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofGetGLRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">disableLighting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofEnableSeparateSpecularLight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofGetGLRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">enableSeparateSpecularLight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDisableSeparateSpecularLight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">ofGetGLRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">disableSeparateSpecularLight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofGetLightingEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofGetGLRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getLightingEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetSmoothLighting</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofGetGLRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setSmoothLighting</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetGlobalAmbientColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFloatColor<span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofGetGLRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setGlobalAmbientColor</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tglobalAmbient <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> ofFloatColor <span class=\"token operator\">&amp;</span> <span class=\"token function\">ofGetGlobalAmbientColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> globalAmbient<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nvector<span class=\"token operator\">&lt;</span>weak_ptr<span class=\"token operator\">&lt;</span>ofLight<span class=\"token operator\">::</span>Data<span class=\"token operator\">></span> <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token function\">ofLightsData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">static</span> vector<span class=\"token operator\">&lt;</span>weak_ptr<span class=\"token operator\">&lt;</span>ofLight<span class=\"token operator\">::</span>Data<span class=\"token operator\">></span> <span class=\"token operator\">></span> <span class=\"token operator\">*</span> lightsActive <span class=\"token operator\">=</span> <span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token keyword\">new</span> vector<span class=\"token operator\">&lt;</span>weak_ptr<span class=\"token operator\">&lt;</span>ofLight<span class=\"token operator\">::</span>Data<span class=\"token operator\">></span> <span class=\"token operator\">></span><span class=\"token operator\">:</span><span class=\"token keyword\">new</span> vector<span class=\"token operator\">&lt;</span>weak_ptr<span class=\"token operator\">&lt;</span>ofLight<span class=\"token operator\">::</span>Data<span class=\"token operator\">></span> <span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">*</span>lightsActive<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofLight<span class=\"token operator\">::</span>Data<span class=\"token operator\">::</span><span class=\"token function\">Data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tglIndex\t\t\t<span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\tisEnabled\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tattenuation_constant <span class=\"token operator\">=</span> <span class=\"token number\">0.000001</span><span class=\"token punctuation\">;</span>\n\tattenuation_linear <span class=\"token operator\">=</span> <span class=\"token number\">0.000001</span><span class=\"token punctuation\">;</span>\n\tattenuation_quadratic <span class=\"token operator\">=</span> <span class=\"token number\">0.000001</span><span class=\"token punctuation\">;</span>\n\tspotCutOff <span class=\"token operator\">=</span> <span class=\"token number\">45</span><span class=\"token punctuation\">;</span>\n\texponent <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span>\n\twidth <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\theight <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\tlightType <span class=\"token operator\">=</span> OF_LIGHT_POINT<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofLight<span class=\"token operator\">::</span>Data<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">Data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>glIndex<span class=\"token operator\">==</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">auto</span> r <span class=\"token operator\">=</span> rendererP<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tr<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setLightAmbientColor</span><span class=\"token punctuation\">(</span> glIndex<span class=\"token punctuation\">,</span> <span class=\"token function\">ofColor</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tr<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setLightDiffuseColor</span><span class=\"token punctuation\">(</span> glIndex<span class=\"token punctuation\">,</span> <span class=\"token function\">ofColor</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tr<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setLightSpecularColor</span><span class=\"token punctuation\">(</span> glIndex<span class=\"token punctuation\">,</span> <span class=\"token function\">ofColor</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tr<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setLightPosition</span><span class=\"token punctuation\">(</span> glIndex<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec4</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tr<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">disableLight</span><span class=\"token punctuation\">(</span> glIndex <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofLight<span class=\"token operator\">::</span><span class=\"token function\">ofLight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">:</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> Data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setAmbientColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setDiffuseColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setSpecularColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setPointLight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">// assume default attenuation factors //</span>\n    <span class=\"token function\">setAttenuation</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofLight<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>glIndex<span class=\"token operator\">==</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">bool</span> bLightFound <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// search for the first free block</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token function\">ofLightsData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofLightsData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">expired</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>glIndex <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n\t\t\t\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>isEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">ofLightsData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span>\n\t\t\t\tbLightFound <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bLightFound <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLightsData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>glIndex <span class=\"token operator\">=</span> <span class=\"token function\">ofLightsData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>isEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\tbLightFound <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> bLightFound <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token comment\" spellcheck=\"true\">// run this the first time, since it was not found before //</span>\n\t\t\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>rendererP <span class=\"token operator\">=</span> <span class=\"token function\">ofGetGLRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">onPositionChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">setAmbientColor</span><span class=\"token punctuation\">(</span> <span class=\"token function\">getAmbientColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">setDiffuseColor</span><span class=\"token punctuation\">(</span> <span class=\"token function\">getDiffuseColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">setSpecularColor</span><span class=\"token punctuation\">(</span> <span class=\"token function\">getSpecularColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">setAttenuation</span><span class=\"token punctuation\">(</span> <span class=\"token function\">getAttenuationConstant</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getAttenuationLinear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getAttenuationQuadratic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">getIsSpotlight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">setSpotlightCutOff</span><span class=\"token punctuation\">(</span><span class=\"token function\">getSpotlightCutOff</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">setSpotConcentration</span><span class=\"token punctuation\">(</span><span class=\"token function\">getSpotConcentration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">getIsSpotlight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token function\">getIsDirectional</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">onOrientationChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n        \t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofLight\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setup(): couldn't get active GL light, maximum number of \"</span><span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">ofLightsData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" reached\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofLight<span class=\"token operator\">::</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>isEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">onPositionChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// update the position //</span>\n\t<span class=\"token function\">onOrientationChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">auto</span> r <span class=\"token operator\">=</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>rendererP<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tr<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">enableLight</span><span class=\"token punctuation\">(</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>glIndex <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofLight<span class=\"token operator\">::</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>isEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">auto</span> r <span class=\"token operator\">=</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>rendererP<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tr<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">disableLight</span><span class=\"token punctuation\">(</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>glIndex <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">int</span> ofLight<span class=\"token operator\">::</span><span class=\"token function\">getLightID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>glIndex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofLight<span class=\"token operator\">::</span><span class=\"token function\">getIsEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>isEnabled<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofLight<span class=\"token operator\">::</span><span class=\"token function\">setDirectional</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>lightType\t<span class=\"token operator\">=</span> OF_LIGHT_DIRECTIONAL<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofLight<span class=\"token operator\">::</span><span class=\"token function\">getIsDirectional</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>lightType <span class=\"token operator\">==</span> OF_LIGHT_DIRECTIONAL<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofLight<span class=\"token operator\">::</span><span class=\"token function\">setSpotlight</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> spotCutOff<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> exponent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>lightType\t\t<span class=\"token operator\">=</span> OF_LIGHT_SPOT<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setSpotlightCutOff</span><span class=\"token punctuation\">(</span> spotCutOff <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setSpotConcentration</span><span class=\"token punctuation\">(</span> exponent <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofLight<span class=\"token operator\">::</span><span class=\"token function\">getIsSpotlight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>lightType <span class=\"token operator\">==</span> OF_LIGHT_SPOT<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofLight<span class=\"token operator\">::</span><span class=\"token function\">setSpotlightCutOff</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> spotCutOff <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    data<span class=\"token operator\">-</span><span class=\"token operator\">></span>spotCutOff <span class=\"token operator\">=</span> <span class=\"token function\">CLAMP</span><span class=\"token punctuation\">(</span>spotCutOff<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">auto</span> r <span class=\"token operator\">=</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>rendererP<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tr<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setLightSpotlightCutOff</span><span class=\"token punctuation\">(</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>glIndex<span class=\"token punctuation\">,</span> spotCutOff <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span> ofLight<span class=\"token operator\">::</span><span class=\"token function\">getSpotlightCutOff</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">getIsSpotlight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofLight\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getSpotlightCutOff(): light \"</span> <span class=\"token operator\">&lt;&lt;</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>glIndex <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" is not a spot light\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>spotCutOff<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofLight<span class=\"token operator\">::</span><span class=\"token function\">setSpotConcentration</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> exponent <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    data<span class=\"token operator\">-</span><span class=\"token operator\">></span>exponent <span class=\"token operator\">=</span> <span class=\"token function\">CLAMP</span><span class=\"token punctuation\">(</span>exponent<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">auto</span> r <span class=\"token operator\">=</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>rendererP<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tr<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setLightSpotConcentration</span><span class=\"token punctuation\">(</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>glIndex<span class=\"token punctuation\">,</span> exponent <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span> ofLight<span class=\"token operator\">::</span><span class=\"token function\">getSpotConcentration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">getIsSpotlight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofLight\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getSpotConcentration(): light \"</span> <span class=\"token operator\">&lt;&lt;</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>glIndex <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" is not a spot light\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>exponent<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofLight<span class=\"token operator\">::</span><span class=\"token function\">setPointLight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>lightType\t<span class=\"token operator\">=</span> OF_LIGHT_POINT<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofLight<span class=\"token operator\">::</span><span class=\"token function\">getIsPointLight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>lightType <span class=\"token operator\">==</span> OF_LIGHT_POINT<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofLight<span class=\"token operator\">::</span><span class=\"token function\">setAttenuation</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> constant<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> linear<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> quadratic <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// falloff = 0 -> 1, 0 being least amount of fallof, 1.0 being most //</span>\n\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>attenuation_constant    <span class=\"token operator\">=</span> constant<span class=\"token punctuation\">;</span>\n\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>attenuation_linear      <span class=\"token operator\">=</span> linear<span class=\"token punctuation\">;</span>\n\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>attenuation_quadratic   <span class=\"token operator\">=</span> quadratic<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">auto</span> r <span class=\"token operator\">=</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>rendererP<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tr<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setLightAttenuation</span><span class=\"token punctuation\">(</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>glIndex<span class=\"token punctuation\">,</span> constant<span class=\"token punctuation\">,</span> linear<span class=\"token punctuation\">,</span> quadratic <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span> ofLight<span class=\"token operator\">::</span><span class=\"token function\">getAttenuationConstant</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>attenuation_constant<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span> ofLight<span class=\"token operator\">::</span><span class=\"token function\">getAttenuationLinear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>attenuation_linear<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span> ofLight<span class=\"token operator\">::</span><span class=\"token function\">getAttenuationQuadratic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>attenuation_quadratic<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofLight<span class=\"token operator\">::</span><span class=\"token function\">setAreaLight</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>lightType <span class=\"token operator\">=</span> OF_LIGHT_AREA<span class=\"token punctuation\">;</span>\n\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>width <span class=\"token operator\">=</span> width<span class=\"token punctuation\">;</span>\n\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>height <span class=\"token operator\">=</span> height<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofLight<span class=\"token operator\">::</span><span class=\"token function\">getIsAreaLight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>lightType <span class=\"token operator\">==</span> OF_LIGHT_AREA<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">int</span> ofLight<span class=\"token operator\">::</span><span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>lightType<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofLight<span class=\"token operator\">::</span><span class=\"token function\">setAmbientColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFloatColor<span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>ambientColor <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">auto</span> r <span class=\"token operator\">=</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>rendererP<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tr<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setLightAmbientColor</span><span class=\"token punctuation\">(</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>glIndex<span class=\"token punctuation\">,</span> c <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofLight<span class=\"token operator\">::</span><span class=\"token function\">setDiffuseColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFloatColor<span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>diffuseColor <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">auto</span> r <span class=\"token operator\">=</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>rendererP<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tr<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setLightDiffuseColor</span><span class=\"token punctuation\">(</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>glIndex<span class=\"token punctuation\">,</span> c <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofLight<span class=\"token operator\">::</span><span class=\"token function\">setSpecularColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFloatColor<span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>specularColor <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">auto</span> r <span class=\"token operator\">=</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>rendererP<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tr<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setLightSpecularColor</span><span class=\"token punctuation\">(</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>glIndex<span class=\"token punctuation\">,</span> c <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofFloatColor ofLight<span class=\"token operator\">::</span><span class=\"token function\">getAmbientColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>ambientColor<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofFloatColor ofLight<span class=\"token operator\">::</span><span class=\"token function\">getDiffuseColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>diffuseColor<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofFloatColor ofLight<span class=\"token operator\">::</span><span class=\"token function\">getSpecularColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>specularColor<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofLight<span class=\"token operator\">::</span><span class=\"token function\">customDraw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofBaseRenderer <span class=\"token operator\">*</span> renderer<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">getIsPointLight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        renderer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">drawSphere</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getIsSpotlight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">float</span> coneHeight <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>spotCutOff<span class=\"token operator\">*</span>DEG_TO_RAD<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">30</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">float</span> coneRadius <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>spotCutOff<span class=\"token operator\">*</span>DEG_TO_RAD<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">30</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofBaseRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>renderer<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">rotateDeg</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\trenderer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">drawCone</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>coneHeight<span class=\"token operator\">*</span><span class=\"token punctuation\">.</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> coneHeight<span class=\"token punctuation\">,</span> coneRadius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span>  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getIsAreaLight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    \t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofBaseRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>renderer<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\trenderer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">drawPlane</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>width<span class=\"token punctuation\">,</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofBaseRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>renderer<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">popMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n        renderer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">drawBox</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">ofDrawAxis</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofLight<span class=\"token operator\">::</span><span class=\"token function\">onPositionChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>glIndex<span class=\"token operator\">==</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// if we are a positional light and not directional, update light position</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">getIsSpotlight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token function\">getIsPointLight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token function\">getIsAreaLight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>position <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token function\">getGlobalPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token function\">getGlobalPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token function\">getGlobalPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">auto</span> r <span class=\"token operator\">=</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>rendererP<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tr<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setLightPosition</span><span class=\"token punctuation\">(</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>glIndex<span class=\"token punctuation\">,</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>position <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofLight<span class=\"token operator\">::</span><span class=\"token function\">onOrientationChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>glIndex<span class=\"token operator\">==</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">getIsDirectional</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// if we are a directional light and not positional, update light position (direction)</span>\n\t\tglm<span class=\"token operator\">::</span>vec3 <span class=\"token function\">lookAtDir</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token function\">getGlobalOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec4</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>position <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>lookAtDir<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>lookAtDir<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>lookAtDir<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">auto</span> r <span class=\"token operator\">=</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>rendererP<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tr<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setLightPosition</span><span class=\"token punctuation\">(</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>glIndex<span class=\"token punctuation\">,</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>position <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">getIsSpotlight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token function\">getIsAreaLight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// determines the axis of the cone light</span>\n\t\tglm<span class=\"token operator\">::</span>vec3 <span class=\"token function\">lookAtDir</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token function\">getGlobalOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec4</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>direction <span class=\"token operator\">=</span> lookAtDir<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">auto</span> r <span class=\"token operator\">=</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>rendererP<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tr<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setLightSpotDirection</span><span class=\"token punctuation\">(</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>glIndex<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec4</span><span class=\"token punctuation\">(</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>direction<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">getIsAreaLight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>up <span class=\"token operator\">=</span> <span class=\"token function\">getUpDir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>right <span class=\"token operator\">=</span> <span class=\"token function\">getXAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n","type":"source","static":true}}],"fetch":[]}