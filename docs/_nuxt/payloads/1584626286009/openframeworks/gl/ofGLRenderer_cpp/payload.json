{"data":[{"page":{"entry":{"name":"ofGLRenderer.cpp","filename":"ofGLRenderer.cpp","absolute":"/Users/gilbertsinnott/Code/openFrameworks/libs/openFrameworks/gl/ofGLRenderer.cpp","path":"/openframeworks/gl/ofGLRenderer_cpp","route":"/openframeworks/gl/ofGLRenderer.cpp","dir":"../libs/openFrameworks/gl","ext":"cpp","type":"source","id":243,"parent":235,"breadcrumbs":[235,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGLRenderer.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofMesh.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofPath.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofMesh.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"of3dPrimitives.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofBitmapFont.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGLUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofImage.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofFbo.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofLight.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofMaterial.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofCamera.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofTrueTypeFont.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofNode.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofVideoBaseTypes.h\"</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> string ofGLRenderer<span class=\"token operator\">::</span>TYPE<span class=\"token operator\">=</span><span class=\"token string\">\"GL\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">ofGLRenderer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofAppBaseWindow <span class=\"token operator\">*</span> _window<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">:</span><span class=\"token function\">matrixStack</span><span class=\"token punctuation\">(</span>_window<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">graphics3d</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbBackgroundAuto <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\tlinePoints<span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\trectPoints<span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ttriPoints<span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tnormalsEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tlightingEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tmaterialBound <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\talphaMaskTextureTarget <span class=\"token operator\">=</span> GL_TEXTURE_2D<span class=\"token punctuation\">;</span>\n\twindow <span class=\"token operator\">=</span> _window<span class=\"token punctuation\">;</span>\n\tcurrentFramebufferId <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tdefaultFramebufferId <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setMode</span><span class=\"token punctuation\">(</span>ofPath<span class=\"token operator\">::</span>POLYLINES<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setUseShapeColor</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// OpenGL ES might have set a default frame buffer for</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// MSAA rendering to the window, bypassing ofFbo, so we</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// can't trust ofFbo to have correctly tracked the bind</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// state. Therefore, we are forced to use the slower glGet() method</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// to be sure to get the correct default framebuffer.</span>\n\tGLint currentFrameBuffer<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glGetIntegerv</span><span class=\"token punctuation\">(</span>GL_FRAMEBUFFER_BINDING<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>currentFrameBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tdefaultFramebufferId <span class=\"token operator\">=</span> currentFrameBuffer<span class=\"token punctuation\">;</span>\n    currentFramebufferId <span class=\"token operator\">=</span> defaultFramebufferId<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token function\">setupGraphicDefaults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setupScreenPerspective</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">startRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcurrentFramebufferId <span class=\"token operator\">=</span> defaultFramebufferId<span class=\"token punctuation\">;</span>\n\tframebufferIdStack<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>defaultFramebufferId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">setRenderSurface</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// to do non auto clear on PC for now - we do something like \"single\" buffering --</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// it's not that pretty but it work for the most part</span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_WIN32</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getBackgroundAuto</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glDrawBuffer</span> <span class=\"token punctuation\">(</span>GL_FRONT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">getBackgroundAuto</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token comment\" spellcheck=\"true\">// || ofGetFrameNum() &lt; 3){</span>\n\t\t<span class=\"token function\">background</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>bgColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">finishRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">clearStacks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tframebufferIdStack<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofMesh <span class=\"token operator\">&amp;</span> vertexData<span class=\"token punctuation\">,</span> ofPolyRenderMode renderType<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> useColors<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> useTextures<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> useNormals<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>smoothing<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">startSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token function\">glPolygonMode</span><span class=\"token punctuation\">(</span>GL_FRONT_AND_BACK<span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLPolyMode</span><span class=\"token punctuation\">(</span>renderType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNumVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glEnableClientState</span><span class=\"token punctuation\">(</span>GL_VERTEX_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">glVertexPointer</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> GL_FLOAT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span>vec3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getVerticesPointer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNumNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> useNormals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glEnableClientState</span><span class=\"token punctuation\">(</span>GL_NORMAL_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">glNormalPointer</span><span class=\"token punctuation\">(</span>GL_FLOAT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span>vec3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNormalsPointer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNumColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> useColors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glEnableClientState</span><span class=\"token punctuation\">(</span>GL_COLOR_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">glColorPointer</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span>GL_FLOAT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ofFloatColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getColorsPointer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNumTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> useTextures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>textureLocationsEnabled<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token function\">glEnableClientState</span><span class=\"token punctuation\">(</span>GL_TEXTURE_COORD_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">glTexCoordPointer</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> GL_FLOAT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span>vec2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getTexCoordsPointer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\tset<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">::</span>iterator textureLocation <span class=\"token operator\">=</span> textureLocationsEnabled<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span>textureLocation<span class=\"token operator\">!=</span>textureLocationsEnabled<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>textureLocation<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token function\">glActiveTexture</span><span class=\"token punctuation\">(</span>GL_TEXTURE0<span class=\"token operator\">+</span><span class=\"token operator\">*</span>textureLocation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">glClientActiveTexture</span><span class=\"token punctuation\">(</span>GL_TEXTURE0<span class=\"token operator\">+</span><span class=\"token operator\">*</span>textureLocation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">glEnableClientState</span><span class=\"token punctuation\">(</span>GL_TEXTURE_COORD_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">glTexCoordPointer</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> GL_FLOAT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span>vec2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getTexCoordsPointer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token function\">glActiveTexture</span><span class=\"token punctuation\">(</span>GL_TEXTURE0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">glClientActiveTexture</span><span class=\"token punctuation\">(</span>GL_TEXTURE0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNumIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// This is never executed right now but this branch of the ifdef should be used for GLES 3 so let's keep it for future uses</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n\t\t\t<span class=\"token function\">glDrawElements</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetGLPrimitiveMode</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNumIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>GL_UNSIGNED_SHORT<span class=\"token punctuation\">,</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getIndexPointer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t\t<span class=\"token function\">glDrawElements</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetGLPrimitiveMode</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNumIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>GL_UNSIGNED_INT<span class=\"token punctuation\">,</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getIndexPointer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glDrawArrays</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetGLPrimitiveMode</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNumVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNumColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> useColors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glDisableClientState</span><span class=\"token punctuation\">(</span>GL_COLOR_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNumNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> useNormals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glDisableClientState</span><span class=\"token punctuation\">(</span>GL_NORMAL_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNumTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> useTextures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glDisableClientState</span><span class=\"token punctuation\">(</span>GL_TEXTURE_COORD_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token function\">glPolygonMode</span><span class=\"token punctuation\">(</span>GL_FRONT_AND_BACK<span class=\"token punctuation\">,</span> currentStyle<span class=\"token punctuation\">.</span>bFill <span class=\"token operator\">?</span>  GL_FILL <span class=\"token operator\">:</span> GL_LINE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNumVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glEnableClientState</span><span class=\"token punctuation\">(</span>GL_VERTEX_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">glVertexPointer</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> GL_FLOAT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ofVec3f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getVerticesPointer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNumNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> useNormals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glEnableClientState</span><span class=\"token punctuation\">(</span>GL_NORMAL_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">glNormalPointer</span><span class=\"token punctuation\">(</span>GL_FLOAT<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNormalsPointer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNumColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> useColors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glEnableClientState</span><span class=\"token punctuation\">(</span>GL_COLOR_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">glColorPointer</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span>GL_FLOAT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ofFloatColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getColorsPointer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNumTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> useTextures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>textureLocationsEnabled<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token function\">glEnableClientState</span><span class=\"token punctuation\">(</span>GL_TEXTURE_COORD_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">glTexCoordPointer</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> GL_FLOAT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ofVec2f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getTexCoordsPointer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\tset<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">::</span>iterator textureLocation <span class=\"token operator\">=</span> textureLocationsEnabled<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span>textureLocation<span class=\"token operator\">!=</span>textureLocationsEnabled<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>textureLocation<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token function\">glActiveTexture</span><span class=\"token punctuation\">(</span>GL_TEXTURE0<span class=\"token operator\">+</span><span class=\"token operator\">*</span>textureLocation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">glClientActiveTexture</span><span class=\"token punctuation\">(</span>GL_TEXTURE0<span class=\"token operator\">+</span><span class=\"token operator\">*</span>textureLocation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">glEnableClientState</span><span class=\"token punctuation\">(</span>GL_TEXTURE_COORD_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">glTexCoordPointer</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> GL_FLOAT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ofVec2f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getTexCoordsPointer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token function\">glActiveTexture</span><span class=\"token punctuation\">(</span>GL_TEXTURE0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">glClientActiveTexture</span><span class=\"token punctuation\">(</span>GL_TEXTURE0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\tGLenum drawMode<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>renderType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> OF_MESH_POINTS<span class=\"token operator\">:</span>\n\t\t\tdrawMode <span class=\"token operator\">=</span> GL_POINTS<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_MESH_WIREFRAME<span class=\"token operator\">:</span>\n\t\t\tdrawMode <span class=\"token operator\">=</span> GL_LINES<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_MESH_FILL<span class=\"token operator\">:</span>\n\t\t\tdrawMode <span class=\"token operator\">=</span> <span class=\"token function\">ofGetGLPrimitiveMode</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\tdrawMode <span class=\"token operator\">=</span> <span class=\"token function\">ofGetGLPrimitiveMode</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNumIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glDrawElements</span><span class=\"token punctuation\">(</span>drawMode<span class=\"token punctuation\">,</span> vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNumIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>GL_UNSIGNED_SHORT<span class=\"token punctuation\">,</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getIndexPointer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glDrawArrays</span><span class=\"token punctuation\">(</span>drawMode<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNumVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNumColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> useColors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glDisableClientState</span><span class=\"token punctuation\">(</span>GL_COLOR_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNumNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> useNormals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glDisableClientState</span><span class=\"token punctuation\">(</span>GL_NORMAL_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNumTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> useTextures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glDisableClientState</span><span class=\"token punctuation\">(</span>GL_TEXTURE_COORD_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>smoothing<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">endSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVboMesh <span class=\"token operator\">&amp;</span> mesh<span class=\"token punctuation\">,</span> ofPolyRenderMode renderType<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">drawInstanced</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">,</span>renderType<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawInstanced</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVboMesh <span class=\"token operator\">&amp;</span> mesh<span class=\"token punctuation\">,</span> ofPolyRenderMode renderType<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> primCount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\tGLuint mode <span class=\"token operator\">=</span> <span class=\"token function\">ofGetGLPrimitiveMode</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token function\">glPolygonMode</span><span class=\"token punctuation\">(</span>GL_FRONT_AND_BACK<span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLPolyMode</span><span class=\"token punctuation\">(</span>renderType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> renderType<span class=\"token operator\">!=</span>OF_MESH_POINTS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>primCount <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">drawElements</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVbo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mode<span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">drawElementsInstanced</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVbo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mode<span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>primCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>primCount <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVbo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mode<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">drawInstanced</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVbo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mode<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>primCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">glPolygonMode</span><span class=\"token punctuation\">(</span>GL_FRONT_AND_BACK<span class=\"token punctuation\">,</span> currentStyle<span class=\"token punctuation\">.</span>bFill <span class=\"token operator\">?</span>  GL_FILL <span class=\"token operator\">:</span> GL_LINE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>renderType <span class=\"token operator\">==</span> OF_MESH_POINTS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVbo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>GL_POINTS<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>renderType <span class=\"token operator\">==</span> OF_MESH_WIREFRAME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">drawElements</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVbo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>GL_LINES<span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVbo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>GL_LINES<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">drawElements</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVbo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mode<span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVbo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mode<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> of3dPrimitive<span class=\"token operator\">&amp;</span> model<span class=\"token punctuation\">,</span> ofPolyRenderMode renderType<span class=\"token punctuation\">)</span>  <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">multMatrix</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span><span class=\"token function\">getGlobalTransformMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span><span class=\"token function\">isUsingVbo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">static_cast</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span> ofVboMesh<span class=\"token operator\">&amp;</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span><span class=\"token function\">getMesh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>renderType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span><span class=\"token function\">getMesh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>renderType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">popMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofNode<span class=\"token operator\">&amp;</span> node<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">multMatrix</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">getGlobalTransformMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tnode<span class=\"token punctuation\">.</span><span class=\"token function\">customDraw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">popMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPolyline <span class=\"token operator\">&amp;</span> poly<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>poly<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// use smoothness, if requested:</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>smoothing<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">startSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">glEnableClientState</span><span class=\"token punctuation\">(</span>GL_VERTEX_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glVertexPointer</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> GL_FLOAT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span>vec3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>poly<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glDrawArrays</span><span class=\"token punctuation\">(</span>poly<span class=\"token punctuation\">.</span><span class=\"token function\">isClosed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span>GL_LINE_LOOP<span class=\"token operator\">:</span>GL_LINE_STRIP<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> poly<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// use smoothness, if requested:</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>smoothing<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">endSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPath <span class=\"token operator\">&amp;</span> shape<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tofColor prevColor<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">.</span><span class=\"token function\">getUseShapeColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tprevColor <span class=\"token operator\">=</span> currentStyle<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tofGLRenderer <span class=\"token operator\">*</span> mut_this <span class=\"token operator\">=</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">.</span><span class=\"token function\">isFilled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">const</span> ofMesh <span class=\"token operator\">&amp;</span> mesh <span class=\"token operator\">=</span> shape<span class=\"token punctuation\">.</span><span class=\"token function\">getTessellation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">.</span><span class=\"token function\">getUseShapeColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tmut_this<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span> shape<span class=\"token punctuation\">.</span><span class=\"token function\">getFillColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>shape<span class=\"token punctuation\">.</span><span class=\"token function\">getFillColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">,</span>OF_MESH_FILL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">.</span><span class=\"token function\">hasOutline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">float</span> lineWidth <span class=\"token operator\">=</span> currentStyle<span class=\"token punctuation\">.</span>lineWidth<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">.</span><span class=\"token function\">getUseShapeColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tmut_this<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span> shape<span class=\"token punctuation\">.</span><span class=\"token function\">getStrokeColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> shape<span class=\"token punctuation\">.</span><span class=\"token function\">getStrokeColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tmut_this<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setLineWidth</span><span class=\"token punctuation\">(</span> shape<span class=\"token punctuation\">.</span><span class=\"token function\">getStrokeWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">const</span> vector<span class=\"token operator\">&lt;</span>ofPolyline<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> outlines <span class=\"token operator\">=</span> shape<span class=\"token punctuation\">.</span><span class=\"token function\">getOutline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>outlines<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>outlines<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmut_this<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setLineWidth</span><span class=\"token punctuation\">(</span>lineWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">.</span><span class=\"token function\">getUseShapeColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tmut_this<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>prevColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofImage <span class=\"token operator\">&amp;</span> image<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sh<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">.</span><span class=\"token function\">isUsingTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">const</span> ofTexture<span class=\"token operator\">&amp;</span> tex <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">.</span><span class=\"token function\">getMeshForSubsection</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>sx<span class=\"token punctuation\">,</span>sy<span class=\"token punctuation\">,</span>sw<span class=\"token punctuation\">,</span>sh<span class=\"token punctuation\">,</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>currentStyle<span class=\"token punctuation\">.</span>rectMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>OF_MESH_FILL<span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGLRenderer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"drawing an unallocated texture\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFloatImage <span class=\"token operator\">&amp;</span> image<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sh<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">.</span><span class=\"token function\">isUsingTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">const</span> ofTexture<span class=\"token operator\">&amp;</span> tex <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">.</span><span class=\"token function\">getMeshForSubsection</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>sx<span class=\"token punctuation\">,</span>sy<span class=\"token punctuation\">,</span>sw<span class=\"token punctuation\">,</span>sh<span class=\"token punctuation\">,</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>currentStyle<span class=\"token punctuation\">.</span>rectMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>OF_MESH_FILL<span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGLRenderer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"draw(): texture is not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofShortImage <span class=\"token operator\">&amp;</span> image<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sh<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">.</span><span class=\"token function\">isUsingTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">const</span> ofTexture<span class=\"token operator\">&amp;</span> tex <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">.</span><span class=\"token function\">getMeshForSubsection</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>sx<span class=\"token punctuation\">,</span>sy<span class=\"token punctuation\">,</span>sw<span class=\"token punctuation\">,</span>sh<span class=\"token punctuation\">,</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>currentStyle<span class=\"token punctuation\">.</span>rectMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>OF_MESH_FILL<span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGLRenderer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"draw(): texture is not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofTexture <span class=\"token operator\">&amp;</span> tex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sh<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">.</span><span class=\"token function\">getMeshForSubsection</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>sx<span class=\"token punctuation\">,</span>sy<span class=\"token punctuation\">,</span>sw<span class=\"token punctuation\">,</span>sh<span class=\"token punctuation\">,</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>currentStyle<span class=\"token punctuation\">.</span>rectMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>OF_MESH_FILL<span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGLRenderer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"draw(): texture is not allocated\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofBaseVideoDraws <span class=\"token operator\">&amp;</span> video<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">isInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> video<span class=\"token punctuation\">.</span><span class=\"token function\">isUsingTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMeshForSubsection</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>currentStyle<span class=\"token punctuation\">.</span>rectMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>OF_MESH_FILL<span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVbo <span class=\"token operator\">&amp;</span> vbo<span class=\"token punctuation\">,</span> GLuint drawMode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> first<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">getUsingVerts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tvbo<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glDrawArrays</span><span class=\"token punctuation\">(</span>drawMode<span class=\"token punctuation\">,</span> first<span class=\"token punctuation\">,</span> total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tvbo<span class=\"token punctuation\">.</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawElements</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVbo <span class=\"token operator\">&amp;</span> vbo<span class=\"token punctuation\">,</span> GLuint drawMode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> amt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> offsetelements<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">getUsingVerts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tvbo<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token function\">glDrawElements</span><span class=\"token punctuation\">(</span>drawMode<span class=\"token punctuation\">,</span> amt<span class=\"token punctuation\">,</span> GL_UNSIGNED_SHORT<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ofIndexType<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> offsetelements<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t<span class=\"token function\">glDrawElements</span><span class=\"token punctuation\">(</span>drawMode<span class=\"token punctuation\">,</span> amt<span class=\"token punctuation\">,</span> GL_UNSIGNED_INT<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ofIndexType<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> offsetelements<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\tvbo<span class=\"token punctuation\">.</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawInstanced</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVbo <span class=\"token operator\">&amp;</span> vbo<span class=\"token punctuation\">,</span> GLuint drawMode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> first<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> primCount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">getUsingVerts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tvbo<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// todo: activate instancing once OPENGL ES supports instancing, starting with version 3.0</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// unfortunately there is currently no easy way within oF to query the current OpenGL version.</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// https://www.khronos.org/opengles/sdk/docs/man3/xhtml/glDrawElementsInstanced.xml</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofVbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"drawInstanced(): hardware instancing is not supported on OpenGL ES &lt; 3.0\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// glDrawArraysInstanced(drawMode, first, total, primCount);</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t<span class=\"token function\">glDrawArraysInstanced</span><span class=\"token punctuation\">(</span>drawMode<span class=\"token punctuation\">,</span> first<span class=\"token punctuation\">,</span> total<span class=\"token punctuation\">,</span> primCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\tvbo<span class=\"token punctuation\">.</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawElementsInstanced</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVbo <span class=\"token operator\">&amp;</span> vbo<span class=\"token punctuation\">,</span> GLuint drawMode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> amt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> primCount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">getUsingVerts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tvbo<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// todo: activate instancing once OPENGL ES supports instancing, starting with version 3.0</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// unfortunately there is currently no easy way within oF to query the current OpenGL version.</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// https://www.khronos.org/opengles/sdk/docs/man3/xhtml/glDrawElementsInstanced.xml</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofVbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"drawElementsInstanced(): hardware instancing is not supported on OpenGL ES &lt; 3.0\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// glDrawElementsInstanced(drawMode, amt, GL_UNSIGNED_SHORT, nullptr, primCount);</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t<span class=\"token function\">glDrawElementsInstanced</span><span class=\"token punctuation\">(</span>drawMode<span class=\"token punctuation\">,</span> amt<span class=\"token punctuation\">,</span> GL_UNSIGNED_INT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> primCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\tvbo<span class=\"token punctuation\">.</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofPath <span class=\"token operator\">&amp;</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> path<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofBaseVideoDraws <span class=\"token operator\">&amp;</span> video<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">isInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> video<span class=\"token punctuation\">.</span><span class=\"token function\">isUsingTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofBaseVideoDraws <span class=\"token operator\">&amp;</span> video<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">isInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> video<span class=\"token punctuation\">.</span><span class=\"token function\">isUsingTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tvideo<span class=\"token punctuation\">.</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofShader <span class=\"token operator\">&amp;</span> shader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glUseProgram</span><span class=\"token punctuation\">(</span>shader<span class=\"token punctuation\">.</span><span class=\"token function\">getProgram</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofShader <span class=\"token operator\">&amp;</span> shader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glUseProgram</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFbo <span class=\"token operator\">&amp;</span> fbo<span class=\"token punctuation\">,</span> ofFboMode mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">pushView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">pushStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mode <span class=\"token operator\">&amp;</span> OF_FBOMODE_MATRIXFLIP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">setRenderSurface</span><span class=\"token punctuation\">(</span>fbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n        matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">setRenderSurfaceNoMatrixFlip</span><span class=\"token punctuation\">(</span>fbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mode <span class=\"token operator\">&amp;</span> OF_FBOMODE_PERSPECTIVE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setupScreenPerspective</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tglm<span class=\"token operator\">::</span>mat4 m <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">mat4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glGetFloatv</span><span class=\"token punctuation\">(</span>GL_PROJECTION_MATRIX<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">value_ptr</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tm <span class=\"token operator\">=</span>  matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getOrientationMatrixInverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> m<span class=\"token punctuation\">;</span>\n\t\tofMatrixMode currentMode <span class=\"token operator\">=</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentMatrixMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_PROJECTION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">loadMatrix</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glMatrixMode</span><span class=\"token punctuation\">(</span>GL_PROJECTION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glLoadMatrixf</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">value_ptr</span><span class=\"token punctuation\">(</span>matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getProjectionMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>currentMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>fbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFbo <span class=\"token operator\">&amp;</span> fbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span>fbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">setRenderSurface</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">popStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">popView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFbo <span class=\"token operator\">&amp;</span> fbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentFramebufferId <span class=\"token operator\">==</span> fbo<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Framebuffer with id: \"</span> <span class=\"token operator\">&lt;&lt;</span> fbo<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" cannot be bound onto itself. \\n\"</span> <span class=\"token operator\">&lt;&lt;</span>\n\t\t\t<span class=\"token string\">\"Most probably you forgot to end() the current framebuffer before calling begin() again or you forgot to allocate() before calling begin().\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// this method could just as well have been placed in ofBaseGLRenderer</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// and shared over both programmable and fixed function renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// I'm keeping it here, so that if we want to do more fancyful</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// named framebuffers with GL 4.5+, we can have</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// different implementations.</span>\n\tframebufferIdStack<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>currentFramebufferId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcurrentFramebufferId <span class=\"token operator\">=</span> fbo<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glBindFramebuffer</span><span class=\"token punctuation\">(</span>GL_FRAMEBUFFER<span class=\"token punctuation\">,</span> currentFramebufferId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">bindForBlitting</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFbo <span class=\"token operator\">&amp;</span> fboSrc<span class=\"token punctuation\">,</span> ofFbo <span class=\"token operator\">&amp;</span> fboDst<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> attachmentPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentFramebufferId <span class=\"token operator\">==</span> fboSrc<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Framebuffer with id: \"</span> <span class=\"token operator\">&lt;&lt;</span> fboSrc<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" cannot be bound onto itself. \\n\"</span> <span class=\"token operator\">&lt;&lt;</span>\n\t\t\t<span class=\"token string\">\"Most probably you forgot to end() the current framebuffer before calling getTexture().\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// this method could just as well have been placed in ofBaseGLRenderer</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// and shared over both programmable and fixed function renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// I'm keeping it here, so that if we want to do more fancyful</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// named framebuffers with GL 4.5+, we can have</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// different implementations.</span>\n\tframebufferIdStack<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>currentFramebufferId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcurrentFramebufferId <span class=\"token operator\">=</span> fboSrc<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glBindFramebuffer</span><span class=\"token punctuation\">(</span>GL_READ_FRAMEBUFFER<span class=\"token punctuation\">,</span> currentFramebufferId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glReadBuffer</span><span class=\"token punctuation\">(</span>GL_COLOR_ATTACHMENT0 <span class=\"token operator\">+</span> attachmentPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glBindFramebuffer</span><span class=\"token punctuation\">(</span>GL_DRAW_FRAMEBUFFER<span class=\"token punctuation\">,</span> fboDst<span class=\"token punctuation\">.</span><span class=\"token function\">getIdDrawBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glDrawBuffer</span><span class=\"token punctuation\">(</span>GL_COLOR_ATTACHMENT0 <span class=\"token operator\">+</span> attachmentPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFbo <span class=\"token operator\">&amp;</span> fbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>framebufferIdStack<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"unbalanced fbo bind/unbind binding default framebuffer\"</span><span class=\"token punctuation\">;</span>\n\t\tcurrentFramebufferId <span class=\"token operator\">=</span> defaultFramebufferId<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tcurrentFramebufferId <span class=\"token operator\">=</span> framebufferIdStack<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tframebufferIdStack<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">glBindFramebuffer</span><span class=\"token punctuation\">(</span>GL_FRAMEBUFFER<span class=\"token punctuation\">,</span> currentFramebufferId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tfbo<span class=\"token punctuation\">.</span><span class=\"token function\">flagDirty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofBaseMaterial <span class=\"token operator\">&amp;</span> material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofFloatColor diffuse <span class=\"token operator\">=</span> material<span class=\"token punctuation\">.</span><span class=\"token function\">getDiffuseColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofFloatColor specular <span class=\"token operator\">=</span> material<span class=\"token punctuation\">.</span><span class=\"token function\">getSpecularColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofFloatColor ambient <span class=\"token operator\">=</span> material<span class=\"token punctuation\">.</span><span class=\"token function\">getAmbientColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofFloatColor emissive <span class=\"token operator\">=</span> material<span class=\"token punctuation\">.</span><span class=\"token function\">getEmissiveColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> shininess <span class=\"token operator\">=</span> material<span class=\"token punctuation\">.</span><span class=\"token function\">getShininess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glDisable</span><span class=\"token punctuation\">(</span>GL_COLOR_MATERIAL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glMaterialfv</span><span class=\"token punctuation\">(</span>GL_FRONT_AND_BACK<span class=\"token punctuation\">,</span> GL_DIFFUSE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>diffuse<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glMaterialfv</span><span class=\"token punctuation\">(</span>GL_FRONT_AND_BACK<span class=\"token punctuation\">,</span> GL_SPECULAR<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>specular<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glMaterialfv</span><span class=\"token punctuation\">(</span>GL_FRONT_AND_BACK<span class=\"token punctuation\">,</span> GL_AMBIENT<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ambient<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glMaterialfv</span><span class=\"token punctuation\">(</span>GL_FRONT_AND_BACK<span class=\"token punctuation\">,</span> GL_EMISSION<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>emissive<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glMaterialfv</span><span class=\"token punctuation\">(</span>GL_FRONT_AND_BACK<span class=\"token punctuation\">,</span> GL_SHININESS<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>shininess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmaterialBound <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofBaseMaterial <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// Set default material colors and properties</span>\n\tofMaterial<span class=\"token operator\">::</span>Data defaultData<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glMaterialfv</span><span class=\"token punctuation\">(</span>GL_FRONT_AND_BACK<span class=\"token punctuation\">,</span> GL_DIFFUSE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>defaultData<span class=\"token punctuation\">.</span>diffuse<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glMaterialfv</span><span class=\"token punctuation\">(</span>GL_FRONT_AND_BACK<span class=\"token punctuation\">,</span> GL_SPECULAR<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>defaultData<span class=\"token punctuation\">.</span>specular<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glMaterialfv</span><span class=\"token punctuation\">(</span>GL_FRONT_AND_BACK<span class=\"token punctuation\">,</span> GL_AMBIENT<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>defaultData<span class=\"token punctuation\">.</span>ambient<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glMaterialfv</span><span class=\"token punctuation\">(</span>GL_FRONT_AND_BACK<span class=\"token punctuation\">,</span> GL_EMISSION<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>defaultData<span class=\"token punctuation\">.</span>emissive<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glMaterialfv</span><span class=\"token punctuation\">(</span>GL_FRONT_AND_BACK<span class=\"token punctuation\">,</span> GL_SHININESS<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>defaultData<span class=\"token punctuation\">.</span>shininess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// Re-enable global color as material ambient and diffuse</span>\n\tmaterialBound <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>lightingEnabled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofTexture <span class=\"token operator\">&amp;</span> texture<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> location<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//we could check if it has been allocated - but we don't do that in draw()</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">.</span><span class=\"token function\">getAlphaMask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setAlphaMaskTex</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>texture<span class=\"token punctuation\">.</span><span class=\"token function\">getAlphaMask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">enableTextureTarget</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">,</span>location<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetUsingNormalizedTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_TEXTURE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tglm<span class=\"token operator\">::</span>mat4 m <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">mat4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>textureTarget <span class=\"token operator\">==</span> GL_TEXTURE_RECTANGLE_ARB<span class=\"token punctuation\">)</span>\n\t\t\tm <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">else</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\tm <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>width <span class=\"token operator\">/</span> texture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>tex_w<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>height <span class=\"token operator\">/</span> texture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>tex_h<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">loadMatrix</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">.</span><span class=\"token function\">isUsingTextureMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_TEXTURE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">ofGetUsingNormalizedTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">multMatrix</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">.</span><span class=\"token function\">getTextureMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofTexture <span class=\"token operator\">&amp;</span> texture<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> location<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">disableTextureTarget</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span>location<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">.</span><span class=\"token function\">getAlphaMask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">disableAlphaMask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">.</span><span class=\"token function\">isUsingTextureMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token function\">ofGetUsingNormalizedTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_TEXTURE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">popMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofCamera <span class=\"token operator\">&amp;</span> camera<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofRectangle <span class=\"token operator\">&amp;</span> _viewport<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">pushView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span>_viewport<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setOrientation</span><span class=\"token punctuation\">(</span>matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>camera<span class=\"token punctuation\">.</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_PROJECTION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">loadMatrix</span><span class=\"token punctuation\">(</span>camera<span class=\"token punctuation\">.</span><span class=\"token function\">getProjectionMatrix</span><span class=\"token punctuation\">(</span>_viewport<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">loadViewMatrix</span><span class=\"token punctuation\">(</span>camera<span class=\"token punctuation\">.</span><span class=\"token function\">getModelViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofCamera <span class=\"token operator\">&amp;</span> camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">popView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">pushView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">getCurrentViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tglm<span class=\"token operator\">::</span>mat4 m <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">mat4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofMatrixMode matrixMode <span class=\"token operator\">=</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentMatrixMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glGetFloatv</span><span class=\"token punctuation\">(</span>GL_PROJECTION_MATRIX<span class=\"token punctuation\">,</span>glm<span class=\"token operator\">::</span><span class=\"token function\">value_ptr</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_PROJECTION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">loadMatrix</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glGetFloatv</span><span class=\"token punctuation\">(</span>GL_MODELVIEW_MATRIX<span class=\"token punctuation\">,</span>glm<span class=\"token operator\">::</span><span class=\"token function\">value_ptr</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">loadMatrix</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>matrixMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">pushView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">popView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">popView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tofMatrixMode currentMode <span class=\"token operator\">=</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentMatrixMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_PROJECTION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">loadMatrix</span><span class=\"token punctuation\">(</span>matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getProjectionMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">loadMatrix</span><span class=\"token punctuation\">(</span>matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getModelViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>currentMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span>matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span>ofRectangle viewport_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span>viewport_<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> viewport_<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> viewport_<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> viewport_<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> <span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> vflip<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">,</span>vflip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofRectangle nativeViewport <span class=\"token operator\">=</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getNativeViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glViewport</span><span class=\"token punctuation\">(</span>nativeViewport<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>nativeViewport<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>nativeViewport<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>nativeViewport<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofRectangle ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">getCurrentViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">getNativeViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofRectangle ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">getNativeViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tGLint viewport<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\t\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">// Where The Viewport Values Will Be Stored</span>\n\t<span class=\"token function\">glGetIntegerv</span><span class=\"token punctuation\">(</span>GL_VIEWPORT<span class=\"token punctuation\">,</span> viewport<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tofGLRenderer <span class=\"token operator\">*</span> mutRenderer <span class=\"token operator\">=</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofRectangle <span class=\"token function\">nativeViewport</span><span class=\"token punctuation\">(</span>viewport<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> viewport<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> viewport<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> viewport<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmutRenderer<span class=\"token operator\">-</span><span class=\"token operator\">></span>matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">nativeViewport</span><span class=\"token punctuation\">(</span>nativeViewport<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> nativeViewport<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">getViewportWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getCurrentViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">getViewportHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getCurrentViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setCoordHandedness</span><span class=\"token punctuation\">(</span>ofHandednessType handedness<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofHandednessType ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">getCoordHandedness</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getHandedness</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setOrientation</span><span class=\"token punctuation\">(</span>ofOrientation orientation<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> vFlip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">setOrientation</span><span class=\"token punctuation\">(</span>orientation<span class=\"token punctuation\">,</span>vFlip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">texturesNeedVFlip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">customMatrixNeedsFlip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setupScreenPerspective</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> fov<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> nearDist<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> farDist<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">float</span> viewW<span class=\"token punctuation\">,</span> viewH<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>width<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span> <span class=\"token operator\">||</span> height<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tofRectangle currentViewport <span class=\"token operator\">=</span> <span class=\"token function\">getCurrentViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tviewW <span class=\"token operator\">=</span> currentViewport<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t\tviewH <span class=\"token operator\">=</span> currentViewport<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tviewW <span class=\"token operator\">=</span> width<span class=\"token punctuation\">;</span>\n\t\tviewH <span class=\"token operator\">=</span> height<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">float</span> eyeX <span class=\"token operator\">=</span> viewW <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> eyeY <span class=\"token operator\">=</span> viewH <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> halfFov <span class=\"token operator\">=</span> PI <span class=\"token operator\">*</span> fov <span class=\"token operator\">/</span> <span class=\"token number\">360</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> theTan <span class=\"token operator\">=</span> <span class=\"token function\">tanf</span><span class=\"token punctuation\">(</span>halfFov<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> dist <span class=\"token operator\">=</span> eyeY <span class=\"token operator\">/</span> theTan<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> aspect <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span> viewW <span class=\"token operator\">/</span> viewH<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>nearDist <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> nearDist <span class=\"token operator\">=</span> dist <span class=\"token operator\">/</span> <span class=\"token number\">10.0f</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>farDist <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> farDist <span class=\"token operator\">=</span> dist <span class=\"token operator\">*</span> <span class=\"token number\">10.0f</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_PROJECTION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tglm<span class=\"token operator\">::</span>mat4 persp <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">perspective</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofDegToRad</span><span class=\"token punctuation\">(</span>fov<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> aspect<span class=\"token punctuation\">,</span> nearDist<span class=\"token punctuation\">,</span> farDist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">loadMatrix</span><span class=\"token punctuation\">(</span> persp <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tglm<span class=\"token operator\">::</span>mat4 lookAtMat <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>eyeX<span class=\"token punctuation\">,</span> eyeY<span class=\"token punctuation\">,</span> dist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>eyeX<span class=\"token punctuation\">,</span> eyeY<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">loadViewMatrix</span><span class=\"token punctuation\">(</span>lookAtMat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setupScreenOrtho</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> nearDist<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> farDist<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">float</span> viewW<span class=\"token punctuation\">,</span> viewH<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>width<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span> <span class=\"token operator\">||</span> height<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tofRectangle currentViewport <span class=\"token operator\">=</span> <span class=\"token function\">getCurrentViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tviewW <span class=\"token operator\">=</span> currentViewport<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t\tviewH <span class=\"token operator\">=</span> currentViewport<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tviewW <span class=\"token operator\">=</span> width<span class=\"token punctuation\">;</span>\n\t\tviewH <span class=\"token operator\">=</span> height<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tglm<span class=\"token operator\">::</span>mat4 orthoMat <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">ortho</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> viewW<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> viewH<span class=\"token punctuation\">,</span> nearDist<span class=\"token punctuation\">,</span> farDist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_PROJECTION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">loadMatrix</span><span class=\"token punctuation\">(</span>orthoMat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// make ortho our new projection matrix.</span>\n\n\t<span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">loadViewMatrix</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">mat4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">//Resets openGL parameters back to OF defaults</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setupGraphicDefaults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glEnableClientState</span><span class=\"token punctuation\">(</span>GL_VERTEX_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glDisableClientState</span><span class=\"token punctuation\">(</span>GL_NORMAL_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glDisableClientState</span><span class=\"token punctuation\">(</span>GL_COLOR_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glDisableClientState</span><span class=\"token punctuation\">(</span>GL_TEXTURE_COORD_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setStyle</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setMode</span><span class=\"token punctuation\">(</span>ofPath<span class=\"token operator\">::</span>POLYLINES<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setUseShapeColor</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setupScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setupScreenPerspective</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\" spellcheck=\"true\">// assume defaults</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setCircleResolution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>circlePolyline<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span>res<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tcirclePolyline<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tcirclePolyline<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">360</span><span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tcirclePoints<span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span>circlePolyline<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setCircleResolution</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tcurrentStyle<span class=\"token punctuation\">.</span>circleResolution <span class=\"token operator\">=</span> res<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setPolyMode</span><span class=\"token punctuation\">(</span>ofPolyWindingMode mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcurrentStyle<span class=\"token punctuation\">.</span>polyMode <span class=\"token operator\">=</span> mode<span class=\"token punctuation\">;</span>\n\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setPolyWindingMode</span><span class=\"token punctuation\">(</span>mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//our openGL wrappers</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glPushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">popMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glPopMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glTranslatef</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glTranslatef</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> xAmnt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> yAmnt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> zAmnt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glScalef</span><span class=\"token punctuation\">(</span>xAmnt<span class=\"token punctuation\">,</span> yAmnt<span class=\"token punctuation\">,</span> zAmnt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">rotateDeg</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecY<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecZ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glRotatef</span><span class=\"token punctuation\">(</span>degrees<span class=\"token punctuation\">,</span> vecX<span class=\"token punctuation\">,</span> vecY<span class=\"token punctuation\">,</span> vecZ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">rotateXDeg</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glRotatef</span><span class=\"token punctuation\">(</span>degrees<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">rotateYDeg</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glRotatef</span><span class=\"token punctuation\">(</span>degrees<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">rotateZDeg</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glRotatef</span><span class=\"token punctuation\">(</span>degrees<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//same as ofRotateZ</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">rotateDeg</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glRotatef</span><span class=\"token punctuation\">(</span>degrees<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">rotateRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radians<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecY<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecZ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glRotatef</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofRadToDeg</span><span class=\"token punctuation\">(</span>radians<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> vecX<span class=\"token punctuation\">,</span> vecY<span class=\"token punctuation\">,</span> vecZ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">rotateXRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radians<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glRotatef</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofRadToDeg</span><span class=\"token punctuation\">(</span>radians<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">rotateYRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radians<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glRotatef</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofRadToDeg</span><span class=\"token punctuation\">(</span>radians<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">rotateZRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radians<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glRotatef</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofRadToDeg</span><span class=\"token punctuation\">(</span>radians<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//same as ofRotateZ</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">rotateRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radians<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glRotatef</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofRadToDeg</span><span class=\"token punctuation\">(</span>radians<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>ofMatrixMode mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glMatrixMode</span><span class=\"token punctuation\">(</span>GL_MODELVIEW<span class=\"token operator\">+</span>mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">loadIdentityMatrix</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">loadMatrix</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">mat4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">loadMatrix</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentMatrixMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>OF_MATRIX_PROJECTION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">loadMatrix</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glLoadMatrixf</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">value_ptr</span><span class=\"token punctuation\">(</span>matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getProjectionMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glLoadMatrixf</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">value_ptr</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">loadMatrix</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">loadMatrix</span><span class=\"token punctuation\">(</span> glm<span class=\"token operator\">::</span><span class=\"token function\">make_mat4</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/** @brief\tQueries the current OpenGL matrix state\n *  @detail Returns the specified matrix as held by the renderer's current matrix stack.\n *\n *\t\t\tYou can query one of the following:\n *\n *\t\t\t[OF_MATRIX_MODELVIEW | OF_MATRIX_PROJECTION | OF_MATRIX_TEXTURE]\n *\n *\t\t\tEach query will return the state of the matrix\n *\t\t\tas it was uploaded to the shader currently bound.\n *\n *\t@param\tmatrixMode_  Which matrix mode to query\n */</span>\nglm<span class=\"token operator\">::</span>mat4 ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">getCurrentMatrix</span><span class=\"token punctuation\">(</span>ofMatrixMode matrixMode_<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\tglm<span class=\"token operator\">::</span>mat4 mat <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">mat4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>matrixMode_<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> OF_MATRIX_MODELVIEW<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">glGetFloatv</span><span class=\"token punctuation\">(</span>GL_MODELVIEW_MATRIX<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">value_ptr</span><span class=\"token punctuation\">(</span>mat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_MATRIX_PROJECTION<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">glGetFloatv</span><span class=\"token punctuation\">(</span>GL_PROJECTION_MATRIX<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">value_ptr</span><span class=\"token punctuation\">(</span>mat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_MATRIX_TEXTURE<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">glGetFloatv</span><span class=\"token punctuation\">(</span>GL_TEXTURE_MATRIX<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">value_ptr</span><span class=\"token punctuation\">(</span>mat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Invalid getCurrentMatrix query\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> mat<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nglm<span class=\"token operator\">::</span>mat4 ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">getCurrentOrientationMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getOrientationMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">multMatrix</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentMatrixMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>OF_MATRIX_PROJECTION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tglm<span class=\"token operator\">::</span>mat4 current <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">mat4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glGetFloatv</span><span class=\"token punctuation\">(</span>GL_PROJECTION_MATRIX<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">value_ptr</span><span class=\"token punctuation\">(</span>current<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">customMatrixNeedsFlip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tcurrent <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>current<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">loadMatrix</span><span class=\"token punctuation\">(</span>current<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">multMatrix</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glLoadMatrixf</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">value_ptr</span><span class=\"token punctuation\">(</span>matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getProjectionMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glMultMatrixf</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">value_ptr</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">multMatrix</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">multMatrix</span><span class=\"token punctuation\">(</span> glm<span class=\"token operator\">::</span><span class=\"token function\">make_mat4</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">loadViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> matrixMode<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glGetIntegerv</span><span class=\"token punctuation\">(</span>GL_MATRIX_MODE<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>matrixMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">loadViewMatrix</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glMatrixMode</span><span class=\"token punctuation\">(</span>GL_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glLoadMatrixf</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">value_ptr</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glMatrixMode</span><span class=\"token punctuation\">(</span>matrixMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>lightingEnabled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token function\">ofLightsData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tshared_ptr<span class=\"token operator\">&lt;</span>ofLight<span class=\"token operator\">::</span>Data<span class=\"token operator\">></span> lightData <span class=\"token operator\">=</span> <span class=\"token function\">ofLightsData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>lightData <span class=\"token operator\">&amp;&amp;</span> lightData<span class=\"token operator\">-</span><span class=\"token operator\">></span>isEnabled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">glLightfv</span><span class=\"token punctuation\">(</span>GL_LIGHT0 <span class=\"token operator\">+</span> lightData<span class=\"token operator\">-</span><span class=\"token operator\">></span>glIndex<span class=\"token punctuation\">,</span> GL_POSITION<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>lightData<span class=\"token operator\">-</span><span class=\"token operator\">></span>position<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>lightData<span class=\"token operator\">-</span><span class=\"token operator\">></span>lightType <span class=\"token operator\">==</span> OF_LIGHT_SPOT <span class=\"token operator\">||</span> lightData<span class=\"token operator\">-</span><span class=\"token operator\">></span>lightType <span class=\"token operator\">==</span> OF_LIGHT_AREA<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token function\">glLightfv</span><span class=\"token punctuation\">(</span>GL_LIGHT0 <span class=\"token operator\">+</span> lightData<span class=\"token operator\">-</span><span class=\"token operator\">></span>glIndex<span class=\"token punctuation\">,</span> GL_SPOT_DIRECTION<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>lightData<span class=\"token operator\">-</span><span class=\"token operator\">></span>direction<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">multViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"mutlViewMatrix not implemented on fixed GL renderer\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nglm<span class=\"token operator\">::</span>mat4 ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">getCurrentViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nglm<span class=\"token operator\">::</span>mat4 ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">getCurrentNormalMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> glm<span class=\"token operator\">::</span><span class=\"token function\">transpose</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">inverse</span><span class=\"token punctuation\">(</span><span class=\"token function\">getCurrentMatrix</span><span class=\"token punctuation\">(</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">,</span>color<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">,</span>color<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">,</span>color<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> _a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">,</span>color<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">,</span>color<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">,</span>_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcurrentStyle<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glColor4f</span><span class=\"token punctuation\">(</span>r<span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span>g<span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span>b<span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>lightingEnabled <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>materialBound<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token function\">glColorMaterial</span><span class=\"token punctuation\">(</span>GL_FRONT_AND_BACK<span class=\"token punctuation\">,</span> GL_AMBIENT_AND_DIFFUSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_COLOR_MATERIAL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcurrentStyle<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glColor4f</span><span class=\"token punctuation\">(</span>r<span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span>g<span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span>b<span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span>a<span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>lightingEnabled <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>materialBound<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token function\">glColorMaterial</span><span class=\"token punctuation\">(</span>GL_FRONT_AND_BACK<span class=\"token punctuation\">,</span> GL_AMBIENT_AND_DIFFUSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_COLOR_MATERIAL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> gray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>gray<span class=\"token punctuation\">,</span> gray<span class=\"token punctuation\">,</span> gray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setHexColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> hexColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> r <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>hexColor <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> g <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>hexColor <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>hexColor <span class=\"token operator\">>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glClear</span><span class=\"token punctuation\">(</span>GL_COLOR_BUFFER_BIT <span class=\"token operator\">|</span> GL_DEPTH_BUFFER_BIT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glClearColor</span><span class=\"token punctuation\">(</span>r <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> g <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> b <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glClear</span><span class=\"token punctuation\">(</span>GL_COLOR_BUFFER_BIT <span class=\"token operator\">|</span> GL_DEPTH_BUFFER_BIT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> brightness<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">clear</span><span class=\"token punctuation\">(</span>brightness<span class=\"token punctuation\">,</span> brightness<span class=\"token punctuation\">,</span> brightness<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">clearAlpha</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glColorMask</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glClearColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glClear</span><span class=\"token punctuation\">(</span>GL_COLOR_BUFFER_BIT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glColorMask</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setBackgroundAuto</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bAuto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbBackgroundAuto <span class=\"token operator\">=</span> bAuto<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">getBackgroundAuto</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> bBackgroundAuto<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofColor ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">getBackgroundColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> currentStyle<span class=\"token punctuation\">.</span>bgColor<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setBackgroundColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcurrentStyle<span class=\"token punctuation\">.</span>bgColor <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glClearColor</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>bgColor<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span>currentStyle<span class=\"token punctuation\">.</span>bgColor<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span>currentStyle<span class=\"token punctuation\">.</span>bgColor<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> currentStyle<span class=\"token punctuation\">.</span>bgColor<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">background</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setBackgroundColor</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glClear</span><span class=\"token punctuation\">(</span> GL_COLOR_BUFFER_BIT <span class=\"token operator\">|</span> GL_DEPTH_BUFFER_BIT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">background</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> brightness<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">background</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofColor</span><span class=\"token punctuation\">(</span>brightness<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">background</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> hexColor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> _a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">background</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>hexColor <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>hexColor <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>hexColor <span class=\"token operator\">>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">,</span> _a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">background</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">background</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofColor</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setFillMode</span><span class=\"token punctuation\">(</span>ofFillFlag fill<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcurrentStyle<span class=\"token punctuation\">.</span>bFill <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>fill<span class=\"token operator\">==</span>OF_FILLED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>bFill<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setFilled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setStrokeWidth</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// GLES does not support glPolygonMode</span>\n\t\t\t<span class=\"token function\">glPolygonMode</span><span class=\"token punctuation\">(</span>GL_FRONT_AND_BACK<span class=\"token punctuation\">,</span> GL_FILL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setFilled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setStrokeWidth</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>lineWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// GLES does not support glPolygonMode</span>\n\t\t\t<span class=\"token function\">glPolygonMode</span><span class=\"token punctuation\">(</span>GL_FRONT_AND_BACK<span class=\"token punctuation\">,</span> GL_LINE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofFillFlag ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">getFillMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>bFill<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> OF_FILLED<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> OF_OUTLINE<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setRectMode</span><span class=\"token punctuation\">(</span>ofRectMode mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcurrentStyle<span class=\"token punctuation\">.</span>rectMode <span class=\"token operator\">=</span> mode<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofRectMode ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">getRectMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> currentStyle<span class=\"token punctuation\">.</span>rectMode<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setLineWidth</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> lineWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcurrentStyle<span class=\"token punctuation\">.</span>lineWidth <span class=\"token operator\">=</span> lineWidth<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>currentStyle<span class=\"token punctuation\">.</span>bFill<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setStrokeWidth</span><span class=\"token punctuation\">(</span>lineWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">glLineWidth</span><span class=\"token punctuation\">(</span>lineWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setDepthTest</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> depthTest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>depthTest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_DEPTH_TEST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glDisable</span><span class=\"token punctuation\">(</span>GL_DEPTH_TEST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setLineSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> smooth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcurrentStyle<span class=\"token punctuation\">.</span>smoothing <span class=\"token operator\">=</span> smooth<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">startSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token function\">glPushAttrib</span><span class=\"token punctuation\">(</span>GL_COLOR_BUFFER_BIT <span class=\"token operator\">|</span> GL_ENABLE_BIT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token function\">glHint</span><span class=\"token punctuation\">(</span>GL_LINE_SMOOTH_HINT<span class=\"token punctuation\">,</span> GL_NICEST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_LINE_SMOOTH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//why do we need this?</span>\n\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_BLEND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glBlendFunc</span><span class=\"token punctuation\">(</span>GL_SRC_ALPHA<span class=\"token punctuation\">,</span> GL_ONE_MINUS_SRC_ALPHA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">endSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token function\">glPopAttrib</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setBlendMode</span><span class=\"token punctuation\">(</span>ofBlendMode blendMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>blendMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> OF_BLENDMODE_DISABLED<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">glDisable</span><span class=\"token punctuation\">(</span>GL_BLEND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_BLENDMODE_ALPHA<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_BLEND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t\t<span class=\"token function\">glBlendEquation</span><span class=\"token punctuation\">(</span>GL_FUNC_ADD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token function\">glBlendFunc</span><span class=\"token punctuation\">(</span>GL_SRC_ALPHA<span class=\"token punctuation\">,</span> GL_ONE_MINUS_SRC_ALPHA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_BLENDMODE_ADD<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_BLEND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t\t<span class=\"token function\">glBlendEquation</span><span class=\"token punctuation\">(</span>GL_FUNC_ADD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token function\">glBlendFunc</span><span class=\"token punctuation\">(</span>GL_SRC_ALPHA<span class=\"token punctuation\">,</span> GL_ONE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_BLENDMODE_MULTIPLY<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_BLEND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t\t<span class=\"token function\">glBlendEquation</span><span class=\"token punctuation\">(</span>GL_FUNC_ADD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token function\">glBlendFunc</span><span class=\"token punctuation\">(</span>GL_DST_COLOR<span class=\"token punctuation\">,</span> GL_ONE_MINUS_SRC_ALPHA <span class=\"token comment\" spellcheck=\"true\">/* GL_ZERO or GL_ONE_MINUS_SRC_ALPHA */</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_BLENDMODE_SCREEN<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_BLEND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t\t<span class=\"token function\">glBlendEquation</span><span class=\"token punctuation\">(</span>GL_FUNC_ADD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token function\">glBlendFunc</span><span class=\"token punctuation\">(</span>GL_ONE_MINUS_DST_COLOR<span class=\"token punctuation\">,</span> GL_ONE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_BLENDMODE_SUBTRACT<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_BLEND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t<span class=\"token function\">glBlendEquation</span><span class=\"token punctuation\">(</span>GL_FUNC_REVERSE_SUBTRACT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGLRenderer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"OF_BLENDMODE_SUBTRACT not currently supported on OpenGL ES\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token function\">glBlendFunc</span><span class=\"token punctuation\">(</span>GL_SRC_ALPHA<span class=\"token punctuation\">,</span> GL_ONE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tcurrentStyle<span class=\"token punctuation\">.</span>blendingMode <span class=\"token operator\">=</span> blendMode<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setBitmapTextMode</span><span class=\"token punctuation\">(</span>ofDrawBitmapMode mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcurrentStyle<span class=\"token punctuation\">.</span>drawBitmapMode <span class=\"token operator\">=</span> mode<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofStyle ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">getStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> currentStyle<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">pushStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tstyleHistory<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//if we are over the max number of styles we have set, then delete the oldest styles.</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> styleHistory<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> OF_MAX_STYLE_HISTORY <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tstyleHistory<span class=\"token punctuation\">.</span><span class=\"token function\">pop_front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//should we warn here?</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGraphics\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ofPushStyle(): maximum number of style pushes &lt;&lt; \"</span> <span class=\"token operator\">&lt;&lt;</span> OF_MAX_STYLE_HISTORY <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" reached, did you forget to pop somewhere?\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">popStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> styleHistory<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setStyle</span><span class=\"token punctuation\">(</span>styleHistory<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tstyleHistory<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setStyle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofStyle <span class=\"token operator\">&amp;</span> style<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//color</span>\n\t<span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>style<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>style<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>style<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>style<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//bg color</span>\n\t<span class=\"token function\">setBackgroundColor</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span>bgColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//circle resolution - don't worry it only recalculates the display list if the res has changed</span>\n\t<span class=\"token function\">setCircleResolution</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span>circleResolution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">setCurveResolution</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span>curveResolution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//line width - finally!</span>\n\t<span class=\"token function\">setLineWidth</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span>lineWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//ofSetDepthTest(style.depthTest); removed since it'll break old projects setting depth test through glEnable</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//rect mode: corner/center</span>\n\t<span class=\"token function\">setRectMode</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span>rectMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//poly mode: winding type</span>\n\t<span class=\"token function\">setPolyMode</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span>polyMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//fill</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span>bFill <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setFillMode</span><span class=\"token punctuation\">(</span>OF_FILLED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setFillMode</span><span class=\"token punctuation\">(</span>OF_OUTLINE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//smoothing</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/*if(style.smoothing ){\n\t\tenableSmoothing();\n\t}else{\n\t\tdisableSmoothing();\n\t}*/</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//blending</span>\n\t<span class=\"token function\">setBlendMode</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span>blendingMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tcurrentStyle <span class=\"token operator\">=</span> style<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setCurveResolution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> resolution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcurrentStyle<span class=\"token punctuation\">.</span>curveResolution <span class=\"token operator\">=</span> resolution<span class=\"token punctuation\">;</span>\n\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setCurveResolution</span><span class=\"token punctuation\">(</span>resolution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">enablePointSprites</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_POINT_SPRITE_OES<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glTexEnvi</span><span class=\"token punctuation\">(</span>GL_POINT_SPRITE_OES<span class=\"token punctuation\">,</span> GL_COORD_REPLACE_OES<span class=\"token punctuation\">,</span> GL_TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// does look like this needs to be enabled in ES because</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// it is always eneabled...</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//glEnable(GL_VERTEX_PROGRAM_POINT_SIZE);</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_POINT_SPRITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glTexEnvi</span><span class=\"token punctuation\">(</span>GL_POINT_SPRITE<span class=\"token punctuation\">,</span> GL_COORD_REPLACE<span class=\"token punctuation\">,</span> GL_TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_VERTEX_PROGRAM_POINT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">disablePointSprites</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n\t<span class=\"token function\">glDisable</span><span class=\"token punctuation\">(</span>GL_POINT_SPRITE_OES<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token function\">glDisable</span><span class=\"token punctuation\">(</span>GL_POINT_SPRITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">enableAntiAliasing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_MULTISAMPLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">disableAntiAliasing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glDisable</span><span class=\"token punctuation\">(</span>GL_MULTISAMPLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawLine</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tlinePoints<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x1<span class=\"token punctuation\">,</span>y1<span class=\"token punctuation\">,</span>z1<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\tlinePoints<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x2<span class=\"token punctuation\">,</span>y2<span class=\"token punctuation\">,</span>z2<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// use smoothness, if requested:</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>smoothing<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">startSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">glEnableClientState</span><span class=\"token punctuation\">(</span>GL_VERTEX_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glVertexPointer</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> GL_FLOAT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span>vec3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> linePoints<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glDrawArrays</span><span class=\"token punctuation\">(</span>GL_LINES<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// use smoothness, if requested:</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>smoothing<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">endSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawRectangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>rectMode <span class=\"token operator\">==</span> OF_RECTMODE_CORNER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\trectPoints<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\trectPoints<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x<span class=\"token operator\">+</span>w<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\trectPoints<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x<span class=\"token operator\">+</span>w<span class=\"token punctuation\">,</span> y<span class=\"token operator\">+</span>h<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\trectPoints<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x<span class=\"token punctuation\">,</span> y<span class=\"token operator\">+</span>h<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\trectPoints<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x<span class=\"token operator\">-</span>w<span class=\"token operator\">/</span><span class=\"token number\">2.0f</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">-</span>h<span class=\"token operator\">/</span><span class=\"token number\">2.0f</span><span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\trectPoints<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x<span class=\"token operator\">+</span>w<span class=\"token operator\">/</span><span class=\"token number\">2.0f</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">-</span>h<span class=\"token operator\">/</span><span class=\"token number\">2.0f</span><span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\trectPoints<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x<span class=\"token operator\">+</span>w<span class=\"token operator\">/</span><span class=\"token number\">2.0f</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">+</span>h<span class=\"token operator\">/</span><span class=\"token number\">2.0f</span><span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\trectPoints<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x<span class=\"token operator\">-</span>w<span class=\"token operator\">/</span><span class=\"token number\">2.0f</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">+</span>h<span class=\"token operator\">/</span><span class=\"token number\">2.0f</span><span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// use smoothness, if requested:</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>smoothing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>currentStyle<span class=\"token punctuation\">.</span>bFill<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">startSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">glEnableClientState</span><span class=\"token punctuation\">(</span>GL_VERTEX_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glVertexPointer</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> GL_FLOAT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span>vec3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>rectPoints<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glDrawArrays</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>bFill <span class=\"token operator\">?</span> GL_TRIANGLE_FAN <span class=\"token operator\">:</span> GL_LINE_LOOP<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// use smoothness, if requested:</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>smoothing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>currentStyle<span class=\"token punctuation\">.</span>bFill<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">endSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawTriangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z3<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\ttriPoints<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x1<span class=\"token punctuation\">,</span>y1<span class=\"token punctuation\">,</span>z1<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\ttriPoints<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x2<span class=\"token punctuation\">,</span>y2<span class=\"token punctuation\">,</span>z2<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\ttriPoints<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x3<span class=\"token punctuation\">,</span>y3<span class=\"token punctuation\">,</span>z3<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// use smoothness, if requested:</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>smoothing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>currentStyle<span class=\"token punctuation\">.</span>bFill<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">startSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">glEnableClientState</span><span class=\"token punctuation\">(</span>GL_VERTEX_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glVertexPointer</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> GL_FLOAT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span>vec3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>triPoints<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glDrawArrays</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>bFill <span class=\"token operator\">?</span> GL_TRIANGLE_FAN <span class=\"token operator\">:</span> GL_LINE_LOOP<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// use smoothness, if requested:</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>smoothing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>currentStyle<span class=\"token punctuation\">.</span>bFill<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">endSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawCircle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span>  <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">auto</span> <span class=\"token operator\">&amp;</span> circleCache <span class=\"token operator\">=</span> circlePolyline<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>circleCache<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tcirclePoints<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>radius<span class=\"token operator\">*</span>circleCache<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span>x<span class=\"token punctuation\">,</span>radius<span class=\"token operator\">*</span>circleCache<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token operator\">+</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// use smoothness, if requested:</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>smoothing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>currentStyle<span class=\"token punctuation\">.</span>bFill<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">startSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">glEnableClientState</span><span class=\"token punctuation\">(</span>GL_VERTEX_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glVertexPointer</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> GL_FLOAT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span>vec3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>circlePoints<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glDrawArrays</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>bFill <span class=\"token operator\">?</span> GL_TRIANGLE_FAN <span class=\"token operator\">:</span> GL_LINE_STRIP<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> circlePoints<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// use smoothness, if requested:</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>smoothing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>currentStyle<span class=\"token punctuation\">.</span>bFill<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">endSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawEllipse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">float</span> radiusX <span class=\"token operator\">=</span> width<span class=\"token operator\">*</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> radiusY <span class=\"token operator\">=</span> height<span class=\"token operator\">*</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">auto</span> <span class=\"token operator\">&amp;</span> circleCache <span class=\"token operator\">=</span> circlePolyline<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>circleCache<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tcirclePoints<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>radiusX<span class=\"token operator\">*</span>circlePolyline<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span>x<span class=\"token punctuation\">,</span> radiusY<span class=\"token operator\">*</span>circlePolyline<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token operator\">+</span>y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// use smoothness, if requested:</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>smoothing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>currentStyle<span class=\"token punctuation\">.</span>bFill<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">startSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">glEnableClientState</span><span class=\"token punctuation\">(</span>GL_VERTEX_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glVertexPointer</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> GL_FLOAT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span>vec3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>circlePoints<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glDrawArrays</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>bFill <span class=\"token operator\">?</span> GL_TRIANGLE_FAN <span class=\"token operator\">:</span> GL_LINE_STRIP<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> circlePoints<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// use smoothness, if requested:</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>smoothing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>currentStyle<span class=\"token punctuation\">.</span>bFill<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">endSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawString</span><span class=\"token punctuation\">(</span>string textString<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\n\tofGLRenderer <span class=\"token operator\">*</span> mutThis <span class=\"token operator\">=</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> sx <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> sy <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token comment\" spellcheck=\"true\">///////////////////////////</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// APPLY TRANSFORM / VIEW</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///////////////////////////</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\n\t<span class=\"token keyword\">bool</span> hasModelView <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> hasProjection <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> hasViewport <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\tofRectangle rViewport<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> vflipped <span class=\"token operator\">=</span> <span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>drawBitmapMode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_BITMAPMODE_SIMPLE<span class=\"token operator\">:</span>\n\n\t\t\tsx <span class=\"token operator\">+</span><span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n\t\t\tsy <span class=\"token operator\">+</span><span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_BITMAPMODE_SCREEN<span class=\"token operator\">:</span>\n\n\t\t\thasViewport <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pushView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\trViewport <span class=\"token operator\">=</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getFullSurfaceViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span>rViewport<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_PROJECTION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">loadIdentityMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">loadIdentityMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">/</span>rViewport<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token operator\">/</span>rViewport<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> rViewport<span class=\"token punctuation\">.</span>height <span class=\"token operator\">-</span> y<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tvflipped <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_BITMAPMODE_VIEWPORT<span class=\"token operator\">:</span>\n\n\t\t\trViewport <span class=\"token operator\">=</span> <span class=\"token function\">getCurrentViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\thasProjection <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_PROJECTION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">loadIdentityMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\thasModelView <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">loadIdentityMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">/</span>rViewport<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token operator\">/</span>rViewport<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> rViewport<span class=\"token punctuation\">.</span>height <span class=\"token operator\">-</span> y<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tvflipped <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_BITMAPMODE_MODEL<span class=\"token operator\">:</span>\n\n\t\t\thasModelView <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_BITMAPMODE_MODEL_BILLBOARD<span class=\"token operator\">:</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//our aim here is to draw to screen</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//at the viewport position related</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//to the world position x,y,z</span>\n\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// tig: we want to get the signed normalised screen coordinates (-1,+1) of our point (x,y,z)</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// that's projection * modelview * point in GLSL multiplication order</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// then doing the good old (v + 1.0) / 2. to get unsigned normalized screen (0,1) coordinates.</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// we then multiply x by width and y by height to get window coordinates.</span>\n\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// previous implementations used gluProject, which made it incompatible with GLES (and the future)</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// https://developer.apple.com/library/mac/#documentation/Darwin/Reference/ManPages/man3/gluProject.3.html</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// this could probably be backported to the GL2 Renderer =)</span>\n\n\t\t\trViewport <span class=\"token operator\">=</span> <span class=\"token function\">getCurrentViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tglm<span class=\"token operator\">::</span>mat4 modelview <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">mat4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> projection <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">mat4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">glGetFloatv</span><span class=\"token punctuation\">(</span>GL_MODELVIEW_MATRIX<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">value_ptr</span><span class=\"token punctuation\">(</span>modelview<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">glGetFloatv</span><span class=\"token punctuation\">(</span>GL_PROJECTION_MATRIX<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">value_ptr</span><span class=\"token punctuation\">(</span>projection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tglm<span class=\"token operator\">::</span>mat4 mat <span class=\"token operator\">=</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getOrientationMatrixInverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> projection <span class=\"token operator\">*</span> modelview<span class=\"token punctuation\">;</span>\n\t\t\tglm<span class=\"token operator\">::</span>vec4 dScreen4 <span class=\"token operator\">=</span> mat <span class=\"token operator\">*</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec4</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tglm<span class=\"token operator\">::</span>vec3 dScreen <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>dScreen4<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> dScreen4<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">;</span>\n\t\t\tdScreen <span class=\"token operator\">+</span><span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>\n\t\t\tdScreen <span class=\"token operator\">*</span><span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n\n\t\t\tdScreen<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span><span class=\"token operator\">=</span> rViewport<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t\t\tdScreen<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span><span class=\"token operator\">=</span> rViewport<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\n\t\t\tdScreen<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span><span class=\"token operator\">=</span> rViewport<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\t\t\tdScreen<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span><span class=\"token operator\">=</span> rViewport<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dScreen<span class=\"token punctuation\">.</span>z <span class=\"token operator\">>=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\n\t\t\thasProjection <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_PROJECTION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">loadIdentityMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\thasModelView <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">loadIdentityMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">/</span>rViewport<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">/</span>rViewport<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>dScreen<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> dScreen<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// remember the current blend mode so that we can restore it at the end of this method.</span>\n\tGLint blend_src<span class=\"token punctuation\">,</span> blend_dst<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glGetIntegerv</span><span class=\"token punctuation\">(</span> GL_BLEND_SRC<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>blend_src <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glGetIntegerv</span><span class=\"token punctuation\">(</span> GL_BLEND_DST<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>blend_dst <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_BLEND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glBlendFunc</span><span class=\"token punctuation\">(</span>GL_SRC_ALPHA<span class=\"token punctuation\">,</span> GL_ONE_MINUS_SRC_ALPHA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// this temporarily enables alpha testing,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// which discards pixels unless their alpha is 1.0f</span>\n\t<span class=\"token function\">glPushAttrib</span><span class=\"token punctuation\">(</span>GL_ENABLE_BIT <span class=\"token operator\">|</span> GL_COLOR_BUFFER_BIT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_ALPHA_TEST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glAlphaFunc</span><span class=\"token punctuation\">(</span>GL_GREATER<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\tofMesh charMesh <span class=\"token operator\">=</span> bitmapFont<span class=\"token punctuation\">.</span><span class=\"token function\">getMesh</span><span class=\"token punctuation\">(</span>textString<span class=\"token punctuation\">,</span>sx<span class=\"token punctuation\">,</span>sy<span class=\"token punctuation\">,</span>currentStyle<span class=\"token punctuation\">.</span>drawBitmapMode<span class=\"token punctuation\">,</span>vflipped<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>bitmapFont<span class=\"token punctuation\">.</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>charMesh<span class=\"token punctuation\">,</span>OF_MESH_FILL<span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span>bitmapFont<span class=\"token punctuation\">.</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token function\">glPopAttrib</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">// restore blendmode</span>\n\t<span class=\"token function\">glBlendFunc</span><span class=\"token punctuation\">(</span>blend_src<span class=\"token punctuation\">,</span> blend_dst<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hasModelView<span class=\"token punctuation\">)</span>\n\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">popMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hasProjection<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_PROJECTION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">popMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hasViewport<span class=\"token punctuation\">)</span>\n\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">popView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofTrueTypeFont <span class=\"token operator\">&amp;</span> font<span class=\"token punctuation\">,</span> string text<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tofGLRenderer <span class=\"token operator\">*</span> mutThis <span class=\"token operator\">=</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> blendEnabled <span class=\"token operator\">=</span> <span class=\"token function\">glIsEnabled</span><span class=\"token punctuation\">(</span>GL_BLEND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tGLint blend_src<span class=\"token punctuation\">,</span> blend_dst<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glGetIntegerv</span><span class=\"token punctuation\">(</span> GL_BLEND_SRC<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>blend_src <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glGetIntegerv</span><span class=\"token punctuation\">(</span> GL_BLEND_DST<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>blend_dst <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_BLEND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glBlendFunc</span><span class=\"token punctuation\">(</span>GL_SRC_ALPHA<span class=\"token punctuation\">,</span> GL_ONE_MINUS_SRC_ALPHA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>font<span class=\"token punctuation\">.</span><span class=\"token function\">getFontTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>font<span class=\"token punctuation\">.</span><span class=\"token function\">getStringMesh</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>OF_MESH_FILL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span>font<span class=\"token punctuation\">.</span><span class=\"token function\">getFontTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>blendEnabled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glDisable</span><span class=\"token punctuation\">(</span>GL_BLEND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">glBlendFunc</span><span class=\"token punctuation\">(</span>blend_src<span class=\"token punctuation\">,</span> blend_dst<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">enableTextureTarget</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofTexture <span class=\"token operator\">&amp;</span> tex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> textureLocation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glActiveTexture</span><span class=\"token punctuation\">(</span>GL_TEXTURE0<span class=\"token operator\">+</span>textureLocation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glClientActiveTexture</span><span class=\"token punctuation\">(</span>GL_TEXTURE0<span class=\"token operator\">+</span>textureLocation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span> tex<span class=\"token punctuation\">.</span><span class=\"token function\">getTextureData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span> tex<span class=\"token punctuation\">.</span><span class=\"token function\">getTextureData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>GLuint<span class=\"token punctuation\">)</span>tex<span class=\"token punctuation\">.</span><span class=\"token function\">getTextureData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">.</span><span class=\"token function\">getTextureData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>bufferId<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glTexBuffer</span><span class=\"token punctuation\">(</span>GL_TEXTURE_BUFFER<span class=\"token punctuation\">,</span> tex<span class=\"token punctuation\">.</span><span class=\"token function\">getTextureData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>glInternalFormat<span class=\"token punctuation\">,</span> tex<span class=\"token punctuation\">.</span><span class=\"token function\">getTextureData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>bufferId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\ttextureLocationsEnabled<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>textureLocation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">disableTextureTarget</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> textureTarget<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> textureLocation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glActiveTexture</span><span class=\"token punctuation\">(</span>GL_TEXTURE0<span class=\"token operator\">+</span>textureLocation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span> textureTarget<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glDisable</span><span class=\"token punctuation\">(</span>textureTarget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glActiveTexture</span><span class=\"token punctuation\">(</span>GL_TEXTURE0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ttextureLocationsEnabled<span class=\"token punctuation\">.</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span>textureLocation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setAlphaMaskTex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofTexture <span class=\"token operator\">&amp;</span> tex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">enableTextureTarget</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\talphaMaskTextureTarget <span class=\"token operator\">=</span> tex<span class=\"token punctuation\">.</span><span class=\"token function\">getTextureData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">disableAlphaMask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">disableTextureTarget</span><span class=\"token punctuation\">(</span>alphaMaskTextureTarget<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">enableLighting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_LIGHTING<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tlightingEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// FIXME: we do this so the 3d ofDraw* functions work with lighting</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// but if someone enables it between ofEnableLighting it'll be disabled</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// on ofDisableLighting. by now it seems the best option to not loose</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// performance when drawing lots of primitives</span>\n\tnormalsEnabled <span class=\"token operator\">=</span> <span class=\"token function\">glIsEnabled</span><span class=\"token punctuation\">(</span> GL_NORMALIZE <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_NORMALIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span> matrixMode<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glGetIntegerv</span><span class=\"token punctuation\">(</span>GL_MATRIX_MODE<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>matrixMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glMatrixMode</span><span class=\"token punctuation\">(</span>GL_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glPushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glLoadMatrixf</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">value_ptr</span><span class=\"token punctuation\">(</span>matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token function\">ofLightsData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tstd<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofLight<span class=\"token operator\">::</span>Data<span class=\"token operator\">></span> lightData <span class=\"token operator\">=</span> <span class=\"token function\">ofLightsData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>lightData <span class=\"token operator\">&amp;&amp;</span> lightData<span class=\"token operator\">-</span><span class=\"token operator\">></span>isEnabled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glLightfv</span><span class=\"token punctuation\">(</span>GL_LIGHT0 <span class=\"token operator\">+</span> lightData<span class=\"token operator\">-</span><span class=\"token operator\">></span>glIndex<span class=\"token punctuation\">,</span> GL_POSITION<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>lightData<span class=\"token operator\">-</span><span class=\"token operator\">></span>position<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>lightData<span class=\"token operator\">-</span><span class=\"token operator\">></span>lightType <span class=\"token operator\">==</span> OF_LIGHT_SPOT <span class=\"token operator\">||</span> lightData<span class=\"token operator\">-</span><span class=\"token operator\">></span>lightType <span class=\"token operator\">==</span> OF_LIGHT_AREA<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">glLightfv</span><span class=\"token punctuation\">(</span>GL_LIGHT0 <span class=\"token operator\">+</span> lightData<span class=\"token operator\">-</span><span class=\"token operator\">></span>glIndex<span class=\"token punctuation\">,</span> GL_SPOT_DIRECTION<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>lightData<span class=\"token operator\">-</span><span class=\"token operator\">></span>direction<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">glPopMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glMatrixMode</span><span class=\"token punctuation\">(</span>matrixMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">disableLighting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glDisable</span><span class=\"token punctuation\">(</span>GL_LIGHTING<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>normalsEnabled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glDisable</span><span class=\"token punctuation\">(</span>GL_NORMALIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tlightingEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">enableSeparateSpecularLight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token function\">glLightModeli</span> <span class=\"token punctuation\">(</span>GL_LIGHT_MODEL_COLOR_CONTROL<span class=\"token punctuation\">,</span>GL_SEPARATE_SPECULAR_COLOR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">disableSeparateSpecularLight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token function\">glLightModeli</span> <span class=\"token punctuation\">(</span>GL_LIGHT_MODEL_COLOR_CONTROL<span class=\"token punctuation\">,</span>GL_SINGLE_COLOR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">getLightingEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">glIsEnabled</span><span class=\"token punctuation\">(</span>GL_LIGHTING<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setSmoothLighting</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span> <span class=\"token function\">glShadeModel</span><span class=\"token punctuation\">(</span>GL_SMOOTH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token function\">glShadeModel</span><span class=\"token punctuation\">(</span>GL_FLAT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setGlobalAmbientColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor<span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tGLfloat cc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>c<span class=\"token punctuation\">.</span>r<span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span>g<span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span>b<span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">.</span>a<span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glLightModelfv</span><span class=\"token punctuation\">(</span>GL_LIGHT_MODEL_AMBIENT<span class=\"token punctuation\">,</span> cc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">enableLight</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> lightIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">enableLighting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_LIGHT0 <span class=\"token operator\">+</span> lightIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">disableLight</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> lightIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>lightIndex<span class=\"token operator\">!=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glDisable</span><span class=\"token punctuation\">(</span>GL_LIGHT0 <span class=\"token operator\">+</span> lightIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setLightSpotlightCutOff</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> lightIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> spotCutOff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glLightf</span><span class=\"token punctuation\">(</span>GL_LIGHT0 <span class=\"token operator\">+</span> lightIndex<span class=\"token punctuation\">,</span> GL_SPOT_CUTOFF<span class=\"token punctuation\">,</span> spotCutOff <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setLightSpotConcentration</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> lightIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> exponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glLightf</span><span class=\"token punctuation\">(</span>GL_LIGHT0 <span class=\"token operator\">+</span> lightIndex<span class=\"token punctuation\">,</span> GL_SPOT_EXPONENT<span class=\"token punctuation\">,</span> exponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setLightAttenuation</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> lightIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> constant<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> linear<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> quadratic <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>lightIndex<span class=\"token operator\">==</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glLightf</span><span class=\"token punctuation\">(</span>GL_LIGHT0 <span class=\"token operator\">+</span> lightIndex<span class=\"token punctuation\">,</span> GL_CONSTANT_ATTENUATION<span class=\"token punctuation\">,</span> constant<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glLightf</span><span class=\"token punctuation\">(</span>GL_LIGHT0 <span class=\"token operator\">+</span> lightIndex<span class=\"token punctuation\">,</span> GL_LINEAR_ATTENUATION<span class=\"token punctuation\">,</span> linear<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glLightf</span><span class=\"token punctuation\">(</span>GL_LIGHT0 <span class=\"token operator\">+</span> lightIndex<span class=\"token punctuation\">,</span> GL_QUADRATIC_ATTENUATION<span class=\"token punctuation\">,</span> quadratic<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setLightAmbientColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> lightIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofFloatColor<span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>lightIndex<span class=\"token operator\">==</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glLightfv</span><span class=\"token punctuation\">(</span>GL_LIGHT0 <span class=\"token operator\">+</span> lightIndex<span class=\"token punctuation\">,</span> GL_AMBIENT<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setLightDiffuseColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> lightIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofFloatColor<span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>lightIndex<span class=\"token operator\">==</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glLightfv</span><span class=\"token punctuation\">(</span>GL_LIGHT0 <span class=\"token operator\">+</span> lightIndex<span class=\"token punctuation\">,</span> GL_DIFFUSE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setLightSpecularColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> lightIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofFloatColor<span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>lightIndex<span class=\"token operator\">==</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glLightfv</span><span class=\"token punctuation\">(</span>GL_LIGHT0 <span class=\"token operator\">+</span> lightIndex<span class=\"token punctuation\">,</span> GL_SPECULAR<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>c<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setLightPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> lightIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec4 <span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>lightIndex<span class=\"token operator\">==</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> matrixMode<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glGetIntegerv</span><span class=\"token punctuation\">(</span>GL_MATRIX_MODE<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>matrixMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glMatrixMode</span><span class=\"token punctuation\">(</span>GL_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glPushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glLoadMatrixf</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">value_ptr</span><span class=\"token punctuation\">(</span>matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glLightfv</span><span class=\"token punctuation\">(</span>GL_LIGHT0 <span class=\"token operator\">+</span> lightIndex<span class=\"token punctuation\">,</span> GL_POSITION<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">value_ptr</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glPopMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glMatrixMode</span><span class=\"token punctuation\">(</span>matrixMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">setLightSpotDirection</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> lightIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec4 <span class=\"token operator\">&amp;</span> direction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>lightIndex<span class=\"token operator\">==</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> matrixMode<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glGetIntegerv</span><span class=\"token punctuation\">(</span>GL_MATRIX_MODE<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>matrixMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glMatrixMode</span><span class=\"token punctuation\">(</span>GL_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glPushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glLoadMatrixf</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">value_ptr</span><span class=\"token punctuation\">(</span>matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glLightfv</span><span class=\"token punctuation\">(</span>GL_LIGHT0 <span class=\"token operator\">+</span> lightIndex<span class=\"token punctuation\">,</span> GL_SPOT_DIRECTION<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">value_ptr</span><span class=\"token punctuation\">(</span>direction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glPopMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glMatrixMode</span><span class=\"token punctuation\">(</span>matrixMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">getGLVersionMajor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">getGLVersionMinor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">saveFullViewport</span><span class=\"token punctuation\">(</span>ofPixels <span class=\"token operator\">&amp;</span> pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofRectangle v <span class=\"token operator\">=</span> <span class=\"token function\">getCurrentViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">saveScreen</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">saveScreen</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span> ofPixels <span class=\"token operator\">&amp;</span> pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> sh <span class=\"token operator\">=</span> <span class=\"token function\">getViewportHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\ty <span class=\"token operator\">=</span> sh <span class=\"token operator\">-</span> y<span class=\"token punctuation\">;</span>\n\t\ty <span class=\"token operator\">-</span><span class=\"token operator\">=</span> h<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// top, bottom issues</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">auto</span> pixelFormat <span class=\"token operator\">=</span> OF_PIXELS_BGRA<span class=\"token punctuation\">;</span>\n\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> glFormat <span class=\"token operator\">=</span> <span class=\"token function\">ofGetGLFormat</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token function\">glReadPixels</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> glFormat<span class=\"token punctuation\">,</span> GL_UNSIGNED_BYTE<span class=\"token punctuation\">,</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// read the memory....</span>\n\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">mirror</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\n\t<span class=\"token keyword\">int</span> sw <span class=\"token operator\">=</span> <span class=\"token function\">getViewportWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> numPixels   <span class=\"token operator\">=</span> w<span class=\"token operator\">*</span>h<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> numPixels <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"grabScreen(): unable to grab screen, image width and/or height are 0: \"</span> <span class=\"token operator\">&lt;&lt;</span> w <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"x\"</span> <span class=\"token operator\">&lt;&lt;</span> h<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> OF_PIXELS_RGBA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> OF_ORIENTATION_UNKNOWN<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_ORIENTATION_DEFAULT<span class=\"token operator\">:</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\ty <span class=\"token operator\">=</span> sh <span class=\"token operator\">-</span> y<span class=\"token punctuation\">;</span>   <span class=\"token comment\" spellcheck=\"true\">// screen is flipped vertically.</span>\n\t\t\ty <span class=\"token operator\">-</span><span class=\"token operator\">=</span> h<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token function\">glPixelStorei</span><span class=\"token punctuation\">(</span>GL_PACK_ALIGNMENT<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glReadPixels</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> GL_RGBA<span class=\"token punctuation\">,</span> GL_UNSIGNED_BYTE<span class=\"token punctuation\">,</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">mirror</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_ORIENTATION_180<span class=\"token operator\">:</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tx <span class=\"token operator\">=</span> sw <span class=\"token operator\">-</span> x<span class=\"token punctuation\">;</span>   <span class=\"token comment\" spellcheck=\"true\">// screen is flipped horizontally.</span>\n\t\t\tx <span class=\"token operator\">-</span><span class=\"token operator\">=</span> w<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token function\">glPixelStorei</span><span class=\"token punctuation\">(</span>GL_PACK_ALIGNMENT<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glReadPixels</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> GL_RGBA<span class=\"token punctuation\">,</span> GL_UNSIGNED_BYTE<span class=\"token punctuation\">,</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">mirror</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_ORIENTATION_90_RIGHT<span class=\"token operator\">:</span>\n\t\t<span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tx <span class=\"token operator\">=</span> sw <span class=\"token operator\">-</span> x<span class=\"token punctuation\">;</span>   <span class=\"token comment\" spellcheck=\"true\">// screen is flipped horizontally.</span>\n\t\t\tx <span class=\"token operator\">-</span><span class=\"token operator\">=</span> w<span class=\"token punctuation\">;</span>\n\n\t\t\ty <span class=\"token operator\">=</span> sh <span class=\"token operator\">-</span> y<span class=\"token punctuation\">;</span>   <span class=\"token comment\" spellcheck=\"true\">// screen is flipped vertically.</span>\n\t\t\ty <span class=\"token operator\">-</span><span class=\"token operator\">=</span> h<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token function\">glPixelStorei</span><span class=\"token punctuation\">(</span>GL_PACK_ALIGNMENT<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glReadPixels</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> GL_RGBA<span class=\"token punctuation\">,</span> GL_UNSIGNED_BYTE<span class=\"token punctuation\">,</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">mirror</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_ORIENTATION_90_LEFT<span class=\"token operator\">:</span>\n\t\t<span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tx <span class=\"token operator\">=</span> sw <span class=\"token operator\">-</span> x<span class=\"token punctuation\">;</span>   <span class=\"token comment\" spellcheck=\"true\">// screen is flipped horizontally.</span>\n\t\t\tx <span class=\"token operator\">-</span><span class=\"token operator\">=</span> w<span class=\"token punctuation\">;</span>\n\n\t\t\ty <span class=\"token operator\">=</span> sh <span class=\"token operator\">-</span> y<span class=\"token punctuation\">;</span>   <span class=\"token comment\" spellcheck=\"true\">// screen is flipped vertically.</span>\n\t\t\ty <span class=\"token operator\">-</span><span class=\"token operator\">=</span> h<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token function\">glPixelStorei</span><span class=\"token punctuation\">(</span>GL_PACK_ALIGNMENT<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glReadPixels</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> GL_RGBA<span class=\"token punctuation\">,</span> GL_UNSIGNED_BYTE<span class=\"token punctuation\">,</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">mirror</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">const</span> of3dGraphics <span class=\"token operator\">&amp;</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> graphics3d<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nof3dGraphics <span class=\"token operator\">&amp;</span> ofGLRenderer<span class=\"token operator\">::</span><span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> graphics3d<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n","type":"source","static":true}}],"fetch":[]}