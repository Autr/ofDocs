{"data":[{"page":{"entry":{"name":"ofVbo.cpp","filename":"ofVbo.cpp","absolute":"/Users/gilbertsinnott/Code/openFrameworks/libs/openFrameworks/gl/ofVbo.cpp","path":"/openframeworks/gl/ofVbo_cpp","route":"/openframeworks/gl/ofVbo.cpp","dir":"../libs/openFrameworks/gl","ext":"cpp","type":"source","id":255,"parent":235,"breadcrumbs":[235,195],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">//TODO:</span>\n<span class=\"token comment\" spellcheck=\"true\">//GL Error checking</span>\n<span class=\"token comment\" spellcheck=\"true\">// handle idling of arrays: possibly let gl create memory and use map buffers for streaming</span>\n<span class=\"token comment\" spellcheck=\"true\">// index updating/deleting?</span>\n<span class=\"token comment\" spellcheck=\"true\">// setVertexData with float* should know about ofVec3f vs ofVec2f?</span>\n\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofVbo.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofShader.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGLUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofMesh.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGLBaseTypes.h\"</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofAppAndroidWindow.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\n<span class=\"token keyword\">bool</span> ofVbo<span class=\"token operator\">::</span>vaoSupported<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">bool</span> ofVbo<span class=\"token operator\">::</span>vaoChecked<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;dlfcn.h></span></span>\n\t<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> glGenVertexArraysType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>GLsizei n<span class=\"token punctuation\">,</span>  GLuint <span class=\"token operator\">*</span>arrays<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tglGenVertexArraysType glGenVertexArraysFunc <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> glGenVertexArrays\t\t\t\t\t\t\t\tglGenVertexArraysFunc</span>\n\n\t<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> glDeleteVertexArraysType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>GLsizei n<span class=\"token punctuation\">,</span>  GLuint <span class=\"token operator\">*</span>arrays<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tglDeleteVertexArraysType glDeleteVertexArraysFunc <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> glDeleteVertexArrays\t\t\t\t\t\t\tglDeleteVertexArraysFunc</span>\n\n\t<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> glBindVertexArrayType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>GLuint array<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tglBindVertexArrayType glBindVertexArrayFunc <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> glBindVertexArray\t\t\t\t\t\t\t\tglBindVertexArrayFunc</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token keyword\">static</span> map<span class=\"token operator\">&lt;</span>GLuint<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token function\">getVAOIds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">static</span> map<span class=\"token operator\">&lt;</span>GLuint<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token operator\">*</span> ids <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> map<span class=\"token operator\">&lt;</span>GLuint<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">*</span>ids<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">retainVAO</span><span class=\"token punctuation\">(</span>GLuint id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">getVAOIds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token function\">getVAOIds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">getVAOIds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">getVAOIds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">releaseVAO</span><span class=\"token punctuation\">(</span>GLuint id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">getVAOIds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token function\">getVAOIds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">getVAOIds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">getVAOIds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>ofAppAndroidWindow<span class=\"token operator\">::</span><span class=\"token function\">isSurfaceDestroyed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t\t<span class=\"token function\">glDeleteVertexArrays</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">getVAOIds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofVbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"releaseVAO(): something's wrong here, releasing unknown vertex array object id \"</span> <span class=\"token operator\">&lt;&lt;</span> id<span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>ofAppAndroidWindow<span class=\"token operator\">::</span><span class=\"token function\">isSurfaceDestroyed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token function\">glDeleteVertexArrays</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\nofVbo<span class=\"token operator\">::</span>VertexAttribute<span class=\"token operator\">::</span><span class=\"token function\">VertexAttribute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">:</span><span class=\"token function\">stride</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">offset</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">numCoords</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">location</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">divisor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofVbo<span class=\"token operator\">::</span>VertexAttribute<span class=\"token operator\">::</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> buffer<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span>VertexAttribute<span class=\"token operator\">::</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span>VertexAttribute<span class=\"token operator\">::</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>GL_ARRAY_BUFFER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span>VertexAttribute<span class=\"token operator\">::</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span>GLsizeiptr bytes<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> data<span class=\"token punctuation\">,</span> GLenum usage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">,</span>usage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span>VertexAttribute<span class=\"token operator\">::</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span>GL_ARRAY_BUFFER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\nGLuint ofVbo<span class=\"token operator\">::</span>VertexAttribute<span class=\"token operator\">::</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> buffer<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span>VertexAttribute<span class=\"token operator\">::</span><span class=\"token function\">updateData</span><span class=\"token punctuation\">(</span>GLintptr offset<span class=\"token punctuation\">,</span> GLsizeiptr bytes<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">updateData</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">,</span>bytes<span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span>VertexAttribute<span class=\"token operator\">::</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span> attrib0x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> numCoords<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> usage<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> stride<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> normalize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tGLsizeiptr size <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>stride <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> numCoords <span class=\"token operator\">*</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> stride<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>stride <span class=\"token operator\">=</span> size<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>numCoords <span class=\"token operator\">=</span> numCoords<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>offset <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>normalize <span class=\"token operator\">=</span> normalize<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setData</span><span class=\"token punctuation\">(</span>total <span class=\"token operator\">*</span> size<span class=\"token punctuation\">,</span> attrib0x<span class=\"token punctuation\">,</span> usage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span>VertexAttribute<span class=\"token operator\">::</span><span class=\"token function\">setBuffer</span><span class=\"token punctuation\">(</span>ofBufferObject <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> numCoords<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> stride<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>buffer <span class=\"token operator\">=</span> buffer<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>offset <span class=\"token operator\">=</span> offset<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>numCoords <span class=\"token operator\">=</span> numCoords<span class=\"token punctuation\">;</span>\n\tGLsizeiptr size <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>stride <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> numCoords <span class=\"token operator\">*</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> stride<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>stride <span class=\"token operator\">=</span> size<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span>VertexAttribute<span class=\"token operator\">::</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glEnableVertexAttribArray</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glVertexAttribPointer</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">,</span> numCoords<span class=\"token punctuation\">,</span> GL_FLOAT<span class=\"token punctuation\">,</span> normalize<span class=\"token operator\">?</span>GL_TRUE<span class=\"token operator\">:</span>GL_FALSE<span class=\"token punctuation\">,</span> stride<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token function\">glVertexAttribDivisor</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">,</span> divisor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span>VertexAttribute<span class=\"token operator\">::</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glDisableVertexAttribArray</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\nofVbo<span class=\"token operator\">::</span>IndexAttribute<span class=\"token operator\">::</span><span class=\"token function\">IndexAttribute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofVbo<span class=\"token operator\">::</span>IndexAttribute<span class=\"token operator\">::</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> buffer<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span>IndexAttribute<span class=\"token operator\">::</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span>IndexAttribute<span class=\"token operator\">::</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>GL_ELEMENT_ARRAY_BUFFER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span>IndexAttribute<span class=\"token operator\">::</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span>GLsizeiptr bytes<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> data<span class=\"token punctuation\">,</span> GLenum usage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>GL_ELEMENT_ARRAY_BUFFER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">,</span>usage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span>GL_ELEMENT_ARRAY_BUFFER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span>IndexAttribute<span class=\"token operator\">::</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span>GL_ELEMENT_ARRAY_BUFFER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span>IndexAttribute<span class=\"token operator\">::</span><span class=\"token function\">updateData</span><span class=\"token punctuation\">(</span>GLintptr offset<span class=\"token punctuation\">,</span> GLsizeiptr bytes<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">updateData</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">,</span>bytes<span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\nGLuint ofVbo<span class=\"token operator\">::</span>IndexAttribute<span class=\"token operator\">::</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> buffer<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\nofVbo<span class=\"token operator\">::</span><span class=\"token function\">ofVbo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbUsingVerts <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tbUsingTexCoords <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tbUsingColors <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tbUsingNormals <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tbUsingIndices <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\ttotalVerts <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\ttotalIndices <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\tvaoChanged \t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tvaoID\t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\tpositionAttribute<span class=\"token punctuation\">.</span>location <span class=\"token operator\">=</span> ofShader<span class=\"token operator\">::</span>POSITION_ATTRIBUTE<span class=\"token punctuation\">;</span>\n\tcolorAttribute<span class=\"token punctuation\">.</span>location <span class=\"token operator\">=</span> ofShader<span class=\"token operator\">::</span>COLOR_ATTRIBUTE<span class=\"token punctuation\">;</span>\n\ttexCoordAttribute<span class=\"token punctuation\">.</span>location <span class=\"token operator\">=</span> ofShader<span class=\"token operator\">::</span>TEXCOORD_ATTRIBUTE<span class=\"token punctuation\">;</span>\n\tnormalAttribute<span class=\"token punctuation\">.</span>location <span class=\"token operator\">=</span> ofShader<span class=\"token operator\">::</span>NORMAL_ATTRIBUTE<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofVbo<span class=\"token operator\">::</span><span class=\"token function\">ofVbo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVbo <span class=\"token operator\">&amp;</span> mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbUsingVerts <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>bUsingVerts<span class=\"token punctuation\">;</span>\n\tbUsingTexCoords <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>bUsingTexCoords<span class=\"token punctuation\">;</span>\n\tbUsingColors <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>bUsingColors<span class=\"token punctuation\">;</span>\n\tbUsingNormals <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>bUsingNormals<span class=\"token punctuation\">;</span>\n\tbUsingIndices <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>bUsingIndices<span class=\"token punctuation\">;</span>\n\n\tpositionAttribute <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>positionAttribute<span class=\"token punctuation\">;</span>\n\tcolorAttribute <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>colorAttribute<span class=\"token punctuation\">;</span>\n\ttexCoordAttribute <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>texCoordAttribute<span class=\"token punctuation\">;</span>\n\tnormalAttribute <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>normalAttribute<span class=\"token punctuation\">;</span>\n\n\tcustomAttributes <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>customAttributes<span class=\"token punctuation\">;</span>\n\n\ttotalVerts <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>totalVerts<span class=\"token punctuation\">;</span>\n\ttotalIndices <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>totalIndices<span class=\"token punctuation\">;</span>\n\tindexAttribute <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>indexAttribute<span class=\"token punctuation\">;</span>\n\n\tvaoChanged <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>vaoChanged<span class=\"token punctuation\">;</span>\n\tvaoID <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>vaoID<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">retainVAO</span><span class=\"token punctuation\">(</span>vaoID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nofVbo <span class=\"token operator\">&amp;</span> ofVbo<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVbo<span class=\"token operator\">&amp;</span> mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>mom<span class=\"token operator\">==</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbUsingVerts <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>bUsingVerts<span class=\"token punctuation\">;</span>\n\tbUsingTexCoords <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>bUsingTexCoords<span class=\"token punctuation\">;</span>\n\tbUsingColors <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>bUsingColors<span class=\"token punctuation\">;</span>\n\tbUsingNormals <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>bUsingNormals<span class=\"token punctuation\">;</span>\n\tbUsingIndices <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>bUsingIndices<span class=\"token punctuation\">;</span>\n\n\tpositionAttribute <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>positionAttribute<span class=\"token punctuation\">;</span>\n\tcolorAttribute <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>colorAttribute<span class=\"token punctuation\">;</span>\n\ttexCoordAttribute <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>texCoordAttribute<span class=\"token punctuation\">;</span>\n\tnormalAttribute <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>normalAttribute<span class=\"token punctuation\">;</span>\n\n\tcustomAttributes <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>customAttributes<span class=\"token punctuation\">;</span>\n\n\ttotalVerts <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>totalVerts<span class=\"token punctuation\">;</span>\n\ttotalIndices <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>totalIndices<span class=\"token punctuation\">;</span>\n\tindexAttribute <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>indexAttribute<span class=\"token punctuation\">;</span>\n\n\tvaoChanged <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>vaoChanged<span class=\"token punctuation\">;</span>\n\tvaoID <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>vaoID<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">retainVAO</span><span class=\"token punctuation\">(</span>vaoID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\nofVbo<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofVbo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">setMesh</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofMesh <span class=\"token operator\">&amp;</span> mesh<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> usage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setMesh</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">,</span>usage<span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">hasColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">hasTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">hasNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">setMesh</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofMesh <span class=\"token operator\">&amp;</span> mesh<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> usage<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> useColors<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> useTextures<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> useNormals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofVbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setMesh(): ignoring mesh with no vertices\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">setVertexData</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVerticesPointer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>usage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">hasColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> useColors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setColorData</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getColorsPointer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>usage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">enableColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">disableColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">hasNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> useNormals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setNormalData</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNormalsPointer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>usage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">enableNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">disableNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">hasTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> useTextures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setTexCoordData</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getTexCoordsPointer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>usage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">enableTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">disableTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">hasIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setIndexData</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getIndexPointer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> usage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">enableIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">disableIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">setVertexData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">*</span> verts<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> usage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setVertexData</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>verts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>total<span class=\"token punctuation\">,</span>usage<span class=\"token punctuation\">,</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span>vec3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">setVertexData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVec3f <span class=\"token operator\">*</span> verts<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> usage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setVertexData</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>verts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>total<span class=\"token punctuation\">,</span>usage<span class=\"token punctuation\">,</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span>vec3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">setVertexData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">*</span> verts<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> usage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setVertexData</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>verts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>total<span class=\"token punctuation\">,</span>usage<span class=\"token punctuation\">,</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span>vec2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">setVertexData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVec2f <span class=\"token operator\">*</span> verts<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> usage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setVertexData</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>verts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>total<span class=\"token punctuation\">,</span>usage<span class=\"token punctuation\">,</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span>vec2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">setVertexData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span> vert0x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> numCoords<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> usage<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> stride<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tpositionAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span>vert0x<span class=\"token punctuation\">,</span> numCoords<span class=\"token punctuation\">,</span> total<span class=\"token punctuation\">,</span> usage<span class=\"token punctuation\">,</span> stride<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbUsingVerts <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\ttotalVerts <span class=\"token operator\">=</span> total<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">setColorData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFloatColor <span class=\"token operator\">*</span> colors<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> usage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setColorData</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>colors<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">,</span>total<span class=\"token punctuation\">,</span>usage<span class=\"token punctuation\">,</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ofFloatColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">setColorData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span> color0r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> usage<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> stride<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tcolorAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span>color0r<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> total<span class=\"token punctuation\">,</span> usage<span class=\"token punctuation\">,</span> stride<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">enableColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">setNormalData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">*</span> normals<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> usage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setNormalData</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>normals<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>total<span class=\"token punctuation\">,</span>usage<span class=\"token punctuation\">,</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span>vec3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">setNormalData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVec3f <span class=\"token operator\">*</span> normals<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> usage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setNormalData</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>normals<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>total<span class=\"token punctuation\">,</span>usage<span class=\"token punctuation\">,</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span>vec3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">setNormalData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span> normal0x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> usage<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> stride<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tnormalAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span>normal0x<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> total<span class=\"token punctuation\">,</span> usage<span class=\"token punctuation\">,</span> stride<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">enableNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">setTexCoordData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">*</span> texCoords<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> usage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setTexCoordData</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>texCoords<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>total<span class=\"token punctuation\">,</span> usage<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span>vec2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">setTexCoordData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVec2f <span class=\"token operator\">*</span> texCoords<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> usage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setTexCoordData</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>texCoords<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>total<span class=\"token punctuation\">,</span> usage<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span>vec2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">setTexCoordData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span> texCoord0x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> usage<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> stride<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\ttexCoordAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span>texCoord0x<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> total<span class=\"token punctuation\">,</span> usage<span class=\"token punctuation\">,</span> stride<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">enableTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">setIndexData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofIndexType <span class=\"token operator\">*</span> indices<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> usage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>indexAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tindexAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">enableIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\ttotalIndices <span class=\"token operator\">=</span> total<span class=\"token punctuation\">;</span>\n\tindexAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ofIndexType<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> total<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>indices<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> usage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\nofVbo<span class=\"token operator\">::</span>VertexAttribute <span class=\"token operator\">&amp;</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">getOrCreateAttr</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> location<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tVertexAttribute <span class=\"token operator\">*</span> attr <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">case</span> ofShader<span class=\"token operator\">::</span>POSITION_ATTRIBUTE<span class=\"token operator\">:</span>\n\t\t\t\tattr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>positionAttribute<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> ofShader<span class=\"token operator\">::</span>COLOR_ATTRIBUTE<span class=\"token operator\">:</span>\n\t\t\t\tattr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>colorAttribute<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> ofShader<span class=\"token operator\">::</span>NORMAL_ATTRIBUTE<span class=\"token operator\">:</span>\n\t\t\t\tattr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>normalAttribute<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> ofShader<span class=\"token operator\">::</span>TEXCOORD_ATTRIBUTE<span class=\"token operator\">:</span>\n\t\t\t\tattr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>texCoordAttribute<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t\tcustomAttributes<span class=\"token punctuation\">[</span>location<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>location <span class=\"token operator\">=</span> location<span class=\"token punctuation\">;</span>\n\t\t\t\tattr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>customAttributes<span class=\"token punctuation\">[</span>location<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\tvaoChanged <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tcustomAttributes<span class=\"token punctuation\">[</span>location<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>location <span class=\"token operator\">=</span> location<span class=\"token punctuation\">;</span>\n\t\tattr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>customAttributes<span class=\"token punctuation\">[</span>location<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\tvaoChanged <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">*</span>attr<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">setAttributeData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> location<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span> attrib0x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> numCoords<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> usage<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> stride<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> location<span class=\"token operator\">==</span>ofShader<span class=\"token operator\">::</span>POSITION_ATTRIBUTE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\ttotalVerts <span class=\"token operator\">=</span> total<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">bool</span> normalize <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tvaoChanged <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\tbUsingVerts <span class=\"token operator\">|</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>location <span class=\"token operator\">==</span> ofShader<span class=\"token operator\">::</span>POSITION_ATTRIBUTE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tbUsingColors <span class=\"token operator\">|</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>location <span class=\"token operator\">==</span> ofShader<span class=\"token operator\">::</span>COLOR_ATTRIBUTE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tbUsingNormals <span class=\"token operator\">|</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>location <span class=\"token operator\">==</span> ofShader<span class=\"token operator\">::</span>NORMAL_ATTRIBUTE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tbUsingTexCoords <span class=\"token operator\">|</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>location <span class=\"token operator\">==</span> ofShader<span class=\"token operator\">::</span>TEXCOORD_ATTRIBUTE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">getOrCreateAttr</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span>attrib0x<span class=\"token punctuation\">,</span>numCoords<span class=\"token punctuation\">,</span>total<span class=\"token punctuation\">,</span>usage<span class=\"token punctuation\">,</span>stride<span class=\"token punctuation\">,</span>normalize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">setAttributeDivisor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> location<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> divisor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">getOrCreateAttr</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>divisor <span class=\"token operator\">=</span> divisor<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">updateMesh</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofMesh <span class=\"token operator\">&amp;</span> mesh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">updateVertexData</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVerticesPointer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">updateColorData</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getColorsPointer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">updateNormalData</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNormalsPointer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">updateTexCoordData</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getTexCoordsPointer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">updateVertexData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">*</span> verts<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">updateVertexData</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>verts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">updateVertexData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVec3f <span class=\"token operator\">*</span> verts<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">updateVertexData</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>verts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">updateVertexData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">*</span> verts<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">updateVertexData</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>verts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">updateVertexData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVec2f <span class=\"token operator\">*</span> verts<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">updateVertexData</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>verts<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">updateVertexData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span> vert0x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tpositionAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">updateData</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> total <span class=\"token operator\">*</span> positionAttribute<span class=\"token punctuation\">.</span>stride<span class=\"token punctuation\">,</span> vert0x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">updateColorData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFloatColor <span class=\"token operator\">*</span> colors<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">updateColorData</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>colors<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">,</span>total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">updateColorData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span> color0r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tcolorAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">updateData</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> total <span class=\"token operator\">*</span> colorAttribute<span class=\"token punctuation\">.</span>stride<span class=\"token punctuation\">,</span> color0r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">updateNormalData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">*</span> normals<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">updateNormalData</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>normals<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">updateNormalData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVec3f <span class=\"token operator\">*</span> normals<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">updateNormalData</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>normals<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">updateNormalData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span> normal0x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tnormalAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">updateData</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> total <span class=\"token operator\">*</span> normalAttribute<span class=\"token punctuation\">.</span>stride<span class=\"token punctuation\">,</span> normal0x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">updateTexCoordData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">*</span> texCoords<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">updateTexCoordData</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>texCoords<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">updateTexCoordData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVec2f <span class=\"token operator\">*</span> texCoords<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">updateTexCoordData</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>texCoords<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">updateTexCoordData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span> texCoord0x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\ttexCoordAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">updateData</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> total <span class=\"token operator\">*</span> texCoordAttribute<span class=\"token punctuation\">.</span>stride<span class=\"token punctuation\">,</span> texCoord0x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">updateIndexData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofIndexType <span class=\"token operator\">*</span> indices<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>indexAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tindexAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">updateData</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> total<span class=\"token operator\">*</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ofIndexType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> indices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">updateAttributeData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> location<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span> attr0x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tVertexAttribute <span class=\"token operator\">*</span> attr <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">case</span> ofShader<span class=\"token operator\">::</span>POSITION_ATTRIBUTE<span class=\"token operator\">:</span>\n\t\t\t\tattr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>positionAttribute<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> ofShader<span class=\"token operator\">::</span>COLOR_ATTRIBUTE<span class=\"token operator\">:</span>\n\t\t\t\tattr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>colorAttribute<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> ofShader<span class=\"token operator\">::</span>NORMAL_ATTRIBUTE<span class=\"token operator\">:</span>\n\t\t\t\tattr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>normalAttribute<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> ofShader<span class=\"token operator\">::</span>TEXCOORD_ATTRIBUTE<span class=\"token operator\">:</span>\n\t\t\t\tattr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>texCoordAttribute<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>customAttributes<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span>customAttributes<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t\tattr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>customAttributes<span class=\"token punctuation\">[</span>location<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>customAttributes<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span>customAttributes<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tattr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>customAttributes<span class=\"token punctuation\">[</span>location<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>attr <span class=\"token operator\">!=</span><span class=\"token keyword\">nullptr</span> <span class=\"token operator\">&amp;&amp;</span> attr<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tattr<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">updateData</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> total<span class=\"token operator\">*</span>attr<span class=\"token operator\">-</span><span class=\"token operator\">></span>stride<span class=\"token punctuation\">,</span> attr0x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">enableColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bUsingColors <span class=\"token operator\">&amp;&amp;</span> colorAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tbUsingColors<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\tvaoChanged <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">enableNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bUsingNormals <span class=\"token operator\">&amp;&amp;</span> normalAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tbUsingNormals<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\tvaoChanged <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">enableTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bUsingTexCoords <span class=\"token operator\">&amp;&amp;</span> texCoordAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tbUsingTexCoords <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\tvaoChanged <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">enableIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>indexAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>bUsingIndices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tbUsingIndices<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\tvaoChanged <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">disableColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bUsingColors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tbUsingColors<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\tvaoChanged <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">disableNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bUsingNormals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tbUsingNormals<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\tvaoChanged <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">disableTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bUsingTexCoords<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tbUsingTexCoords<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\tvaoChanged <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">disableIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bUsingIndices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tbUsingIndices<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\tvaoChanged <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">getIsAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> positionAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">getUsingVerts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span>  <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> bUsingVerts<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">getUsingColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> bUsingColors<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">getUsingNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> bUsingNormals<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">getUsingTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> bUsingTexCoords<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">getUsingIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span>  bUsingIndices<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\nGLuint ofVbo<span class=\"token operator\">::</span><span class=\"token function\">getVaoId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> vaoID<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\nGLuint ofVbo<span class=\"token operator\">::</span><span class=\"token function\">getVertId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> positionAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\nGLuint ofVbo<span class=\"token operator\">::</span><span class=\"token function\">getColorId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> colorAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\nGLuint ofVbo<span class=\"token operator\">::</span><span class=\"token function\">getNormalId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> normalAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\nGLuint ofVbo<span class=\"token operator\">::</span><span class=\"token function\">getTexCoordId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> texCoordAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\nGLuint ofVbo<span class=\"token operator\">::</span><span class=\"token function\">getIndexId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> indexAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\nGLuint ofVbo<span class=\"token operator\">::</span><span class=\"token function\">getAttributeId</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> location<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"No attribute id found for attribute pos: \"</span> <span class=\"token operator\">&lt;&lt;</span> location<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofVbo<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getOrCreateAttr</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">setVertexBuffer</span><span class=\"token punctuation\">(</span>ofBufferObject <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> numCoords<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> stride<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tpositionAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">setBuffer</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">,</span> numCoords<span class=\"token punctuation\">,</span> stride<span class=\"token punctuation\">,</span> offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbUsingVerts <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\tvaoChanged <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// Calculate the total number of vertices based on what we know:</span>\n\t<span class=\"token keyword\">int</span> tmpStride <span class=\"token operator\">=</span> stride<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tmpStride <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// if stride is not given through argument, we need to calculate it based on</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// on the data size and the number of coordinates.</span>\n\t\ttmpStride <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>numCoords <span class=\"token operator\">*</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tmpStride <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Setting buffer with 0 vertices.\"</span><span class=\"token punctuation\">;</span>\n\t\t\ttotalVerts <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\ttotalVerts <span class=\"token operator\">=</span> buffer<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> tmpStride<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">setColorBuffer</span><span class=\"token punctuation\">(</span>ofBufferObject <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> stride<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcolorAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">setBuffer</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> stride<span class=\"token punctuation\">,</span> offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">enableColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">setNormalBuffer</span><span class=\"token punctuation\">(</span>ofBufferObject <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> stride<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tnormalAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">setBuffer</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> stride<span class=\"token punctuation\">,</span> offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">enableNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">setTexCoordBuffer</span><span class=\"token punctuation\">(</span>ofBufferObject <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> stride<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\ttexCoordAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">setBuffer</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> stride<span class=\"token punctuation\">,</span> offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">enableTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">setIndexBuffer</span><span class=\"token punctuation\">(</span>ofBufferObject <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tindexAttribute<span class=\"token punctuation\">.</span>buffer <span class=\"token operator\">=</span> buffer<span class=\"token punctuation\">;</span>\n\tvaoChanged <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">enableIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">setAttributeBuffer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> location<span class=\"token punctuation\">,</span> ofBufferObject <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> numCoords<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> stride<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tvaoChanged <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\tbUsingVerts <span class=\"token operator\">|</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>location <span class=\"token operator\">==</span> ofShader<span class=\"token operator\">::</span>POSITION_ATTRIBUTE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tbUsingColors <span class=\"token operator\">|</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>location <span class=\"token operator\">==</span> ofShader<span class=\"token operator\">::</span>COLOR_ATTRIBUTE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tbUsingNormals <span class=\"token operator\">|</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>location <span class=\"token operator\">==</span> ofShader<span class=\"token operator\">::</span>NORMAL_ATTRIBUTE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tbUsingTexCoords <span class=\"token operator\">|</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>location <span class=\"token operator\">==</span> ofShader<span class=\"token operator\">::</span>TEXCOORD_ATTRIBUTE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">getOrCreateAttr</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setBuffer</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">,</span> numCoords<span class=\"token punctuation\">,</span> stride<span class=\"token punctuation\">,</span> offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\nofBufferObject <span class=\"token operator\">&amp;</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">getVertexBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> positionAttribute<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\nofBufferObject <span class=\"token operator\">&amp;</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">getColorBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> colorAttribute<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\nofBufferObject <span class=\"token operator\">&amp;</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">getNormalBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> normalAttribute<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\nofBufferObject <span class=\"token operator\">&amp;</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">getTexCoordBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> texCoordAttribute<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\nofBufferObject <span class=\"token operator\">&amp;</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">getIndexBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> indexAttribute<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\nofBufferObject <span class=\"token operator\">&amp;</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">getAttributeBuffer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> attributePos_<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> customAttributes<span class=\"token punctuation\">.</span><span class=\"token function\">at</span><span class=\"token punctuation\">(</span>attributePos_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">const</span> ofBufferObject <span class=\"token operator\">&amp;</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">getVertexBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> positionAttribute<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">const</span> ofBufferObject <span class=\"token operator\">&amp;</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">getColorBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> colorAttribute<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">const</span> ofBufferObject <span class=\"token operator\">&amp;</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">getNormalBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> normalAttribute<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">const</span> ofBufferObject <span class=\"token operator\">&amp;</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">getTexCoordBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> texCoordAttribute<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">const</span> ofBufferObject <span class=\"token operator\">&amp;</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">getAttributeBuffer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> attributePos_<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> customAttributes<span class=\"token punctuation\">.</span><span class=\"token function\">at</span><span class=\"token punctuation\">(</span>attributePos_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">const</span> ofBufferObject <span class=\"token operator\">&amp;</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">getIndexBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> indexAttribute<span class=\"token punctuation\">.</span>buffer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">bool</span> programmable <span class=\"token operator\">=</span> <span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>programmable <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>vaoSupported <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>vaoChecked<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vaoID<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_OPENGLES) &amp;&amp; !defined(TARGET_EMSCRIPTEN)</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>glGenVertexArrays<span class=\"token operator\">==</span><span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>vaoChecked<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tglGenVertexArrays <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>glGenVertexArraysType<span class=\"token punctuation\">)</span><span class=\"token function\">dlsym</span><span class=\"token punctuation\">(</span>RTLD_DEFAULT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"glGenVertexArrays\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tglDeleteVertexArrays <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>glDeleteVertexArraysType<span class=\"token punctuation\">)</span><span class=\"token function\">dlsym</span><span class=\"token punctuation\">(</span>RTLD_DEFAULT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"glDeleteVertexArrays\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tglBindVertexArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>glBindVertexArrayType<span class=\"token punctuation\">)</span><span class=\"token function\">dlsym</span><span class=\"token punctuation\">(</span>RTLD_DEFAULT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"glBindVertexArray\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tvaoChecked <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t\tvaoSupported <span class=\"token operator\">=</span> glGenVertexArrays<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span>  defined(TARGET_EMSCRIPTEN)</span>\n\t\t\t\tvaoChecked <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t\tvaoSupported <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t\t\tvaoChecked <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t\tvaoSupported <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vaoSupported<span class=\"token punctuation\">)</span> <span class=\"token function\">glGenVertexArrays</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofVbo<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>vaoID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vaoID<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">retainVAO</span><span class=\"token punctuation\">(</span>vaoID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tvaoChanged <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vaoSupported<span class=\"token punctuation\">)</span> <span class=\"token function\">glBindVertexArray</span><span class=\"token punctuation\">(</span>vaoID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tvaoSupported <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vaoChanged <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>vaoSupported<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bUsingVerts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>programmable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tpositionAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_PROGRAMMABLE_GL</span>\n\t\t\t\t<span class=\"token function\">glEnableClientState</span><span class=\"token punctuation\">(</span>GL_VERTEX_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">glVertexPointer</span><span class=\"token punctuation\">(</span>positionAttribute<span class=\"token punctuation\">.</span>numCoords<span class=\"token punctuation\">,</span> GL_FLOAT<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\tpositionAttribute<span class=\"token punctuation\">.</span>stride<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t<span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>positionAttribute<span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\tpositionAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>programmable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tpositionAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bUsingColors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>programmable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tcolorAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_PROGRAMMABLE_GL</span>\n\t\t\t\t<span class=\"token function\">glEnableClientState</span><span class=\"token punctuation\">(</span>GL_COLOR_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">glColorPointer</span><span class=\"token punctuation\">(</span>colorAttribute<span class=\"token punctuation\">.</span>numCoords<span class=\"token punctuation\">,</span> GL_FLOAT<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\tcolorAttribute<span class=\"token punctuation\">.</span>stride<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t   <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>colorAttribute<span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\tcolorAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>programmable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tcolorAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bUsingNormals<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>programmable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tnormalAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_PROGRAMMABLE_GL</span>\n\t\t\t\t<span class=\"token function\">glEnableClientState</span><span class=\"token punctuation\">(</span>GL_NORMAL_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">glNormalPointer</span><span class=\"token punctuation\">(</span>GL_FLOAT<span class=\"token punctuation\">,</span> normalAttribute<span class=\"token punctuation\">.</span>stride<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t<span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>normalAttribute<span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\tnormalAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>programmable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tnormalAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bUsingTexCoords<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>programmable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\ttexCoordAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_PROGRAMMABLE_GL</span>\n\t\t\t\t<span class=\"token function\">glEnableClientState</span><span class=\"token punctuation\">(</span>GL_TEXTURE_COORD_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">glTexCoordPointer</span><span class=\"token punctuation\">(</span>texCoordAttribute<span class=\"token punctuation\">.</span>numCoords<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t  GL_FLOAT<span class=\"token punctuation\">,</span> texCoordAttribute<span class=\"token punctuation\">.</span>stride<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t  <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>texCoordAttribute<span class=\"token punctuation\">.</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\ttexCoordAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>programmable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\ttexCoordAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bUsingIndices<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            indexAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n\t\tmap<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>VertexAttribute<span class=\"token operator\">></span><span class=\"token operator\">::</span>const_iterator it<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>it <span class=\"token operator\">=</span> customAttributes<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>it<span class=\"token operator\">!=</span>customAttributes<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>it<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tit<span class=\"token operator\">-</span><span class=\"token operator\">></span>second<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\tvaoChanged<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vaoSupported<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glBindVertexArray</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">glBindBuffer</span><span class=\"token punctuation\">(</span>GL_ARRAY_BUFFER<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glBindBuffer</span><span class=\"token punctuation\">(</span>GL_ELEMENT_ARRAY_BUFFER<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_PROGRAMMABLE_GL</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bUsingColors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glDisableClientState</span><span class=\"token punctuation\">(</span>GL_COLOR_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bUsingNormals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glDisableClientState</span><span class=\"token punctuation\">(</span>GL_NORMAL_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bUsingTexCoords<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glDisableClientState</span><span class=\"token punctuation\">(</span>GL_TEXTURE_COORD_ARRAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> drawMode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> first<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofGetGLRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>drawMode<span class=\"token punctuation\">,</span>first<span class=\"token punctuation\">,</span>total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">drawElements</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> drawMode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> amt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> offsetelements<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofGetGLRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">drawElements</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>drawMode<span class=\"token punctuation\">,</span>amt<span class=\"token punctuation\">,</span>offsetelements<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">drawInstanced</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> drawMode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> first<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> primCount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofGetGLRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">drawInstanced</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>drawMode<span class=\"token punctuation\">,</span>first<span class=\"token punctuation\">,</span>total<span class=\"token punctuation\">,</span>primCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">drawElementsInstanced</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> drawMode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> amt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> primCount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofGetGLRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">drawElementsInstanced</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>drawMode<span class=\"token punctuation\">,</span>amt<span class=\"token punctuation\">,</span>primCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// clear all fixed function attributes</span>\n\n\t<span class=\"token function\">clearVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">clearColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">clearNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">clearTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// we're not using any of these.</span>\n\tbUsingVerts <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tbUsingColors <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tbUsingNormals <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tbUsingTexCoords <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// clear all custom attributes.</span>\n\tcustomAttributes<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">clearIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vaoID<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">releaseVAO</span><span class=\"token punctuation\">(</span>vaoID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tvaoID<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">clearVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tpositionAttribute <span class=\"token operator\">=</span> <span class=\"token function\">VertexAttribute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tpositionAttribute<span class=\"token punctuation\">.</span>location <span class=\"token operator\">=</span> ofShader<span class=\"token operator\">::</span>POSITION_ATTRIBUTE<span class=\"token punctuation\">;</span>\n\tbUsingVerts <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\ttotalVerts <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">clearNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tnormalAttribute <span class=\"token operator\">=</span> <span class=\"token function\">VertexAttribute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tnormalAttribute<span class=\"token punctuation\">.</span>location <span class=\"token operator\">=</span> ofShader<span class=\"token operator\">::</span>NORMAL_ATTRIBUTE<span class=\"token punctuation\">;</span>\n\tbUsingNormals <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">clearColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcolorAttribute <span class=\"token operator\">=</span> <span class=\"token function\">VertexAttribute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcolorAttribute<span class=\"token punctuation\">.</span>location <span class=\"token operator\">=</span> ofShader<span class=\"token operator\">::</span>COLOR_ATTRIBUTE<span class=\"token punctuation\">;</span>\n\tbUsingColors <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">clearTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\ttexCoordAttribute <span class=\"token operator\">=</span> <span class=\"token function\">VertexAttribute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ttexCoordAttribute<span class=\"token punctuation\">.</span>location <span class=\"token operator\">=</span> ofShader<span class=\"token operator\">::</span>TEXCOORD_ATTRIBUTE<span class=\"token punctuation\">;</span>\n\tbUsingTexCoords <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">clearIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>indexAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tindexAttribute <span class=\"token operator\">=</span> <span class=\"token function\">IndexAttribute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tbUsingIndices <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\ttotalIndices <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n\n<span class=\"token keyword\">void</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">clearAttribute</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> attributePos_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span>attributePos_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>attributePos_<span class=\"token operator\">></span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tcustomAttributes<span class=\"token punctuation\">.</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span>attributePos_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>attributePos_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">case</span> ofShader<span class=\"token operator\">::</span>POSITION_ATTRIBUTE<span class=\"token operator\">:</span>\n\t\t\t\t\t<span class=\"token function\">clearVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">case</span> ofShader<span class=\"token operator\">::</span>COLOR_ATTRIBUTE<span class=\"token operator\">:</span>\n\t\t\t\t\t<span class=\"token function\">clearColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">case</span> ofShader<span class=\"token operator\">::</span>NORMAL_ATTRIBUTE<span class=\"token operator\">:</span>\n\t\t\t\t\t<span class=\"token function\">clearNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">case</span> ofShader<span class=\"token operator\">::</span>TEXCOORD_ATTRIBUTE<span class=\"token operator\">:</span>\n\t\t\t\t\t<span class=\"token function\">clearTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tcustomAttributes<span class=\"token punctuation\">.</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span>attributePos_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">getNumIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bUsingIndices<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> totalIndices<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">getNumVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> totalVerts<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofVbo<span class=\"token operator\">::</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> attributePos<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>attributePos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> ofShader<span class=\"token operator\">::</span>POSITION_ATTRIBUTE<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> positionAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> ofShader<span class=\"token operator\">::</span>COLOR_ATTRIBUTE<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> colorAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> ofShader<span class=\"token operator\">::</span>NORMAL_ATTRIBUTE<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> normalAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> ofShader<span class=\"token operator\">::</span>TEXCOORD_ATTRIBUTE<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> texCoordAttribute<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>customAttributes<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>attributePos<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> customAttributes<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n","type":"source","static":true}}],"fetch":[]}