{"data":[{"page":{"entry":{"name":"ofQuaternion.h","filename":"ofQuaternion.h","absolute":"/Users/gilbertsinnott/Code/openFrameworks/libs/openFrameworks/math/ofQuaternion.h","path":"/openframeworks/math/ofQuaternion_h","route":"/openframeworks/math/ofQuaternion.h","dir":"../libs/openFrameworks/math","ext":"h","type":"source","id":293,"parent":284,"breadcrumbs":[284,195],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">/*\n *  ofQuaternion.h\n *  \n *  Created by Aaron Meyers on 6/22/09 -- modified by Arturo Castro, Zach Lieberman, Memo Akten\n *  based on code from OSG - \n *  see OSG license for more details: \n *  http://www.openscenegraph.org/projects/osg/wiki/Legal\n * \n */</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofVec3f.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofVec4f.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cmath></span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> (_MSC_VER)       </span>\n<span class=\"token comment\" spellcheck=\"true\">// make microsoft visual studio complain less about double / float conversion.</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> warning(disable : 4244)</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofMatrix4x4</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofQuaternion</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n    <span class=\"token comment\" spellcheck=\"true\">//    float _v[4];</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\cond INTERNAL</span>\n    ofVec4f _v<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\endcond</span>\n    \n\n    \n    <span class=\"token comment\" spellcheck=\"true\">//---------------------</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\name Constructor</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\{</span>\n\n    <span class=\"token keyword\">inline</span> <span class=\"token function\">ofQuaternion</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">inline</span> <span class=\"token function\">ofQuaternion</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">inline</span> <span class=\"token function\">ofQuaternion</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVec4f<span class=\"token operator\">&amp;</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">inline</span> <span class=\"token function\">ofQuaternion</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> angle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> axis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">// rotation order is axis3,axis2,axis1</span>\n    <span class=\"token keyword\">inline</span> <span class=\"token function\">ofQuaternion</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> angle1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> axis1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> angle2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> axis2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> angle3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> axis3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n\t<span class=\"token function\">ofQuaternion</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>quat <span class=\"token operator\">&amp;</span> q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">operator</span> glm<span class=\"token operator\">::</span><span class=\"token function\">quat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\}</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">//---------------------</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\name Setters</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\{</span>\n    \n    <span class=\"token keyword\">inline</span> <span class=\"token keyword\">void</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">inline</span> <span class=\"token keyword\">void</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVec4f<span class=\"token operator\">&amp;</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">void</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofMatrix4x4<span class=\"token operator\">&amp;</span> matrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\}</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">//---------------------</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\name Getters</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\{</span>\n    \n\n    <span class=\"token keyword\">inline</span> <span class=\"token keyword\">float</span><span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">inline</span> <span class=\"token keyword\">float</span> <span class=\"token keyword\">operator</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">void</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>ofMatrix4x4<span class=\"token operator\">&amp;</span> matrix<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    \n\n    <span class=\"token keyword\">inline</span> <span class=\"token keyword\">float</span><span class=\"token operator\">&amp;</span> <span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">inline</span> <span class=\"token keyword\">float</span><span class=\"token operator\">&amp;</span> <span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">inline</span> <span class=\"token keyword\">float</span><span class=\"token operator\">&amp;</span> <span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">inline</span> <span class=\"token keyword\">float</span><span class=\"token operator\">&amp;</span> <span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">inline</span> <span class=\"token keyword\">float</span> <span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">inline</span> <span class=\"token keyword\">float</span> <span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">inline</span> <span class=\"token keyword\">float</span> <span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">inline</span> <span class=\"token keyword\">float</span> <span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">inline</span> ofVec4f <span class=\"token function\">asVec4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">inline</span> ofVec3f <span class=\"token function\">asVec3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    \n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\}</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">//---------------------</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\name Functions</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\{</span>\n    \n  \n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief return true if the Quat represents a zero rotation, </span>\n    <span class=\"token comment\" spellcheck=\"true\">/// and therefore can be ignored in computations.</span>\n    <span class=\"token keyword\">inline</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">zeroRotation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    \n    \n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Length of the quaternion = sqrt(vec . vec)</span>\n    <span class=\"token keyword\">inline</span> <span class=\"token keyword\">float</span> <span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Length of the quaternion = vec . vec</span>\n    <span class=\"token keyword\">inline</span> <span class=\"token keyword\">float</span> <span class=\"token function\">length2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Conjugate</span>\n    <span class=\"token keyword\">inline</span> ofQuaternion <span class=\"token function\">conj</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Multiplicative inverse method</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">///     q^(-1) = q^*/(q.q^*)</span>\n    <span class=\"token keyword\">inline</span> <span class=\"token keyword\">const</span> ofQuaternion <span class=\"token function\">inverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    \n    \n    \n    <span class=\"token comment\" spellcheck=\"true\">/// \\briefSet a quaternion which will perform a rotation of an</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// angle around the axis given by the vector(x,y,z).</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// Define Spherical Linear interpolation method also</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">makeRotate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> angle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">makeRotate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> angle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> vec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">makeRotate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> angle1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> axis1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> angle2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> axis2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> angle3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> axis3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    \n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Make a rotation Quat which will rotate vec1 to vec2.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// Generally take a dot product to get the angle between these</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// and then use a cross product to get the rotation axis</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// Watch out for the two special cases when the vectors</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// are co-incident or opposite in direction.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">makeRotate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> vec1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> vec2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">void</span> <span class=\"token function\">makeRotate_original</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> vec1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> vec2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Return the angle and vector components represented by the quaternion.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">getRotate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">&amp;</span>angle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span><span class=\"token operator\">&amp;</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span><span class=\"token operator\">&amp;</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span><span class=\"token operator\">&amp;</span> z<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">getRotate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token operator\">&amp;</span> angle<span class=\"token punctuation\">,</span> ofVec3f<span class=\"token operator\">&amp;</span> vec<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Calculate and return the rotation as euler angles</span>\n    ofVec3f <span class=\"token function\">getEuler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    \n    \n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Spherical Linear Interpolation.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// As t goes from 0 to 1, the Quat object goes from \"from\" to \"to\".</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">slerp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> t<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofQuaternion<span class=\"token operator\">&amp;</span> from<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofQuaternion<span class=\"token operator\">&amp;</span> to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">inline</span> <span class=\"token keyword\">void</span> <span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\}</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">//---------------------</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\name Operators</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\{</span>\n    \n\n    <span class=\"token comment\" spellcheck=\"true\">// Implemented in terms of Vec4s. Some Vec4 operators, e.g.</span>\n    <span class=\"token comment\" spellcheck=\"true\">// operator* are not appropriate for quaternions (as</span>\n    <span class=\"token comment\" spellcheck=\"true\">// mathematical objects) so they are implemented differently.</span>\n    <span class=\"token comment\" spellcheck=\"true\">// Also define methods for conjugate and the multiplicative inverse.</span>\n\n    <span class=\"token keyword\">inline</span> ofQuaternion<span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span> <span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofQuaternion<span class=\"token operator\">&amp;</span> q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">inline</span> <span class=\"token keyword\">bool</span> <span class=\"token keyword\">operator</span> <span class=\"token operator\">==</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofQuaternion<span class=\"token operator\">&amp;</span> q<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">inline</span> <span class=\"token keyword\">bool</span> <span class=\"token keyword\">operator</span> <span class=\"token operator\">!=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofQuaternion<span class=\"token operator\">&amp;</span> q<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">//    inline bool operator &lt;(const ofQuaternion&amp; q) const;  // why?</span>\n    \n\n    <span class=\"token keyword\">inline</span> <span class=\"token keyword\">const</span> ofQuaternion <span class=\"token keyword\">operator</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> rhs<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>                  <span class=\"token comment\" spellcheck=\"true\">///&lt; Multiply by scalar</span>\n    <span class=\"token keyword\">inline</span> <span class=\"token keyword\">const</span> ofQuaternion <span class=\"token keyword\">operator</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofQuaternion<span class=\"token operator\">&amp;</span> rhs<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\" spellcheck=\"true\">///&lt; Binary multiply</span>\n    <span class=\"token keyword\">inline</span> ofVec3f <span class=\"token keyword\">operator</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> v<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>                       <span class=\"token comment\" spellcheck=\"true\">///&lt; Rotate a vector by this quaternion.</span>\n    <span class=\"token keyword\">inline</span> ofQuaternion<span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span> <span class=\"token operator\">*</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> rhs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                            <span class=\"token comment\" spellcheck=\"true\">///&lt; Unary multiply by scalar</span>\n    <span class=\"token keyword\">inline</span> ofQuaternion<span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">*</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofQuaternion<span class=\"token operator\">&amp;</span> rhs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>               <span class=\"token comment\" spellcheck=\"true\">///&lt; Unary multiply</span>\n    <span class=\"token keyword\">inline</span> ofQuaternion <span class=\"token keyword\">operator</span> <span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> rhs<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>                        <span class=\"token comment\" spellcheck=\"true\">///&lt; Divide by scalar</span>\n    <span class=\"token keyword\">inline</span> <span class=\"token keyword\">const</span> ofQuaternion <span class=\"token keyword\">operator</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofQuaternion<span class=\"token operator\">&amp;</span> denom<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\" spellcheck=\"true\">///&lt; Binary divide</span>\n    <span class=\"token keyword\">inline</span> ofQuaternion<span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span> <span class=\"token operator\">/</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> rhs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                            <span class=\"token comment\" spellcheck=\"true\">///&lt; Unary divide by scalar</span>\n    <span class=\"token keyword\">inline</span> ofQuaternion<span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">/</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofQuaternion<span class=\"token operator\">&amp;</span> denom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>             <span class=\"token comment\" spellcheck=\"true\">///&lt; Unary divide</span>\n    <span class=\"token keyword\">inline</span> <span class=\"token keyword\">const</span> ofQuaternion <span class=\"token keyword\">operator</span> <span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofQuaternion<span class=\"token operator\">&amp;</span> rhs<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\" spellcheck=\"true\">///&lt; Binary addition</span>\n    <span class=\"token keyword\">inline</span> ofQuaternion<span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span> <span class=\"token operator\">+</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofQuaternion<span class=\"token operator\">&amp;</span> rhs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>              <span class=\"token comment\" spellcheck=\"true\">///&lt; Unary addition</span>\n    <span class=\"token keyword\">inline</span> ofQuaternion<span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span> <span class=\"token operator\">-</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofQuaternion<span class=\"token operator\">&amp;</span> rhs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>              <span class=\"token comment\" spellcheck=\"true\">///&lt; Unary subtraction</span>\n    <span class=\"token keyword\">inline</span> <span class=\"token keyword\">const</span> ofQuaternion <span class=\"token keyword\">operator</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofQuaternion<span class=\"token operator\">&amp;</span> rhs<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\" spellcheck=\"true\">///&lt; Binary subtraction</span>\n    <span class=\"token keyword\">inline</span> <span class=\"token keyword\">const</span> ofQuaternion <span class=\"token keyword\">operator</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>                           <span class=\"token comment\" spellcheck=\"true\">///&lt; returns the negative of the quaternion. calls operator -() on the Vec4</span>\n    \n    <span class=\"token keyword\">friend</span> std<span class=\"token operator\">::</span>ostream<span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>ostream<span class=\"token operator\">&amp;</span> os<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofQuaternion <span class=\"token operator\">&amp;</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">friend</span> std<span class=\"token operator\">::</span>istream<span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>istream<span class=\"token operator\">&amp;</span> is<span class=\"token punctuation\">,</span> ofQuaternion <span class=\"token operator\">&amp;</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">/// \\}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// ----------------------------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">// IMPLEMENTATION</span>\n<span class=\"token comment\" spellcheck=\"true\">// ----------------------------------------------------------------</span>\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofQuaternion<span class=\"token operator\">::</span><span class=\"token function\">ofQuaternion</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    _v<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofQuaternion<span class=\"token operator\">::</span><span class=\"token function\">ofQuaternion</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    _v<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofQuaternion<span class=\"token operator\">::</span><span class=\"token function\">ofQuaternion</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVec4f<span class=\"token operator\">&amp;</span> v<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    _v <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofQuaternion<span class=\"token operator\">::</span><span class=\"token function\">ofQuaternion</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> angle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> axis<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">makeRotate</span><span class=\"token punctuation\">(</span>angle<span class=\"token punctuation\">,</span> axis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofQuaternion<span class=\"token operator\">::</span><span class=\"token function\">ofQuaternion</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> angle1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> axis1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> angle2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> axis2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> angle3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> axis3<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">makeRotate</span><span class=\"token punctuation\">(</span>angle1<span class=\"token punctuation\">,</span> axis1<span class=\"token punctuation\">,</span> angle2<span class=\"token punctuation\">,</span> axis2<span class=\"token punctuation\">,</span> angle3<span class=\"token punctuation\">,</span> axis3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofQuaternion<span class=\"token operator\">&amp;</span> ofQuaternion<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofQuaternion<span class=\"token operator\">&amp;</span> q<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    _v <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofQuaternion<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token operator\">==</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofQuaternion<span class=\"token operator\">&amp;</span> q<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> _v <span class=\"token operator\">==</span> q<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofQuaternion<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token operator\">!=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofQuaternion<span class=\"token operator\">&amp;</span> q<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> _v <span class=\"token operator\">!=</span> q<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">//bool ofQuaternion::operator &lt;(const ofQuaternion&amp; q) const {</span>\n<span class=\"token comment\" spellcheck=\"true\">//    if(_v.x &lt; v._v.x) return true;</span>\n<span class=\"token comment\" spellcheck=\"true\">//    else if(_v.x > v._v.x) return false;</span>\n<span class=\"token comment\" spellcheck=\"true\">//    else if(_v.y &lt; v._v.y) return true;</span>\n<span class=\"token comment\" spellcheck=\"true\">//    else if(_v.y > v._v.y) return false;</span>\n<span class=\"token comment\" spellcheck=\"true\">//    else if(_v.z &lt; v._v.z) return true;</span>\n<span class=\"token comment\" spellcheck=\"true\">//    else if(_v.z > v._v.z) return false;</span>\n<span class=\"token comment\" spellcheck=\"true\">//    else return (_v.w &lt; v._v.w);</span>\n<span class=\"token comment\" spellcheck=\"true\">//}</span>\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofVec4f ofQuaternion<span class=\"token operator\">::</span><span class=\"token function\">asVec4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> _v<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofVec3f ofQuaternion<span class=\"token operator\">::</span><span class=\"token function\">asVec3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">ofVec3f</span><span class=\"token punctuation\">(</span>_v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofQuaternion<span class=\"token operator\">::</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    _v<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofQuaternion<span class=\"token operator\">::</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVec4f<span class=\"token operator\">&amp;</span> v<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    _v <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span><span class=\"token operator\">&amp;</span> ofQuaternion<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> _v<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span> ofQuaternion<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> _v<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span><span class=\"token operator\">&amp;</span> ofQuaternion<span class=\"token operator\">::</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> _v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span><span class=\"token operator\">&amp;</span> ofQuaternion<span class=\"token operator\">::</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> _v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span><span class=\"token operator\">&amp;</span> ofQuaternion<span class=\"token operator\">::</span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> _v<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span><span class=\"token operator\">&amp;</span> ofQuaternion<span class=\"token operator\">::</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> _v<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span> ofQuaternion<span class=\"token operator\">::</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> _v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span> ofQuaternion<span class=\"token operator\">::</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> _v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span> ofQuaternion<span class=\"token operator\">::</span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> _v<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span> ofQuaternion<span class=\"token operator\">::</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> _v<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofQuaternion<span class=\"token operator\">::</span><span class=\"token function\">zeroRotation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> _v<span class=\"token punctuation\">.</span>x <span class=\"token operator\">==</span> <span class=\"token number\">0.0</span> <span class=\"token operator\">&amp;&amp;</span> _v<span class=\"token punctuation\">.</span>y <span class=\"token operator\">==</span> <span class=\"token number\">0.0</span> <span class=\"token operator\">&amp;&amp;</span> _v<span class=\"token punctuation\">.</span>z <span class=\"token operator\">==</span> <span class=\"token number\">0.0</span> <span class=\"token operator\">&amp;&amp;</span> _v<span class=\"token punctuation\">.</span>w <span class=\"token operator\">==</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">const</span> ofQuaternion ofQuaternion<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> rhs<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">ofQuaternion</span><span class=\"token punctuation\">(</span>_v<span class=\"token punctuation\">.</span>x<span class=\"token operator\">*</span>rhs<span class=\"token punctuation\">,</span> _v<span class=\"token punctuation\">.</span>y<span class=\"token operator\">*</span>rhs<span class=\"token punctuation\">,</span> _v<span class=\"token punctuation\">.</span>z<span class=\"token operator\">*</span>rhs<span class=\"token punctuation\">,</span> _v<span class=\"token punctuation\">.</span>w<span class=\"token operator\">*</span>rhs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofQuaternion<span class=\"token operator\">&amp;</span> ofQuaternion<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token operator\">*</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> rhs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    _v<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span><span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">;</span>\n    _v<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span><span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">;</span>\n    _v<span class=\"token punctuation\">.</span>z <span class=\"token operator\">*</span><span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">;</span>\n    _v<span class=\"token punctuation\">.</span>w <span class=\"token operator\">*</span><span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// enable nesting</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">const</span> ofQuaternion ofQuaternion<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofQuaternion<span class=\"token operator\">&amp;</span> rhs<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">ofQuaternion</span><span class=\"token punctuation\">(</span>rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>w<span class=\"token operator\">*</span>_v<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>x<span class=\"token operator\">*</span>_v<span class=\"token punctuation\">.</span>w <span class=\"token operator\">+</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>y<span class=\"token operator\">*</span>_v<span class=\"token punctuation\">.</span>z <span class=\"token operator\">-</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>z<span class=\"token operator\">*</span>_v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>\n                        rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>w<span class=\"token operator\">*</span>_v<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>x<span class=\"token operator\">*</span>_v<span class=\"token punctuation\">.</span>z <span class=\"token operator\">+</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>y<span class=\"token operator\">*</span>_v<span class=\"token punctuation\">.</span>w <span class=\"token operator\">+</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>z<span class=\"token operator\">*</span>_v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>\n                        rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>w<span class=\"token operator\">*</span>_v<span class=\"token punctuation\">.</span>z <span class=\"token operator\">+</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>x<span class=\"token operator\">*</span>_v<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>y<span class=\"token operator\">*</span>_v<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>z<span class=\"token operator\">*</span>_v<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">,</span>\n                        rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>w<span class=\"token operator\">*</span>_v<span class=\"token punctuation\">.</span>w <span class=\"token operator\">-</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>x<span class=\"token operator\">*</span>_v<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>y<span class=\"token operator\">*</span>_v<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>z<span class=\"token operator\">*</span>_v<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofQuaternion<span class=\"token operator\">&amp;</span> ofQuaternion<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">*</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofQuaternion<span class=\"token operator\">&amp;</span> rhs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">float</span> x <span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>w <span class=\"token operator\">*</span> _v<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> _v<span class=\"token punctuation\">.</span>w <span class=\"token operator\">+</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> _v<span class=\"token punctuation\">.</span>z <span class=\"token operator\">-</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>z <span class=\"token operator\">*</span> _v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> y <span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>w <span class=\"token operator\">*</span> _v<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> _v<span class=\"token punctuation\">.</span>z <span class=\"token operator\">+</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> _v<span class=\"token punctuation\">.</span>w <span class=\"token operator\">+</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>z <span class=\"token operator\">*</span> _v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> z <span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>w <span class=\"token operator\">*</span> _v<span class=\"token punctuation\">.</span>z <span class=\"token operator\">+</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> _v<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> _v<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>z <span class=\"token operator\">*</span> _v<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">;</span>\n    _v<span class=\"token punctuation\">.</span>w <span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>w <span class=\"token operator\">*</span> _v<span class=\"token punctuation\">.</span>w <span class=\"token operator\">-</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> _v<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> _v<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>z <span class=\"token operator\">*</span> _v<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span>\n    \n    _v<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> z<span class=\"token punctuation\">;</span>\n    _v<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n    _v<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// enable nesting</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofQuaternion ofQuaternion<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> rhs<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">float</span> div <span class=\"token operator\">=</span> <span class=\"token number\">1.0f</span> <span class=\"token operator\">/</span> rhs<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">ofQuaternion</span><span class=\"token punctuation\">(</span>_v<span class=\"token punctuation\">.</span>x<span class=\"token operator\">*</span>div<span class=\"token punctuation\">,</span> _v<span class=\"token punctuation\">.</span>y<span class=\"token operator\">*</span>div<span class=\"token punctuation\">,</span> _v<span class=\"token punctuation\">.</span>z<span class=\"token operator\">*</span>div<span class=\"token punctuation\">,</span> _v<span class=\"token punctuation\">.</span>w<span class=\"token operator\">*</span>div<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofQuaternion<span class=\"token operator\">&amp;</span> ofQuaternion<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token operator\">/</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> rhs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">float</span> div <span class=\"token operator\">=</span> <span class=\"token number\">1.0f</span> <span class=\"token operator\">/</span> rhs<span class=\"token punctuation\">;</span>\n    _v<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span><span class=\"token operator\">=</span> div<span class=\"token punctuation\">;</span>\n    _v<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span><span class=\"token operator\">=</span> div<span class=\"token punctuation\">;</span>\n    _v<span class=\"token punctuation\">.</span>z <span class=\"token operator\">*</span><span class=\"token operator\">=</span> div<span class=\"token punctuation\">;</span>\n    _v<span class=\"token punctuation\">.</span>w <span class=\"token operator\">*</span><span class=\"token operator\">=</span> div<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">const</span> ofQuaternion ofQuaternion<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofQuaternion<span class=\"token operator\">&amp;</span> denom<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> denom<span class=\"token punctuation\">.</span><span class=\"token function\">inverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofQuaternion<span class=\"token operator\">&amp;</span> ofQuaternion<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">/</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofQuaternion<span class=\"token operator\">&amp;</span> denom<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> denom<span class=\"token punctuation\">.</span><span class=\"token function\">inverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// enable nesting</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">const</span> ofQuaternion ofQuaternion<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofQuaternion<span class=\"token operator\">&amp;</span> rhs<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">ofQuaternion</span><span class=\"token punctuation\">(</span>_v<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> _v<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>\n                        _v<span class=\"token punctuation\">.</span>z <span class=\"token operator\">+</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">,</span> _v<span class=\"token punctuation\">.</span>w <span class=\"token operator\">+</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofQuaternion<span class=\"token operator\">&amp;</span> ofQuaternion<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token operator\">+</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofQuaternion<span class=\"token operator\">&amp;</span> rhs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    _v<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span><span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n    _v<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span><span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n    _v<span class=\"token punctuation\">.</span>z <span class=\"token operator\">+</span><span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span>\n    _v<span class=\"token punctuation\">.</span>w <span class=\"token operator\">+</span><span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// enable nesting</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">const</span> ofQuaternion ofQuaternion<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofQuaternion<span class=\"token operator\">&amp;</span> rhs<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">ofQuaternion</span><span class=\"token punctuation\">(</span>_v<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> _v<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>\n                        _v<span class=\"token punctuation\">.</span>z <span class=\"token operator\">-</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">,</span> _v<span class=\"token punctuation\">.</span>w <span class=\"token operator\">-</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofQuaternion<span class=\"token operator\">&amp;</span> ofQuaternion<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token operator\">-</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofQuaternion<span class=\"token operator\">&amp;</span> rhs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    _v<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span><span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n    _v<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span><span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n    _v<span class=\"token punctuation\">.</span>z <span class=\"token operator\">-</span><span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span>\n    _v<span class=\"token punctuation\">.</span>w <span class=\"token operator\">-</span><span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_v<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// enable nesting</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">const</span> ofQuaternion ofQuaternion<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">ofQuaternion</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>_v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>_v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>_v<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>_v<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span> ofQuaternion<span class=\"token operator\">::</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>_v<span class=\"token punctuation\">.</span>x<span class=\"token operator\">*</span>_v<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> _v<span class=\"token punctuation\">.</span>y<span class=\"token operator\">*</span>_v<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> _v<span class=\"token punctuation\">.</span>z<span class=\"token operator\">*</span>_v<span class=\"token punctuation\">.</span>z <span class=\"token operator\">+</span> _v<span class=\"token punctuation\">.</span>w<span class=\"token operator\">*</span>_v<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span> ofQuaternion<span class=\"token operator\">::</span><span class=\"token function\">length2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> _v<span class=\"token punctuation\">.</span>x<span class=\"token operator\">*</span>_v<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> _v<span class=\"token punctuation\">.</span>y<span class=\"token operator\">*</span>_v<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> _v<span class=\"token punctuation\">.</span>z<span class=\"token operator\">*</span>_v<span class=\"token punctuation\">.</span>z <span class=\"token operator\">+</span> _v<span class=\"token punctuation\">.</span>w<span class=\"token operator\">*</span>_v<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofQuaternion ofQuaternion<span class=\"token operator\">::</span><span class=\"token function\">conj</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">ofQuaternion</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>_v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>_v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>_v<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">,</span> _v<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">const</span> ofQuaternion ofQuaternion<span class=\"token operator\">::</span><span class=\"token function\">inverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">conj</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token function\">length2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofVec3f ofQuaternion<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> v<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// nVidia SDK implementation</span>\n    ofVec3f uv<span class=\"token punctuation\">,</span> uuv<span class=\"token punctuation\">;</span>\n    ofVec3f <span class=\"token function\">qvec</span><span class=\"token punctuation\">(</span>_v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> _v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> _v<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    uv <span class=\"token operator\">=</span> qvec<span class=\"token punctuation\">.</span><span class=\"token function\">getCrossed</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\" spellcheck=\"true\">//uv = qvec ^ v;</span>\n    uuv <span class=\"token operator\">=</span> qvec<span class=\"token punctuation\">.</span><span class=\"token function\">getCrossed</span><span class=\"token punctuation\">(</span>uv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\" spellcheck=\"true\">//uuv = qvec ^ uv;</span>\n    uv <span class=\"token operator\">*</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2.0f</span> <span class=\"token operator\">*</span> _v<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    uuv <span class=\"token operator\">*</span><span class=\"token operator\">=</span> <span class=\"token number\">2.0f</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> v <span class=\"token operator\">+</span> uv <span class=\"token operator\">+</span> uuv<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofQuaternion<span class=\"token operator\">::</span><span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">float</span> len <span class=\"token operator\">=</span> _v<span class=\"token punctuation\">.</span>w<span class=\"token operator\">*</span>_v<span class=\"token punctuation\">.</span>w <span class=\"token operator\">+</span> _v<span class=\"token punctuation\">.</span>x<span class=\"token operator\">*</span>_v<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> _v<span class=\"token punctuation\">.</span>y<span class=\"token operator\">*</span>_v<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> _v<span class=\"token punctuation\">.</span>z<span class=\"token operator\">*</span>_v<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> factor <span class=\"token operator\">=</span> <span class=\"token number\">1.0f</span> <span class=\"token operator\">/</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t_v<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span><span class=\"token operator\">=</span> factor<span class=\"token punctuation\">;</span>\n\t_v<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span><span class=\"token operator\">=</span> factor<span class=\"token punctuation\">;</span>\n\t_v<span class=\"token punctuation\">.</span>z <span class=\"token operator\">*</span><span class=\"token operator\">=</span> factor<span class=\"token punctuation\">;</span>\n\t_v<span class=\"token punctuation\">.</span>w <span class=\"token operator\">*</span><span class=\"token operator\">=</span> factor<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n","type":"source","static":true}}],"fetch":[]}