{"data":[{"page":{"entry":{"name":"ofAppGLFWWindow.cpp","filename":"ofAppGLFWWindow.cpp","absolute":"/Users/gilbertsinnott/Code/openFrameworks/libs/openFrameworks/app/ofAppGLFWWindow.cpp","path":"/openframeworks/app/ofAppGLFWWindow_cpp","route":"/openframeworks/app/ofAppGLFWWindow.cpp","dir":"../libs/openFrameworks/app","ext":"cpp","type":"source","id":211,"parent":207,"breadcrumbs":[207,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofAppGLFWWindow.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofEvents.h\"</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofBaseApp.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGLRenderer.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGLProgrammableRenderer.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofAppRunner.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofFileUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofEvents.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofPixels.h\"</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> GLFW_INCLUDE_NONE</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GLFW/glfw3.h\"</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_LINUX</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofIcon.h\"</span></span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofImage.h\"</span></span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> GLFW_EXPOSE_NATIVE_X11</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> GLFW_EXPOSE_NATIVE_GLX</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> GLFW_EXPOSE_NATIVE_EGL</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;X11/extensions/Xrandr.h></span></span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;X11/XKBlib.h></span></span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GLFW/glfw3native.h\"</span></span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;X11/Xatom.h></span></span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;xcb/xcb.h></span></span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;xcb/xcbext.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(TARGET_OSX)</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Cocoa/Cocoa.h></span></span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> GLFW_EXPOSE_NATIVE_COCOA</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> GLFW_EXPOSE_NATIVE_NSGL</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GLFW/glfw3native.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(TARGET_WIN32)</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> GLFW_EXPOSE_NATIVE_WIN32</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> GLFW_EXPOSE_NATIVE_WGL</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;GLFW/glfw3native.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------------------</span>\nofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">ofAppGLFWWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">:</span><span class=\"token function\">coreEvents</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> ofCoreEvents<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tbEnableSetupScreen\t<span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\tbuttonInUse\t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tbuttonPressed\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tbWindowNeedsShowing\t<span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\torientation \t\t<span class=\"token operator\">=</span> OF_ORIENTATION_DEFAULT<span class=\"token punctuation\">;</span>\n\ttargetWindowMode\t<span class=\"token operator\">=</span> OF_WINDOW<span class=\"token punctuation\">;</span>\n\n\tofAppPtr\t\t\t<span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\n\tpixelScreenCoordScale <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\tnFramesSinceWindowResized <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\ticonSet <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\twindowP <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\twindowW <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\twindowH <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tcurrentW <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tcurrentH <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">glfwSetErrorCallback</span><span class=\"token punctuation\">(</span>error_cb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofAppGLFWWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\n\t\t<span class=\"token function\">glfwSetMouseButtonCallback</span><span class=\"token punctuation\">(</span> windowP<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glfwSetCursorPosCallback</span><span class=\"token punctuation\">(</span> windowP<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glfwSetCursorEnterCallback</span><span class=\"token punctuation\">(</span> windowP<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glfwSetKeyCallback</span><span class=\"token punctuation\">(</span> windowP<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glfwSetWindowSizeCallback</span><span class=\"token punctuation\">(</span> windowP<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glfwSetFramebufferSizeCallback</span><span class=\"token punctuation\">(</span> windowP<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glfwSetWindowCloseCallback</span><span class=\"token punctuation\">(</span> windowP<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glfwSetScrollCallback</span><span class=\"token punctuation\">(</span> windowP<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GLFW_VERSION_MAJOR>3 || GLFW_VERSION_MINOR>=1</span>\n\t\t<span class=\"token function\">glfwSetDropCallback</span><span class=\"token punctuation\">(</span> windowP<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//hide the window before we destroy it stops a flicker on OS X on exit.</span>\n\t\t<span class=\"token function\">glfwHideWindow</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// We must ensure renderer is destroyed *before* glfw destroys the window in glfwDestroyWindow,</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// as `glfwDestroyWindow` at least on Windows has the effect of unloading OpenGL, making all</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// calls to OpenGL illegal.</span>\n\t\tcurrentRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">glfwDestroyWindow</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\twindowP <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tbWindowNeedsShowing <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">setNumSamples</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> _samples<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tsettings<span class=\"token punctuation\">.</span>numSamples<span class=\"token operator\">=</span>_samples<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">setMultiDisplayFullscreen</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bMultiFullscreen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tsettings<span class=\"token punctuation\">.</span>multiMonitorFullScreen <span class=\"token operator\">=</span> bMultiFullscreen<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">setDoubleBuffering</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> doubleBuff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tsettings<span class=\"token punctuation\">.</span>doubleBuffering <span class=\"token operator\">=</span> doubleBuff<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">setColorBits</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tsettings<span class=\"token punctuation\">.</span>redBits<span class=\"token operator\">=</span>r<span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span>greenBits<span class=\"token operator\">=</span>g<span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span>blueBits<span class=\"token operator\">=</span>b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">setAlphaBits</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tsettings<span class=\"token punctuation\">.</span>alphaBits<span class=\"token operator\">=</span>a<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">setDepthBits</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> depth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tsettings<span class=\"token punctuation\">.</span>depthBits<span class=\"token operator\">=</span>depth<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">setStencilBits</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> stencil<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tsettings<span class=\"token punctuation\">.</span>stencilBits<span class=\"token operator\">=</span>stencil<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofGLESWindowSettings <span class=\"token operator\">&amp;</span> settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofGLWindowSettings <span class=\"token operator\">&amp;</span> settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token keyword\">const</span> ofGLFWWindowSettings <span class=\"token operator\">*</span> glSettings <span class=\"token operator\">=</span> <span class=\"token keyword\">dynamic_cast</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span> ofGLFWWindowSettings<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>glSettings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>glSettings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGLFWWindowSettings</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofGLFWWindowSettings <span class=\"token operator\">&amp;</span> _settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"window already setup, probably you are mixing old and new style setup\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"call only ofCreateWindow(settings) or ofSetupOpenGL(...)\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"calling window->setup() after ofCreateWindow() is not necesary and won't do anything\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tsettings <span class=\"token operator\">=</span> _settings<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">glfwInit</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofAppGLFWWindow\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"couldn't init GLFW\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//\tofLogNotice(\"ofAppGLFWWindow\") &lt;&lt; \"WINDOW MODE IS \" &lt;&lt; screenMode;</span>\n\n\t<span class=\"token function\">glfwDefaultWindowHints</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glfwWindowHint</span><span class=\"token punctuation\">(</span>GLFW_RED_BITS<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>redBits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glfwWindowHint</span><span class=\"token punctuation\">(</span>GLFW_GREEN_BITS<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>greenBits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glfwWindowHint</span><span class=\"token punctuation\">(</span>GLFW_BLUE_BITS<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>blueBits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glfwWindowHint</span><span class=\"token punctuation\">(</span>GLFW_ALPHA_BITS<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>alphaBits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glfwWindowHint</span><span class=\"token punctuation\">(</span>GLFW_DEPTH_BITS<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>depthBits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glfwWindowHint</span><span class=\"token punctuation\">(</span>GLFW_STENCIL_BITS<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>stencilBits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glfwWindowHint</span><span class=\"token punctuation\">(</span>GLFW_STEREO<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>stereo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glfwWindowHint</span><span class=\"token punctuation\">(</span>GLFW_VISIBLE<span class=\"token punctuation\">,</span> GL_FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OSX</span>\n\t<span class=\"token function\">glfwWindowHint</span><span class=\"token punctuation\">(</span>GLFW_AUX_BUFFERS<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>doubleBuffering<span class=\"token operator\">?</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token function\">glfwWindowHint</span><span class=\"token punctuation\">(</span>GLFW_SAMPLES<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>numSamples<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glfwWindowHint</span><span class=\"token punctuation\">(</span>GLFW_RESIZABLE<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>resizable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glfwWindowHint</span><span class=\"token punctuation\">(</span>GLFW_DECORATED<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>decorated<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n\t    <span class=\"token function\">glfwWindowHint</span><span class=\"token punctuation\">(</span>GLFW_CONTEXT_VERSION_MAJOR<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>glesVersion<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glfwWindowHint</span><span class=\"token punctuation\">(</span>GLFW_CONTEXT_VERSION_MINOR<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glfwWindowHint</span><span class=\"token punctuation\">(</span>GLFW_CLIENT_API<span class=\"token punctuation\">,</span> GLFW_OPENGL_ES_API<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>glesVersion<span class=\"token operator\">>=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tcurrentRenderer <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span>make_shared<span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\tcurrentRenderer <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span>make_shared<span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t    <span class=\"token function\">glfwWindowHint</span><span class=\"token punctuation\">(</span>GLFW_CLIENT_API<span class=\"token punctuation\">,</span> GLFW_OPENGL_API<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glfwWindowHint</span><span class=\"token punctuation\">(</span>GLFW_CONTEXT_VERSION_MAJOR<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>glVersionMajor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glfwWindowHint</span><span class=\"token punctuation\">(</span>GLFW_CONTEXT_VERSION_MINOR<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>glVersionMinor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>glVersionMajor<span class=\"token operator\">==</span><span class=\"token number\">3</span> <span class=\"token operator\">&amp;&amp;</span> settings<span class=\"token punctuation\">.</span>glVersionMinor<span class=\"token operator\">>=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> settings<span class=\"token punctuation\">.</span>glVersionMajor<span class=\"token operator\">>=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glfwWindowHint</span><span class=\"token punctuation\">(</span>GLFW_OPENGL_PROFILE<span class=\"token punctuation\">,</span> GLFW_OPENGL_CORE_PROFILE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>glVersionMajor<span class=\"token operator\">>=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glfwWindowHint</span><span class=\"token punctuation\">(</span>GLFW_OPENGL_FORWARD_COMPAT<span class=\"token punctuation\">,</span> GL_TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tcurrentRenderer <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span>make_shared<span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\tcurrentRenderer <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span>make_shared<span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\tGLFWwindow <span class=\"token operator\">*</span> sharedContext <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>shareContextWith<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tsharedContext <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>GLFWwindow<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>settings<span class=\"token punctuation\">.</span>shareContextWith<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getWindowContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>windowMode<span class=\"token operator\">==</span>OF_GAME_MODE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">int</span> count<span class=\"token punctuation\">;</span>\n\t\tGLFWmonitor<span class=\"token operator\">*</span><span class=\"token operator\">*</span> monitors <span class=\"token operator\">=</span> <span class=\"token function\">glfwGetMonitors</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span><span class=\"token function\">isSizeSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tcurrentW <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tcurrentH <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">auto</span> mode <span class=\"token operator\">=</span> <span class=\"token function\">glfwGetVideoMode</span><span class=\"token punctuation\">(</span>monitors<span class=\"token punctuation\">[</span>settings<span class=\"token punctuation\">.</span>monitor<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tcurrentW <span class=\"token operator\">=</span> mode<span class=\"token operator\">-</span><span class=\"token operator\">></span>width<span class=\"token punctuation\">;</span>\n\t\t\tcurrentH <span class=\"token operator\">=</span> mode<span class=\"token operator\">-</span><span class=\"token operator\">></span>height<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>count<span class=\"token operator\">></span>settings<span class=\"token punctuation\">.</span>monitor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\twindowP <span class=\"token operator\">=</span> <span class=\"token function\">glfwCreateWindow</span><span class=\"token punctuation\">(</span>currentW<span class=\"token punctuation\">,</span> currentH<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> monitors<span class=\"token punctuation\">[</span>settings<span class=\"token punctuation\">.</span>monitor<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> sharedContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofAppGLFWWindow\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"couldn't find any monitors\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\twindowP <span class=\"token operator\">=</span> <span class=\"token function\">glfwCreateWindow</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> sharedContext<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofAppGLFWWindow\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"couldn't create GLFW window\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>windowMode<span class=\"token operator\">==</span>OF_FULLSCREEN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">auto</span> monitors <span class=\"token operator\">=</span> <span class=\"token function\">glfwGetMonitors</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">auto</span> mode <span class=\"token operator\">=</span> <span class=\"token function\">glfwGetVideoMode</span><span class=\"token punctuation\">(</span>monitors<span class=\"token punctuation\">[</span>settings<span class=\"token punctuation\">.</span>monitor<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tcurrentW <span class=\"token operator\">=</span> mode<span class=\"token operator\">-</span><span class=\"token operator\">></span>width<span class=\"token punctuation\">;</span>\n\t\t\tcurrentH <span class=\"token operator\">=</span> mode<span class=\"token operator\">-</span><span class=\"token operator\">></span>height<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>settings<span class=\"token punctuation\">.</span><span class=\"token function\">isPositionSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tsettings<span class=\"token punctuation\">.</span>monitor <span class=\"token operator\">=</span> <span class=\"token function\">ofClamp</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>monitor<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>count<span class=\"token number\">-1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">glfwGetMonitorPos</span><span class=\"token punctuation\">(</span>monitors<span class=\"token punctuation\">[</span>settings<span class=\"token punctuation\">.</span>monitor<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tsettings<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">vec2</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">setWindowPosition</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span><span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>settings<span class=\"token punctuation\">.</span><span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">auto</span> mode <span class=\"token operator\">=</span> <span class=\"token function\">glfwGetVideoMode</span><span class=\"token punctuation\">(</span>monitors<span class=\"token punctuation\">[</span>settings<span class=\"token punctuation\">.</span>monitor<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OSX</span>\n\t\t\t\t\t    <span class=\"token comment\" spellcheck=\"true\">//for OS X we need to set this first as the window size affects the window positon</span>\n\t\t\t\t\t    settings<span class=\"token punctuation\">.</span><span class=\"token function\">setSize</span><span class=\"token punctuation\">(</span>mode<span class=\"token operator\">-</span><span class=\"token operator\">></span>width<span class=\"token punctuation\">,</span> mode<span class=\"token operator\">-</span><span class=\"token operator\">></span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token function\">setWindowShape</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t\t\t<span class=\"token function\">setWindowPosition</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span><span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>settings<span class=\"token punctuation\">.</span><span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tcurrentW <span class=\"token operator\">=</span> mode<span class=\"token operator\">-</span><span class=\"token operator\">></span>width<span class=\"token punctuation\">;</span>\n\t\t\t\t\tcurrentH <span class=\"token operator\">=</span> mode<span class=\"token operator\">-</span><span class=\"token operator\">></span>height<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">setWindowPosition</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span><span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>settings<span class=\"token punctuation\">.</span><span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OSX</span>\n\t\t\t\t    <span class=\"token keyword\">auto</span> size <span class=\"token operator\">=</span> <span class=\"token function\">getScreenSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tsettings<span class=\"token punctuation\">.</span><span class=\"token function\">setSize</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">setWindowShape</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t\t\tcurrentW <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tcurrentH <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t\t<span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token function\">glfwGetMonitorPos</span><span class=\"token punctuation\">(</span>monitors<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token keyword\">auto</span> mode <span class=\"token operator\">=</span> <span class=\"token function\">glfwGetVideoMode</span><span class=\"token punctuation\">(</span>monitors<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token keyword\">int</span> w <span class=\"token operator\">=</span> mode<span class=\"token operator\">-</span><span class=\"token operator\">></span>width<span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token keyword\">int</span> h <span class=\"token operator\">=</span> mode<span class=\"token operator\">-</span><span class=\"token operator\">></span>height<span class=\"token punctuation\">;</span>\n\t\t\t\t\t\tofRectangle <span class=\"token function\">rect</span><span class=\"token punctuation\">(</span>x<span class=\"token number\">-1</span><span class=\"token punctuation\">,</span>y<span class=\"token number\">-1</span><span class=\"token punctuation\">,</span>w<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>h<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">.</span><span class=\"token function\">inside</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span><span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t\t\tcurrentW <span class=\"token operator\">=</span> mode<span class=\"token operator\">-</span><span class=\"token operator\">></span>width<span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\tcurrentH <span class=\"token operator\">=</span> mode<span class=\"token operator\">-</span><span class=\"token operator\">></span>height<span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\ttargetWindowMode <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>windowMode<span class=\"token punctuation\">;</span>\n\t\t\tsettings<span class=\"token punctuation\">.</span>windowMode <span class=\"token operator\">=</span> OF_WINDOW<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span><span class=\"token function\">isPositionSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">setWindowPosition</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span><span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>settings<span class=\"token punctuation\">.</span><span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token function\">glfwGetWindowSize</span><span class=\"token punctuation\">(</span> windowP<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>currentW<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>currentH <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_LINUX</span>\n\t\t    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>iconSet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tofPixels iconPixels<span class=\"token punctuation\">;</span>\n                <span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> DEBUG</span>\n\t\t\t\t    iconPixels<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>ofIconDebug<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>ofIconDebug<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span>ofIconDebug<span class=\"token punctuation\">.</span>bytes_per_pixel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">GIMP_IMAGE_RUN_LENGTH_DECODE</span><span class=\"token punctuation\">(</span>iconPixels<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>ofIconDebug<span class=\"token punctuation\">.</span>rle_pixel_data<span class=\"token punctuation\">,</span>iconPixels<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>iconPixels<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>ofIconDebug<span class=\"token punctuation\">.</span>bytes_per_pixel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t\t\t    iconPixels<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>ofIcon<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>ofIcon<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span>ofIcon<span class=\"token punctuation\">.</span>bytes_per_pixel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">GIMP_IMAGE_RUN_LENGTH_DECODE</span><span class=\"token punctuation\">(</span>iconPixels<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>ofIcon<span class=\"token punctuation\">.</span>rle_pixel_data<span class=\"token punctuation\">,</span>iconPixels<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>iconPixels<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>ofIcon<span class=\"token punctuation\">.</span>bytes_per_pixel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t\t<span class=\"token function\">setWindowIcon</span><span class=\"token punctuation\">(</span>iconPixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>iconified<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">iconify</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//don't try and show a window if its been requsted to be hidden</span>\n\tbWindowNeedsShowing <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>visible<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">glfwSetWindowUserPointer</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\twindowW <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\twindowH <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_RASPBERRY_PI</span>\n\twindowRect<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> windowW<span class=\"token punctuation\">;</span>\n\twindowRect<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> windowH<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span> </span>\n\n\t<span class=\"token function\">glfwMakeContextCurrent</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span> framebufferW<span class=\"token punctuation\">,</span> framebufferH<span class=\"token punctuation\">,</span> tmpWindowW<span class=\"token punctuation\">,</span> tmpWindowH<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glfwGetFramebufferSize</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>framebufferW<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>framebufferH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glfwGetWindowSize</span><span class=\"token punctuation\">(</span> windowP<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>tmpWindowW<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>tmpWindowH <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//this lets us detect if the window is running in a retina mode</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> framebufferW <span class=\"token operator\">!=</span> tmpWindowW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tpixelScreenCoordScale <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>framebufferW <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>windowW<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> pixelScreenCoordScale <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tpixelScreenCoordScale <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>targetWindowMode <span class=\"token operator\">==</span> OF_WINDOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">auto</span> position <span class=\"token operator\">=</span> <span class=\"token function\">getWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">setWindowShape</span><span class=\"token punctuation\">(</span>windowW<span class=\"token punctuation\">,</span> windowH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">setWindowPosition</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> inited <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>inited<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tglewExperimental <span class=\"token operator\">=</span> GL_TRUE<span class=\"token punctuation\">;</span>\n\t\tGLenum err <span class=\"token operator\">=</span> <span class=\"token function\">glewInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>GLEW_OK <span class=\"token operator\">!=</span> err<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">/* Problem: glewInit failed, something is seriously wrong. */</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofAppRunner\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"couldn't init GLEW: \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">glewGetErrorString</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tinited <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"GL Version:\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">glGetString</span><span class=\"token punctuation\">(</span>GL_VERSION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentRenderer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>ofGLProgrammableRenderer<span class=\"token operator\">::</span>TYPE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token keyword\">static_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>currentRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>glVersionMajor<span class=\"token punctuation\">,</span>settings<span class=\"token punctuation\">.</span>glVersionMinor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t<span class=\"token keyword\">static_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>currentRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>glesVersion<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">static_cast</span><span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>currentRenderer<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">setVerticalSync</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glfwSetMouseButtonCallback</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">,</span> mouse_cb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glfwSetCursorPosCallback</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">,</span> motion_cb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glfwSetCursorEnterCallback</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">,</span> entry_cb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glfwSetKeyCallback</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">,</span> keyboard_cb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glfwSetCharCallback</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">,</span> char_cb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glfwSetWindowSizeCallback</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">,</span> resize_cb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glfwSetFramebufferSizeCallback</span><span class=\"token punctuation\">(</span> windowP<span class=\"token punctuation\">,</span> framebuffer_size_cb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glfwSetWindowCloseCallback</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">,</span> exit_cb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glfwSetScrollCallback</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">,</span> scroll_cb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GLFW_VERSION_MAJOR>3 || GLFW_VERSION_MINOR>=1</span>\n\t    <span class=\"token function\">glfwSetDropCallback</span><span class=\"token punctuation\">(</span> windowP<span class=\"token punctuation\">,</span> drop_cb <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_LINUX</span>\n\t<span class=\"token function\">XSetLocaleModifiers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\txim <span class=\"token operator\">=</span> <span class=\"token function\">XOpenIM</span><span class=\"token punctuation\">(</span><span class=\"token function\">getX11Display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>xim<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// fallback to internal input method</span>\n\t\t<span class=\"token function\">XSetLocaleModifiers</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"@im=none\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\txim <span class=\"token operator\">=</span> <span class=\"token function\">XOpenIM</span><span class=\"token punctuation\">(</span><span class=\"token function\">getX11Display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\txic <span class=\"token operator\">=</span> <span class=\"token function\">XCreateIC</span><span class=\"token punctuation\">(</span>xim<span class=\"token punctuation\">,</span>\n\t        XNInputStyle<span class=\"token punctuation\">,</span>   XIMPreeditNothing <span class=\"token operator\">|</span> XIMStatusNothing<span class=\"token punctuation\">,</span>\n\t        XNClientWindow<span class=\"token punctuation\">,</span> <span class=\"token function\">getX11Window</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t        XNFocusWindow<span class=\"token punctuation\">,</span>  <span class=\"token function\">getX11Window</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t    <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_LINUX</span>\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">setWindowIcon</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofPixels iconPixels<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofLoadImage</span><span class=\"token punctuation\">(</span>iconPixels<span class=\"token punctuation\">,</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setWindowIcon</span><span class=\"token punctuation\">(</span>iconPixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">setWindowIcon</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPixels <span class=\"token operator\">&amp;</span> iconPixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\ticonSet <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> length <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token operator\">+</span>iconPixels<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>iconPixels<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tvector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token operator\">></span> <span class=\"token function\">buffer</span><span class=\"token punctuation\">(</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbuffer<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>iconPixels<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbuffer<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>iconPixels<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>iconPixels<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>iconPixels<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tbuffer<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">=</span> iconPixels<span class=\"token punctuation\">[</span>i<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">24</span><span class=\"token punctuation\">;</span>\n\t\tbuffer<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span><span class=\"token operator\">=</span> iconPixels<span class=\"token punctuation\">[</span>i<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token operator\">+</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">16</span><span class=\"token punctuation\">;</span>\n\t\tbuffer<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span><span class=\"token operator\">=</span> iconPixels<span class=\"token punctuation\">[</span>i<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\t\tbuffer<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span><span class=\"token operator\">=</span> iconPixels<span class=\"token punctuation\">[</span>i<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">XChangeProperty</span><span class=\"token punctuation\">(</span><span class=\"token function\">getX11Display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getX11Window</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">XInternAtom</span><span class=\"token punctuation\">(</span><span class=\"token function\">getX11Display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"_NET_WM_ICON\"</span><span class=\"token punctuation\">,</span> False<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> XA_CARDINAL<span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>\n\t                     PropModeReplace<span class=\"token punctuation\">,</span>  <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>buffer<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">XFlush</span><span class=\"token punctuation\">(</span><span class=\"token function\">getX11Display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\nofCoreEvents <span class=\"token operator\">&amp;</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">*</span>coreEvents<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\nshared_ptr<span class=\"token operator\">&lt;</span>ofBaseRenderer<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">renderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> currentRenderer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">notifyUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//show the window right before the first draw call.</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> bWindowNeedsShowing <span class=\"token operator\">&amp;&amp;</span> windowP <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glfwShowWindow</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tbWindowNeedsShowing <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>targetWindowMode<span class=\"token operator\">==</span>OF_FULLSCREEN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">setFullscreen</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_RASPBERRY_PI</span>\n    <span class=\"token comment\" spellcheck=\"true\">//needed for rpi. as good values don't come into resize_cb when coming out of fullscreen</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> needsResizeCheck <span class=\"token operator\">&amp;&amp;</span> windowP <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> winW<span class=\"token punctuation\">,</span> winH<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">glfwGetWindowSize</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>winW<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>winH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\" spellcheck=\"true\">//wait until the window size is the size it was before going fullscreen</span>\n        <span class=\"token comment\" spellcheck=\"true\">//then stop the resize check</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> winW <span class=\"token operator\">==</span> windowRect<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> winH <span class=\"token operator\">==</span> windowRect<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token function\">resize_cb</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">,</span> currentW<span class=\"token punctuation\">,</span> currentH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            needsResizeCheck <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">pollEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glfwPollEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcurrentRenderer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">startRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> bEnableSetupScreen <span class=\"token punctuation\">)</span> currentRenderer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setupScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">notifyDraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_WIN32</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentRenderer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getBackgroundAuto</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// on a PC resizing a window with this method of accumulation (essentially single buffering)</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// is BAD, so we clear on resize events.</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nFramesSinceWindowResized <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tcurrentRenderer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFrameNum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span> <span class=\"token operator\">||</span> nFramesSinceWindowResized <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> settings<span class=\"token punctuation\">.</span>doubleBuffering<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">glfwSwapBuffers</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">glFlush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>doubleBuffering<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glfwSwapBuffers</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glFlush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentRenderer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getBackgroundAuto</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// in accum mode resizing a window is BAD, so we clear on resize events.</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nFramesSinceWindowResized <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tcurrentRenderer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>doubleBuffering<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glfwSwapBuffers</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glFlush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\tcurrentRenderer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">finishRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tnFramesSinceWindowResized<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">swapBuffers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glfwSwapBuffers</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">startRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">renderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">startRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">finishRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">renderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">finishRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">getWindowShouldClose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">glfwWindowShouldClose</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">setWindowShouldClose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glfwSetWindowShouldClose</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">setWindowTitle</span><span class=\"token punctuation\">(</span>string title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tsettings<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> title<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glfwSetWindowTitle</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">,</span>settings<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">getPixelScreenCoordScale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> pixelScreenCoordScale<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\nglm<span class=\"token operator\">::</span>vec2 ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">getWindowSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>windowMode <span class=\"token operator\">==</span> OF_GAME_MODE<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">const</span> GLFWvidmode <span class=\"token operator\">*</span> desktopMode <span class=\"token operator\">=</span> <span class=\"token function\">glfwGetVideoMode</span><span class=\"token punctuation\">(</span><span class=\"token function\">glfwGetWindowMonitor</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>desktopMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>desktopMode<span class=\"token operator\">-</span><span class=\"token operator\">></span>width<span class=\"token operator\">*</span>pixelScreenCoordScale<span class=\"token punctuation\">,</span> desktopMode<span class=\"token operator\">-</span><span class=\"token operator\">></span>height<span class=\"token operator\">*</span>pixelScreenCoordScale<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>currentW<span class=\"token operator\">*</span>pixelScreenCoordScale<span class=\"token punctuation\">,</span> currentH<span class=\"token operator\">*</span>pixelScreenCoordScale<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>currentW<span class=\"token operator\">*</span>pixelScreenCoordScale<span class=\"token punctuation\">,</span> currentH<span class=\"token operator\">*</span>pixelScreenCoordScale<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\nglm<span class=\"token operator\">::</span>vec2 ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">getWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glfwGetWindowPos</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    x <span class=\"token operator\">*</span><span class=\"token operator\">=</span> pixelScreenCoordScale<span class=\"token punctuation\">;</span>\n    y <span class=\"token operator\">*</span><span class=\"token operator\">=</span> pixelScreenCoordScale<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> orientation <span class=\"token operator\">==</span> OF_ORIENTATION_DEFAULT <span class=\"token operator\">||</span> orientation <span class=\"token operator\">==</span> OF_ORIENTATION_180 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> glm<span class=\"token operator\">::</span>vec2<span class=\"token punctuation\">{</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec2</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//NOTE: shouldn't this be (y,x) ??????</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">getCurrentMonitor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> numberOfMonitors<span class=\"token punctuation\">;</span>\n\tGLFWmonitor<span class=\"token operator\">*</span><span class=\"token operator\">*</span> monitors <span class=\"token operator\">=</span> <span class=\"token function\">glfwGetMonitors</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>numberOfMonitors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span> xW<span class=\"token punctuation\">;</span>\t<span class=\"token keyword\">int</span> yW<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glfwGetWindowPos</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>xW<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>yW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> iC<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> iC <span class=\"token operator\">&lt;</span> numberOfMonitors<span class=\"token punctuation\">;</span> iC<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">int</span> xM<span class=\"token punctuation\">;</span> <span class=\"token keyword\">int</span> yM<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glfwGetMonitorPos</span><span class=\"token punctuation\">(</span>monitors<span class=\"token punctuation\">[</span>iC<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>xM<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>yM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">const</span> GLFWvidmode <span class=\"token operator\">*</span> desktopMode <span class=\"token operator\">=</span> <span class=\"token function\">glfwGetVideoMode</span><span class=\"token punctuation\">(</span>monitors<span class=\"token punctuation\">[</span>iC<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tofRectangle <span class=\"token function\">monitorRect</span><span class=\"token punctuation\">(</span>xM<span class=\"token punctuation\">,</span> yM<span class=\"token punctuation\">,</span> desktopMode<span class=\"token operator\">-</span><span class=\"token operator\">></span>width<span class=\"token punctuation\">,</span> desktopMode<span class=\"token operator\">-</span><span class=\"token operator\">></span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span> bPointMatch <span class=\"token operator\">=</span> xW <span class=\"token operator\">>=</span> monitorRect<span class=\"token punctuation\">.</span><span class=\"token function\">getMinX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> yW <span class=\"token operator\">>=</span> monitorRect<span class=\"token punctuation\">.</span><span class=\"token function\">getMinY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> xW <span class=\"token operator\">&lt;</span> monitorRect<span class=\"token punctuation\">.</span><span class=\"token function\">getMaxX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> yW <span class=\"token operator\">&lt;</span> monitorRect<span class=\"token punctuation\">.</span><span class=\"token function\">getMaxY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//\t\tif (monitorRect.inside(xW, yW)){</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> bPointMatch <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> iC<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\nglm<span class=\"token operator\">::</span>vec2 ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">getScreenSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> count<span class=\"token punctuation\">;</span>\n\tGLFWmonitor<span class=\"token operator\">*</span><span class=\"token operator\">*</span> monitors <span class=\"token operator\">=</span> <span class=\"token function\">glfwGetMonitors</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>count<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">int</span> currentMonitor <span class=\"token operator\">=</span> <span class=\"token function\">getCurrentMonitor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">const</span> GLFWvidmode <span class=\"token operator\">*</span> desktopMode <span class=\"token operator\">=</span> <span class=\"token function\">glfwGetVideoMode</span><span class=\"token punctuation\">(</span>monitors<span class=\"token punctuation\">[</span>currentMonitor<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>desktopMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> orientation <span class=\"token operator\">==</span> OF_ORIENTATION_DEFAULT <span class=\"token operator\">||</span> orientation <span class=\"token operator\">==</span> OF_ORIENTATION_180 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>desktopMode<span class=\"token operator\">-</span><span class=\"token operator\">></span>width<span class=\"token operator\">*</span>pixelScreenCoordScale<span class=\"token punctuation\">,</span> desktopMode<span class=\"token operator\">-</span><span class=\"token operator\">></span>height<span class=\"token operator\">*</span>pixelScreenCoordScale<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>desktopMode<span class=\"token operator\">-</span><span class=\"token operator\">></span>height<span class=\"token operator\">*</span>pixelScreenCoordScale<span class=\"token punctuation\">,</span> desktopMode<span class=\"token operator\">-</span><span class=\"token operator\">></span>width<span class=\"token operator\">*</span>pixelScreenCoordScale<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> orientation <span class=\"token operator\">==</span> OF_ORIENTATION_DEFAULT <span class=\"token operator\">||</span> orientation <span class=\"token operator\">==</span> OF_ORIENTATION_180 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> currentW <span class=\"token operator\">*</span> pixelScreenCoordScale<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> currentH <span class=\"token operator\">*</span> pixelScreenCoordScale<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> orientation <span class=\"token operator\">==</span> OF_ORIENTATION_DEFAULT <span class=\"token operator\">||</span> orientation <span class=\"token operator\">==</span> OF_ORIENTATION_180 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> currentH <span class=\"token operator\">*</span> pixelScreenCoordScale<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> currentW <span class=\"token operator\">*</span> pixelScreenCoordScale<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\nGLFWwindow<span class=\"token operator\">*</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">getGLFWWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> windowP<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\nofWindowMode ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">getWindowMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> settings<span class=\"token punctuation\">.</span>windowMode<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">setWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glfwSetWindowPos</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">,</span>x<span class=\"token operator\">/</span>pixelScreenCoordScale<span class=\"token punctuation\">,</span>y<span class=\"token operator\">/</span>pixelScreenCoordScale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">setWindowShape</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>windowMode <span class=\"token operator\">==</span> OF_WINDOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\twindowW <span class=\"token operator\">=</span> w<span class=\"token punctuation\">;</span>\n\t\twindowH <span class=\"token operator\">=</span> h<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tcurrentW <span class=\"token operator\">=</span> w<span class=\"token operator\">/</span>pixelScreenCoordScale<span class=\"token punctuation\">;</span>\n\tcurrentH <span class=\"token operator\">=</span> h<span class=\"token operator\">/</span>pixelScreenCoordScale<span class=\"token punctuation\">;</span>\n\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OSX</span>\n\t    <span class=\"token keyword\">auto</span> pos <span class=\"token operator\">=</span> <span class=\"token function\">getWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glfwSetWindowSize</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">,</span>currentW<span class=\"token punctuation\">,</span>currentH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> pos <span class=\"token operator\">!=</span> <span class=\"token function\">getWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">setWindowPosition</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> pos<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t    <span class=\"token function\">glfwSetWindowSize</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">,</span>currentW<span class=\"token punctuation\">,</span>currentH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">hideCursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>windowMode <span class=\"token operator\">==</span> OF_FULLSCREEN <span class=\"token operator\">||</span> settings<span class=\"token punctuation\">.</span>windowMode <span class=\"token operator\">==</span> OF_GAME_MODE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glfwSetInputMode</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">,</span>GLFW_CURSOR<span class=\"token punctuation\">,</span>GLFW_CURSOR_DISABLED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glfwSetInputMode</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">,</span>GLFW_CURSOR<span class=\"token punctuation\">,</span>GLFW_CURSOR_HIDDEN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">showCursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glfwSetInputMode</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">,</span>GLFW_CURSOR<span class=\"token punctuation\">,</span>GLFW_CURSOR_NORMAL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">enableSetupScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbEnableSetupScreen <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">disableSetupScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbEnableSetupScreen <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">setFullscreen</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> fullscreen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fullscreen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\ttargetWindowMode <span class=\"token operator\">=</span> OF_FULLSCREEN<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\ttargetWindowMode <span class=\"token operator\">=</span> OF_WINDOW<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//we only want to change window mode if the requested window is different to the current one.</span>\n\t<span class=\"token keyword\">bool</span> bChanged <span class=\"token operator\">=</span> targetWindowMode <span class=\"token operator\">!=</span> settings<span class=\"token punctuation\">.</span>windowMode<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bChanged <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_LINUX</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;X11/Xatom.h></span></span>\n\n\tWindow nativeWin <span class=\"token operator\">=</span> <span class=\"token function\">glfwGetX11Window</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tDisplay<span class=\"token operator\">*</span> display <span class=\"token operator\">=</span> <span class=\"token function\">glfwGetX11Display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>targetWindowMode<span class=\"token operator\">==</span>OF_FULLSCREEN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_RASPBERRY_PI</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// save window shape before going fullscreen</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> windowP <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">int</span> tmpW<span class=\"token punctuation\">,</span> tmpH<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">glfwGetWindowSize</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>tmpW<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>tmpH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\twindowRect<span class=\"token punctuation\">.</span><span class=\"token function\">setSize</span><span class=\"token punctuation\">(</span>tmpW<span class=\"token punctuation\">,</span> tmpH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span> </span>\n\t\t\n\t\t<span class=\"token keyword\">int</span> monitorCount<span class=\"token punctuation\">;</span>\n\t\tGLFWmonitor<span class=\"token operator\">*</span><span class=\"token operator\">*</span> monitors <span class=\"token operator\">=</span> <span class=\"token function\">glfwGetMonitors</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>monitorCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> settings<span class=\"token punctuation\">.</span>multiMonitorFullScreen <span class=\"token operator\">&amp;&amp;</span> monitorCount <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// find the monitors at the edges of the virtual desktop</span>\n\t\t\t<span class=\"token keyword\">int</span> minx<span class=\"token operator\">=</span>numeric_limits<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">int</span> miny<span class=\"token operator\">=</span>numeric_limits<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">int</span> maxx<span class=\"token operator\">=</span>numeric_limits<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">int</span> maxy<span class=\"token operator\">=</span>numeric_limits<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">int</span> monitorLeft<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> monitorRight<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> monitorTop<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> monitorBottom<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> monitorCount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">glfwGetMonitorPos</span><span class=\"token punctuation\">(</span>monitors<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">auto</span> videoMode <span class=\"token operator\">=</span> <span class=\"token function\">glfwGetVideoMode</span><span class=\"token punctuation\">(</span>monitors<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tw <span class=\"token operator\">=</span> videoMode<span class=\"token operator\">-</span><span class=\"token operator\">></span>width<span class=\"token punctuation\">;</span>\n\t\t\t\th <span class=\"token operator\">=</span> videoMode<span class=\"token operator\">-</span><span class=\"token operator\">></span>height<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">&lt;</span>minx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\tmonitorLeft <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n\t\t\t\t\tminx <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>y<span class=\"token operator\">&lt;</span>miny<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\tmonitorTop <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n\t\t\t\t\tminy <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">+</span>w<span class=\"token operator\">></span>maxx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\tmonitorRight <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n\t\t\t\t\tmaxx <span class=\"token operator\">=</span> x<span class=\"token operator\">+</span>w<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>y<span class=\"token operator\">+</span>h<span class=\"token operator\">></span>maxy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\tmonitorBottom <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n\t\t\t\t\tmaxy <span class=\"token operator\">=</span> y<span class=\"token operator\">+</span>h<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// send fullscreen_monitors event with the edges monitors</span>\n\t\t\tAtom m_net_fullscreen_monitors<span class=\"token operator\">=</span> <span class=\"token function\">XInternAtom</span><span class=\"token punctuation\">(</span>display<span class=\"token punctuation\">,</span> <span class=\"token string\">\"_NET_WM_FULLSCREEN_MONITORS\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tXEvent xev<span class=\"token punctuation\">;</span>\n\n\t\t\txev<span class=\"token punctuation\">.</span>xclient<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> ClientMessage<span class=\"token punctuation\">;</span>\n\t\t\txev<span class=\"token punctuation\">.</span>xclient<span class=\"token punctuation\">.</span>serial <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\txev<span class=\"token punctuation\">.</span>xclient<span class=\"token punctuation\">.</span>send_event <span class=\"token operator\">=</span> True<span class=\"token punctuation\">;</span>\n\t\t\txev<span class=\"token punctuation\">.</span>xclient<span class=\"token punctuation\">.</span>window <span class=\"token operator\">=</span> nativeWin<span class=\"token punctuation\">;</span>\n\t\t\txev<span class=\"token punctuation\">.</span>xclient<span class=\"token punctuation\">.</span>message_type <span class=\"token operator\">=</span> m_net_fullscreen_monitors<span class=\"token punctuation\">;</span>\n\t\t\txev<span class=\"token punctuation\">.</span>xclient<span class=\"token punctuation\">.</span>format <span class=\"token operator\">=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span>\n\n\t\t\txev<span class=\"token punctuation\">.</span>xclient<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>l<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> monitorTop<span class=\"token punctuation\">;</span>\n\t\t\txev<span class=\"token punctuation\">.</span>xclient<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>l<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> monitorBottom<span class=\"token punctuation\">;</span>\n\t\t\txev<span class=\"token punctuation\">.</span>xclient<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>l<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> monitorLeft<span class=\"token punctuation\">;</span>\n\t\t\txev<span class=\"token punctuation\">.</span>xclient<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>l<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> monitorRight<span class=\"token punctuation\">;</span>\n\t\t\txev<span class=\"token punctuation\">.</span>xclient<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>l<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">XSendEvent</span><span class=\"token punctuation\">(</span>display<span class=\"token punctuation\">,</span> <span class=\"token function\">RootWindow</span><span class=\"token punctuation\">(</span>display<span class=\"token punctuation\">,</span> <span class=\"token function\">DefaultScreen</span><span class=\"token punctuation\">(</span>display<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t           False<span class=\"token punctuation\">,</span> SubstructureRedirectMask <span class=\"token operator\">|</span> SubstructureNotifyMask<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>xev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tcurrentW <span class=\"token operator\">=</span> maxx <span class=\"token operator\">-</span> minx<span class=\"token punctuation\">;</span>\n\t\t\tcurrentH <span class=\"token operator\">=</span> maxy <span class=\"token operator\">-</span> minx<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">auto</span> monitor <span class=\"token operator\">=</span> <span class=\"token function\">glfwGetWindowMonitor</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>monitor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">auto</span> videoMode <span class=\"token operator\">=</span> <span class=\"token function\">glfwGetVideoMode</span><span class=\"token punctuation\">(</span>monitor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>videoMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\tcurrentW <span class=\"token operator\">=</span> videoMode<span class=\"token operator\">-</span><span class=\"token operator\">></span>width<span class=\"token punctuation\">;</span>\n\t\t\t\t\tcurrentH <span class=\"token operator\">=</span> videoMode<span class=\"token operator\">-</span><span class=\"token operator\">></span>height<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// send fullscreen event</span>\n\tAtom m_net_state<span class=\"token operator\">=</span> <span class=\"token function\">XInternAtom</span><span class=\"token punctuation\">(</span>display<span class=\"token punctuation\">,</span> <span class=\"token string\">\"_NET_WM_STATE\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tAtom m_net_fullscreen<span class=\"token operator\">=</span> <span class=\"token function\">XInternAtom</span><span class=\"token punctuation\">(</span>display<span class=\"token punctuation\">,</span> <span class=\"token string\">\"_NET_WM_STATE_FULLSCREEN\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tXEvent xev<span class=\"token punctuation\">;</span>\n\n\txev<span class=\"token punctuation\">.</span>xclient<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> ClientMessage<span class=\"token punctuation\">;</span>\n\txev<span class=\"token punctuation\">.</span>xclient<span class=\"token punctuation\">.</span>serial <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\txev<span class=\"token punctuation\">.</span>xclient<span class=\"token punctuation\">.</span>send_event <span class=\"token operator\">=</span> True<span class=\"token punctuation\">;</span>\n\txev<span class=\"token punctuation\">.</span>xclient<span class=\"token punctuation\">.</span>window <span class=\"token operator\">=</span> nativeWin<span class=\"token punctuation\">;</span>\n\txev<span class=\"token punctuation\">.</span>xclient<span class=\"token punctuation\">.</span>message_type <span class=\"token operator\">=</span> m_net_state<span class=\"token punctuation\">;</span>\n\txev<span class=\"token punctuation\">.</span>xclient<span class=\"token punctuation\">.</span>format <span class=\"token operator\">=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fullscreen<span class=\"token punctuation\">)</span>\n\t\txev<span class=\"token punctuation\">.</span>xclient<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>l<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">else</span>\n\t\txev<span class=\"token punctuation\">.</span>xclient<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>l<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\txev<span class=\"token punctuation\">.</span>xclient<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>l<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> m_net_fullscreen<span class=\"token punctuation\">;</span>\n\txev<span class=\"token punctuation\">.</span>xclient<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>l<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\txev<span class=\"token punctuation\">.</span>xclient<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>l<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\txev<span class=\"token punctuation\">.</span>xclient<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>l<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">XSendEvent</span><span class=\"token punctuation\">(</span>display<span class=\"token punctuation\">,</span> <span class=\"token function\">RootWindow</span><span class=\"token punctuation\">(</span>display<span class=\"token punctuation\">,</span> <span class=\"token function\">DefaultScreen</span><span class=\"token punctuation\">(</span>display<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t           False<span class=\"token punctuation\">,</span> SubstructureRedirectMask <span class=\"token operator\">|</span> SubstructureNotifyMask<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>xev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// tell the window manager to bypass composition for this window in fullscreen for speed</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// it'll probably help solving vsync issues</span>\n\tAtom m_bypass_compositor <span class=\"token operator\">=</span> <span class=\"token function\">XInternAtom</span><span class=\"token punctuation\">(</span>display<span class=\"token punctuation\">,</span> <span class=\"token string\">\"_NET_WM_BYPASS_COMPOSITOR\"</span><span class=\"token punctuation\">,</span> False<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> value <span class=\"token operator\">=</span> fullscreen <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">XChangeProperty</span><span class=\"token punctuation\">(</span>display<span class=\"token punctuation\">,</span> nativeWin<span class=\"token punctuation\">,</span> m_bypass_compositor<span class=\"token punctuation\">,</span> XA_CARDINAL<span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> PropModeReplace<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>value<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">XFlush</span><span class=\"token punctuation\">(</span>display<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_RASPBERRY_PI </span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>fullscreen <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tneedsResizeCheck <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> \n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span> </span>\n\t\n<span class=\"token comment\" spellcheck=\"true\">//\tsetWindowShape(windowW, windowH);</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(TARGET_OSX)</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> targetWindowMode <span class=\"token operator\">==</span> OF_FULLSCREEN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------</span>\n\t\t<span class=\"token punctuation\">[</span>NSApp setPresentationOptions<span class=\"token operator\">:</span>NSApplicationPresentationHideMenuBar <span class=\"token operator\">|</span> NSApplicationPresentationHideDock<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\tNSWindow <span class=\"token operator\">*</span> cocoaWindow <span class=\"token operator\">=</span> <span class=\"token function\">glfwGetCocoaWindow</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token punctuation\">[</span>cocoaWindow setStyleMask<span class=\"token operator\">:</span>NSBorderlessWindowMask<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">int</span> monitorCount<span class=\"token punctuation\">;</span>\n\t\tGLFWmonitor<span class=\"token operator\">*</span><span class=\"token operator\">*</span> monitors <span class=\"token operator\">=</span> <span class=\"token function\">glfwGetMonitors</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>monitorCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">int</span> currentMonitor <span class=\"token operator\">=</span> <span class=\"token function\">getCurrentMonitor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tofVec3f screenSize <span class=\"token operator\">=</span> <span class=\"token function\">getScreenSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> orientation <span class=\"token operator\">==</span> OF_ORIENTATION_90_LEFT <span class=\"token operator\">||</span> orientation <span class=\"token operator\">==</span> OF_ORIENTATION_90_RIGHT <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tstd<span class=\"token operator\">::</span><span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>screenSize<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> screenSize<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\tofRectangle allScreensSpace<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// save window shape before going fullscreen</span>\n\t\t<span class=\"token keyword\">auto</span> pos <span class=\"token operator\">=</span> <span class=\"token function\">getWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">auto</span> size <span class=\"token operator\">=</span> <span class=\"token function\">getWindowSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\twindowRect<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> pos<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\t\twindowRect<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> pos<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\t\twindowRect<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> size<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\t\twindowRect<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> size<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> settings<span class=\"token punctuation\">.</span>multiMonitorFullScreen <span class=\"token operator\">&amp;&amp;</span> monitorCount <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//calc the sum Rect of all the monitors</span>\n\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> monitorCount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">const</span> GLFWvidmode <span class=\"token operator\">*</span> desktopMode <span class=\"token operator\">=</span> <span class=\"token function\">glfwGetVideoMode</span><span class=\"token punctuation\">(</span>monitors<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">glfwGetMonitorPos</span><span class=\"token punctuation\">(</span>monitors<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tofRectangle screen <span class=\"token operator\">=</span> <span class=\"token function\">ofRectangle</span><span class=\"token punctuation\">(</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> desktopMode<span class=\"token operator\">-</span><span class=\"token operator\">></span>width<span class=\"token punctuation\">,</span> desktopMode<span class=\"token operator\">-</span><span class=\"token operator\">></span>height <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tallScreensSpace <span class=\"token operator\">=</span> allScreensSpace<span class=\"token punctuation\">.</span><span class=\"token function\">getUnion</span><span class=\"token punctuation\">(</span>screen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//for OS X we need to set this first as the window size affects the window positon</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//need to account for the pixel density factor when we're getting the values from glfw</span>\n\t\t\t<span class=\"token function\">setWindowShape</span><span class=\"token punctuation\">(</span>allScreensSpace<span class=\"token punctuation\">.</span>width<span class=\"token operator\">*</span>pixelScreenCoordScale<span class=\"token punctuation\">,</span> allScreensSpace<span class=\"token punctuation\">.</span>height<span class=\"token operator\">*</span>pixelScreenCoordScale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">setWindowPosition</span><span class=\"token punctuation\">(</span>allScreensSpace<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> allScreensSpace<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>monitorCount <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> currentMonitor <span class=\"token operator\">&lt;</span> monitorCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">int</span> xpos<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">int</span> ypos<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">glfwGetMonitorPos</span><span class=\"token punctuation\">(</span>monitors<span class=\"token punctuation\">[</span>currentMonitor<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>xpos<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ypos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// Scale (if needed) to physical pixels size, since setWindowPosition</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// uses physical pixel dimensions. On HIDPI screens pixelScreenCoordScale</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// is likely to be 2, on \"normal\" screens pixelScreenCoordScale will be 1:</span>\n\t\t\txpos <span class=\"token operator\">*</span><span class=\"token operator\">=</span> pixelScreenCoordScale<span class=\"token punctuation\">;</span>\n\t\t\typos <span class=\"token operator\">*</span><span class=\"token operator\">=</span> pixelScreenCoordScale<span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//we do this as setWindowShape affects the position of the monitor</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//normally we would just call setWindowShape first, but on multi monitor you see the window bleed onto the second monitor as it first changes shape and is then repositioned.</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//this first moves it over in X, does the screen resize and then by calling it again its set correctly in y.</span>\n\t\t\t<span class=\"token function\">setWindowPosition</span><span class=\"token punctuation\">(</span>xpos<span class=\"token punctuation\">,</span> ypos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">setWindowShape</span><span class=\"token punctuation\">(</span>screenSize<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> screenSize<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">setWindowPosition</span><span class=\"token punctuation\">(</span>xpos<span class=\"token punctuation\">,</span> ypos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//for OS X we need to set this first as the window size affects the window positon</span>\n\t\t\t<span class=\"token function\">setWindowShape</span><span class=\"token punctuation\">(</span>screenSize<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> screenSize<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">setWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// make sure to save current pos if not specified in settings</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> settings<span class=\"token punctuation\">.</span><span class=\"token function\">isPositionSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tofVec3f pos <span class=\"token operator\">=</span> <span class=\"token function\">getWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tsettings<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofVec2f</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> pos<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//make sure the window is getting the mouse/key events</span>\n\t\t<span class=\"token punctuation\">[</span>cocoaWindow makeFirstResponder<span class=\"token operator\">:</span>cocoaWindow<span class=\"token punctuation\">.</span>contentView<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> targetWindowMode <span class=\"token operator\">==</span> OF_WINDOW <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// set window shape if started in fullscreen</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>windowRect<span class=\"token punctuation\">.</span>width <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> windowRect<span class=\"token punctuation\">.</span>height <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\twindowRect<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token function\">getWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\t\t\twindowRect<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token function\">getWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\t\t\twindowRect<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> <span class=\"token function\">getWindowSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\t\t\twindowRect<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token function\">getWindowSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token punctuation\">[</span>NSApp setPresentationOptions<span class=\"token operator\">:</span>NSApplicationPresentationDefault<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\tNSWindow <span class=\"token operator\">*</span> cocoaWindow <span class=\"token operator\">=</span> <span class=\"token function\">glfwGetCocoaWindow</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">[</span>cocoaWindow setStyleMask<span class=\"token operator\">:</span>NSTitledWindowMask <span class=\"token operator\">|</span> NSClosableWindowMask <span class=\"token operator\">|</span> NSMiniaturizableWindowMask <span class=\"token operator\">|</span> NSResizableWindowMask<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">setWindowShape</span><span class=\"token punctuation\">(</span>windowRect<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> windowRect<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">setWindowTitle</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// if we have recorded the screen position, put it there</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// if not, better to let the system do it (and put it where it wants)</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ofGetFrameNum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">setWindowPosition</span><span class=\"token punctuation\">(</span>windowRect<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> windowRect<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//make sure the window is getting the mouse/key events</span>\n\t\t<span class=\"token punctuation\">[</span>cocoaWindow makeFirstResponder<span class=\"token operator\">:</span>cocoaWindow<span class=\"token punctuation\">.</span>contentView<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(TARGET_WIN32)</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> targetWindowMode <span class=\"token operator\">==</span> OF_FULLSCREEN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// save window shape before going fullscreen</span>\n\t\t<span class=\"token keyword\">auto</span> pos <span class=\"token operator\">=</span> <span class=\"token function\">getWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">auto</span> size <span class=\"token operator\">=</span> <span class=\"token function\">getWindowSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\twindowRect<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> pos<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\t\twindowRect<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> pos<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\t\twindowRect<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> size<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\t\twindowRect<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> size<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------</span>\n\t\tHWND hwnd <span class=\"token operator\">=</span> <span class=\"token function\">glfwGetWin32Window</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">SetWindowLong</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> GWL_EXSTYLE<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">SetWindowLong</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> GWL_STYLE<span class=\"token punctuation\">,</span> WS_POPUP <span class=\"token operator\">|</span> WS_CLIPCHILDREN <span class=\"token operator\">|</span> WS_CLIPSIBLINGS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">SetWindowPos</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> HWND_TOPMOST<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> SWP_NOMOVE <span class=\"token operator\">|</span> SWP_NOSIZE <span class=\"token operator\">|</span> SWP_FRAMECHANGED <span class=\"token operator\">|</span> SWP_SHOWWINDOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">float</span> fullscreenW <span class=\"token operator\">=</span> <span class=\"token function\">getScreenSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span> fullscreenH <span class=\"token operator\">=</span> <span class=\"token function\">getScreenSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> orientation <span class=\"token operator\">==</span> OF_ORIENTATION_90_LEFT <span class=\"token operator\">||</span> orientation <span class=\"token operator\">==</span> OF_ORIENTATION_90_RIGHT <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tstd<span class=\"token operator\">::</span><span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>fullscreenW<span class=\"token punctuation\">,</span> fullscreenH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">int</span> xpos <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> ypos <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> settings<span class=\"token punctuation\">.</span>multiMonitorFullScreen <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t\t<span class=\"token keyword\">int</span> minX <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">int</span> maxX <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">int</span> minY <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">int</span> maxY <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">int</span> monitorCount<span class=\"token punctuation\">;</span>\n\t\t\tGLFWmonitor<span class=\"token operator\">*</span><span class=\"token operator\">*</span> monitors <span class=\"token operator\">=</span> <span class=\"token function\">glfwGetMonitors</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>monitorCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">int</span> tempXPos <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">int</span> tempYPos <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//lets find the total width of all the monitors</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//and we'll make the window height the height of the largest monitor.</span>\n\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> monitorCount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">const</span> GLFWvidmode <span class=\"token operator\">*</span> desktopMode <span class=\"token operator\">=</span> <span class=\"token function\">glfwGetVideoMode</span><span class=\"token punctuation\">(</span>monitors<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">glfwGetMonitorPos</span><span class=\"token punctuation\">(</span>monitors<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>tempXPos<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>tempYPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tminX <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>tempXPos<span class=\"token punctuation\">,</span>minX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tminY <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>tempYPos<span class=\"token punctuation\">,</span>minY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tmaxX <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>maxX<span class=\"token punctuation\">,</span>tempXPos <span class=\"token operator\">+</span> desktopMode<span class=\"token operator\">-</span><span class=\"token operator\">></span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tmaxY <span class=\"token operator\">=</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>maxY<span class=\"token punctuation\">,</span>tempYPos <span class=\"token operator\">+</span> desktopMode<span class=\"token operator\">-</span><span class=\"token operator\">></span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\txpos <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>xpos<span class=\"token punctuation\">,</span>tempXPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\typos <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>ypos<span class=\"token punctuation\">,</span>tempYPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\tfullscreenW <span class=\"token operator\">=</span> maxX<span class=\"token operator\">-</span>minX<span class=\"token punctuation\">;</span>\n\t\t\tfullscreenH <span class=\"token operator\">=</span> maxY<span class=\"token operator\">-</span>minY<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\n\t\t\t<span class=\"token keyword\">int</span> monitorCount<span class=\"token punctuation\">;</span>\n\t\t\tGLFWmonitor<span class=\"token operator\">*</span><span class=\"token operator\">*</span> monitors <span class=\"token operator\">=</span> <span class=\"token function\">glfwGetMonitors</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>monitorCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">int</span> currentMonitor <span class=\"token operator\">=</span> <span class=\"token function\">getCurrentMonitor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">glfwGetMonitorPos</span><span class=\"token punctuation\">(</span>monitors<span class=\"token punctuation\">[</span>currentMonitor<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>xpos<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ypos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token function\">SetWindowPos</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> HWND_TOPMOST<span class=\"token punctuation\">,</span> xpos<span class=\"token punctuation\">,</span> ypos<span class=\"token punctuation\">,</span> fullscreenW<span class=\"token punctuation\">,</span> fullscreenH<span class=\"token punctuation\">,</span> SWP_SHOWWINDOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tcurrentW <span class=\"token operator\">=</span> fullscreenW<span class=\"token punctuation\">;</span>\n\t\tcurrentH <span class=\"token operator\">=</span> fullscreenH<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> targetWindowMode <span class=\"token operator\">==</span> OF_WINDOW <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// set window shape if started in fullscreen</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>windowRect<span class=\"token punctuation\">.</span>width <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> windowRect<span class=\"token punctuation\">.</span>height <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\twindowRect<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token function\">getWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\t\t\twindowRect<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token function\">getWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\t\t\twindowRect<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> <span class=\"token function\">getWindowSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\t\t\twindowRect<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token function\">getWindowSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\tHWND hwnd <span class=\"token operator\">=</span> <span class=\"token function\">glfwGetWin32Window</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tDWORD EX_STYLE <span class=\"token operator\">=</span> WS_EX_OVERLAPPEDWINDOW<span class=\"token punctuation\">;</span>\n\t\tDWORD STYLE <span class=\"token operator\">=</span> WS_OVERLAPPED <span class=\"token operator\">|</span> WS_CAPTION <span class=\"token operator\">|</span> WS_SYSMENU <span class=\"token operator\">|</span> WS_MINIMIZEBOX <span class=\"token operator\">|</span> WS_MAXIMIZEBOX <span class=\"token operator\">|</span> WS_CLIPCHILDREN <span class=\"token operator\">|</span> WS_CLIPSIBLINGS <span class=\"token operator\">|</span> WS_SIZEBOX<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">ChangeDisplaySettings</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">SetWindowLong</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> GWL_EXSTYLE<span class=\"token punctuation\">,</span> EX_STYLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">SetWindowLong</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> GWL_STYLE<span class=\"token punctuation\">,</span> STYLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">SetWindowPos</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> HWND_NOTOPMOST<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> SWP_NOMOVE <span class=\"token operator\">|</span> SWP_NOSIZE <span class=\"token operator\">|</span> SWP_FRAMECHANGED <span class=\"token operator\">|</span> SWP_SHOWWINDOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//not sure why this is - but if we don't do this the window shrinks by 4 pixels in x and y</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//should look for a better fix.</span>\n\t\t<span class=\"token function\">setWindowPosition</span><span class=\"token punctuation\">(</span>windowRect<span class=\"token punctuation\">.</span>x<span class=\"token number\">-2</span><span class=\"token punctuation\">,</span> windowRect<span class=\"token punctuation\">.</span>y<span class=\"token number\">-2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">setWindowShape</span><span class=\"token punctuation\">(</span>windowRect<span class=\"token punctuation\">.</span>width<span class=\"token operator\">+</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> windowRect<span class=\"token punctuation\">.</span>height<span class=\"token operator\">+</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\tsettings<span class=\"token punctuation\">.</span>windowMode <span class=\"token operator\">=</span> targetWindowMode<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">toggleFullscreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>windowMode <span class=\"token operator\">==</span> OF_GAME_MODE<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>windowMode <span class=\"token operator\">==</span> OF_WINDOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setFullscreen</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setFullscreen</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">setOrientation</span><span class=\"token punctuation\">(</span>ofOrientation orientation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>orientation <span class=\"token operator\">=</span> orientation<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\nofOrientation ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">getOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> orientation<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">rotateMouseXY</span><span class=\"token punctuation\">(</span>ofOrientation orientation<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> <span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> <span class=\"token operator\">&amp;</span>y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> savedY<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>orientation<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> OF_ORIENTATION_180<span class=\"token operator\">:</span>\n\t\t\tx <span class=\"token operator\">=</span> w <span class=\"token operator\">-</span> x<span class=\"token punctuation\">;</span>\n\t\t\ty <span class=\"token operator\">=</span> h <span class=\"token operator\">-</span> y<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_ORIENTATION_90_RIGHT<span class=\"token operator\">:</span>\n\t\t\tsavedY <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n\t\t\ty <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n\t\t\tx <span class=\"token operator\">=</span> w<span class=\"token operator\">-</span>savedY<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_ORIENTATION_90_LEFT<span class=\"token operator\">:</span>\n\t\t\tsavedY <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n\t\t\ty <span class=\"token operator\">=</span> h <span class=\"token operator\">-</span> x<span class=\"token punctuation\">;</span>\n\t\t\tx <span class=\"token operator\">=</span> savedY<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_ORIENTATION_DEFAULT<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\nofAppGLFWWindow <span class=\"token operator\">*</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">setCurrent</span><span class=\"token punctuation\">(</span>GLFWwindow<span class=\"token operator\">*</span> windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofAppGLFWWindow <span class=\"token operator\">*</span> instance <span class=\"token operator\">=</span> <span class=\"token keyword\">static_cast</span><span class=\"token operator\">&lt;</span>ofAppGLFWWindow <span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token function\">glfwGetWindowUserPointer</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tshared_ptr<span class=\"token operator\">&lt;</span>ofMainLoop<span class=\"token operator\">></span> mainLoop <span class=\"token operator\">=</span> <span class=\"token function\">ofGetMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mainLoop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tmainLoop<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setCurrentWindow</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">makeCurrent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> instance<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">namespace</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">glfwtToOFModifiers</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> mods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> modifiers <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mods <span class=\"token operator\">&amp;</span> GLFW_MOD_SHIFT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tmodifiers <span class=\"token operator\">|</span><span class=\"token operator\">=</span> OF_KEY_SHIFT<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mods <span class=\"token operator\">&amp;</span> GLFW_MOD_ALT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tmodifiers <span class=\"token operator\">|</span><span class=\"token operator\">=</span> OF_KEY_ALT<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mods <span class=\"token operator\">&amp;</span> GLFW_MOD_CONTROL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tmodifiers <span class=\"token operator\">|</span><span class=\"token operator\">=</span> OF_KEY_CONTROL<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mods <span class=\"token operator\">&amp;</span> GLFW_MOD_SUPER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tmodifiers <span class=\"token operator\">|</span><span class=\"token operator\">=</span> OF_KEY_SUPER<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> modifiers<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> <span class=\"token function\">keycodeToUnicode</span><span class=\"token punctuation\">(</span>ofAppGLFWWindow <span class=\"token operator\">*</span> window<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> scancode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> modifier<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_LINUX</span>\n\tXkbStateRec xkb_state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">XkbGetState</span><span class=\"token punctuation\">(</span>window<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getX11Display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> XkbUseCoreKbd<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>xkb_state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tXEvent ev <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\tev<span class=\"token punctuation\">.</span>xkey<span class=\"token punctuation\">.</span>keycode <span class=\"token operator\">=</span> scancode<span class=\"token punctuation\">;</span>\n\tev<span class=\"token punctuation\">.</span>xkey<span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> xkb_state<span class=\"token punctuation\">.</span>mods <span class=\"token operator\">&amp;</span> <span class=\"token operator\">~</span>ControlMask<span class=\"token punctuation\">;</span>\n\tev<span class=\"token punctuation\">.</span>xkey<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> window<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getX11Display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tev<span class=\"token punctuation\">.</span>xkey<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> KeyPress<span class=\"token punctuation\">;</span>\n\tKeySym keysym <span class=\"token operator\">=</span> NoSymbol<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> status<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">char</span> buffer<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">char</span><span class=\"token operator\">*</span> chars <span class=\"token operator\">=</span> buffer<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> count <span class=\"token operator\">=</span> <span class=\"token function\">Xutf8LookupString</span><span class=\"token punctuation\">(</span>window<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getX11XIC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ev<span class=\"token punctuation\">.</span>xkey<span class=\"token punctuation\">,</span> chars<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>keysym<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>count <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">==</span> XLookupChars <span class=\"token operator\">||</span> status <span class=\"token operator\">==</span> XLookupBoth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> status <span class=\"token operator\">==</span> XLookupKeySym<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span> c <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>chars<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> ch <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> offsets<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t    <span class=\"token number\">0x00000000u</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x00003080u</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x000e2080u</span><span class=\"token punctuation\">,</span>\n\t\t    <span class=\"token number\">0x03c82080u</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xfa082080u</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x82082080u</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">do</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\tch <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ch <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>c<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>c<span class=\"token punctuation\">)</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\tcount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span>c <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xc0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>count<span class=\"token operator\">></span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> ch <span class=\"token operator\">-</span> offsets<span class=\"token punctuation\">[</span>count <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_WIN32</span>\n\t<span class=\"token keyword\">static</span> WCHAR buf<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> BYTE keyboardState<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">GetKeyboardState</span><span class=\"token punctuation\">(</span> keyboardState <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// Careful: keycode arrives translated into GLFW key codes,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// but keycode needs to be a virtual key (VK_...) so we're</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// in deep troble, since this information has been removed</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// by GLFW...</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// The way around this is to ask the operating system</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// nicely to create a virtual key for us, based on</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// the scancode and the currently bound keyboard layout.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// https://msdn.microsoft.com/en-us/library/windows/desktop/ms646306(v=vs.85).aspx</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// create a \"fake\" virtual key</span>\n\n\tUINT fakeVirtualKey <span class=\"token operator\">=</span> <span class=\"token function\">MapVirtualKey</span><span class=\"token punctuation\">(</span> scancode<span class=\"token punctuation\">,</span> MAPVK_VSC_TO_VK_EX <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span> ret <span class=\"token operator\">=</span> <span class=\"token function\">ToUnicode</span><span class=\"token punctuation\">(</span> fakeVirtualKey<span class=\"token punctuation\">,</span> scancode<span class=\"token punctuation\">,</span> keyboardState<span class=\"token punctuation\">,</span> buf <span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> ret <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OSX</span>\n\t<span class=\"token keyword\">static</span> UInt32 deadKeyState <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> UniChar characters<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> UniCharCount characterCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> __TISInputSource<span class=\"token operator\">*</span>  TISInputSourceRef<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">typedef</span> <span class=\"token function\">TISInputSourceRef</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pFnGetInputSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// define function pointer that may return a input source ref, no arguments</span>\n\t<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pFnGetInputSourceProperty<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>TISInputSourceRef<span class=\"token punctuation\">,</span>CFStringRef<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">typedef</span> <span class=\"token function\">UInt8</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>pFnGetKeyboardType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> CFBundleRef tisBundle <span class=\"token operator\">=</span> <span class=\"token function\">CFBundleGetBundleWithIdentifier</span><span class=\"token punctuation\">(</span><span class=\"token function\">CFSTR</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.apple.HIToolbox\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// We need to call some system methods, following GLFW's example</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// in their OS X version of ```_glfwPlatformGetKeyName```.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// We know these methods must be available, since GLFW uses them</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// internally.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// The most important method is ```UCKeyTranslate``` - everything</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// else here is just a royal preparation party to feed it with the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// correct parameters.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// Since these methods are hidden deep within Carbon,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// we have to first request function pointers to make</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// them callable.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// We do this only the first time, then we're re-using them,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// that's why these elements are marked static, and static const.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t<span class=\"token keyword\">static</span> pFnGetInputSource         getInputSource         <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>pFnGetInputSource<span class=\"token punctuation\">)</span><span class=\"token function\">CFBundleGetFunctionPointerForName</span><span class=\"token punctuation\">(</span>tisBundle<span class=\"token punctuation\">,</span> <span class=\"token function\">CFSTR</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TISCopyCurrentKeyboardLayoutInputSource\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> pFnGetKeyboardType        getKeyboardType        <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>pFnGetKeyboardType<span class=\"token punctuation\">)</span><span class=\"token function\">CFBundleGetFunctionPointerForName</span><span class=\"token punctuation\">(</span>tisBundle<span class=\"token punctuation\">,</span><span class=\"token function\">CFSTR</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"LMGetKbdType\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> pFnGetInputSourceProperty getInputSourceProperty <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>pFnGetInputSourceProperty<span class=\"token punctuation\">)</span><span class=\"token function\">CFBundleGetFunctionPointerForName</span><span class=\"token punctuation\">(</span>tisBundle<span class=\"token punctuation\">,</span> <span class=\"token function\">CFSTR</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"TISGetInputSourceProperty\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> TISInputSourceRef sourceRef <span class=\"token operator\">=</span> <span class=\"token function\">getInputSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// note that for the first time, this creates a copy on the heap, then we're re-using it.</span>\n\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> CFStringRef<span class=\"token operator\">*</span> kPropertyUnicodeKeyLayoutData <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>CFStringRef<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">CFBundleGetDataPointerForName</span><span class=\"token punctuation\">(</span>tisBundle<span class=\"token punctuation\">,</span> <span class=\"token function\">CFSTR</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kTISPropertyUnicodeKeyLayoutData\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> CFStringRef kTISPropertyUnicodeKeyLayoutData <span class=\"token operator\">=</span> <span class=\"token operator\">*</span> kPropertyUnicodeKeyLayoutData<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> CFDataRef UnicodeKeyLayoutData <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>CFDataRef<span class=\"token punctuation\">)</span><span class=\"token function\">getInputSourceProperty</span><span class=\"token punctuation\">(</span>sourceRef<span class=\"token punctuation\">,</span> kTISPropertyUnicodeKeyLayoutData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> UCKeyboardLayout<span class=\"token operator\">*</span> pKeyboardLayout <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>UCKeyboardLayout<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">CFDataGetBytePtr</span><span class=\"token punctuation\">(</span>UnicodeKeyLayoutData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tUInt32 mod_OSX <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// We have to translate the GLFW modifier bitflags back to OS X,</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// so that SHIFT, CONTROL, etc can be taken into account when</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// calculating the unicode codepoint.</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// UCKeyTranslate expects the Carbon-era modifier mask values,</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// so use these instead of the NSEventModifierFlag enums</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>modifier <span class=\"token operator\">&amp;</span> GLFW_MOD_SHIFT<span class=\"token punctuation\">)</span>\n\t\t\tmod_OSX <span class=\"token operator\">|</span><span class=\"token operator\">=</span> <span class=\"token number\">512</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// Carbon shiftKey value</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>modifier <span class=\"token operator\">&amp;</span> GLFW_MOD_CONTROL<span class=\"token punctuation\">)</span>\n\t\t\tmod_OSX <span class=\"token operator\">|</span><span class=\"token operator\">=</span> <span class=\"token number\">4096</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// Carbon controlKey value</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>modifier <span class=\"token operator\">&amp;</span> GLFW_MOD_ALT<span class=\"token punctuation\">)</span>\n\t\t\tmod_OSX <span class=\"token operator\">|</span><span class=\"token operator\">=</span> <span class=\"token number\">2048</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// Carbon optionKey value</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>modifier <span class=\"token operator\">&amp;</span> GLFW_MOD_SUPER<span class=\"token punctuation\">)</span>\n\t\t\tmod_OSX <span class=\"token operator\">|</span><span class=\"token operator\">=</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// Carbon cmdKey</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// shift into 1 byte as per the Apple docs</span>\n\t\tmod_OSX <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>mod_OSX <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xFF</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// All this yak shaving was necessary to feed this diva of a function call:</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// https://developer.apple.com/library/mac/documentation/Carbon/Reference/Unicode_Utilities_Ref/index.html#//apple_ref/c/func/UCKeyTranslate</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>noErr <span class=\"token operator\">==</span> <span class=\"token function\">UCKeyTranslate</span><span class=\"token punctuation\">(</span>pKeyboardLayout<span class=\"token punctuation\">,</span>\n\t                   scancode<span class=\"token punctuation\">,</span>\n\t                   kUCKeyActionDisplay<span class=\"token punctuation\">,</span>\n\t                   mod_OSX<span class=\"token punctuation\">,</span>\n\t                   <span class=\"token function\">getKeyboardType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t                   kUCKeyTranslateNoDeadKeysBit<span class=\"token punctuation\">,</span>\n\t                   <span class=\"token operator\">&amp;</span>deadKeyState<span class=\"token punctuation\">,</span>\n\t                   <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>characters<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>characters<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t                   <span class=\"token operator\">&amp;</span>characterCount<span class=\"token punctuation\">,</span>\n\t                   characters<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// if successful, first character contains codepoint</span>\n\t\t<span class=\"token keyword\">return</span> characters<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">mouse_cb</span><span class=\"token punctuation\">(</span>GLFWwindow<span class=\"token operator\">*</span> windowP_<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> state<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> mods<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tofAppGLFWWindow <span class=\"token operator\">*</span> instance <span class=\"token operator\">=</span> <span class=\"token function\">setCurrent</span><span class=\"token punctuation\">(</span>windowP_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OSX</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//we do this as unlike glut, glfw doesn't report right click for ctrl click or middle click for alt click</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> instance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getKeyPressed</span><span class=\"token punctuation\">(</span>OF_KEY_CONTROL<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> button <span class=\"token operator\">==</span> GLFW_MOUSE_BUTTON_LEFT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tbutton <span class=\"token operator\">=</span> GLFW_MOUSE_BUTTON_RIGHT<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> instance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getKeyPressed</span><span class=\"token punctuation\">(</span>OF_KEY_ALT<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> button <span class=\"token operator\">==</span> GLFW_MOUSE_BUTTON_LEFT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tbutton <span class=\"token operator\">=</span> GLFW_MOUSE_BUTTON_MIDDLE<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> GLFW_MOUSE_BUTTON_LEFT<span class=\"token operator\">:</span>\n\t\tbutton <span class=\"token operator\">=</span> OF_MOUSE_BUTTON_LEFT<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> GLFW_MOUSE_BUTTON_RIGHT<span class=\"token operator\">:</span>\n\t\tbutton <span class=\"token operator\">=</span> OF_MOUSE_BUTTON_RIGHT<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> GLFW_MOUSE_BUTTON_MIDDLE<span class=\"token operator\">:</span>\n\t\tbutton <span class=\"token operator\">=</span> OF_MOUSE_BUTTON_MIDDLE<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span>buttonInUse <span class=\"token operator\">=</span> button<span class=\"token punctuation\">;</span>\n\n\n\tofMouseEventArgs<span class=\"token operator\">::</span>Type action<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>state <span class=\"token operator\">==</span> GLFW_PRESS<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\taction <span class=\"token operator\">=</span> ofMouseEventArgs<span class=\"token operator\">::</span>Pressed<span class=\"token punctuation\">;</span>\n\t\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span>buttonPressed<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\taction <span class=\"token operator\">=</span> ofMouseEventArgs<span class=\"token operator\">::</span>Released<span class=\"token punctuation\">;</span>\n\t\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span>buttonPressed<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">int</span> modifiers <span class=\"token operator\">=</span> <span class=\"token function\">glfwtToOFModifiers</span><span class=\"token punctuation\">(</span>mods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tofMouseEventArgs <span class=\"token function\">args</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span> instance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMouseX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> instance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMouseY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> button<span class=\"token punctuation\">,</span> modifiers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">notifyMouseEvent</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">motion_cb</span><span class=\"token punctuation\">(</span>GLFWwindow<span class=\"token operator\">*</span> windowP_<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tofAppGLFWWindow <span class=\"token operator\">*</span> instance <span class=\"token operator\">=</span> <span class=\"token function\">setCurrent</span><span class=\"token punctuation\">(</span>windowP_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">rotateMouseXY</span><span class=\"token punctuation\">(</span>instance<span class=\"token operator\">-</span><span class=\"token operator\">></span>orientation<span class=\"token punctuation\">,</span> instance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> instance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tofMouseEventArgs<span class=\"token operator\">::</span>Type action<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>instance<span class=\"token operator\">-</span><span class=\"token operator\">></span>buttonPressed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\taction <span class=\"token operator\">=</span> ofMouseEventArgs<span class=\"token operator\">::</span>Moved<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\taction <span class=\"token operator\">=</span> ofMouseEventArgs<span class=\"token operator\">::</span>Dragged<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tofMouseEventArgs <span class=\"token function\">args</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span>\n\t    x<span class=\"token operator\">*</span>instance<span class=\"token operator\">-</span><span class=\"token operator\">></span>pixelScreenCoordScale<span class=\"token punctuation\">,</span>\n\t    y<span class=\"token operator\">*</span>instance<span class=\"token operator\">-</span><span class=\"token operator\">></span>pixelScreenCoordScale<span class=\"token punctuation\">,</span>\n\t    instance<span class=\"token operator\">-</span><span class=\"token operator\">></span>buttonInUse<span class=\"token punctuation\">,</span>\n\t    instance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getModifiers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">notifyMouseEvent</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">entry_cb</span><span class=\"token punctuation\">(</span>GLFWwindow <span class=\"token operator\">*</span>windowP_<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> entered<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tofAppGLFWWindow <span class=\"token operator\">*</span> instance <span class=\"token operator\">=</span> <span class=\"token function\">setCurrent</span><span class=\"token punctuation\">(</span>windowP_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofMouseEventArgs<span class=\"token operator\">::</span>Type action<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>entered<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\taction <span class=\"token operator\">=</span> ofMouseEventArgs<span class=\"token operator\">::</span>Entered<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\taction <span class=\"token operator\">=</span> ofMouseEventArgs<span class=\"token operator\">::</span>Exited<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tofMouseEventArgs <span class=\"token function\">args</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">,</span>\n\t    instance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMouseX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t    instance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMouseY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t    instance<span class=\"token operator\">-</span><span class=\"token operator\">></span>buttonInUse<span class=\"token punctuation\">,</span>\n\t    instance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getModifiers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">notifyMouseEvent</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">scroll_cb</span><span class=\"token punctuation\">(</span>GLFWwindow<span class=\"token operator\">*</span> windowP_<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tofAppGLFWWindow <span class=\"token operator\">*</span> instance <span class=\"token operator\">=</span> <span class=\"token function\">setCurrent</span><span class=\"token punctuation\">(</span>windowP_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">rotateMouseXY</span><span class=\"token punctuation\">(</span>instance<span class=\"token operator\">-</span><span class=\"token operator\">></span>orientation<span class=\"token punctuation\">,</span> instance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> instance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tofMouseEventArgs <span class=\"token function\">args</span><span class=\"token punctuation\">(</span>ofMouseEventArgs<span class=\"token operator\">::</span>Scrolled<span class=\"token punctuation\">,</span>\n\t    instance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMouseX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t    instance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMouseY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t    instance<span class=\"token operator\">-</span><span class=\"token operator\">></span>buttonInUse<span class=\"token punctuation\">,</span>\n\t    instance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getModifiers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\targs<span class=\"token punctuation\">.</span>scrollX <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n\targs<span class=\"token punctuation\">.</span>scrollY <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">notifyMouseEvent</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">drop_cb</span><span class=\"token punctuation\">(</span>GLFWwindow<span class=\"token operator\">*</span> windowP_<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> numFiles<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span> dropString<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tofAppGLFWWindow <span class=\"token operator\">*</span> instance <span class=\"token operator\">=</span> <span class=\"token function\">setCurrent</span><span class=\"token punctuation\">(</span>windowP_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofDragInfo drag<span class=\"token punctuation\">;</span>\n\tdrag<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>instance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMouseX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> instance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMouseY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\tdrag<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span>numFiles<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>drag<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tdrag<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span><span class=\"token function\">path</span><span class=\"token punctuation\">(</span>dropString<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">notifyDragEvent</span><span class=\"token punctuation\">(</span>drag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">error_cb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> errorCode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> errorDescription<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofAppGLFWWindow\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> errorCode <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\": \"</span> <span class=\"token operator\">&lt;&lt;</span> errorDescription<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">keyboard_cb</span><span class=\"token punctuation\">(</span>GLFWwindow<span class=\"token operator\">*</span> windowP_<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> keycode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> scancode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> action<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> mods<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> key <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tuint32_t codepoint <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tofAppGLFWWindow <span class=\"token operator\">*</span> instance <span class=\"token operator\">=</span> <span class=\"token function\">setCurrent</span><span class=\"token punctuation\">(</span>windowP_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>keycode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_ESCAPE<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_ESC<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_F1<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_F1<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_F2<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_F2<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_F3<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_F3<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_F4<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_F4<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_F5<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_F5<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_F6<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_F6<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_F7<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_F7<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_F8<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_F8<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_F9<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_F9<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_F10<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_F10<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_F11<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_F11<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_F12<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_F12<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_LEFT<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_LEFT<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_RIGHT<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_RIGHT<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_UP<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_UP<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_DOWN<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_DOWN<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_PAGE_UP<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_PAGE_UP<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_PAGE_DOWN<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_PAGE_DOWN<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_HOME<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_HOME<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_END<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_END<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_INSERT<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_INSERT<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_LEFT_SHIFT<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_LEFT_SHIFT<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_LEFT_CONTROL<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_LEFT_CONTROL<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_LEFT_ALT<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_LEFT_ALT<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_LEFT_SUPER<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_LEFT_SUPER<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_RIGHT_SHIFT<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_RIGHT_SHIFT<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_RIGHT_CONTROL<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_RIGHT_CONTROL<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_RIGHT_ALT<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_RIGHT_ALT<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_RIGHT_SUPER<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_RIGHT_SUPER<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_BACKSPACE<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_BACKSPACE<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_DELETE<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_DEL<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_ENTER<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_RETURN<span class=\"token punctuation\">;</span>\n\t\t\tcodepoint <span class=\"token operator\">=</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_KP_ENTER<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_RETURN<span class=\"token punctuation\">;</span>\n\t\t\tcodepoint <span class=\"token operator\">=</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_TAB<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> OF_KEY_TAB<span class=\"token punctuation\">;</span>\n\t\t\tcodepoint <span class=\"token operator\">=</span> <span class=\"token string\">'\\t'</span><span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_KP_0<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> codepoint <span class=\"token operator\">=</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_KP_1<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> codepoint <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_KP_2<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> codepoint <span class=\"token operator\">=</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_KP_3<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> codepoint <span class=\"token operator\">=</span> <span class=\"token string\">'3'</span><span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_KP_4<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> codepoint <span class=\"token operator\">=</span> <span class=\"token string\">'4'</span><span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_KP_5<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> codepoint <span class=\"token operator\">=</span> <span class=\"token string\">'5'</span><span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_KP_6<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> codepoint <span class=\"token operator\">=</span> <span class=\"token string\">'6'</span><span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_KP_7<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> codepoint <span class=\"token operator\">=</span> <span class=\"token string\">'7'</span><span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_KP_8<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> codepoint <span class=\"token operator\">=</span> <span class=\"token string\">'8'</span><span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_KP_9<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> codepoint <span class=\"token operator\">=</span> <span class=\"token string\">'9'</span><span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_KP_DIVIDE<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> codepoint <span class=\"token operator\">=</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_KP_MULTIPLY<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> codepoint <span class=\"token operator\">=</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_KP_SUBTRACT<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> codepoint <span class=\"token operator\">=</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_KP_ADD<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> codepoint <span class=\"token operator\">=</span> <span class=\"token string\">'+'</span><span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_KP_DECIMAL<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> codepoint <span class=\"token operator\">=</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GLFW_KEY_KP_EQUAL<span class=\"token operator\">:</span>\n\t\t\tkey <span class=\"token operator\">=</span> codepoint <span class=\"token operator\">=</span> <span class=\"token string\">'='</span><span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\tcodepoint <span class=\"token operator\">=</span> <span class=\"token function\">keycodeToUnicode</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">,</span> scancode<span class=\"token punctuation\">,</span> mods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tkey <span class=\"token operator\">=</span> codepoint<span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">int</span> modifiers <span class=\"token operator\">=</span> <span class=\"token function\">glfwtToOFModifiers</span><span class=\"token punctuation\">(</span>mods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>action <span class=\"token operator\">==</span> GLFW_PRESS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tofKeyEventArgs <span class=\"token function\">keyE</span><span class=\"token punctuation\">(</span>ofKeyEventArgs<span class=\"token operator\">::</span>Pressed<span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">,</span>keycode<span class=\"token punctuation\">,</span>scancode<span class=\"token punctuation\">,</span>codepoint<span class=\"token punctuation\">,</span>modifiers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">notifyKeyEvent</span><span class=\"token punctuation\">(</span>keyE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>action <span class=\"token operator\">==</span> GLFW_REPEAT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tofKeyEventArgs <span class=\"token function\">keyE</span><span class=\"token punctuation\">(</span>ofKeyEventArgs<span class=\"token operator\">::</span>Pressed<span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">,</span>keycode<span class=\"token punctuation\">,</span>scancode<span class=\"token punctuation\">,</span>codepoint<span class=\"token punctuation\">,</span>modifiers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tkeyE<span class=\"token punctuation\">.</span>isRepeat <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">notifyKeyEvent</span><span class=\"token punctuation\">(</span>keyE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>action <span class=\"token operator\">==</span> GLFW_RELEASE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tofKeyEventArgs <span class=\"token function\">keyE</span><span class=\"token punctuation\">(</span>ofKeyEventArgs<span class=\"token operator\">::</span>Released<span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">,</span>keycode<span class=\"token punctuation\">,</span>scancode<span class=\"token punctuation\">,</span>codepoint<span class=\"token punctuation\">,</span>modifiers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">notifyKeyEvent</span><span class=\"token punctuation\">(</span>keyE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">char_cb</span><span class=\"token punctuation\">(</span>GLFWwindow<span class=\"token operator\">*</span> windowP_<span class=\"token punctuation\">,</span> uint32_t key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofAppGLFWWindow <span class=\"token operator\">*</span> instance <span class=\"token operator\">=</span> <span class=\"token function\">setCurrent</span><span class=\"token punctuation\">(</span>windowP_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>charEvent<span class=\"token punctuation\">.</span><span class=\"token function\">notify</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">resize_cb</span><span class=\"token punctuation\">(</span>GLFWwindow<span class=\"token operator\">*</span> windowP_<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tofAppGLFWWindow <span class=\"token operator\">*</span> instance <span class=\"token operator\">=</span> <span class=\"token function\">setCurrent</span><span class=\"token punctuation\">(</span>windowP_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// Detect if the window is running in a retina mode</span>\n\n\t<span class=\"token keyword\">int</span> framebufferW<span class=\"token punctuation\">,</span> framebufferH<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// &lt;- physical pixel extents</span>\n\t<span class=\"token function\">glfwGetFramebufferSize</span><span class=\"token punctuation\">(</span>windowP_<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>framebufferW<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>framebufferH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span> windowW<span class=\"token punctuation\">,</span> windowH<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// &lt;- screen coordinates, which may be scaled</span>\n\t<span class=\"token function\">glfwGetWindowSize</span><span class=\"token punctuation\">(</span>windowP_<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>windowW<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>windowH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// Find scale factor needed to transform from screen coordinates</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// to physical pixel coordinates</span>\n\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span>pixelScreenCoordScale <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>framebufferW <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>windowW<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>instance<span class=\"token operator\">-</span><span class=\"token operator\">></span>settings<span class=\"token punctuation\">.</span>windowMode <span class=\"token operator\">==</span> OF_WINDOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span>windowW <span class=\"token operator\">=</span> framebufferW<span class=\"token punctuation\">;</span>\n\t\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span>windowH <span class=\"token operator\">=</span> framebufferH<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span>currentW <span class=\"token operator\">=</span> windowW<span class=\"token punctuation\">;</span>\n\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span>currentH <span class=\"token operator\">=</span> windowH<span class=\"token punctuation\">;</span>\n\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">notifyWindowResized</span><span class=\"token punctuation\">(</span>framebufferW<span class=\"token punctuation\">,</span> framebufferH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span>nFramesSinceWindowResized <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">framebuffer_size_cb</span><span class=\"token punctuation\">(</span>GLFWwindow<span class=\"token operator\">*</span> windowP_<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">resize_cb</span><span class=\"token punctuation\">(</span>windowP_<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">exit_cb</span><span class=\"token punctuation\">(</span>GLFWwindow<span class=\"token operator\">*</span> windowP_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofAppGLFWWindow <span class=\"token operator\">*</span> instance <span class=\"token operator\">=</span> <span class=\"token function\">setCurrent</span><span class=\"token punctuation\">(</span>windowP_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">notifyExit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">setVerticalSync</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bVerticalSync<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bVerticalSync<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glfwSwapInterval</span><span class=\"token punctuation\">(</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glfwSwapInterval</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">setClipboardString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string<span class=\"token operator\">&amp;</span> text<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glfwSetClipboardString</span><span class=\"token punctuation\">(</span>ofAppGLFWWindow<span class=\"token operator\">::</span>windowP<span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\nstring ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">getClipboardString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> clipboard <span class=\"token operator\">=</span> <span class=\"token function\">glfwGetClipboardString</span><span class=\"token punctuation\">(</span>ofAppGLFWWindow<span class=\"token operator\">::</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>clipboard<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> clipboard<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">listVideoModes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glfwInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> numModes<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> GLFWvidmode <span class=\"token operator\">*</span> vidModes <span class=\"token operator\">=</span> <span class=\"token function\">glfwGetVideoModes</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>numModes <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>numModes<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> vidModes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>width <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" x \"</span> <span class=\"token operator\">&lt;&lt;</span> vidModes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>height\n\t\t<span class=\"token operator\">&lt;&lt;</span> vidModes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>redBits<span class=\"token operator\">+</span>vidModes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>greenBits<span class=\"token operator\">+</span>vidModes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>blueBits <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"bit\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">listMonitors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glfwInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> count<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">auto</span> monitors <span class=\"token operator\">=</span> <span class=\"token function\">glfwGetMonitors</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">auto</span> monitor <span class=\"token operator\">=</span> monitors<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glfwGetMonitorPhysicalSize</span><span class=\"token punctuation\">(</span>monitor<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>w<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glfwGetMonitorPos</span><span class=\"token punctuation\">(</span>monitor<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> i <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\": \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">glfwGetMonitorName</span><span class=\"token punctuation\">(</span>monitor<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", physical size: \"</span> <span class=\"token operator\">&lt;&lt;</span> w <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"x\"</span> <span class=\"token operator\">&lt;&lt;</span> h <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"mm at \"</span> <span class=\"token operator\">&lt;&lt;</span> x <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">&lt;&lt;</span> y<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">isWindowIconified</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">glfwGetWindowAttrib</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">,</span> GLFW_ICONIFIED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">isWindowActive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token comment\" spellcheck=\"true\">//\treturn glfwGetWindowParam(GLFW_ACTIVE);</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">isWindowResizeable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token function\">glfwGetWindowAttrib</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">,</span> GLFW_RESIZABLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">iconify</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bIconify<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bIconify<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">glfwIconifyWindow</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">else</span>\n\t\t<span class=\"token function\">glfwRestoreWindow</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n<span class=\"token keyword\">void</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">makeCurrent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glfwMakeContextCurrent</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_LINUX)</span>\nDisplay<span class=\"token operator\">*</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">getX11Display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">glfwGetX11Display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nWindow ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">getX11Window</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">glfwGetX11Window</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nXIC\tofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">getX11XIC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> xic<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_LINUX) &amp;&amp; !defined(TARGET_OPENGLES)</span>\nGLXContext ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">getGLXContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">glfwGetGLXContext</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_LINUX) &amp;&amp; defined(TARGET_OPENGLES)</span>\nEGLDisplay ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">getEGLDisplay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">glfwGetEGLDisplay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nEGLContext ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">getEGLContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">glfwGetEGLContext</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nEGLSurface ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">getEGLSurface</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">glfwGetEGLSurface</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_OSX)</span>\n<span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">getNSGLContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">glfwGetNSGLContext</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">getCocoaWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">glfwGetCocoaWindow</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_WIN32)</span>\nHGLRC ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">getWGLContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">glfwGetWGLContext</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nHWND ofAppGLFWWindow<span class=\"token operator\">::</span><span class=\"token function\">getWin32Window</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">glfwGetWin32Window</span><span class=\"token punctuation\">(</span>windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n","type":"source","static":true}}],"fetch":[]}