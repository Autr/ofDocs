{"data":[{"page":{"entry":{"name":"ofSoundPlayer.cpp","filename":"ofSoundPlayer.cpp","absolute":"/Users/gilbertsinnott/Code/openFrameworks/libs/openFrameworks/sound/ofSoundPlayer.cpp","path":"/openframeworks/sound/ofSoundPlayer_cpp","route":"/openframeworks/sound/ofSoundPlayer.cpp","dir":"../libs/openFrameworks/sound","ext":"cpp","type":"source","id":311,"parent":300,"breadcrumbs":[300,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofSoundPlayer.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofLog.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"glm/common.hpp\"</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// these are global functions, that affect every sound / channel:</span>\n<span class=\"token comment\" spellcheck=\"true\">// ------------------------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">// ------------------------------------------------------------</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSoundStopAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_SOUND_PLAYER_FMOD</span>\n\t\t<span class=\"token function\">ofFmodSoundStopAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofSoundPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ofSoundStopAll() not implemented on this platform\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSoundSetVolume</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> vol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_SOUND_PLAYER_FMOD</span>\n\t\t<span class=\"token function\">ofFmodSoundSetVolume</span><span class=\"token punctuation\">(</span>vol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofSoundPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ofSoundSetVolume() not implemented on this platform\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSoundUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_SOUND_PLAYER_FMOD</span>\n\t\t<span class=\"token function\">ofFmodSoundUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> !defined(TARGET_ANDROID) &amp;&amp; !defined(TARGET_LINUX_ARM)</span>\n<span class=\"token comment\" spellcheck=\"true\">//--------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSoundShutdown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_SOUND_PLAYER_FMOD</span>\n\t\tofFmodSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">closeFmod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">// ofSoundShutdown doesn't log an \"unimplemented\" message like the related functions</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// above, because it's called by the openFrameworks shutdown routine regardless</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token operator\">*</span> <span class=\"token function\">ofSoundGetSpectrum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> nBands<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_SOUND_PLAYER_FMOD</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofFmodSoundGetSpectrum</span><span class=\"token punctuation\">(</span>nBands<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(OF_SOUND_PLAYER_OPENAL)</span>\n\t\t<span class=\"token keyword\">return</span> ofOpenALSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">getSystemSpectrum</span><span class=\"token punctuation\">(</span>nBands<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(OF_SOUND_PLAYER_EMSCRIPTEN)</span>\n\t\t<span class=\"token keyword\">return</span> ofxEmscriptenSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">getSystemSpectrum</span><span class=\"token punctuation\">(</span>nBands<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofSoundPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ofSoundGetSpectrum() not implemented on this platform, returning nullptr\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\nofSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">ofSoundPlayer</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_SOUND_PLAYER_TYPE</span>\n\tplayer\t<span class=\"token operator\">=</span> std<span class=\"token operator\">::</span>make_shared<span class=\"token operator\">&lt;</span>OF_SOUND_PLAYER_TYPE<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">setPlayer</span><span class=\"token punctuation\">(</span>shared_ptr<span class=\"token operator\">&lt;</span>ofBaseSoundPlayer<span class=\"token operator\">></span> newPlayer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tplayer <span class=\"token operator\">=</span> newPlayer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\nshared_ptr<span class=\"token operator\">&lt;</span>ofBaseSoundPlayer<span class=\"token operator\">></span> ofSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">getPlayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> player<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path<span class=\"token operator\">&amp;</span> fileName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> player <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> player<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">,</span> stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">loadSound</span><span class=\"token punctuation\">(</span>string fileName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">load</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">,</span>stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">unload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> player <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tplayer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">unload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">unloadSound</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">unload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> player <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tplayer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> player <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tplayer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">setVolume</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> vol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> player <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tplayer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setVolume</span><span class=\"token punctuation\">(</span>vol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">setPan</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> pan<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> player <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tplayer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setPan</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">clamp</span><span class=\"token punctuation\">(</span>pan<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1.0f</span><span class=\"token punctuation\">,</span><span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">setSpeed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> spd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> player <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tplayer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setSpeed</span><span class=\"token punctuation\">(</span>spd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">setPaused</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> player <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tplayer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setPaused</span><span class=\"token punctuation\">(</span>bP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">setLoop</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bLp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> player <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tplayer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setLoop</span><span class=\"token punctuation\">(</span>bLp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">setMultiPlay</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bMp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> player <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tplayer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setMultiPlay</span><span class=\"token punctuation\">(</span>bMp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> pct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> player <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tplayer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>pct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">setPositionMS</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> ms<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> player <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tplayer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setPositionMS</span><span class=\"token punctuation\">(</span>ms<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">float</span> ofSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> player <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> player<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">getPositionMS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> player <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> player<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getPositionMS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">isPlaying</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> player <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> player<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">isPlaying</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">getIsPlaying</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">isPlaying</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">isLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> player <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> player<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">isLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> \n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">float</span> ofSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">getSpeed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> player <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> player<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getSpeed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">float</span> ofSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">getPan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> player <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> player<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getPan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">float</span> ofSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">getVolume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> player <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> player<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getVolume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n","type":"source","static":true}}],"fetch":[]}