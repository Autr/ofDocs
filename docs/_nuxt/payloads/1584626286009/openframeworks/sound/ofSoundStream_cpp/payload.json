{"data":[{"page":{"entry":{"name":"ofSoundStream.cpp","filename":"ofSoundStream.cpp","absolute":"/Users/gilbertsinnott/Code/openFrameworks/libs/openFrameworks/sound/ofSoundStream.cpp","path":"/openframeworks/sound/ofSoundStream_cpp","route":"/openframeworks/sound/ofSoundStream.cpp","dir":"../libs/openFrameworks/sound","ext":"cpp","type":"source","id":313,"parent":300,"breadcrumbs":[300,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofSoundStream.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofAppRunner.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofLog.h\"</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(OF_SOUND_PLAYER_FMOD)</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofSoundPlayer.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_SOUNDSTREAM_RTAUDIO</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofRtAudioSoundStream.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_SOUND_STREAM_TYPE ofRtAudioSoundStream</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(OF_SOUNDSTREAM_ANDROID)</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxAndroidSoundStream.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_SOUND_STREAM_TYPE ofxAndroidSoundStream</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(OF_SOUNDSTREAM_IOS)</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxiOSSoundStream.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_SOUND_STREAM_TYPE ofxiOSSoundStream</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(OF_SOUNDSTREAM_EMSCRIPTEN)</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxEmscriptenSoundStream.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_SOUND_STREAM_TYPE ofxEmscriptenSoundStream</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token keyword\">namespace</span><span class=\"token punctuation\">{</span>\n    ofSoundStream systemSoundStream<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofSoundStreamSettings<span class=\"token operator\">::</span><span class=\"token function\">setInDevice</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofSoundDevice <span class=\"token operator\">&amp;</span> device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>api<span class=\"token operator\">!=</span>ofSoundDevice<span class=\"token operator\">::</span>UNSPECIFIED <span class=\"token operator\">&amp;&amp;</span> device<span class=\"token punctuation\">.</span>api<span class=\"token operator\">!=</span>api<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofSoundStreamSettings\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Setting IN device with api: \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" will override the previously set: \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>api<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tapi <span class=\"token operator\">=</span> device<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">;</span>\n\tinDevice <span class=\"token operator\">=</span> device<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofSoundStreamSettings<span class=\"token operator\">::</span><span class=\"token function\">setOutDevice</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofSoundDevice <span class=\"token operator\">&amp;</span> device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>api<span class=\"token operator\">!=</span>ofSoundDevice<span class=\"token operator\">::</span>UNSPECIFIED <span class=\"token operator\">&amp;&amp;</span> device<span class=\"token punctuation\">.</span>api<span class=\"token operator\">!=</span>api<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofSoundStreamSettings\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Setting OUT device with api: \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" will override the previously set: \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>api<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tapi <span class=\"token operator\">=</span> device<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">;</span>\n\toutDevice <span class=\"token operator\">=</span> device<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofSoundStreamSettings<span class=\"token operator\">::</span><span class=\"token function\">setApi</span><span class=\"token punctuation\">(</span>ofSoundDevice<span class=\"token operator\">::</span>Api api<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>api<span class=\"token operator\">!=</span>ofSoundDevice<span class=\"token operator\">::</span>UNSPECIFIED <span class=\"token operator\">&amp;&amp;</span> inDevice<span class=\"token punctuation\">.</span>deviceID<span class=\"token operator\">!=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> inDevice<span class=\"token punctuation\">.</span>api <span class=\"token operator\">!=</span> api<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofSoundStreamSettings\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Setting API after setting IN device with api: \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>inDevice<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" won't do anything\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>api<span class=\"token operator\">!=</span>ofSoundDevice<span class=\"token operator\">::</span>UNSPECIFIED <span class=\"token operator\">&amp;&amp;</span> outDevice<span class=\"token punctuation\">.</span>deviceID<span class=\"token operator\">!=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> outDevice<span class=\"token punctuation\">.</span>api <span class=\"token operator\">!=</span> api<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofSoundStreamSettings\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Setting API after setting IN device with api: \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>outDevice<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" won't do anything\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>api <span class=\"token operator\">=</span> api<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">const</span> ofSoundDevice <span class=\"token operator\">*</span> ofSoundStreamSettings<span class=\"token operator\">::</span><span class=\"token function\">getInDevice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> inDevice<span class=\"token punctuation\">.</span>deviceID<span class=\"token operator\">==</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">nullptr</span> <span class=\"token operator\">:</span> <span class=\"token operator\">&amp;</span>inDevice<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">const</span> ofSoundDevice <span class=\"token operator\">*</span> ofSoundStreamSettings<span class=\"token operator\">::</span><span class=\"token function\">getOutDevice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> outDevice<span class=\"token punctuation\">.</span>deviceID<span class=\"token operator\">==</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">nullptr</span> <span class=\"token operator\">:</span> <span class=\"token operator\">&amp;</span>outDevice<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\nofSoundDevice<span class=\"token operator\">::</span>Api ofSoundStreamSettings<span class=\"token operator\">::</span><span class=\"token function\">getApi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> api<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSoundStreamSetup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> nOutputChannels<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nInputChannels<span class=\"token punctuation\">,</span> ofBaseApp <span class=\"token operator\">*</span> appPtr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> appPtr <span class=\"token operator\">==</span> <span class=\"token keyword\">nullptr</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tappPtr <span class=\"token operator\">=</span> <span class=\"token function\">ofGetAppPtr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tofSoundStreamSettings settings<span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span>numOutputChannels <span class=\"token operator\">=</span> nOutputChannels<span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span>numInputChannels <span class=\"token operator\">=</span> nInputChannels<span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span><span class=\"token function\">setOutListener</span><span class=\"token punctuation\">(</span>appPtr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span><span class=\"token function\">setInListener</span><span class=\"token punctuation\">(</span>appPtr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofSoundStreamSetup</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSoundStreamSetup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> nOutputChannels<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nInputChannels<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> sampleRate<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> bufferSize<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nBuffers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofSoundStreamSettings settings<span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span>numOutputChannels <span class=\"token operator\">=</span> nOutputChannels<span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span>numInputChannels <span class=\"token operator\">=</span> nInputChannels<span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span><span class=\"token function\">setOutListener</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetAppPtr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span><span class=\"token function\">setInListener</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetAppPtr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span>numBuffers <span class=\"token operator\">=</span> nBuffers<span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span>sampleRate <span class=\"token operator\">=</span> sampleRate<span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span>bufferSize <span class=\"token operator\">=</span> bufferSize<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofSoundStreamSetup</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSoundStreamSetup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> nOutputChannels<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nInputChannels<span class=\"token punctuation\">,</span> ofBaseApp <span class=\"token operator\">*</span> appPtr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> sampleRate<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> bufferSize<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nBuffers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofSoundStreamSettings settings<span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span>numOutputChannels <span class=\"token operator\">=</span> nOutputChannels<span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span>numInputChannels <span class=\"token operator\">=</span> nInputChannels<span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span><span class=\"token function\">setOutListener</span><span class=\"token punctuation\">(</span>appPtr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span><span class=\"token function\">setInListener</span><span class=\"token punctuation\">(</span>appPtr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span>numBuffers <span class=\"token operator\">=</span> nBuffers<span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span>sampleRate <span class=\"token operator\">=</span> sampleRate<span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span>bufferSize <span class=\"token operator\">=</span> bufferSize<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofSoundStreamSetup</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSoundStreamSetup</span><span class=\"token punctuation\">(</span>ofSoundStreamSettings <span class=\"token operator\">&amp;</span> settings<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tsystemSoundStream<span class=\"token punctuation\">.</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSoundStreamStop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    systemSoundStream<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSoundStreamStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    systemSoundStream<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSoundStreamClose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    systemSoundStream<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\nvector<span class=\"token operator\">&lt;</span>ofSoundDevice<span class=\"token operator\">></span> <span class=\"token function\">ofSoundStreamListDevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tvector<span class=\"token operator\">&lt;</span>ofSoundDevice<span class=\"token operator\">></span> deviceList <span class=\"token operator\">=</span> systemSoundStream<span class=\"token punctuation\">.</span><span class=\"token function\">getDeviceList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofSoundStreamListDevices\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl <span class=\"token operator\">&lt;&lt;</span> deviceList<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> deviceList<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\nofSoundStream<span class=\"token operator\">::</span><span class=\"token function\">ofSoundStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_SOUND_STREAM_TYPE</span>\n\t\t<span class=\"token function\">setSoundStream</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>make_shared<span class=\"token operator\">&lt;</span>OF_SOUND_STREAM_TYPE<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofSoundStream<span class=\"token operator\">::</span><span class=\"token function\">setSoundStream</span><span class=\"token punctuation\">(</span>shared_ptr<span class=\"token operator\">&lt;</span>ofBaseSoundStream<span class=\"token operator\">></span> soundStreamPtr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tsoundStream <span class=\"token operator\">=</span> soundStreamPtr<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\nshared_ptr<span class=\"token operator\">&lt;</span>ofBaseSoundStream<span class=\"token operator\">></span> ofSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getSoundStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> soundStream<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\nvector<span class=\"token operator\">&lt;</span>ofSoundDevice<span class=\"token operator\">></span> ofSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getDeviceList</span><span class=\"token punctuation\">(</span>ofSoundDevice<span class=\"token operator\">::</span>Api api<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> soundStream <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> soundStream<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getDeviceList</span><span class=\"token punctuation\">(</span>api<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> vector<span class=\"token operator\">&lt;</span>ofSoundDevice<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\nvector<span class=\"token operator\">&lt;</span>ofSoundDevice<span class=\"token operator\">></span> ofSoundStream<span class=\"token operator\">::</span><span class=\"token function\">listDevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tvector<span class=\"token operator\">&lt;</span>ofSoundDevice<span class=\"token operator\">></span> deviceList <span class=\"token operator\">=</span> <span class=\"token function\">getDeviceList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofSoundStream::listDevices\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl <span class=\"token operator\">&lt;&lt;</span> deviceList<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> deviceList<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofSoundStream<span class=\"token operator\">::</span><span class=\"token function\">printDeviceList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> soundStream <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tsoundStream<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">printDeviceList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofSoundStream<span class=\"token operator\">::</span><span class=\"token function\">setDeviceID</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> deviceID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> soundStream <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\ttmpDeviceId <span class=\"token operator\">=</span> deviceID<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofSoundStream<span class=\"token operator\">::</span><span class=\"token function\">setDevice</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofSoundDevice <span class=\"token operator\">&amp;</span>device<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> soundStream <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        tmpDeviceId <span class=\"token operator\">=</span> device<span class=\"token punctuation\">.</span>deviceID<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofSoundStream<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofSoundStreamSettings <span class=\"token operator\">&amp;</span> settings<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>soundStream<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(OF_SOUND_PLAYER_FMOD)</span>\n\t\t<span class=\"token function\">ofFmodSetBuffersize</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>bufferSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token keyword\">return</span> soundStream<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofSoundStream<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>ofBaseApp <span class=\"token operator\">*</span> app<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> outChannels<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> inChannels<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> sampleRate<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> bufferSize<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nBuffers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> soundStream <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tofSoundStreamSettings settings<span class=\"token punctuation\">;</span>\n\t\tsettings<span class=\"token punctuation\">.</span><span class=\"token function\">setInListener</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tsettings<span class=\"token punctuation\">.</span><span class=\"token function\">setOutListener</span><span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tsettings<span class=\"token punctuation\">.</span>numOutputChannels <span class=\"token operator\">=</span> outChannels<span class=\"token punctuation\">;</span>\n\t\tsettings<span class=\"token punctuation\">.</span>numInputChannels <span class=\"token operator\">=</span> inChannels<span class=\"token punctuation\">;</span>\n\t\tsettings<span class=\"token punctuation\">.</span>sampleRate <span class=\"token operator\">=</span> sampleRate<span class=\"token punctuation\">;</span>\n\t\tsettings<span class=\"token punctuation\">.</span>bufferSize <span class=\"token operator\">=</span> bufferSize<span class=\"token punctuation\">;</span>\n\t\tsettings<span class=\"token punctuation\">.</span>numBuffers <span class=\"token operator\">=</span> nBuffers<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tmpDeviceId<span class=\"token operator\">!=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tofSoundDevice device<span class=\"token punctuation\">;</span>\n\t\t\tdevice<span class=\"token punctuation\">.</span>deviceID <span class=\"token operator\">=</span> tmpDeviceId<span class=\"token punctuation\">;</span>\n\t\t\tsettings<span class=\"token punctuation\">.</span><span class=\"token function\">setInDevice</span><span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tsettings<span class=\"token punctuation\">.</span><span class=\"token function\">setOutDevice</span><span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">return</span> soundStream<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofSoundStream<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> outChannels<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> inChannels<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> sampleRate<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> bufferSize<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nBuffers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> soundStream <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tofSoundStreamSettings settings<span class=\"token punctuation\">;</span>\n\t\tsettings<span class=\"token punctuation\">.</span><span class=\"token function\">setInListener</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetAppPtr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tsettings<span class=\"token punctuation\">.</span><span class=\"token function\">setOutListener</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetAppPtr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tsettings<span class=\"token punctuation\">.</span>numOutputChannels <span class=\"token operator\">=</span> outChannels<span class=\"token punctuation\">;</span>\n\t\tsettings<span class=\"token punctuation\">.</span>numInputChannels <span class=\"token operator\">=</span> inChannels<span class=\"token punctuation\">;</span>\n\t\tsettings<span class=\"token punctuation\">.</span>sampleRate <span class=\"token operator\">=</span> sampleRate<span class=\"token punctuation\">;</span>\n\t\tsettings<span class=\"token punctuation\">.</span>bufferSize <span class=\"token operator\">=</span> bufferSize<span class=\"token punctuation\">;</span>\n\t\tsettings<span class=\"token punctuation\">.</span>numBuffers <span class=\"token operator\">=</span> nBuffers<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tmpDeviceId<span class=\"token operator\">!=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tofSoundDevice device<span class=\"token punctuation\">;</span>\n\t\t\tdevice<span class=\"token punctuation\">.</span>deviceID <span class=\"token operator\">=</span> tmpDeviceId<span class=\"token punctuation\">;</span>\n\t\t\tsettings<span class=\"token punctuation\">.</span><span class=\"token function\">setInDevice</span><span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tsettings<span class=\"token punctuation\">.</span><span class=\"token function\">setOutDevice</span><span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">return</span> soundStream<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofSoundStream<span class=\"token operator\">::</span><span class=\"token function\">setInput</span><span class=\"token punctuation\">(</span>ofBaseSoundInput <span class=\"token operator\">*</span> soundInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> soundStream <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tsoundStream<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setInput</span><span class=\"token punctuation\">(</span>soundInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofSoundStream<span class=\"token operator\">::</span><span class=\"token function\">setInput</span><span class=\"token punctuation\">(</span>ofBaseSoundInput <span class=\"token operator\">&amp;</span>soundInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setInput</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>soundInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofSoundStream<span class=\"token operator\">::</span><span class=\"token function\">setOutput</span><span class=\"token punctuation\">(</span>ofBaseSoundOutput <span class=\"token operator\">*</span> soundOutput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> soundStream <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tsoundStream<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setOutput</span><span class=\"token punctuation\">(</span>soundOutput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofSoundStream<span class=\"token operator\">::</span><span class=\"token function\">setOutput</span><span class=\"token punctuation\">(</span>ofBaseSoundOutput <span class=\"token operator\">&amp;</span>soundOutput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setOutput</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>soundOutput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofSoundStream<span class=\"token operator\">::</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> soundStream <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tsoundStream<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofSoundStream<span class=\"token operator\">::</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> soundStream <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tsoundStream<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofSoundStream<span class=\"token operator\">::</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> soundStream <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tsoundStream<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\nuint64_t ofSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getTickCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> soundStream <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> soundStream<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getTickCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getNumInputChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> soundStream <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> soundStream<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getNumInputChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getNumOutputChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> soundStream <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> soundStream<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getNumOutputChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getSampleRate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> soundStream <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> soundStream<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getSampleRate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getBufferSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> soundStream <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> soundStream<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getBufferSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\nvector<span class=\"token operator\">&lt;</span>ofSoundDevice<span class=\"token operator\">></span> ofSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getMatchingDevices</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> inChannels<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> outChannels<span class=\"token punctuation\">,</span> ofSoundDevice<span class=\"token operator\">::</span>Api api<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\tvector<span class=\"token operator\">&lt;</span>ofSoundDevice<span class=\"token operator\">></span> devs <span class=\"token operator\">=</span> <span class=\"token function\">getDeviceList</span><span class=\"token punctuation\">(</span>api<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tvector<span class=\"token operator\">&lt;</span>ofSoundDevice<span class=\"token operator\">></span> hits<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> devs<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">bool</span> nameMatch <span class=\"token operator\">=</span> devs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> string<span class=\"token operator\">::</span>npos<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span> inMatch <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>inChannels <span class=\"token operator\">==</span> UINT_MAX<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>devs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>inputChannels <span class=\"token operator\">==</span> inChannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span> outMatch <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>outChannels <span class=\"token operator\">==</span> UINT_MAX<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>devs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>outputChannels <span class=\"token operator\">==</span> outChannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>nameMatch <span class=\"token operator\">&amp;&amp;</span> inMatch <span class=\"token operator\">&amp;&amp;</span> outMatch<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\thits<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>devs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">return</span> hits<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n","type":"source","static":true}}],"fetch":[]}