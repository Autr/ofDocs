{"data":[{"page":{"entry":{"name":"ofGraphics.h","filename":"ofGraphics.h","absolute":"/Users/gilbertsinnott/Code/openFrameworks/libs/openFrameworks/graphics/ofGraphics.h","path":"/openframeworks/graphics/ofGraphics_h","route":"/openframeworks/graphics/ofGraphics.h","dir":"../libs/openFrameworks/graphics","ext":"h","type":"source","id":267,"parent":259,"breadcrumbs":[259,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGraphicsBaseTypes.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofRectangle.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"glm/fwd.hpp\"</span></span>\n<span class=\"token comment\" spellcheck=\"true\">//#include \"ofUtils.h\"</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofVec3f</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofVec2f</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofColor_</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">typedef</span> ofColor_<span class=\"token operator\">&lt;</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">></span> ofColor<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> ofColor_<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span> ofFloatColor<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> ofColor_<span class=\"token operator\">&lt;</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">short</span><span class=\"token operator\">></span> ofShortColor<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\nstd<span class=\"token operator\">::</span>string <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> T<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\cond INTERNAL</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span>  \tCIRC_RESOLUTION\t\t    22</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\endcond</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\name Color</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\{</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Sets the draw color with r,g,b, 0-255. For example, red would</span>\n<span class=\"token comment\" spellcheck=\"true\">/// be: ofSetColor(255,0,0). This affects not only the color of shapes drawn</span>\n<span class=\"token comment\" spellcheck=\"true\">/// with ofDrawRectangle(), ofDrawCircle(), etc, but also the tint of images and</span>\n<span class=\"token comment\" spellcheck=\"true\">/// textures.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofSetColor(0,0,255);    //set the color to blue</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectangle(10,10,100,100);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Sets the draw color with r,g,b,a 0-255.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// For alpha (transparency), you must first enable transparent blending</span>\n<span class=\"token comment\" spellcheck=\"true\">/// (turned off by default for performance reasons) with</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ofEnableAlphaBlending()</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofEnableAlphaBlending();    // turn on alpha blending</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofSetColor(255,0,0,127);    // red, 50% transparent</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectangle(20,20,100,100);</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDisableAlphaBlending();   // turn it back off, if you don't need it</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> _a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> gray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// Sets the draw color with r,g,b, passed in as a hex. Hex is a conventient</span>\n<span class=\"token comment\" spellcheck=\"true\">/// way to write colors.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofSetColor(0xffffff);  // white  (255,255,255)</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofSetColor(0x000000);  // black  (0,0,0);</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofSetColor(0x00ff00);  // green  (0,255,0);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetHexColor</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> hexColor <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw shapes as outlines with the current draw color.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofSetColor(0,0,255);</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofNoFill();</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectangle(10,10,100,100);  //draws only the outline in blue</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofNoFill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw shapes filled with the current draw color.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofSetColor(0,0,255);</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofFill();</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRect(10,10,100,100);  //draws the rectangle filled in blue</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofFill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nofFillFlag <span class=\"token function\">ofGetFill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\name Background Color</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\{</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Returns the current background color as an ofColor.</span>\nofColor <span class=\"token function\">ofGetBackgroundColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofGetBackgroundColor instead\"</span><span class=\"token punctuation\">,</span>ofColor <span class=\"token function\">ofGetBackground</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Sets the background color.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// It takes as input r,g,b (0-255). The background is</span>\n<span class=\"token comment\" spellcheck=\"true\">/// cleared automatically, just before the draw() command, so if the background</span>\n<span class=\"token comment\" spellcheck=\"true\">/// color is not changing, you could call this inside of setup() (once, at the</span>\n<span class=\"token comment\" spellcheck=\"true\">/// start of the application). If the background color is changing, you can call</span>\n<span class=\"token comment\" spellcheck=\"true\">/// this inside of update().</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::setup(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofBackground(255,0,0);  // Sets the background color to red</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofBackground</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> a<span class=\"token operator\">=</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofBackground</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> brightness<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> alpha <span class=\"token operator\">=</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofBackground</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Sets the background color using a hex color value.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::setup(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofBackgroundHex(0xff0000);  // Sets the background color to red</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofBackgroundHex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> hexColor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> alpha <span class=\"token operator\">=</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Sets the background color to a gradient.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// It takes as input 2 ofColor() objects and a Gradient Mode.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Must be called in the draw() function.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Accepted modes are:</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// - Circular: `OF_GRADIENT_CIRCULAR`</span>\n<span class=\"token comment\" spellcheck=\"true\">/// - Linear: `OF_GRADIENT_LINEAR`</span>\n<span class=\"token comment\" spellcheck=\"true\">/// - Bar: `OF_GRADIENT_BAR`</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// **Background Gradient: Circular:**</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ![Background Gradient Circular](bkgGradient_circular.png)</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofColor colorOne(255, 0, 0);</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofColor colorTwo(0, 0, 0);</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofBackgroundGradient(colorOne, colorTwo, OF_GRADIENT_CIRCULAR);</span>\n<span class=\"token comment\" spellcheck=\"true\">///     // Sets the background to a circular gradient</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// **Background Gradient: Linear:**</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ![Background Gradient Linear](bkgGradient_linear.png)</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofColor colorOne(255, 0, 0);</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofColor colorTwo(0, 0, 0);</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofBackgroundGradient(colorOne, colorTwo, OF_GRADIENT_LINEAR);</span>\n<span class=\"token comment\" spellcheck=\"true\">///       // Sets the background to a linear gradient</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// **Background Gradient: Bar:**</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ![Background Gradient Bar](bkgGradient_bar.png)</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofColor colorOne(255, 0, 0);</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofColor colorTwo(0, 0, 0);</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofBackgroundGradient(colorOne, colorTwo, OF_GRADIENT_BAR);</span>\n<span class=\"token comment\" spellcheck=\"true\">///       // Sets the background to a bar gradient</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofBackgroundGradient</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor<span class=\"token operator\">&amp;</span> start<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofColor<span class=\"token operator\">&amp;</span> end<span class=\"token punctuation\">,</span> ofGradientMode mode <span class=\"token operator\">=</span> OF_GRADIENT_CIRCULAR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Sets the background color. It takes as input r,g,b (0-255). The</span>\n<span class=\"token comment\" spellcheck=\"true\">/// background is cleared automatically, just before the draw() command, so</span>\n<span class=\"token comment\" spellcheck=\"true\">/// if the background color is not changing, you could call this inside</span>\n<span class=\"token comment\" spellcheck=\"true\">/// setup() (once, at the start of the application). If the background color</span>\n<span class=\"token comment\" spellcheck=\"true\">/// is changing, you can call this inside update().</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::setup(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofSetBackgroundColor(255,0,0);  // Sets the background color to red</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetBackgroundColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> a<span class=\"token operator\">=</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetBackgroundColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> brightness<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> alpha <span class=\"token operator\">=</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetBackgroundColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Sets the background color using a hex color value.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::setup(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofSetBackgroundColorHex(0xff0000);  // Sets the background color to red</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetBackgroundColorHex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> hexColor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> alpha <span class=\"token operator\">=</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Sets the background clearing function to be auto (default) or not. If non-</span>\n<span class=\"token comment\" spellcheck=\"true\">/// auto, then background clearing will not occur per frame (at the start of</span>\n<span class=\"token comment\" spellcheck=\"true\">/// draw) but rather, whenever ofBackground is called.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::setup(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofSetBackgroundAuto(false); //disable automatic background redraw</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     if(ofGetFrameNum() % 10 == 0){</span>\n<span class=\"token comment\" spellcheck=\"true\">///         // draws a black background every 10 frames</span>\n<span class=\"token comment\" spellcheck=\"true\">///         ofSetBackgroundColor(0,0,0);</span>\n<span class=\"token comment\" spellcheck=\"true\">///     }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetBackgroundAuto</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bManual<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\" spellcheck=\"true\">// default is true</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofGetBackgroundAuto</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Clears the color and depth bits of current renderer and replaces it with</span>\n<span class=\"token comment\" spellcheck=\"true\">/// an RGB color.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// When drawing to the screen, ofClear() will clear the screen entirely.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw() {</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofClear(255, 0, 0);</span>\n<span class=\"token comment\" spellcheck=\"true\">///     // Clears current screen and replaces it with red.</span>\n<span class=\"token comment\" spellcheck=\"true\">///     // Screen will render as a flat color.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// When using the openGL renderer and drawing into an</span>\n<span class=\"token comment\" spellcheck=\"true\">/// [FBO][1], ofClear() will clear that buffer rather than the main</span>\n<span class=\"token comment\" spellcheck=\"true\">/// screen.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw() {</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofFbo myFbo;</span>\n<span class=\"token comment\" spellcheck=\"true\">///     myFbo.allocate(300, 300);</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///     myFbo.begin();</span>\n<span class=\"token comment\" spellcheck=\"true\">///         ofClear(255, 0, 0);</span>\n<span class=\"token comment\" spellcheck=\"true\">///         // Clears FBO buffer and replaces it with red.</span>\n<span class=\"token comment\" spellcheck=\"true\">///         // No effect in current drawing screen.</span>\n<span class=\"token comment\" spellcheck=\"true\">///     myFbo.end();</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ofClear() is based on [glClear][2].</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// [1]: http://www.openframeworks.cc/documentation/gl/ofFbo.html</span>\n<span class=\"token comment\" spellcheck=\"true\">/// [2]: http://www.opengl.org/sdk/docs/man/xhtml/glClear.xml</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofClear</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Clears the color and depth bits of current renderer and replaces it with a</span>\n<span class=\"token comment\" spellcheck=\"true\">/// grayscale value.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofClear(128);</span>\n<span class=\"token comment\" spellcheck=\"true\">///     // Clears current screen and replaces it with a grayscale value.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofClear</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> brightness<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Clears the color and depth bits of current renderer and replaces it with</span>\n<span class=\"token comment\" spellcheck=\"true\">/// an ofColor.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofColor myColor(0, 0, 255);</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofClear(myColor);</span>\n<span class=\"token comment\" spellcheck=\"true\">///     // Clears current screen and replaces it with myColor.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofClear</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofClearAlpha</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// OF's access to settings (bgAuto, origin, corner mode):</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofGetBackgroundAuto instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">bool</span> <span class=\"token function\">ofbClearBg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\name 2D Primitives Drawing</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\{</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws a triangle, with the three points: (x1,y1),(x2, y2),(x3, y3).</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawTriangle(50,10,10,40,90,40);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawTriangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> x3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawTriangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> z1<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> z2<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> x3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y3<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> z3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawTriangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawTriangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span> p1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span> p2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span> p3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws a circle, centered at x,y, with a given radius.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawCircle(150,150,100);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Please keep in mind that drawing circle with different outline color and</span>\n<span class=\"token comment\" spellcheck=\"true\">/// fill requires calling ofNoFill and ofSetColor for drawing stroke and</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ofFill and again ofSetColor for filled solid color circle.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawCircle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawCircle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawCircle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawCircle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws an ellipse from point (x,y) with a given width (w) and height (h).</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawEllipse(10,10,50,30);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawEllipse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawEllipse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawEllipse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawEllipse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// Draws a line between two points: (x1,y1),(x2,y2).</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawLine(10,10,100,100);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawLine</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawLine</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> z1<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> z2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawLine</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawLine</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span> p1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span> p2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws a rectangle from point x,y with a given width and height.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRect(10,10,100,100);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawRectangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws an rectangle from the given rectangle.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofRectangle rect;</span>\n<span class=\"token comment\" spellcheck=\"true\">///     rect.x = 10;</span>\n<span class=\"token comment\" spellcheck=\"true\">///     rect.y = 10;</span>\n<span class=\"token comment\" spellcheck=\"true\">///     rect.width = 100;</span>\n<span class=\"token comment\" spellcheck=\"true\">///     rect.height = 100;</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectangle(rect);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawRectangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofRectangle <span class=\"token operator\">&amp;</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws an rectangle from point p, with a given width and height.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     glm::vec3 p;      // create a point P</span>\n<span class=\"token comment\" spellcheck=\"true\">///     p.x = 10;       // set the x of the point</span>\n<span class=\"token comment\" spellcheck=\"true\">///     p.y = 10;       // set the y of the point</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectangle(p, 80, 80); // Draw the rectangle</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawRectangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawRectangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/// Draws an rectangle from point X, Y at depth Z with a given width and height.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectangle(10,10,-100, 80, 80); // Draw a rectangle at 100 pixels in depth</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawRectangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws a rounded rectangle from the given rectangle using given</span>\n<span class=\"token comment\" spellcheck=\"true\">/// radius.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofRectangle myRect;</span>\n<span class=\"token comment\" spellcheck=\"true\">///     myRect.x = 10;</span>\n<span class=\"token comment\" spellcheck=\"true\">///     myRect.y = 10;</span>\n<span class=\"token comment\" spellcheck=\"true\">///     myRect.width = 100;</span>\n<span class=\"token comment\" spellcheck=\"true\">///     myRect.height = 100;</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectRounded(myRect, 10);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawRectRounded</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofRectangle <span class=\"token operator\">&amp;</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws a rectangle from point p with a given width, height and radius of</span>\n<span class=\"token comment\" spellcheck=\"true\">/// rounded corners.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofPoint p;</span>\n<span class=\"token comment\" spellcheck=\"true\">///     p.set ( 10, 10 );</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectRounded( p, 100, 100, 10 );</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawRectRounded</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawRectRounded</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws a rectangle from point X, Y with a given width, height and radius of</span>\n<span class=\"token comment\" spellcheck=\"true\">/// rounded corners.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectRounded(10, 10, 100, 100, 10);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawRectRounded</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws a rectangle from point X, Y, at depth Z with a given width, height and</span>\n<span class=\"token comment\" spellcheck=\"true\">/// radius of rounded corners.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectRounded(10, 10, 10, 100, 100, 10);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawRectRounded</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws a rounded rectangle from point X, Y, at depth Z with a given width,</span>\n<span class=\"token comment\" spellcheck=\"true\">/// height and radius of rounded corners.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectRounded(10, 10, 10, 100, 100, 10);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawRectRounded</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> topLeftRadius<span class=\"token punctuation\">,</span>\n\t\t\t\t\t   <span class=\"token keyword\">float</span> topRightRadius<span class=\"token punctuation\">,</span>\n\t\t\t\t\t   <span class=\"token keyword\">float</span> bottomRightRadius<span class=\"token punctuation\">,</span>\n\t\t\t\t\t   <span class=\"token keyword\">float</span> bottomLeftRadius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawRectRounded</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> topLeftRadius<span class=\"token punctuation\">,</span>\n\t\t\t\t\t   <span class=\"token keyword\">float</span> topRightRadius<span class=\"token punctuation\">,</span>\n\t\t\t\t\t   <span class=\"token keyword\">float</span> bottomRightRadius<span class=\"token punctuation\">,</span>\n\t\t\t\t\t   <span class=\"token keyword\">float</span> bottomLeftRadius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws a rounded rectangle from the given rectangle using different given</span>\n<span class=\"token comment\" spellcheck=\"true\">/// radius for each of the corners.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofRectangle myRect;</span>\n<span class=\"token comment\" spellcheck=\"true\">///     myRect.x = 10;</span>\n<span class=\"token comment\" spellcheck=\"true\">///     myRect.y = 10;</span>\n<span class=\"token comment\" spellcheck=\"true\">///     myRect.width = 100;</span>\n<span class=\"token comment\" spellcheck=\"true\">///     myRect.height = 100;</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectRounded( myRect, 10, 20, 30, 40 );</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawRectRounded</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofRectangle <span class=\"token operator\">&amp;</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> topLeftRadius<span class=\"token punctuation\">,</span>\n\t\t\t\t\t   <span class=\"token keyword\">float</span> topRightRadius<span class=\"token punctuation\">,</span>\n\t\t\t\t\t   <span class=\"token keyword\">float</span> bottomRightRadius<span class=\"token punctuation\">,</span>\n\t\t\t\t\t   <span class=\"token keyword\">float</span> bottomLeftRadius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws a rounded rectangle from point X, Y, at depth Z with a given width,</span>\n<span class=\"token comment\" spellcheck=\"true\">/// height and different radius for each rounded corner.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectRounded(10, 10, 10, 100, 100, 10, 20, 30, 40);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawRectRounded</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> topLeftRadius<span class=\"token punctuation\">,</span>\n\t\t\t\t\t   <span class=\"token keyword\">float</span> topRightRadius<span class=\"token punctuation\">,</span>\n\t\t\t\t\t   <span class=\"token keyword\">float</span> bottomRightRadius<span class=\"token punctuation\">,</span>\n\t\t\t\t\t   <span class=\"token keyword\">float</span> bottomLeftRadius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws a curve from point (x1, y1) to point (x2, y2). The curve is shaped by</span>\n<span class=\"token comment\" spellcheck=\"true\">/// the two control points (x0,y0) and (x3,y3).</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawCurve</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws a 3-dimensional curve from point (x1, y1, z1) to point (x2, y2, z2).</span>\n<span class=\"token comment\" spellcheck=\"true\">/// The curve is shaped by the two control points (x0, y0, z0) and (x3, y3, z3).</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawCurve</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawBezier</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawBezier</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawTriangle instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">ofTriangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> x3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawTriangle instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">ofTriangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> z1<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> z2<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> x3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y3<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> z3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawTriangle instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">ofTriangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawCircle instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">ofCircle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawCircle instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">ofCircle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawCircle instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">ofCircle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawEllipse instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">ofEllipse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawEllipse instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">ofEllipse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawEllipse instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">ofEllipse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawLine instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">ofLine</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawLine instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">ofLine</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> z1<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> z2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawLine instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">ofLine</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawRectangle instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">ofRect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawRectangle instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">ofRect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofRectangle <span class=\"token operator\">&amp;</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawRectangle instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">ofRect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawRectangle instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">ofRect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawRectRounded instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">ofRectRounded</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofRectangle <span class=\"token operator\">&amp;</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawRectRounded instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">ofRectRounded</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawRectRounded instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">ofRectRounded</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawRectRounded instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">ofRectRounded</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawRectRounded instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">ofRectRounded</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> topLeftRadius<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <span class=\"token keyword\">float</span> topRightRadius<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <span class=\"token keyword\">float</span> bottomRightRadius<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <span class=\"token keyword\">float</span> bottomLeftRadius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawRectRounded instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">ofRectRounded</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofRectangle <span class=\"token operator\">&amp;</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> topLeftRadius<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <span class=\"token keyword\">float</span> topRightRadius<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <span class=\"token keyword\">float</span> bottomRightRadius<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <span class=\"token keyword\">float</span> bottomLeftRadius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawRectRounded instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">ofRectRounded</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> topLeftRadius<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <span class=\"token keyword\">float</span> topRightRadius<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <span class=\"token keyword\">float</span> bottomRightRadius<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t <span class=\"token keyword\">float</span> bottomLeftRadius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawCurve instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">ofCurve</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawCurve instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">ofCurve</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawBezier instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">ofBezier</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawBezier instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">ofBezier</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\name Custom Shapes Drawing</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\{</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Start drawing a new shape. Needs to be followed by a list of</span>\n<span class=\"token comment\" spellcheck=\"true\">/// vertex points and lastly a call to ofEndShape().</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// //draws a star</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ofSetPolyMode(OF_POLY_WINDING_NONZERO);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ofBeginShape();</span>\n<span class=\"token comment\" spellcheck=\"true\">///   ofVertex(400,135);</span>\n<span class=\"token comment\" spellcheck=\"true\">///   ofVertex(215,135);</span>\n<span class=\"token comment\" spellcheck=\"true\">///   ofVertex(365,25);</span>\n<span class=\"token comment\" spellcheck=\"true\">///   ofVertex(305,200);</span>\n<span class=\"token comment\" spellcheck=\"true\">///   ofVertex(250,25);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ofEndShape();</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofEndShape()</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofBeginShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Specifies a single point of a shape. To be called between ofBeginShape() and</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ofEndShape().</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofVertex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofVertex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofVertex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofVertex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofVertices</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector <span class=\"token operator\">&lt;</span>glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> polyPoints<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofVertices</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector <span class=\"token operator\">&lt;</span>glm<span class=\"token operator\">::</span>vec2<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> polyPoints<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofVertices</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector <span class=\"token operator\">&lt;</span>ofVec3f<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> polyPoints<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofVertices</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector <span class=\"token operator\">&lt;</span>ofVec2f<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> polyPoints<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Specifies a single point of a shape. The difference from ofVertex is that</span>\n<span class=\"token comment\" spellcheck=\"true\">/// the line describing the edge of the shape between two points will be a</span>\n<span class=\"token comment\" spellcheck=\"true\">/// curve as opposed to a straight line. The curve is automatically generated</span>\n<span class=\"token comment\" spellcheck=\"true\">/// using the catmull from formula.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// This function has to be called between ofBeginShape() and ofEndShape().</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofCurveVertex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofCurveVertex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofCurveVertex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofCurveVertex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws a curve through a series of vertices stored as a vector of</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ofPoints. Should be called between ofBeginShape() and ofEndShape().</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofCurveVertices</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector <span class=\"token operator\">&lt;</span>glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> curvePoints<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofCurveVertices</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector <span class=\"token operator\">&lt;</span>glm<span class=\"token operator\">::</span>vec2<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> curvePoints<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofCurveVertices</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector <span class=\"token operator\">&lt;</span>ofVec3f<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> curvePoints<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofCurveVertices</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector <span class=\"token operator\">&lt;</span>ofVec2f<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> curvePoints<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Describes a bezier curve through three points of a shape. To be called</span>\n<span class=\"token comment\" spellcheck=\"true\">/// between ofBeginShape() and ofEndShape().</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofBezierVertex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofBezierVertex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofBezierVertex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span> p1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span> p2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span> p3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofBezierVertex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">enum</span> ofCloseShape<span class=\"token punctuation\">{</span>\n\tOF_OPEN <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\tOF_CLOSE <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief This tells the program that your shape is finished and that it should now</span>\n<span class=\"token comment\" spellcheck=\"true\">/// draw it to the screen.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// This function must be called otherwise you will not see your shape.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param bClose If you set it to true it will automatically close your</span>\n<span class=\"token comment\" spellcheck=\"true\">/// shape for you. Default false.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofEndShape</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bClose <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Allows you to draw multiple contours within one shape. Call this</span>\n<span class=\"token comment\" spellcheck=\"true\">/// between ofBeginShape() and ofEndShape() to create a new contour for your</span>\n<span class=\"token comment\" spellcheck=\"true\">/// shape.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param bClose If set to true then the previous contour will be</span>\n<span class=\"token comment\" spellcheck=\"true\">/// automatically closed. Default false</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofNextContour</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bClose <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">// for multi contour shapes!</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\name Text Drawing</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\{</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the bitmap drawing mode</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Valid modes:</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// OF_BITMAPMODE_SCREEN: this is the default mode. It projects the 3d prosition onto</span>\n<span class=\"token comment\" spellcheck=\"true\">/// the screen so the letters always look the same size but can be positioned in any 3d coordinate.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// OF_BITMAPMODE_VIEWPORT: does the same as screen but uses the current viewport instead</span>\n<span class=\"token comment\" spellcheck=\"true\">/// of the full window if it's different.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// OF_BITMAPMODE_MODEL: uses real 3d coordinates so the text will look scaled if it's not in z=0</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// OF_BITMAPMODE_MODEL_BILLBOARD: uses real 3d coordinates but the text always faces the camera.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// OF_BITMAPMODE_SIMPLE: only does 2d and the z coordinate is just disacarded, so if z is not 0</span>\n<span class=\"token comment\" spellcheck=\"true\">/// the position in which it'll be drawn will be wrong.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetDrawBitmapMode</span><span class=\"token punctuation\">(</span>ofDrawBitmapMode mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws a bitmapped string, on screen, at point (x,y).</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// For example, you can write some text on screen like this:</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawBitmapString(\"hi!!\", 100,100);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Your strings can even be multiline:</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ofDrawBitmapString(\"a test</span>\n<span class=\"token comment\" spellcheck=\"true\">/// of multiline</span>\n<span class=\"token comment\" spellcheck=\"true\">/// text\", 100,100);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// you can also using dynamically generated strings. For example, to print</span>\n<span class=\"token comment\" spellcheck=\"true\">/// the frame rate:</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// string fpsStr = \"frame rate: \"+ofToString(ofGetFrameRate(), 2);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ofDrawBitmapString(fpsStr, 100,100);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\note ofDrawBitmapString wraps a glut function that uses glDrawPixels. On</span>\n<span class=\"token comment\" spellcheck=\"true\">/// some graphics cards, you may discover that glDrawPixels is slow (or even,</span>\n<span class=\"token comment\" spellcheck=\"true\">/// very slow). If so, you might want to investigate using ofTrueTypeFont</span>\n<span class=\"token comment\" spellcheck=\"true\">/// with a small typeface, non-anti-aliased, as a suitable alternative.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofTrueTypeFont</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawBitmapString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> T <span class=\"token operator\">&amp;</span> textString<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawBitmapString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> T <span class=\"token operator\">&amp;</span> textString<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawBitmapString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> T <span class=\"token operator\">&amp;</span> textString<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawBitmapString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> T <span class=\"token operator\">&amp;</span> textString<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawBitmapString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> textString<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawBitmapString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> textString<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawBitmapString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> textString<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawBitmapStringHighlight</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string text<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofColor<span class=\"token operator\">&amp;</span> background <span class=\"token operator\">=</span> ofColor<span class=\"token operator\">::</span>black<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofColor<span class=\"token operator\">&amp;</span> foreground <span class=\"token operator\">=</span> ofColor<span class=\"token operator\">::</span>white<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawBitmapStringHighlight</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string text<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofColor<span class=\"token operator\">&amp;</span> background <span class=\"token operator\">=</span> ofColor<span class=\"token operator\">::</span>black<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofColor<span class=\"token operator\">&amp;</span> foreground <span class=\"token operator\">=</span> ofColor<span class=\"token operator\">::</span>white<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawBitmapStringHighlight</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string text<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofColor<span class=\"token operator\">&amp;</span> background <span class=\"token operator\">=</span> ofColor<span class=\"token operator\">::</span>black<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofColor<span class=\"token operator\">&amp;</span> foreground <span class=\"token operator\">=</span> ofColor<span class=\"token operator\">::</span>white<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\name Rendering Settings</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\{</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Resets openGL screen coordinates and values back to OF defaults.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetupGraphicDefaults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetupScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Tells you if rectangle drawing mode is set to drawn from the center or drawn</span>\n<span class=\"token comment\" spellcheck=\"true\">/// from the top left corner, as set with the ofSetRectMode() function.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Default is `OF_RECTMODE_CORNER`</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     if(ofGetRectMode() == OF_RECTMODE_CORNER){</span>\n<span class=\"token comment\" spellcheck=\"true\">///         ofDrawRectangle(10,10,80,80);</span>\n<span class=\"token comment\" spellcheck=\"true\">///     }</span>\n<span class=\"token comment\" spellcheck=\"true\">///     else {</span>\n<span class=\"token comment\" spellcheck=\"true\">///         ofDrawRectangle(50,50,80,80);</span>\n<span class=\"token comment\" spellcheck=\"true\">///     }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofSetRectMode()</span>\nofRectMode  <span class=\"token function\">ofGetRectMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Sets the resolution for the ofDrawCircle command. By default, the circle is 22</span>\n<span class=\"token comment\" spellcheck=\"true\">/// points, but if you need to draw larger circles, you can adjust the</span>\n<span class=\"token comment\" spellcheck=\"true\">/// resolution using this command. All circles are cached in openGL using a</span>\n<span class=\"token comment\" spellcheck=\"true\">/// display list for optimization purposes.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofSetCircleResolution(10);</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawCircle(150,150,100);          //draws a rough circle</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofSetCircleResolution(100);</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawCircle(450,150,100);          //draws a fine circle</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetCircleResolution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      <span class=\"token comment\" spellcheck=\"true\">// if there 22 is a problem, you can change it here</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetCurveResolution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Sets the width of the ofDrawLine() called after.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofSetLineWidth(1);          // set line width to 1</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawLine(10,10,100,100);  // draw thin line</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofSetLineWidth(10);         // set line width to 10</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawLine(10,100,100,10);  // draw fat line</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetLineWidth</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> lineWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set depth testing on or off to either sort by z-depth (`true`)</span>\n<span class=\"token comment\" spellcheck=\"true\">/// or draw order (`false`).</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetDepthTest</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> depthTest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Turns on depth testing so rendering happens according to z-depth rather</span>\n<span class=\"token comment\" spellcheck=\"true\">/// than draw order.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofDisableDepthTest()</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofEnableDepthTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Turn off depth testing so rendering happens in draw order rather than by</span>\n<span class=\"token comment\" spellcheck=\"true\">/// z-depth.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Turning off depth test is useful for combining 3d scenes with 2d</span>\n<span class=\"token comment\" spellcheck=\"true\">/// overlays such as a control panel.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofPushMatrix();</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///         ofTranslate( ofGetWidth()/2, ofGetHeight()/2, 0 );</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///         ofEnableDepthTest();</span>\n<span class=\"token comment\" spellcheck=\"true\">///         ofSetColor(255);</span>\n<span class=\"token comment\" spellcheck=\"true\">///         ofDrawSphere(0,0,100,60);</span>\n<span class=\"token comment\" spellcheck=\"true\">///         ofSetColor(255,0,255);</span>\n<span class=\"token comment\" spellcheck=\"true\">///         ofDrawSphere(50,0,50,100);</span>\n<span class=\"token comment\" spellcheck=\"true\">///         ofDisableDepthTest();</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///         ofSetColor(0);</span>\n<span class=\"token comment\" spellcheck=\"true\">///         ofDrawRectangle(75,75,120,30);</span>\n<span class=\"token comment\" spellcheck=\"true\">///         ofSetColor(255);</span>\n<span class=\"token comment\" spellcheck=\"true\">///         ofDrawBitmapString(\"Some bubbles.\",85,90);</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofPopMatrix();</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofEnableDepthTest()</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDisableDepthTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Sets and enables the blend mode for drawing. The options are:</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///     OF_BLENDMODE_DISABLED</span>\n<span class=\"token comment\" spellcheck=\"true\">///     OF_BLENDMODE_ALPHA</span>\n<span class=\"token comment\" spellcheck=\"true\">///     OF_BLENDMODE_ADD</span>\n<span class=\"token comment\" spellcheck=\"true\">///     OF_BLENDMODE_SUBTRACT</span>\n<span class=\"token comment\" spellcheck=\"true\">///     OF_BLENDMODE_MULTIPLY</span>\n<span class=\"token comment\" spellcheck=\"true\">///     OF_BLENDMODE_SCREEN</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// There is a blendingExample in the openFrameworks examples > graphics</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofEnableBlendMode</span><span class=\"token punctuation\">(</span>ofBlendMode blendMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Disable the current blend mode.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDisableBlendMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Turn on point sprite.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Textures can be mapped onto points. By default, point size is 1pt. So</span>\n<span class=\"token comment\" spellcheck=\"true\">/// texture is not shown correctly. You can change point size by</span>\n<span class=\"token comment\" spellcheck=\"true\">/// `glPointSize(GLfloat size).</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofEnablePointSprites</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Turn off point sprites</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDisablePointSprites</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Turns on alpha blending (which is on by default since OF version 0.8.0).</span>\n<span class=\"token comment\" spellcheck=\"true\">/// It simply wraps opengl commands that enable blending, and turn on a common</span>\n<span class=\"token comment\" spellcheck=\"true\">/// blend mode.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofEnableAlphaBlending();    // turn on alpha blending</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofSetColor(255,0,0,127);    // red, 50% transparent</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectangle(20,20,100,100);      // draws the rect with alpha</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDisableAlphaBlending();   // turn off alpha</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectangle(120,20,100,100);     // draws the rect without alpha</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofEnableAlphaBlending</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">// this just turns on and off opengl blending, the common mode</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Turn off alpha blending.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofEnableAlphaBlending();    // turn on alpha blending</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofSetColor(255,0,0,127);    // red, 50% transparent</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectangle(20,20,100,100);      // draws the rect with alpha</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDisableAlphaBlending();   // turn off alpha</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectangle(120,20,100,100); // draws the rect without alpha</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofEnableAlphaBlending()</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDisableAlphaBlending</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofEnableSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Turn off smoothing. Currently, this only works for lines. You can draw a</span>\n<span class=\"token comment\" spellcheck=\"true\">/// filled object, and then draw the outline with smoothing enabled to get</span>\n<span class=\"token comment\" spellcheck=\"true\">/// smoothing effects on filled shapes.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDisableSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// Enables anti-aliasing (smoothing) for lines.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofEnableAntiAliasing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Turns off anti-aliasing (smoothing).</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDisableAntiAliasing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// drawing style - combines color, fill, blending and smoothing</span>\nofStyle <span class=\"token function\">ofGetStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the current style of the ofGraphics.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param style contains information of the graphics style such as</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ofColor, ofFill, polyMode and others.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\sa See ofStyle for more details.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetStyle</span><span class=\"token punctuation\">(</span>ofStyle style<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Saves the current style settings for the ofGraphics after its call.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Usage of ofPushStyle and ofPopStyle allow users to have more control of</span>\n<span class=\"token comment\" spellcheck=\"true\">/// certain graphics elements. All the style that applies to certain elements</span>\n<span class=\"token comment\" spellcheck=\"true\">/// is controled using ofStyle class. See ofStyle type.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// In the following example the properties of being red and filled only applies to the ellipse:</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofPushStyle();  // push the current style for use later</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofFill();</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofSetColor(255,0,0);</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawEllipse(30,10,40,40);</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofPopStyle();   // recall the pushed style</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawCircle(10,10,5);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token comment\" spellcheck=\"true\">/// sa ofPopStyle()</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofPushStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Restores the prior style settings. It needs to be called after ofPushStyle.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofPushStyle()</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofPopStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Sets the drawing behavior for overlapping parts of the same polygon.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Possible modes are:</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///     OF_POLY_WINDING_ODD</span>\n<span class=\"token comment\" spellcheck=\"true\">///     OF_POLY_WINDING_NONZERO</span>\n<span class=\"token comment\" spellcheck=\"true\">///     OF_POLY_WINDING_POSITIVE</span>\n<span class=\"token comment\" spellcheck=\"true\">///     OF_POLY_WINDING_NEGATIVE</span>\n<span class=\"token comment\" spellcheck=\"true\">///     OF_POLY_WINDING_ABS_GEQ_TWO</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetPolyMode</span><span class=\"token punctuation\">(</span>ofPolyWindingMode mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Sets the mode for drawing rectangles and other rectangular objects, if</span>\n<span class=\"token comment\" spellcheck=\"true\">/// they are corner aligned, or drawn so that the x,y position is the center</span>\n<span class=\"token comment\" spellcheck=\"true\">/// of the rectangle. possible options are `OF_RECTMODE_CENTER` and</span>\n<span class=\"token comment\" spellcheck=\"true\">/// `OF_RECTMODE_CORNER`. This affects not only how ofDrawRectangle() objects are drawn,</span>\n<span class=\"token comment\" spellcheck=\"true\">/// but also ofTexture (and therefore ofImage) objects.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofSetRectMode(OF_RECTMODE_CORNER); //set rectangle mode to the corner</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectangle(10,10,80,80);</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofSetRectMode(OF_RECTMODE_CENTER); //set rectangle mode to the center</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectangle(50,50,80,80);</span>\n<span class=\"token comment\" spellcheck=\"true\">///     // both rectangles are drawn at the same place</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetRectMode</span><span class=\"token punctuation\">(</span>ofRectMode mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\name Transformation</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\{</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Saves the current coordinate system allowing users to develop specific</span>\n<span class=\"token comment\" spellcheck=\"true\">/// movements in some graphic objects. ofPopMatrix needs to be called after.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// In the following example we only rotate the square.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofPushMatrix();         // push the current coordinate position</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofRotateX(90);          // change the coordinate system</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectangle(10,10,40,40);  // draw a rect</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofPopMatrix()           // recall the pushed coordinate position</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawCircle(10, 10, 5);    // draw a circle</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofPushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Restores the prior coordinate system.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofPushMatrix()</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofPopMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Query the current (oF internal) Transformation Matrix state.</span>\nglm<span class=\"token operator\">::</span>mat4 <span class=\"token function\">ofGetCurrentMatrix</span><span class=\"token punctuation\">(</span>ofMatrixMode matrixMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Query the current (oF internal) Orientation Matrix state.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\note  The matrix returned is the matrix openFrameworks uses internally</span>\n<span class=\"token comment\" spellcheck=\"true\">///        to calculate the (final, oriented) projection matrix as it is</span>\n<span class=\"token comment\" spellcheck=\"true\">///        passed on to the GPU.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///        Currently, only GL Programmable Renderer and GL Renderer</span>\n<span class=\"token comment\" spellcheck=\"true\">///        implement ofGetCurrentOrientationMatrix.</span>\nglm<span class=\"token operator\">::</span>mat4 <span class=\"token function\">ofGetCurrentOrientationMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Query the current (oF internal) Normal Matrix state.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\note  The matrix returned is the transposed of the inverse of the</span>\n<span class=\"token comment\" spellcheck=\"true\">///        view matrix</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///        Currently, only GL Programmable Renderer and GL Renderer</span>\n<span class=\"token comment\" spellcheck=\"true\">///        implement ofGetCurrentNormalMatrix.</span>\nglm<span class=\"token operator\">::</span>mat4 <span class=\"token function\">ofGetCurrentNormalMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Translate by (x,y,z) vector of our coordinate system.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// The call of ofTranslate() modifies graphics positions.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Use ofPushMatrix() and ofPopMatrix() to save and restore the untranslated</span>\n<span class=\"token comment\" spellcheck=\"true\">/// coordinate system.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofTranslate(100, 100, 0);   // move the coordinate system to position x 100 and y 100 and make that zero.</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectangle(0, 0, 10, 10);       // draw a rect at that position</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofTranslate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofTranslate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofTranslate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofScale</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> xAmnt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> yAmnt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> zAmnt <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Scale along the X, Y and Z axis with the same amount.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofScale</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofScale</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Produces a rotation around the vector (vecX,vecY,vecZ).</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// All graphics drawn after ofRotate is called are rotated. Use ofPushMatrix()</span>\n<span class=\"token comment\" spellcheck=\"true\">/// and ofPopMatrix() to save and restore the unrotated coordinate system.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofRotate(50, 1, 0.5, 0); //rotates the coordinate system 50 degrees along the x-axis and 25 degrees on the y-axis</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectangle(20,20,100,100);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param degrees Specifies the angle of rotation, in degrees.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param vecX specifies the x coordinates of a vector</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param vecY specifies the y coordinates of a vector</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param vecZ specifies the z coordinates of a vector</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofRotateDeg or ofRotateRad\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">ofRotate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecY<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecZ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Rotate around the z-axis</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofRotateDeg or ofRotateRad\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">ofRotate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Produces a rotation around the X-axis of our coordinate</span>\n<span class=\"token comment\" spellcheck=\"true\">/// system represented by the vector (1,0,0).</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofRotateX(45); //rotates the coordinate system 45 degrees around the x-axis</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectangle(20,20,100,100);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param degrees Specifies the angle of rotation, in degrees.</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofRotateXDeg or ofRotateXRad\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">ofRotateX</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Produces a rotation around the Y-axis of our coordinate</span>\n<span class=\"token comment\" spellcheck=\"true\">/// system represented by the vector (0,1,0).</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofRotateY(45); //rotates the coordinate system 45 degrees around the y-axis</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectangle(20,20,100,100);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param degrees Specifies the angle of rotation, in degrees.</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofRotateYDeg or ofRotateYRad\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">ofRotateY</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Produces a rotation around the Z-axis of our coordinate</span>\n<span class=\"token comment\" spellcheck=\"true\">/// system represented by the vector (0,0,1).</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofRotateZ(45); //rotates the coordinate system 45 degrees around the z-axis</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectangle(20,20,100,100);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param degrees Specifies the angle of rotation, in degrees.</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofRotateZDeg or ofRotateZRad\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">ofRotateZ</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Produces a rotation around the vector (vecX,vecY,vecZ).</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// All graphics drawn after ofRotate is called are rotated. Use ofPushMatrix()</span>\n<span class=\"token comment\" spellcheck=\"true\">/// and ofPopMatrix() to save and restore the unrotated coordinate system.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofRotate(50, 1, 0.5, 0); //rotates the coordinate system 50 degrees along the x-axis and 25 degrees on the y-axis</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectangle(20,20,100,100);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param degrees Specifies the angle of rotation, in degrees.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param vecX specifies the x coordinates of a vector</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param vecY specifies the y coordinates of a vector</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param vecZ specifies the z coordinates of a vector</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofRotateDeg</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecY<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecZ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Rotate around the z-axis</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofRotateDeg</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Produces a rotation around the X-axis of our coordinate</span>\n<span class=\"token comment\" spellcheck=\"true\">/// system represented by the vector (1,0,0).</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofRotateX(45); //rotates the coordinate system 45 degrees around the x-axis</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectangle(20,20,100,100);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param degrees Specifies the angle of rotation, in degrees.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofRotateXDeg</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Produces a rotation around the Y-axis of our coordinate</span>\n<span class=\"token comment\" spellcheck=\"true\">/// system represented by the vector (0,1,0).</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofRotateY(45); //rotates the coordinate system 45 degrees around the y-axis</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectangle(20,20,100,100);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param degrees Specifies the angle of rotation, in degrees.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofRotateYDeg</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Produces a rotation around the Z-axis of our coordinate</span>\n<span class=\"token comment\" spellcheck=\"true\">/// system represented by the vector (0,0,1).</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofRotateZ(45); //rotates the coordinate system 45 degrees around the z-axis</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectangle(20,20,100,100);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param degrees Specifies the angle of rotation, in degrees.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofRotateZDeg</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Produces a rotation around the vector (vecX,vecY,vecZ).</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// All graphics drawn after ofRotate is called are rotated. Use ofPushMatrix()</span>\n<span class=\"token comment\" spellcheck=\"true\">/// and ofPopMatrix() to save and restore the unrotated coordinate system.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofRotate(50, 1, 0.5, 0); //rotates the coordinate system 50 degrees along the x-axis and 25 degrees on the y-axis</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectangle(20,20,100,100);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param degrees Specifies the angle of rotation, in degrees.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param vecX specifies the x coordinates of a vector</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param vecY specifies the y coordinates of a vector</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param vecZ specifies the z coordinates of a vector</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofRotateRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecY<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecZ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Rotate around the z-axis</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofRotateRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Produces a rotation around the X-axis of our coordinate</span>\n<span class=\"token comment\" spellcheck=\"true\">/// system represented by the vector (1,0,0).</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofRotateX(45); //rotates the coordinate system 45 degrees around the x-axis</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectangle(20,20,100,100);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param degrees Specifies the angle of rotation, in degrees.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofRotateXRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Produces a rotation around the Y-axis of our coordinate</span>\n<span class=\"token comment\" spellcheck=\"true\">/// system represented by the vector (0,1,0).</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofRotateY(45); //rotates the coordinate system 45 degrees around the y-axis</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectangle(20,20,100,100);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param degrees Specifies the angle of rotation, in degrees.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofRotateYRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Produces a rotation around the Z-axis of our coordinate</span>\n<span class=\"token comment\" spellcheck=\"true\">/// system represented by the vector (0,0,1).</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::draw(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofRotateZ(45); //rotates the coordinate system 45 degrees around the z-axis</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawRectangle(20,20,100,100);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param degrees Specifies the angle of rotation, in degrees.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofRotateZRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\name Matrix Transformation</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\{</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofLoadIdentityMatrix</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofLoadMatrix</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\" spellcheck=\"true\">// Andreas: I've included both a mat and a float* version here,</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofLoadMatrix</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\" spellcheck=\"true\">// ideally we would always use mat4, but in a lot of temporary</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofMultMatrix</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">// mat objects when interacting with non-OF code</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofMultMatrix</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetMatrixMode</span><span class=\"token punctuation\">(</span>ofMatrixMode matrixMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofLoadViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofMultViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nglm<span class=\"token operator\">::</span>mat4 <span class=\"token function\">ofGetCurrentViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\name Viewport Setup</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\{</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Stores the current viewport and matrix settings</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofPushView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Restores the viewport and matrix settings set by ofPushView()</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofPopView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get if view is flipped vertically</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofIsVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Setup the drawing viewport</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param viewport A rectangle describing the size and position of the viewport.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// If the width or height are set to 0, it will assume the size to be the window</span>\n<span class=\"token comment\" spellcheck=\"true\">/// size (ofGetWidth(), ofGetHeight())</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofViewport</span><span class=\"token punctuation\">(</span>ofRectangle viewport<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Setup the drawing viewport</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x position of the viewport</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y position of the viewport</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param width The width of the viewport, defaults to ofGetWidth()</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height of the viewport, defaults to ofGetHeight()</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofViewport</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> vflip<span class=\"token operator\">=</span><span class=\"token function\">ofIsVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get the position and size of the current viewport</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\returns A rectangle describing the viewport</span>\nofRectangle <span class=\"token function\">ofGetCurrentViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get the position and size of the native viewport</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\returns A rectangle describing the viewport</span>\nofRectangle <span class=\"token function\">ofGetNativeViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get the width of the current viewport</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\returns A width in pixels</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofGetViewportWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get the height of the current viewport</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\returns A height in pixels</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofGetViewportHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">// if nearDist or farDist are 0 assume defaults (calculated based on width / height)</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetupScreenPerspective</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> width <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> fov <span class=\"token operator\">=</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> nearDist <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> farDist <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetupScreenOrtho</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> width <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> nearDist <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> farDist <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofSetupScreenPerspective() doesn't accept orientation and vflip parameters anymore, use ofSetOrientation() to specify them\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t  <span class=\"token keyword\">void</span> <span class=\"token function\">ofSetupScreenPerspective</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> ofOrientation orientation<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> vFlip <span class=\"token operator\">=</span> <span class=\"token function\">ofIsVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> fov <span class=\"token operator\">=</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> nearDist <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> farDist <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t\t  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofSetupScreenOrtho() doesn't accept orientation and vflip parameters anymore, use ofSetOrientation() to specify them\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t  <span class=\"token keyword\">void</span> <span class=\"token function\">ofSetupScreenOrtho</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> ofOrientation orientation<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> vFlip <span class=\"token operator\">=</span> <span class=\"token function\">ofIsVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> nearDist <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> farDist <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t\t\t\t  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofOrientationToDegrees</span><span class=\"token punctuation\">(</span>ofOrientation orientation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetCoordHandedness</span><span class=\"token punctuation\">(</span>ofHandednessType handedness<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nofHandednessType <span class=\"token function\">ofGetCoordHandedness</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\name Screen Saving</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\{</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Begin rendering to a PDF file.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// openFrameworks allows rendering of 2D graphics to pdf via the</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ofCairoRenderer. ofBeginSaveScreenAsPDF() is called before drawing. When</span>\n<span class=\"token comment\" spellcheck=\"true\">/// done drawing call ofEndSaveScreenAsPDF() to output the file.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">/// void ofApp::setup(){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofBeginSaveScreenAsPDF(\"screenshot.pdf\", false);</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofSetColor(54,54,54);</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofDrawEllipse(100,100,200,200);</span>\n<span class=\"token comment\" spellcheck=\"true\">///     ofEndSaveScreenAsPDF();</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ~~~~</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\sa End drawing with ofEndSaveScreenAsPDF()</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofBeginSaveScreenAsPDF</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string filename<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bMultipage <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> b3D <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> ofRectangle outputsize <span class=\"token operator\">=</span> <span class=\"token function\">ofRectangle</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Terminates draw to PDF through ofCairoRenderer and outputs the file.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofBeginSaveScreenAsPDF()</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofEndSaveScreenAsPDF</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Begin rendering to a SVG file.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofEndSaveScreenAsSVG(), ofBeginSaveScreenAsPDF()</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofBeginSaveScreenAsSVG</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string filename<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bMultipage <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> b3D <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> ofRectangle outputsize <span class=\"token operator\">=</span> <span class=\"token function\">ofRectangle</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Terminates draw to SVG and outputs the file.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofBeginSaveScreenAsSVG()</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofEndSaveScreenAsSVG</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawBitmapString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> T <span class=\"token operator\">&amp;</span> textString<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofDrawBitmapString</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>textString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawBitmapString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> T <span class=\"token operator\">&amp;</span> textString<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofDrawBitmapString</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>textString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawBitmapString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> T <span class=\"token operator\">&amp;</span> textString<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofDrawBitmapString</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>textString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawBitmapString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> T <span class=\"token operator\">&amp;</span> textString<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofDrawBitmapString</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>textString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n","type":"source","static":true}}],"fetch":[]}