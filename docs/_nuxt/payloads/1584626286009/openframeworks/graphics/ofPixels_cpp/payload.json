{"data":[{"page":{"entry":{"name":"ofPixels.cpp","filename":"ofPixels.cpp","absolute":"/Users/gilbertsinnott/Code/openFrameworks/libs/openFrameworks/graphics/ofPixels.cpp","path":"/openframeworks/graphics/ofPixels_cpp","route":"/openframeworks/graphics/ofPixels.cpp","dir":"../libs/openFrameworks/graphics","ext":"cpp","type":"source","id":275,"parent":259,"breadcrumbs":[259,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofPixels.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGraphicsConstants.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"glm/common.hpp\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cstring></span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">static</span> ofImageType <span class=\"token function\">getImageTypeFromChannels</span><span class=\"token punctuation\">(</span>size_t channels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>channels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> OF_IMAGE_GRAYSCALE<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> OF_IMAGE_COLOR<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> OF_IMAGE_COLOR_ALPHA<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> OF_IMAGE_UNDEFINED<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\nsize_t ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">pixelBitsFromPixelFormat</span><span class=\"token punctuation\">(</span>ofPixelFormat format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_BGR<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>PixelType<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGBA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_BGRA<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>PixelType<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_GRAY<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_Y<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_U<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_V<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>PixelType<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_NV12<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_NV21<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_YV12<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_I420<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_UV<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_VU<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_GRAY_ALPHA<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>PixelType<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_YUY2<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_UYVY<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB565<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\nstd<span class=\"token operator\">::</span>string <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPixelFormat <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_GRAY<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"OF_PIXELS_GRAY\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_GRAY_ALPHA<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"OF_PIXELS_GRAY_ALPHA\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"OF_PIXELS_RGB\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_BGR<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"OF_PIXELS_BGR\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGBA<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"OF_PIXELS_RGBA\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_BGRA<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"OF_PIXELS_BGRA\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB565<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"OF_PIXELS_RGB565\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_NV12<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"OF_PIXELS_NV12\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_NV21<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"OF_PIXELS_NV21\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_YV12<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"OF_PIXELS_YV12\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_I420<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"OF_PIXELS_I420\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_YUY2<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"OF_PIXELS_YUY2\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_UYVY<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"OF_PIXELS_UYVY\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_Y<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"OF_PIXELS_Y\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_U<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"OF_PIXELS_U\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_V<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"OF_PIXELS_V\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_UV<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"OF_PIXELS_UV\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_VU<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"OF_PIXELS_VU\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_NUM_FORMATS<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"OF_PIXELS_NUM_FORMATS\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_UNKNOWN<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"OF_PIXELS_UNKNOWN\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_NATIVE<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"OF_PIXELS_NATIVE\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"OF_PIXELS_UNKNOWN\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\nsize_t ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">bytesFromPixelFormat</span><span class=\"token punctuation\">(</span>size_t w<span class=\"token punctuation\">,</span> size_t h<span class=\"token punctuation\">,</span> ofPixelFormat format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> w <span class=\"token operator\">*</span> h <span class=\"token operator\">*</span> <span class=\"token function\">pixelBitsFromPixelFormat</span><span class=\"token punctuation\">(</span>format<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> size_t <span class=\"token function\">channelsFromPixelFormat</span><span class=\"token punctuation\">(</span>ofPixelFormat format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_BGR<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_RGBA<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_BGRA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_GRAY<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_GRAY_ALPHA<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB565<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_NV12<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_NV21<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_YV12<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_I420<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_YUY2<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_UYVY<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_Y<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_U<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_V<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_UV<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_VU<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token function\">ofLog</span><span class=\"token punctuation\">(</span>OF_LOG_ERROR<span class=\"token punctuation\">,</span><span class=\"token string\">\"ofPixels: format doesn't support channels\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> ofPixelFormat <span class=\"token function\">ofPixelFormatFromImageType</span><span class=\"token punctuation\">(</span>ofImageType type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> OF_IMAGE_GRAYSCALE<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> OF_PIXELS_GRAY<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_IMAGE_COLOR<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> OF_PIXELS_RGB<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_IMAGE_COLOR_ALPHA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> OF_PIXELS_RGBA<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token function\">ofLog</span><span class=\"token punctuation\">(</span>OF_LOG_ERROR<span class=\"token punctuation\">,</span><span class=\"token string\">\"ofPixels: image type not supported\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> OF_PIXELS_UNKNOWN<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> ofImageType <span class=\"token function\">ofImageTypeFromPixelFormat</span><span class=\"token punctuation\">(</span>ofPixelFormat pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_GRAY<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> OF_IMAGE_GRAYSCALE<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_BGR<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB565<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> OF_IMAGE_COLOR<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_BGRA<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_RGBA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> OF_IMAGE_COLOR_ALPHA<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_UNKNOWN<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> OF_IMAGE_UNDEFINED<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token function\">ofLog</span><span class=\"token punctuation\">(</span>OF_LOG_ERROR<span class=\"token punctuation\">,</span><span class=\"token string\">\"ofPixels: image type not supported\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> OF_IMAGE_UNDEFINED<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nstring <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>ofPixelFormat pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"RGB\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_BGR<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"BGR\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGBA<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"RGBA\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_BGRA<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"BGRA\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_GRAY<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"GRAY\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB565<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"RGB565\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_NV12<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"NV12\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_NV21<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"NV21\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_YV12<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"YV12\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_I420<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"I420\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_YUY2<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"YUY2\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_UYVY<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"UYVY\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"UNKOWN\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> ofPixelFormat <span class=\"token function\">pixelFormatFromNumChannels</span><span class=\"token punctuation\">(</span>size_t channels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>channels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> OF_PIXELS_GRAY<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> OF_PIXELS_GRAY_ALPHA<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> OF_PIXELS_RGB<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> OF_PIXELS_RGBA<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> OF_PIXELS_UNKNOWN<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\nofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">ofPixels_</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\nofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofPixels_</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\nofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">ofPixels_</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">copyFrom</span><span class=\"token punctuation\">(</span> mom <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\nofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">ofPixels_</span><span class=\"token punctuation\">(</span>ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> <span class=\"token operator\">&amp;&amp;</span> mom<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">:</span><span class=\"token function\">pixels</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">width</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">height</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">pixelsSize</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>pixelsSize<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">bAllocated</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>bAllocated<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">pixelsOwner</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>pixelsOwner<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">pixelFormat</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tmom<span class=\"token punctuation\">.</span>pixelsOwner <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tstd<span class=\"token operator\">::</span><span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">,</span>pix<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span><span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span><span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">,</span>pix<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span><span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>pixelsSize<span class=\"token punctuation\">,</span>pix<span class=\"token punctuation\">.</span>pixelsSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span><span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>bAllocated<span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span>bAllocated<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span><span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>pixelsOwner<span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span>pixelsOwner<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span><span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">,</span>pix<span class=\"token punctuation\">.</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\nofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token operator\">==</span><span class=\"token operator\">&amp;</span>mom<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">copyFrom</span><span class=\"token punctuation\">(</span> mom <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\nofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> <span class=\"token operator\">&amp;&amp;</span> mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token operator\">==</span><span class=\"token operator\">&amp;</span>mom<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tpixels <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">;</span>\n\twidth <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\theight <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\tpixelsSize <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>pixelsSize<span class=\"token punctuation\">;</span>\n\tbAllocated <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>bAllocated<span class=\"token punctuation\">;</span>\n\tpixelsOwner <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>pixelsOwner<span class=\"token punctuation\">;</span>\n\tpixelFormat <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>pixelFormat<span class=\"token punctuation\">;</span>\n\tmom<span class=\"token punctuation\">.</span>pixelsOwner <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">copyFrom</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">,</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getTotalBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>PixelType val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\titerator _end <span class=\"token operator\">=</span> <span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>iterator i<span class=\"token operator\">=</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>_end<span class=\"token punctuation\">;</span><span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token operator\">*</span>i <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>size_t channel<span class=\"token punctuation\">,</span>PixelType val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_BGR<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGBA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_BGRA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_GRAY<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_GRAY_ALPHA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_UV<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_VU<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> pixel<span class=\"token operator\">:</span> <span class=\"token function\">getPixelsIter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tpixel<span class=\"token punctuation\">[</span>channel<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB565<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_NV12<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_NV21<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_YV12<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_I420<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_YUY2<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_UYVY<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_Y<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_U<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_V<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_UNKNOWN<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setting channels not supported for \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" format\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setFromPixels</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> PixelType <span class=\"token operator\">*</span> newPixels<span class=\"token punctuation\">,</span> size_t w<span class=\"token punctuation\">,</span> size_t h<span class=\"token punctuation\">,</span> size_t channels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> channels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">,</span> newPixels<span class=\"token punctuation\">,</span> <span class=\"token function\">getTotalBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setFromPixels</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> PixelType <span class=\"token operator\">*</span> newPixels<span class=\"token punctuation\">,</span> size_t w<span class=\"token punctuation\">,</span> size_t h<span class=\"token punctuation\">,</span> ofImageType type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setFromPixels</span><span class=\"token punctuation\">(</span>newPixels<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span><span class=\"token function\">ofPixelFormatFromImageType</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setFromPixels</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> PixelType <span class=\"token operator\">*</span> newPixels<span class=\"token punctuation\">,</span> size_t w<span class=\"token punctuation\">,</span> size_t h<span class=\"token punctuation\">,</span> ofPixelFormat format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">,</span> newPixels<span class=\"token punctuation\">,</span> <span class=\"token function\">getTotalBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setFromExternalPixels</span><span class=\"token punctuation\">(</span>PixelType <span class=\"token operator\">*</span> newPixels<span class=\"token punctuation\">,</span> size_t w<span class=\"token punctuation\">,</span> size_t h<span class=\"token punctuation\">,</span> size_t channels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setFromExternalPixels</span><span class=\"token punctuation\">(</span>newPixels<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span><span class=\"token function\">pixelFormatFromNumChannels</span><span class=\"token punctuation\">(</span>channels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setFromExternalPixels</span><span class=\"token punctuation\">(</span>PixelType <span class=\"token operator\">*</span> newPixels<span class=\"token punctuation\">,</span> size_t w<span class=\"token punctuation\">,</span> size_t h<span class=\"token punctuation\">,</span> ofPixelFormat _pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tpixelFormat <span class=\"token operator\">=</span> _pixelFormat<span class=\"token punctuation\">;</span>\n\twidth<span class=\"token operator\">=</span> w<span class=\"token punctuation\">;</span>\n\theight <span class=\"token operator\">=</span> h<span class=\"token punctuation\">;</span>\n\n\tpixelsSize <span class=\"token operator\">=</span> <span class=\"token function\">bytesFromPixelFormat</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>_pixelFormat<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>PixelType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tpixels <span class=\"token operator\">=</span> newPixels<span class=\"token punctuation\">;</span>\n\tpixelsOwner <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tbAllocated <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setFromAlignedPixels</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> PixelType <span class=\"token operator\">*</span> newPixels<span class=\"token punctuation\">,</span> size_t width<span class=\"token punctuation\">,</span> size_t height<span class=\"token punctuation\">,</span> size_t channels<span class=\"token punctuation\">,</span> size_t stride<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setFromAlignedPixels</span><span class=\"token punctuation\">(</span>newPixels<span class=\"token punctuation\">,</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">,</span><span class=\"token function\">pixelFormatFromNumChannels</span><span class=\"token punctuation\">(</span>channels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>stride<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setFromAlignedPixels</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> PixelType <span class=\"token operator\">*</span> newPixels<span class=\"token punctuation\">,</span> size_t width<span class=\"token punctuation\">,</span> size_t height<span class=\"token punctuation\">,</span> ofPixelFormat _pixelFormat<span class=\"token punctuation\">,</span> size_t stride<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tsize_t channels <span class=\"token operator\">=</span> <span class=\"token function\">channelsFromPixelFormat</span><span class=\"token punctuation\">(</span>_pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>channels<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>width<span class=\"token operator\">*</span>channels<span class=\"token operator\">==</span>stride<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setFromPixels</span><span class=\"token punctuation\">(</span>newPixels<span class=\"token punctuation\">,</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">,</span>_pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> _pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsize_t dstStride <span class=\"token operator\">=</span> width <span class=\"token operator\">*</span> <span class=\"token function\">pixelBitsFromPixelFormat</span><span class=\"token punctuation\">(</span>_pixelFormat<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> src <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> newPixels<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> dst <span class=\"token operator\">=</span>  <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> pixels<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> height<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>dst<span class=\"token punctuation\">,</span> src<span class=\"token punctuation\">,</span> dstStride<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tsrc <span class=\"token operator\">+</span><span class=\"token operator\">=</span> stride<span class=\"token punctuation\">;</span>\n\t\tdst <span class=\"token operator\">+</span><span class=\"token operator\">=</span> dstStride<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setFromAlignedPixels</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> PixelType <span class=\"token operator\">*</span> newPixels<span class=\"token punctuation\">,</span> size_t width<span class=\"token punctuation\">,</span> size_t height<span class=\"token punctuation\">,</span> ofPixelFormat _pixelFormat<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>size_t<span class=\"token operator\">></span> strides<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tsize_t channels <span class=\"token operator\">=</span> <span class=\"token function\">channelsFromPixelFormat</span><span class=\"token punctuation\">(</span>_pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>channels<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>_pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_I420<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>strides<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofPixels\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"number of planes for I420 should be 3\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>width<span class=\"token operator\">==</span>strides<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> width<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token operator\">==</span>strides<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> width<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token operator\">==</span>strides<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setFromPixels</span><span class=\"token punctuation\">(</span>newPixels<span class=\"token punctuation\">,</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">,</span>_pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> _pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> src <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> newPixels<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> dst <span class=\"token operator\">=</span>  <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> pixels<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// Y Plane</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> height<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>dst<span class=\"token punctuation\">,</span> src<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tsrc <span class=\"token operator\">+</span><span class=\"token operator\">=</span> strides<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\tdst <span class=\"token operator\">+</span><span class=\"token operator\">=</span> width<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// U Plane</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> height <span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>dst<span class=\"token punctuation\">,</span>src<span class=\"token punctuation\">,</span>width<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tsrc <span class=\"token operator\">+</span><span class=\"token operator\">=</span> strides<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\tdst <span class=\"token operator\">+</span><span class=\"token operator\">=</span> width<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// V Plane</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> height <span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>dst<span class=\"token punctuation\">,</span>src<span class=\"token punctuation\">,</span>width<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tsrc <span class=\"token operator\">+</span><span class=\"token operator\">=</span> strides<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\tdst <span class=\"token operator\">+</span><span class=\"token operator\">=</span> width<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_RGBA<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_GRAY<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_GRAY_ALPHA<span class=\"token operator\">:</span>\n\t\t<span class=\"token function\">setFromAlignedPixels</span><span class=\"token punctuation\">(</span>newPixels<span class=\"token punctuation\">,</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">,</span>_pixelFormat<span class=\"token punctuation\">,</span>strides<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofPixels\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setFromAlignedPixels with planes strides: pixel format not supported yet\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\nPixelType <span class=\"token operator\">*</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> pixels<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">const</span> PixelType <span class=\"token operator\">*</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> pixels<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\nPixelType <span class=\"token operator\">*</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> pixels<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">const</span> PixelType <span class=\"token operator\">*</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> pixels<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>size_t w<span class=\"token punctuation\">,</span> size_t h<span class=\"token punctuation\">,</span> size_t _channels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span><span class=\"token function\">pixelFormatFromNumChannels</span><span class=\"token punctuation\">(</span>_channels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>size_t w<span class=\"token punctuation\">,</span> size_t h<span class=\"token punctuation\">,</span> ofPixelFormat format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>w <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> h <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> format <span class=\"token operator\">==</span> OF_PIXELS_UNKNOWN<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tsize_t newSize <span class=\"token operator\">=</span> <span class=\"token function\">bytesFromPixelFormat</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsize_t oldSize <span class=\"token operator\">=</span> <span class=\"token function\">getTotalBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//we check if we are already allocated at the right size</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bAllocated <span class=\"token operator\">&amp;&amp;</span> newSize<span class=\"token operator\">==</span>oldSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tpixelFormat <span class=\"token operator\">=</span> format<span class=\"token punctuation\">;</span>\n\t\twidth <span class=\"token operator\">=</span> w<span class=\"token punctuation\">;</span>\n\t\theight <span class=\"token operator\">=</span> h<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//we don't need to allocate</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//we do need to allocate, clear the data</span>\n\t<span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tpixelFormat\t<span class=\"token operator\">=</span> format<span class=\"token punctuation\">;</span>\n\twidth \t\t<span class=\"token operator\">=</span> w<span class=\"token punctuation\">;</span>\n\theight \t\t<span class=\"token operator\">=</span> h<span class=\"token punctuation\">;</span>\n\n\tpixelsSize <span class=\"token operator\">=</span> newSize <span class=\"token operator\">/</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>PixelType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tpixels <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> PixelType<span class=\"token punctuation\">[</span>pixelsSize<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\tbAllocated <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\tpixelsOwner <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>size_t w<span class=\"token punctuation\">,</span> size_t h<span class=\"token punctuation\">,</span> ofImageType type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span><span class=\"token function\">ofPixelFormatFromImageType</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">swapRgb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_BGR<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_RGBA<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_BGRA<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> pixel<span class=\"token operator\">:</span> <span class=\"token function\">getPixelsIter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tstd<span class=\"token operator\">::</span><span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>pixel<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>pixel<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofPixels\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"rgb swap not supported for this pixel format\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB<span class=\"token operator\">:</span>\n\t\tpixelFormat <span class=\"token operator\">=</span> OF_PIXELS_BGR<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_BGR<span class=\"token operator\">:</span>\n\t\tpixelFormat <span class=\"token operator\">=</span> OF_PIXELS_RGB<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_RGBA<span class=\"token operator\">:</span>\n\t\tpixelFormat <span class=\"token operator\">=</span> OF_PIXELS_BGRA<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_BGRA<span class=\"token operator\">:</span>\n\t\tpixelFormat <span class=\"token operator\">=</span> OF_PIXELS_RGBA<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pixelsOwner<span class=\"token punctuation\">)</span> <span class=\"token keyword\">delete</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> pixels<span class=\"token punctuation\">;</span>\n\t\tpixels <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\twidth\t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\theight\t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tpixelFormat\t\t<span class=\"token operator\">=</span> OF_PIXELS_UNKNOWN<span class=\"token punctuation\">;</span>\n\tpixelsSize\t\t<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tbAllocated\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\nsize_t ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">getPixelIndex</span><span class=\"token punctuation\">(</span>size_t x<span class=\"token punctuation\">,</span> size_t y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tsize_t pixelStride<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> OF_PIXELS_BGR<span class=\"token operator\">:</span>\n\t\t\t\tpixelStride <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span> x <span class=\"token operator\">+</span> y <span class=\"token operator\">*</span> width <span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> pixelStride<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGBA<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> OF_PIXELS_BGRA<span class=\"token operator\">:</span>\n\t\t\t\tpixelStride <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span> x <span class=\"token operator\">+</span> y <span class=\"token operator\">*</span> width <span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> pixelStride<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> OF_PIXELS_GRAY<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> OF_PIXELS_Y<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> OF_PIXELS_U<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> OF_PIXELS_V<span class=\"token operator\">:</span>\n\t\t\t\tpixelStride <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span> x <span class=\"token operator\">+</span> y <span class=\"token operator\">*</span> width <span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> pixelStride<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> OF_PIXELS_GRAY_ALPHA<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> OF_PIXELS_UV<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> OF_PIXELS_VU<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> OF_PIXELS_YUY2<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> OF_PIXELS_UYVY<span class=\"token operator\">:</span>\n\t\t\t\tpixelStride <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span> x <span class=\"token operator\">+</span> y <span class=\"token operator\">*</span> width <span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> pixelStride<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB565<span class=\"token operator\">:</span>\n\t\t\t\tpixelStride <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span> x <span class=\"token operator\">+</span> y <span class=\"token operator\">*</span> width <span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> pixelStride<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> OF_PIXELS_NV12<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> OF_PIXELS_YV12<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> OF_PIXELS_I420<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> OF_PIXELS_UNKNOWN<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getting pixel index not supported for \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" format\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\nofColor_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span>size_t index<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Pixel</span><span class=\"token punctuation\">(</span>pixels <span class=\"token operator\">+</span> index<span class=\"token punctuation\">,</span> <span class=\"token function\">getNumChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\nofColor_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span>size_t x<span class=\"token punctuation\">,</span> size_t y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">getPixelIndex</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>size_t index<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofColor_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB<span class=\"token operator\">:</span>\n\t\t\tpixels<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">;</span>\n\t\t\tpixels<span class=\"token punctuation\">[</span>index<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">;</span>\n\t\t\tpixels<span class=\"token punctuation\">[</span>index<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_BGR<span class=\"token operator\">:</span>\n\t\t\tpixels<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">;</span>\n\t\t\tpixels<span class=\"token punctuation\">[</span>index<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">;</span>\n\t\t\tpixels<span class=\"token punctuation\">[</span>index<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGBA<span class=\"token operator\">:</span>\n\t\t\tpixels<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">;</span>\n\t\t\tpixels<span class=\"token punctuation\">[</span>index<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">;</span>\n\t\t\tpixels<span class=\"token punctuation\">[</span>index<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">;</span>\n\t\t\tpixels<span class=\"token punctuation\">[</span>index<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_BGRA<span class=\"token operator\">:</span>\n\t\t\tpixels<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">;</span>\n\t\t\tpixels<span class=\"token punctuation\">[</span>index<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">;</span>\n\t\t\tpixels<span class=\"token punctuation\">[</span>index<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">;</span>\n\t\t\tpixels<span class=\"token punctuation\">[</span>index<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_GRAY<span class=\"token operator\">:</span>\n\t\t\tpixels<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span><span class=\"token function\">getBrightness</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_GRAY_ALPHA<span class=\"token operator\">:</span>\n\t\t\tpixels<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span><span class=\"token function\">getBrightness</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tpixels<span class=\"token punctuation\">[</span>index<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB565<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_NV12<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_NV21<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_YV12<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_I420<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_YUY2<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_UYVY<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_Y<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_U<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_V<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_UV<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_VU<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_UNKNOWN<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofPixels\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setting color not supported yet for \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" format\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>size_t x<span class=\"token punctuation\">,</span> size_t y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofColor_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">getPixelIndex</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> pixel<span class=\"token operator\">:</span> <span class=\"token function\">getPixelsIter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tpixel<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">;</span>\n\t\t\t\tpixel<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">;</span>\n\t\t\t\tpixel<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_BGR<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> pixel<span class=\"token operator\">:</span> <span class=\"token function\">getPixelsIter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tpixel<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">;</span>\n\t\t\t\tpixel<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">;</span>\n\t\t\t\tpixel<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGBA<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> pixel<span class=\"token operator\">:</span> <span class=\"token function\">getPixelsIter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tpixel<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">;</span>\n\t\t\t\tpixel<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">;</span>\n\t\t\t\tpixel<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">;</span>\n\t\t\t\tpixel<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_BGRA<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> pixel<span class=\"token operator\">:</span> <span class=\"token function\">getPixelsIter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tpixel<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">;</span>\n\t\t\t\tpixel<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">;</span>\n\t\t\t\tpixel<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">;</span>\n\t\t\t\tpixel<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_GRAY<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n\t\t\tPixelType b <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span><span class=\"token function\">getBrightness</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>iterator i<span class=\"token operator\">=</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">!=</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token operator\">*</span>i <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_GRAY_ALPHA<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n\t\t\tPixelType b <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span><span class=\"token function\">getBrightness</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> pixel<span class=\"token operator\">:</span> <span class=\"token function\">getPixelsIter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tpixel<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span>\n\t\t\t\tpixel<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> color<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB565<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_NV12<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_NV21<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_YV12<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_I420<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_YUY2<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_UYVY<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_Y<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_U<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_V<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_UV<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_VU<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_UNKNOWN<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofPixels\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setting color not supported yet for \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" format\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\nPixelType <span class=\"token operator\">&amp;</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>size_t pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> pixels<span class=\"token punctuation\">[</span>pos<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">const</span> PixelType <span class=\"token operator\">&amp;</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>size_t pos<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> pixels<span class=\"token punctuation\">[</span>pos<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">bool</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> bAllocated<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\nsize_t ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> width<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\nsize_t ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> height<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\nsize_t ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">getBytesPerPixel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">pixelBitsFromPixelFormat</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\nsize_t ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">getBitsPerPixel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">pixelBitsFromPixelFormat</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\nsize_t ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">getBytesPerChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>PixelType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\nsize_t ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">getBitsPerChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getBytesPerChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\nsize_t ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">getBytesStride</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">pixelBitsFromPixelFormat</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> width <span class=\"token operator\">/</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\nsize_t ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">getNumChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">channelsFromPixelFormat</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n\nsize_t ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">getTotalBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">bytesFromPixelFormat</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">,</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\nsize_t ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">getNumPlanes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_BGR<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB565<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGBA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_BGRA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_GRAY<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_GRAY_ALPHA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_YUY2<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_UYVY<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_Y<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_U<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_V<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_UV<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_VU<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_NV12<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_NV21<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_YV12<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_I420<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_NUM_FORMATS<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_NATIVE<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_UNKNOWN<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\nofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">getPlane</span><span class=\"token punctuation\">(</span>size_t planeIdx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tplaneIdx <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">clamp</span><span class=\"token punctuation\">(</span>planeIdx<span class=\"token punctuation\">,</span> <span class=\"token function\">size_t</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getNumPlanes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> plane<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_BGR<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB565<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGBA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_BGRA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_GRAY<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_GRAY_ALPHA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_YUY2<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_UYVY<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_Y<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_U<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_V<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_UV<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_VU<span class=\"token operator\">:</span>\n\t\t\tplane<span class=\"token punctuation\">.</span><span class=\"token function\">setFromExternalPixels</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">,</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">,</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_NV12<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>planeIdx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>\n\t\t\t\tplane<span class=\"token punctuation\">.</span><span class=\"token function\">setFromExternalPixels</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">,</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">,</span>OF_PIXELS_Y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n\t\t\t\tplane<span class=\"token punctuation\">.</span><span class=\"token function\">setFromExternalPixels</span><span class=\"token punctuation\">(</span>pixels<span class=\"token operator\">+</span>width<span class=\"token operator\">*</span>height<span class=\"token punctuation\">,</span>width<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>height<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>OF_PIXELS_UV<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_NV21<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>planeIdx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>\n\t\t\t\tplane<span class=\"token punctuation\">.</span><span class=\"token function\">setFromExternalPixels</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">,</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">,</span>OF_PIXELS_Y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n\t\t\t\tplane<span class=\"token punctuation\">.</span><span class=\"token function\">setFromExternalPixels</span><span class=\"token punctuation\">(</span>pixels<span class=\"token operator\">+</span>width<span class=\"token operator\">*</span>height<span class=\"token punctuation\">,</span>width<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>height<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>OF_PIXELS_VU<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_YV12<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>planeIdx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>\n\t\t\t\tplane<span class=\"token punctuation\">.</span><span class=\"token function\">setFromExternalPixels</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">,</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">,</span>OF_PIXELS_Y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n\t\t\t\tplane<span class=\"token punctuation\">.</span><span class=\"token function\">setFromExternalPixels</span><span class=\"token punctuation\">(</span>pixels<span class=\"token operator\">+</span>width<span class=\"token operator\">*</span>height<span class=\"token punctuation\">,</span>width<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>height<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>OF_PIXELS_V<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n\t\t\t\tplane<span class=\"token punctuation\">.</span><span class=\"token function\">setFromExternalPixels</span><span class=\"token punctuation\">(</span>pixels <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>width<span class=\"token operator\">*</span>height<span class=\"token operator\">+</span>width<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>height<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> width<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> OF_PIXELS_U<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_I420<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>planeIdx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>\n\t\t\t\tplane<span class=\"token punctuation\">.</span><span class=\"token function\">setFromExternalPixels</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">,</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">,</span>OF_PIXELS_Y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n\t\t\t\tplane<span class=\"token punctuation\">.</span><span class=\"token function\">setFromExternalPixels</span><span class=\"token punctuation\">(</span>pixels<span class=\"token operator\">+</span>width<span class=\"token operator\">*</span>height<span class=\"token punctuation\">,</span>width<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>height<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>OF_PIXELS_U<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n\t\t\t\tplane<span class=\"token punctuation\">.</span><span class=\"token function\">setFromExternalPixels</span><span class=\"token punctuation\">(</span>pixels <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>width<span class=\"token operator\">*</span>height<span class=\"token operator\">+</span>width<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>height<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> width<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> height<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> OF_PIXELS_V<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_NUM_FORMATS<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_NATIVE<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_UNKNOWN<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> plane<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\nofImageType ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">getImageType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofImageTypeFromPixelFormat</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setImageType</span><span class=\"token punctuation\">(</span>ofImageType imageType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> imageType<span class=\"token operator\">==</span><span class=\"token function\">getImageType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\tofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> dst<span class=\"token punctuation\">;</span>\n\tdst<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">,</span>imageType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tPixelType <span class=\"token operator\">*</span> dstPtr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>dst<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\tPixelType <span class=\"token operator\">*</span> srcPtr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>pixels<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\tsize_t dstNumChannels <span class=\"token operator\">=</span> dst<span class=\"token punctuation\">.</span><span class=\"token function\">getNumChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsize_t srcNumChannels <span class=\"token operator\">=</span> <span class=\"token function\">getNumChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsize_t diffNumChannels <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>dstNumChannels<span class=\"token operator\">&lt;</span>srcNumChannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tdiffNumChannels <span class=\"token operator\">=</span> srcNumChannels<span class=\"token operator\">-</span>dstNumChannels<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>width<span class=\"token operator\">*</span>height<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">const</span> PixelType <span class=\"token operator\">&amp;</span> gray <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>srcPtr<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>dstNumChannels<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">&lt;</span>srcNumChannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token operator\">*</span>dstPtr<span class=\"token operator\">++</span> <span class=\"token operator\">=</span>  <span class=\"token operator\">*</span>srcPtr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token operator\">*</span>dstPtr<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> gray<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token operator\">*</span>dstPtr<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> ofColor_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">limit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tsrcPtr<span class=\"token operator\">+</span><span class=\"token operator\">=</span>diffNumChannels<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>dst<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\nofPixelFormat ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> pixelFormat<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setNumChannels</span><span class=\"token punctuation\">(</span>size_t numChannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> numChannels<span class=\"token operator\">==</span><span class=\"token function\">getNumChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setImageType</span><span class=\"token punctuation\">(</span><span class=\"token function\">getImageTypeFromChannels</span><span class=\"token punctuation\">(</span>numChannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\nsize_t ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> pixelsSize<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\nofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">getChannel</span><span class=\"token punctuation\">(</span>size_t channel<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> channelPixels<span class=\"token punctuation\">;</span>\n\tsize_t channels <span class=\"token operator\">=</span> <span class=\"token function\">channelsFromPixelFormat</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>channels<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> channelPixels<span class=\"token punctuation\">;</span>\n\n\tchannelPixels<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tchannel <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">clamp</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">,</span> <span class=\"token function\">size_t</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> channels<span class=\"token number\">-1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\titerator channelPixel <span class=\"token operator\">=</span> channelPixels<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> p<span class=\"token operator\">:</span> <span class=\"token function\">getConstPixelsIter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token operator\">*</span>channelPixel<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> p<span class=\"token punctuation\">[</span>channel<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> channelPixels<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setChannel</span><span class=\"token punctuation\">(</span>size_t channel<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> channelPixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tsize_t channels <span class=\"token operator\">=</span> <span class=\"token function\">channelsFromPixelFormat</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>channels<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n\tchannel <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">clamp</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">,</span> <span class=\"token function\">size_t</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> channels<span class=\"token number\">-1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tconst_iterator channelPixel <span class=\"token operator\">=</span> channelPixels<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> p<span class=\"token operator\">:</span> <span class=\"token function\">getPixelsIter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tp<span class=\"token punctuation\">[</span>channel<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>channelPixel<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//From ofPixelsUtils</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">crop</span><span class=\"token punctuation\">(</span>size_t x<span class=\"token punctuation\">,</span> size_t y<span class=\"token punctuation\">,</span> size_t _width<span class=\"token punctuation\">,</span> size_t _height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bAllocated<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> crop<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">cropTo</span><span class=\"token punctuation\">(</span>crop<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>_width<span class=\"token punctuation\">,</span>_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>crop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">cropTo</span><span class=\"token punctuation\">(</span>ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>toPix<span class=\"token punctuation\">,</span> size_t x<span class=\"token punctuation\">,</span> size_t y<span class=\"token punctuation\">,</span> size_t _width<span class=\"token punctuation\">,</span> size_t _height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bAllocated<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>toPix <span class=\"token operator\">==</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\ttoPix<span class=\"token punctuation\">.</span><span class=\"token function\">crop</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>_width<span class=\"token punctuation\">,</span>_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t_width <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">clamp</span><span class=\"token punctuation\">(</span>_width<span class=\"token punctuation\">,</span> <span class=\"token function\">size_t</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t_height <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">clamp</span><span class=\"token punctuation\">(</span>_height<span class=\"token punctuation\">,</span> <span class=\"token function\">size_t</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>toPix<span class=\"token punctuation\">.</span>width <span class=\"token operator\">!=</span> _width<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>toPix<span class=\"token punctuation\">.</span>height <span class=\"token operator\">!=</span> _height<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>toPix<span class=\"token punctuation\">.</span>pixelFormat <span class=\"token operator\">!=</span> pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\ttoPix<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>_width<span class=\"token punctuation\">,</span> _height<span class=\"token punctuation\">,</span> pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// this prevents having to do a check for bounds in the for loop;</span>\n\t\tsize_t minX <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">static_cast</span><span class=\"token operator\">&lt;</span>size_t<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tsize_t maxX <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> _width<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tsize_t minY <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">static_cast</span><span class=\"token operator\">&lt;</span>size_t<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tsize_t maxY <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>y <span class=\"token operator\">+</span> _height<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">auto</span> newPixel <span class=\"token operator\">=</span> toPix<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelsIter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> line<span class=\"token operator\">:</span> <span class=\"token function\">getConstLines</span><span class=\"token punctuation\">(</span>minY<span class=\"token punctuation\">,</span> maxY <span class=\"token operator\">-</span> minY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> pixel<span class=\"token operator\">:</span> line<span class=\"token punctuation\">.</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span>minX<span class=\"token punctuation\">,</span> maxX <span class=\"token operator\">-</span> minX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tnewPixel<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> pixel<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">rotate90To</span><span class=\"token punctuation\">(</span>ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> dst<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nClockwiseRotations<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tsize_t channels <span class=\"token operator\">=</span> <span class=\"token function\">channelsFromPixelFormat</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bAllocated <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">||</span> channels<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>dst <span class=\"token operator\">==</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tdst<span class=\"token punctuation\">.</span><span class=\"token function\">rotate90</span><span class=\"token punctuation\">(</span>nClockwiseRotations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// first, figure out which type of rotation we have</span>\n\t<span class=\"token keyword\">int</span> rotation <span class=\"token operator\">=</span> nClockwiseRotations<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>rotation <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\trotation<span class=\"token operator\">+</span><span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\trotation <span class=\"token operator\">%</span><span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// if it's 0, just make a copy.  if it's 2, do it by a mirror operation.</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rotation <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tdst <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// do nothing!</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rotation <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">mirrorTo</span><span class=\"token punctuation\">(</span>dst<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// otherwise, we will need to do some new allocaiton.</span>\n\tdst<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">,</span>width<span class=\"token punctuation\">,</span><span class=\"token function\">getImageType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tsize_t strideSrc <span class=\"token operator\">=</span> width <span class=\"token operator\">*</span> channels<span class=\"token punctuation\">;</span>\n\tsize_t strideDst <span class=\"token operator\">=</span> dst<span class=\"token punctuation\">.</span>width <span class=\"token operator\">*</span> channels<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>rotation <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tPixelType <span class=\"token operator\">*</span> srcPixels <span class=\"token operator\">=</span> pixels<span class=\"token punctuation\">;</span>\n\t\tPixelType <span class=\"token operator\">*</span> startPixels <span class=\"token operator\">=</span> dst<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> strideDst<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> height<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tstartPixels <span class=\"token operator\">-</span><span class=\"token operator\">=</span> channels<span class=\"token punctuation\">;</span>\n\t\t\tPixelType <span class=\"token operator\">*</span> dstPixels <span class=\"token operator\">=</span> startPixels<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> width<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> channels<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\tdstPixels<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> srcPixels<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\tsrcPixels <span class=\"token operator\">+</span><span class=\"token operator\">=</span> channels<span class=\"token punctuation\">;</span>\n\t\t\t\tdstPixels <span class=\"token operator\">+</span><span class=\"token operator\">=</span> strideDst<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>rotation <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tPixelType <span class=\"token operator\">*</span> dstPixels <span class=\"token operator\">=</span> dst<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">;</span>\n\t\tPixelType <span class=\"token operator\">*</span> startPixels <span class=\"token operator\">=</span> pixels <span class=\"token operator\">+</span> strideSrc<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> dst<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tstartPixels <span class=\"token operator\">-</span><span class=\"token operator\">=</span> channels<span class=\"token punctuation\">;</span>\n\t\t\tPixelType <span class=\"token operator\">*</span> srcPixels <span class=\"token operator\">=</span> startPixels<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> dst<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> channels<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\tdstPixels<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> srcPixels<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\tsrcPixels <span class=\"token operator\">+</span><span class=\"token operator\">=</span> strideSrc<span class=\"token punctuation\">;</span>\n\t\t\t\tdstPixels <span class=\"token operator\">+</span><span class=\"token operator\">=</span> channels<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">rotate90</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> nClockwiseRotations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tsize_t channels <span class=\"token operator\">=</span> <span class=\"token function\">channelsFromPixelFormat</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bAllocated <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span> <span class=\"token operator\">||</span> channels<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// first, figure out which type of rotation we have</span>\n\t<span class=\"token keyword\">int</span> rotation <span class=\"token operator\">=</span> nClockwiseRotations<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>rotation <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\trotation<span class=\"token operator\">+</span><span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\trotation <span class=\"token operator\">%</span><span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// if it's 0, do nothing.  if it's 2, do it by a mirror operation.</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rotation <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// do nothing!</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rotation <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">mirror</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> newPixels<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">rotate90To</span><span class=\"token punctuation\">(</span>newPixels<span class=\"token punctuation\">,</span>nClockwiseRotations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span><span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>newPixels<span class=\"token punctuation\">.</span>pixels<span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\twidth <span class=\"token operator\">=</span> newPixels<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\theight <span class=\"token operator\">=</span> newPixels<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\tpixelsSize <span class=\"token operator\">=</span> newPixels<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">mirror</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> vertically<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> horizontal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tsize_t channels <span class=\"token operator\">=</span> <span class=\"token function\">channelsFromPixelFormat</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>vertically <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>horizontal<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> channels<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tsize_t bytesPerPixel <span class=\"token operator\">=</span> channels<span class=\"token punctuation\">;</span>\n\tPixelType <span class=\"token operator\">*</span> oldPixels <span class=\"token operator\">=</span> pixels<span class=\"token punctuation\">;</span>\n\tPixelType tempVal<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token punctuation\">(</span>vertically <span class=\"token operator\">&amp;&amp;</span> horizontal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tsize_t wToDo <span class=\"token operator\">=</span> horizontal <span class=\"token operator\">?</span> width<span class=\"token operator\">/</span><span class=\"token number\">2</span> <span class=\"token operator\">:</span> width<span class=\"token punctuation\">;</span>\n\t\tsize_t hToDo <span class=\"token operator\">=</span> vertically <span class=\"token operator\">?</span> height<span class=\"token operator\">/</span><span class=\"token number\">2</span> <span class=\"token operator\">:</span> height<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> wToDo<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> hToDo<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t\t\tsize_t  pixelb <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>vertically <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>height <span class=\"token operator\">-</span> j <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> j<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> width <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>horizontal <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>width <span class=\"token operator\">-</span> i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tsize_t  pixela <span class=\"token operator\">=</span> j<span class=\"token operator\">*</span>width <span class=\"token operator\">+</span> i<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> bytesPerPixel<span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t\t\t\ttempVal <span class=\"token operator\">=</span> oldPixels<span class=\"token punctuation\">[</span>pixela<span class=\"token operator\">*</span>bytesPerPixel <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\toldPixels<span class=\"token punctuation\">[</span>pixela<span class=\"token operator\">*</span>bytesPerPixel <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> oldPixels<span class=\"token punctuation\">[</span>pixelb<span class=\"token operator\">*</span>bytesPerPixel <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\toldPixels<span class=\"token punctuation\">[</span>pixelb<span class=\"token operator\">*</span>bytesPerPixel <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tempVal<span class=\"token punctuation\">;</span>\n\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// I couldn't think of a good way to do this in place.  I'm sure there is.</span>\n\t\t<span class=\"token function\">mirror</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">mirror</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">mirrorTo</span><span class=\"token punctuation\">(</span>ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> dst<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> vertically<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> horizontal<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>dst <span class=\"token operator\">==</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tdst<span class=\"token punctuation\">.</span><span class=\"token function\">mirror</span><span class=\"token punctuation\">(</span>vertically<span class=\"token punctuation\">,</span>horizontal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>vertically <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>horizontal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tdst <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tsize_t bytesPerPixel <span class=\"token operator\">=</span> <span class=\"token function\">getNumChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tdst<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> <span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vertically <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>horizontal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">auto</span> dstLines <span class=\"token operator\">=</span> dst<span class=\"token punctuation\">.</span><span class=\"token function\">getLines</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">auto</span> lineSrc <span class=\"token operator\">=</span> <span class=\"token function\">getConstLines</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">auto</span> line <span class=\"token operator\">=</span> <span class=\"token operator\">--</span>dstLines<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">auto</span> stride <span class=\"token operator\">=</span> line<span class=\"token punctuation\">.</span><span class=\"token function\">getStride</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> line<span class=\"token operator\">>=</span>dstLines<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">--</span>line<span class=\"token punctuation\">,</span> <span class=\"token operator\">++</span>lineSrc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> lineSrc<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> stride<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>vertically <span class=\"token operator\">&amp;&amp;</span> horizontal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tsize_t wToDo <span class=\"token operator\">=</span> width<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t\tsize_t hToDo <span class=\"token operator\">=</span> height<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> wToDo<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> hToDo<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tsize_t pixelb <span class=\"token operator\">=</span> j<span class=\"token operator\">*</span>width <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>width <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tsize_t pixela <span class=\"token operator\">=</span> j<span class=\"token operator\">*</span>width <span class=\"token operator\">+</span> i<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> bytesPerPixel<span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\tdst<span class=\"token punctuation\">[</span>pixela<span class=\"token operator\">*</span>bytesPerPixel <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pixels<span class=\"token punctuation\">[</span>pixelb<span class=\"token operator\">*</span>bytesPerPixel <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tdst<span class=\"token punctuation\">[</span>pixelb<span class=\"token operator\">*</span>bytesPerPixel <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pixels<span class=\"token punctuation\">[</span>pixela<span class=\"token operator\">*</span>bytesPerPixel <span class=\"token operator\">+</span> k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// I couldn't think of a good way to do this in place.  I'm sure there is.</span>\n\t\t<span class=\"token function\">mirrorTo</span><span class=\"token punctuation\">(</span>dst<span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdst<span class=\"token punctuation\">.</span><span class=\"token function\">mirror</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">bool</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span>size_t dstWidth<span class=\"token punctuation\">,</span> size_t dstHeight<span class=\"token punctuation\">,</span> ofInterpolationMethod interpMethod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>dstWidth <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>dstHeight <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\tofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> dstPixels<span class=\"token punctuation\">;</span>\n\tdstPixels<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>dstWidth<span class=\"token punctuation\">,</span> dstHeight<span class=\"token punctuation\">,</span> <span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">resizeTo</span><span class=\"token punctuation\">(</span>dstPixels<span class=\"token punctuation\">,</span>interpMethod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">delete</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> pixels<span class=\"token punctuation\">;</span>\n\tpixels <span class=\"token operator\">=</span> dstPixels<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\twidth  <span class=\"token operator\">=</span> dstWidth<span class=\"token punctuation\">;</span>\n\theight <span class=\"token operator\">=</span> dstHeight<span class=\"token punctuation\">;</span>\n\tpixelsSize <span class=\"token operator\">=</span> dstPixels<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tdstPixels<span class=\"token punctuation\">.</span>pixelsOwner <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">float</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">bicubicInterpolate</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>patch<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x3<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> y3<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// adapted from http://www.paulinternet.nl/?page=bicubic</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// Note that this code can produce values outside of 0...255, due to cubic overshoot.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// The ofClamp() prevents this from happening.</span>\n\n\t<span class=\"token keyword\">float</span> p00 <span class=\"token operator\">=</span> patch<span class=\"token punctuation\">[</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> p10 <span class=\"token operator\">=</span> patch<span class=\"token punctuation\">[</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> p20 <span class=\"token operator\">=</span> patch<span class=\"token punctuation\">[</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> p30 <span class=\"token operator\">=</span> patch<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">float</span> p01 <span class=\"token operator\">=</span> patch<span class=\"token punctuation\">[</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> p11 <span class=\"token operator\">=</span> patch<span class=\"token punctuation\">[</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> p21 <span class=\"token operator\">=</span> patch<span class=\"token punctuation\">[</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> p31 <span class=\"token operator\">=</span> patch<span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">float</span> p02 <span class=\"token operator\">=</span> patch<span class=\"token punctuation\">[</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> p12 <span class=\"token operator\">=</span> patch<span class=\"token punctuation\">[</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> p22 <span class=\"token operator\">=</span> patch<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> p32 <span class=\"token operator\">=</span> patch<span class=\"token punctuation\">[</span><span class=\"token number\">14</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">float</span> p03 <span class=\"token operator\">=</span> patch<span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> p13 <span class=\"token operator\">=</span> patch<span class=\"token punctuation\">[</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> p23 <span class=\"token operator\">=</span> patch<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> p33 <span class=\"token operator\">=</span> patch<span class=\"token punctuation\">[</span><span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">float</span> a00 <span class=\"token operator\">=</span>    p11<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> a01 <span class=\"token operator\">=</span>   <span class=\"token operator\">-</span>p10 <span class=\"token operator\">+</span>   p12<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> a02 <span class=\"token operator\">=</span>  <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p10 <span class=\"token operator\">-</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p11 <span class=\"token operator\">+</span>   p12 <span class=\"token operator\">-</span>   p13<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> a03 <span class=\"token operator\">=</span>   <span class=\"token operator\">-</span>p10 <span class=\"token operator\">+</span>   p11 <span class=\"token operator\">-</span>   p12 <span class=\"token operator\">+</span>   p13<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> a10 <span class=\"token operator\">=</span>   <span class=\"token operator\">-</span>p01 <span class=\"token operator\">+</span>   p21<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> a11 <span class=\"token operator\">=</span>    p00 <span class=\"token operator\">-</span>   p02 <span class=\"token operator\">-</span>   p20 <span class=\"token operator\">+</span>   p22<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> a12 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p00 <span class=\"token operator\">+</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p01 <span class=\"token operator\">-</span>   p02 <span class=\"token operator\">+</span>   p03 <span class=\"token operator\">+</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p20 <span class=\"token operator\">-</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p21 <span class=\"token operator\">+</span>   p22 <span class=\"token operator\">-</span>   p23<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> a13 <span class=\"token operator\">=</span>    p00 <span class=\"token operator\">-</span>   p01 <span class=\"token operator\">+</span>   p02 <span class=\"token operator\">-</span>   p03 <span class=\"token operator\">-</span>   p20 <span class=\"token operator\">+</span>   p21 <span class=\"token operator\">-</span>   p22 <span class=\"token operator\">+</span>   p23<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> a20 <span class=\"token operator\">=</span>  <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p01 <span class=\"token operator\">-</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p11 <span class=\"token operator\">+</span>   p21 <span class=\"token operator\">-</span>   p31<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> a21 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p00 <span class=\"token operator\">+</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p02 <span class=\"token operator\">+</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p10 <span class=\"token operator\">-</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p12 <span class=\"token operator\">-</span>   p20 <span class=\"token operator\">+</span>   p22 <span class=\"token operator\">+</span>   p30 <span class=\"token operator\">-</span>   p32<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> a22 <span class=\"token operator\">=</span>  <span class=\"token number\">4</span><span class=\"token operator\">*</span>p00 <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token operator\">*</span>p01 <span class=\"token operator\">+</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p02 <span class=\"token operator\">-</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p03 <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token operator\">*</span>p10 <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token operator\">*</span>p11 <span class=\"token operator\">-</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p12 <span class=\"token operator\">+</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p13 <span class=\"token operator\">+</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p20 <span class=\"token operator\">-</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p21 <span class=\"token operator\">+</span> p22 <span class=\"token operator\">-</span> p23 <span class=\"token operator\">-</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p30 <span class=\"token operator\">+</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p31 <span class=\"token operator\">-</span> p32 <span class=\"token operator\">+</span> p33<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> a23 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p00 <span class=\"token operator\">+</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p01 <span class=\"token operator\">-</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p02 <span class=\"token operator\">+</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p03 <span class=\"token operator\">+</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p10 <span class=\"token operator\">-</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p11 <span class=\"token operator\">+</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p12 <span class=\"token operator\">-</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p13 <span class=\"token operator\">-</span>   p20 <span class=\"token operator\">+</span>   p21 <span class=\"token operator\">-</span> p22 <span class=\"token operator\">+</span> p23 <span class=\"token operator\">+</span>   p30 <span class=\"token operator\">-</span>   p31 <span class=\"token operator\">+</span> p32 <span class=\"token operator\">-</span> p33<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> a30 <span class=\"token operator\">=</span>   <span class=\"token operator\">-</span>p01 <span class=\"token operator\">+</span>   p11 <span class=\"token operator\">-</span>   p21 <span class=\"token operator\">+</span>   p31<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> a31 <span class=\"token operator\">=</span>    p00 <span class=\"token operator\">-</span>   p02 <span class=\"token operator\">-</span>   p10 <span class=\"token operator\">+</span>   p12 <span class=\"token operator\">+</span>   p20 <span class=\"token operator\">-</span>   p22 <span class=\"token operator\">-</span>   p30 <span class=\"token operator\">+</span>   p32<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> a32 <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p00 <span class=\"token operator\">+</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p01 <span class=\"token operator\">-</span>   p02 <span class=\"token operator\">+</span>   p03 <span class=\"token operator\">+</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p10 <span class=\"token operator\">-</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p11 <span class=\"token operator\">+</span>   p12 <span class=\"token operator\">-</span>   p13 <span class=\"token operator\">-</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p20 <span class=\"token operator\">+</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p21 <span class=\"token operator\">-</span> p22 <span class=\"token operator\">+</span> p23 <span class=\"token operator\">+</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p30 <span class=\"token operator\">-</span> <span class=\"token number\">2.0f</span><span class=\"token operator\">*</span>p31 <span class=\"token operator\">+</span> p32 <span class=\"token operator\">-</span> p33<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> a33 <span class=\"token operator\">=</span>    p00 <span class=\"token operator\">-</span>   p01 <span class=\"token operator\">+</span>   p02 <span class=\"token operator\">-</span>   p03 <span class=\"token operator\">-</span>   p10 <span class=\"token operator\">+</span>   p11 <span class=\"token operator\">-</span>   p12 <span class=\"token operator\">+</span>   p13 <span class=\"token operator\">+</span>   p20 <span class=\"token operator\">-</span>   p21 <span class=\"token operator\">+</span> p22 <span class=\"token operator\">-</span> p23 <span class=\"token operator\">-</span>   p30 <span class=\"token operator\">+</span>   p31 <span class=\"token operator\">-</span> p32 <span class=\"token operator\">+</span> p33<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">float</span> out <span class=\"token operator\">=</span>\n\ta00      <span class=\"token operator\">+</span> a01 <span class=\"token operator\">*</span> y      <span class=\"token operator\">+</span> a02 <span class=\"token operator\">*</span> y2      <span class=\"token operator\">+</span> a03 <span class=\"token operator\">*</span> y3 <span class=\"token operator\">+</span>\n\ta10 <span class=\"token operator\">*</span> x  <span class=\"token operator\">+</span> a11 <span class=\"token operator\">*</span> x  <span class=\"token operator\">*</span> y <span class=\"token operator\">+</span> a12 <span class=\"token operator\">*</span> x  <span class=\"token operator\">*</span> y2 <span class=\"token operator\">+</span> a13 <span class=\"token operator\">*</span> x  <span class=\"token operator\">*</span> y3 <span class=\"token operator\">+</span>\n\ta20 <span class=\"token operator\">*</span> x2 <span class=\"token operator\">+</span> a21 <span class=\"token operator\">*</span> x2 <span class=\"token operator\">*</span> y <span class=\"token operator\">+</span> a22 <span class=\"token operator\">*</span> x2 <span class=\"token operator\">*</span> y2 <span class=\"token operator\">+</span> a23 <span class=\"token operator\">*</span> x2 <span class=\"token operator\">*</span> y3 <span class=\"token operator\">+</span>\n\ta30 <span class=\"token operator\">*</span> x3 <span class=\"token operator\">+</span> a31 <span class=\"token operator\">*</span> x3 <span class=\"token operator\">*</span> y <span class=\"token operator\">+</span> a32 <span class=\"token operator\">*</span> x3 <span class=\"token operator\">*</span> y2 <span class=\"token operator\">+</span> a33 <span class=\"token operator\">*</span> x3 <span class=\"token operator\">*</span> y3<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> std<span class=\"token operator\">::</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">static_cast</span><span class=\"token operator\">&lt;</span>size_t<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">static_cast</span><span class=\"token operator\">&lt;</span>size_t<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>out<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">static_cast</span><span class=\"token operator\">&lt;</span>size_t<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">bool</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">resizeTo</span><span class=\"token punctuation\">(</span>ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> dst<span class=\"token punctuation\">,</span> ofInterpolationMethod interpMethod<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>dst <span class=\"token operator\">==</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>dst<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token function\">getBytesPerPixel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> dst<span class=\"token punctuation\">.</span><span class=\"token function\">getBytesPerPixel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\tsize_t srcWidth      <span class=\"token operator\">=</span> <span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsize_t srcHeight     <span class=\"token operator\">=</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsize_t dstWidth\t  <span class=\"token operator\">=</span> dst<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsize_t dstHeight\t  <span class=\"token operator\">=</span> dst<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsize_t bytesPerPixel <span class=\"token operator\">=</span> <span class=\"token function\">getBytesPerPixel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\tPixelType <span class=\"token operator\">*</span> dstPixels <span class=\"token operator\">=</span> dst<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>interpMethod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n\t\t<span class=\"token keyword\">case</span> OF_INTERPOLATE_NEAREST_NEIGHBOR<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n\t\t\tsize_t dstIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">float</span> srcxFactor <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>srcWidth<span class=\"token operator\">/</span>dstWidth<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">float</span> srcyFactor <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>srcHeight<span class=\"token operator\">/</span>dstHeight<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">float</span> srcy <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t dsty<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> dsty<span class=\"token operator\">&lt;</span>dstHeight<span class=\"token punctuation\">;</span> dsty<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">float</span> srcx <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n\t\t\t\tsize_t srcIndex <span class=\"token operator\">=</span> <span class=\"token keyword\">static_cast</span><span class=\"token operator\">&lt;</span>size_t<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>srcy<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> srcWidth<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t dstx<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> dstx<span class=\"token operator\">&lt;</span>dstWidth<span class=\"token punctuation\">;</span> dstx<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\tsize_t pixelIndex <span class=\"token operator\">=</span> <span class=\"token keyword\">static_cast</span><span class=\"token operator\">&lt;</span>size_t<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>srcIndex <span class=\"token operator\">+</span> srcx<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> bytesPerPixel<span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t k<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k<span class=\"token operator\">&lt;</span>bytesPerPixel<span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t\tdstPixels<span class=\"token punctuation\">[</span>dstIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pixels<span class=\"token punctuation\">[</span>pixelIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\tdstIndex<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\tpixelIndex<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\tsrcx<span class=\"token operator\">+</span><span class=\"token operator\">=</span>srcxFactor<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\tsrcy<span class=\"token operator\">+</span><span class=\"token operator\">=</span>srcyFactor<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n\t\t<span class=\"token keyword\">case</span> OF_INTERPOLATE_BILINEAR<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// not implemented yet</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofPixels\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"resizeTo(): bilinear resize not implemented, not resizing\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n\t\t<span class=\"token keyword\">case</span> OF_INTERPOLATE_BICUBIC<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">float</span> px1<span class=\"token punctuation\">,</span> py1<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">float</span> px2<span class=\"token punctuation\">,</span> py2<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">float</span> px3<span class=\"token punctuation\">,</span> py3<span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">float</span> srcColor <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">float</span> interpCol<span class=\"token punctuation\">;</span>\n\t\t\tsize_t patchRow<span class=\"token punctuation\">;</span>\n\t\t\tsize_t patchIndex<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">float</span> patch<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t\t\tsize_t srcRowBytes <span class=\"token operator\">=</span> srcWidth<span class=\"token operator\">*</span>bytesPerPixel<span class=\"token punctuation\">;</span>\n\t\t\tsize_t loIndex <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>srcRowBytes<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\tsize_t hiIndex <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>srcWidth<span class=\"token operator\">*</span>srcHeight<span class=\"token operator\">*</span>bytesPerPixel<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>srcRowBytes<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t dsty<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> dsty<span class=\"token operator\">&lt;</span>dstHeight<span class=\"token punctuation\">;</span> dsty<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t dstx<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> dstx<span class=\"token operator\">&lt;</span>dstWidth<span class=\"token punctuation\">;</span> dstx<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t\t\t\tsize_t   dstIndex0 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>dsty<span class=\"token operator\">*</span>dstWidth <span class=\"token operator\">+</span> dstx<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> bytesPerPixel<span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">float</span> srcxf <span class=\"token operator\">=</span> srcWidth  <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>dstx<span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>dstWidth<span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">float</span> srcyf <span class=\"token operator\">=</span> srcHeight <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>dsty<span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>dstHeight<span class=\"token punctuation\">;</span>\n\t\t\t\t\tsize_t   srcx <span class=\"token operator\">=</span> <span class=\"token keyword\">static_cast</span><span class=\"token operator\">&lt;</span>size_t<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>srcWidth<span class=\"token number\">-1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">static_cast</span><span class=\"token operator\">&lt;</span>size_t<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>srcxf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tsize_t   srcy <span class=\"token operator\">=</span> <span class=\"token keyword\">static_cast</span><span class=\"token operator\">&lt;</span>size_t<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>srcHeight<span class=\"token number\">-1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">static_cast</span><span class=\"token operator\">&lt;</span>size_t<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>srcyf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tsize_t   srcIndex0 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>srcy<span class=\"token operator\">*</span>srcWidth <span class=\"token operator\">+</span> srcx<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> bytesPerPixel<span class=\"token punctuation\">;</span>\n\n\t\t\t\t\tpx1 <span class=\"token operator\">=</span> srcxf <span class=\"token operator\">-</span> srcx<span class=\"token punctuation\">;</span>\n\t\t\t\t\tpy1 <span class=\"token operator\">=</span> srcyf <span class=\"token operator\">-</span> srcy<span class=\"token punctuation\">;</span>\n\t\t\t\t\tpx2 <span class=\"token operator\">=</span> px1 <span class=\"token operator\">*</span> px1<span class=\"token punctuation\">;</span>\n\t\t\t\t\tpx3 <span class=\"token operator\">=</span> px2 <span class=\"token operator\">*</span> px1<span class=\"token punctuation\">;</span>\n\t\t\t\t\tpy2 <span class=\"token operator\">=</span> py1 <span class=\"token operator\">*</span> py1<span class=\"token punctuation\">;</span>\n\t\t\t\t\tpy3 <span class=\"token operator\">=</span> py2 <span class=\"token operator\">*</span> py1<span class=\"token punctuation\">;</span>\n\n\t\t\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t k<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k<span class=\"token operator\">&lt;</span>bytesPerPixel<span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t\tsize_t   dstIndex <span class=\"token operator\">=</span> dstIndex0<span class=\"token operator\">+</span>k<span class=\"token punctuation\">;</span>\n\t\t\t\t\t\tsize_t   srcIndex <span class=\"token operator\">=</span> srcIndex0<span class=\"token operator\">+</span>k<span class=\"token punctuation\">;</span>\n\n\t\t\t\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t dy<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> dy<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> dy<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t\t\t\tpatchRow <span class=\"token operator\">=</span> srcIndex <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>dy<span class=\"token number\">-1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>srcRowBytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>size_t dx<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> dx<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> dx<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t\t\t\t\tpatchIndex <span class=\"token operator\">=</span> patchRow <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>dx<span class=\"token number\">-1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>bytesPerPixel<span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>patchIndex <span class=\"token operator\">>=</span> loIndex<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>patchIndex <span class=\"token operator\">&lt;</span> hiIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t\t\t\t\t\tsrcColor <span class=\"token operator\">=</span> pixels<span class=\"token punctuation\">[</span>patchIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t\t\t\tpatch<span class=\"token punctuation\">[</span>dx<span class=\"token operator\">*</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span> dy<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> srcColor<span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t\t\t\tinterpCol <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>PixelType<span class=\"token punctuation\">)</span><span class=\"token function\">bicubicInterpolate</span><span class=\"token punctuation\">(</span>patch<span class=\"token punctuation\">,</span> px1<span class=\"token punctuation\">,</span>py1<span class=\"token punctuation\">,</span> px2<span class=\"token punctuation\">,</span>py2<span class=\"token punctuation\">,</span> px3<span class=\"token punctuation\">,</span>py3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\tdstPixels<span class=\"token punctuation\">[</span>dstIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> interpCol<span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">bool</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">pasteInto</span><span class=\"token punctuation\">(</span>ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>dst<span class=\"token punctuation\">,</span> size_t xTo<span class=\"token punctuation\">,</span> size_t yTo<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>dst<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token function\">getBytesPerPixel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> dst<span class=\"token punctuation\">.</span><span class=\"token function\">getBytesPerPixel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> xTo <span class=\"token operator\">+</span> <span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span>dst<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> yTo <span class=\"token operator\">+</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span>dst<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\tsize_t bytesToCopyPerRow <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>xTo <span class=\"token operator\">+</span> <span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;=</span>dst<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> dst<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>xTo<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token function\">getBytesPerPixel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsize_t columnsToCopy <span class=\"token operator\">=</span> yTo <span class=\"token operator\">+</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> dst<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> dst<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>yTo<span class=\"token punctuation\">;</span>\n\tPixelType <span class=\"token operator\">*</span> dstPix <span class=\"token operator\">=</span> dst<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>xTo <span class=\"token operator\">+</span> yTo<span class=\"token operator\">*</span>dst<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>dst<span class=\"token punctuation\">.</span><span class=\"token function\">getBytesPerPixel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> PixelType <span class=\"token operator\">*</span> srcPix <span class=\"token operator\">=</span> <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsize_t srcStride <span class=\"token operator\">=</span> <span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token function\">getBytesPerPixel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsize_t dstStride <span class=\"token operator\">=</span> dst<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>dst<span class=\"token punctuation\">.</span><span class=\"token function\">getBytesPerPixel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t y<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>y<span class=\"token operator\">&lt;</span>columnsToCopy<span class=\"token punctuation\">;</span> y<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>dstPix<span class=\"token punctuation\">,</span>srcPix<span class=\"token punctuation\">,</span>bytesToCopyPerRow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdstPix <span class=\"token operator\">+</span><span class=\"token operator\">=</span> dstStride<span class=\"token punctuation\">;</span>\n\t\tsrcPix <span class=\"token operator\">+</span><span class=\"token operator\">=</span> srcStride<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> A<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> B<span class=\"token operator\">></span>\n<span class=\"token keyword\">inline</span> A <span class=\"token function\">clampedAdd</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> A<span class=\"token operator\">&amp;</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> B<span class=\"token operator\">&amp;</span> b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> glm<span class=\"token operator\">::</span><span class=\"token function\">clamp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span> a <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span> b<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> ofColor_<span class=\"token operator\">&lt;</span>A<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">limit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">bool</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">blendInto</span><span class=\"token punctuation\">(</span>ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>dst<span class=\"token punctuation\">,</span> size_t xTo<span class=\"token punctuation\">,</span> size_t yTo<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>dst<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token function\">getBytesPerPixel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> dst<span class=\"token punctuation\">.</span><span class=\"token function\">getBytesPerPixel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> xTo <span class=\"token operator\">+</span> <span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span>dst<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> yTo <span class=\"token operator\">+</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span>dst<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token function\">getNumChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\tstd<span class=\"token operator\">::</span>function<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ConstPixel<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">,</span>Pixel<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span> blendFunc<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span><span class=\"token function\">getNumChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n\t\tblendFunc <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ConstPixel<span class=\"token operator\">&amp;</span>src<span class=\"token punctuation\">,</span> Pixel<span class=\"token operator\">&amp;</span>dst<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tdst<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">clampedAdd</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n\t\tblendFunc <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ConstPixel<span class=\"token operator\">&amp;</span>src<span class=\"token punctuation\">,</span> Pixel<span class=\"token operator\">&amp;</span>dst<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tdst<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">clampedAdd</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> ofColor_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">limit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>ofColor_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">limit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> src<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tdst<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">clampedAdd</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> ofColor_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">limit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>ofColor_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">limit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> src<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span>\n\t\tblendFunc <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ConstPixel<span class=\"token operator\">&amp;</span>src<span class=\"token punctuation\">,</span> Pixel<span class=\"token operator\">&amp;</span>dst<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tdst<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">clampedAdd</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tdst<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">clampedAdd</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tdst<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">clampedAdd</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span>\n\t\tblendFunc <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ConstPixel<span class=\"token operator\">&amp;</span>src<span class=\"token punctuation\">,</span> Pixel<span class=\"token operator\">&amp;</span>dst<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tdst<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">clampedAdd</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> ofColor_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">limit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>ofColor_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">limit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> src<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tdst<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">clampedAdd</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> ofColor_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">limit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>ofColor_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">limit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> src<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tdst<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">clampedAdd</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> ofColor_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">limit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>ofColor_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">limit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> src<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tdst<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">clampedAdd</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> ofColor_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">limit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>ofColor_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">limit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> src<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">auto</span> dstLine <span class=\"token operator\">=</span> dst<span class=\"token punctuation\">.</span><span class=\"token function\">getLine</span><span class=\"token punctuation\">(</span>yTo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> line<span class=\"token operator\">:</span> <span class=\"token function\">getConstLines</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">auto</span> dstPixel <span class=\"token operator\">=</span> dstLine<span class=\"token punctuation\">.</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> xTo<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> p<span class=\"token operator\">:</span> line<span class=\"token punctuation\">.</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">blendFunc</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span>dstPixel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tdstPixel<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tdstLine<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofPixels_</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">char</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofPixels_</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofPixels_</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">short</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofPixels_</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">short</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofPixels_</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofPixels_</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofPixels_</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">long</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofPixels_</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofPixels_</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofPixels_</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n","type":"source","static":true}}],"fetch":[]}