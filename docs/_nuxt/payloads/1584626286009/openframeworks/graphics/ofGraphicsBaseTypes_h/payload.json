{"data":[{"page":{"entry":{"name":"ofGraphicsBaseTypes.h","filename":"ofGraphicsBaseTypes.h","absolute":"/Users/gilbertsinnott/Code/openFrameworks/libs/openFrameworks/graphics/ofGraphicsBaseTypes.h","path":"/openframeworks/graphics/ofGraphicsBaseTypes_h","route":"/openframeworks/graphics/ofGraphicsBaseTypes.h","dir":"../libs/openFrameworks/graphics","ext":"h","type":"source","id":269,"parent":259,"breadcrumbs":[259,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGraphicsConstants.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"glm/fwd.hpp\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofColor.h\"</span></span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofRectangle</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofPixels_</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">typedef</span> ofPixels_<span class=\"token operator\">&lt;</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">></span> ofPixels<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> ofPixels_<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span> ofFloatPixels<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> ofPixels_<span class=\"token operator\">&lt;</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">short</span><span class=\"token operator\">></span> ofShortPixels<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> ofPixels<span class=\"token operator\">&amp;</span> ofPixelsRef<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofImage_</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">typedef</span> ofImage_<span class=\"token operator\">&lt;</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">></span> ofImage<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> ofImage_<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span> ofFloatImage<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> ofImage_<span class=\"token operator\">&lt;</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">short</span><span class=\"token operator\">></span> ofShortImage<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofPath</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">of3dPrimitive</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofLight</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofMaterial</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofBaseMaterial</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofCamera</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofTrueTypeFont</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofNode</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">of3dGraphics</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofVbo</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofVboMesh</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofSoundBuffer</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofFbo</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofBaseVideoDraws</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">T</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofPolyline_</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> ofPolyline <span class=\"token operator\">=</span> ofPolyline_<span class=\"token operator\">&lt;</span>ofDefaultVertexType<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">V</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">N</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">C</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">T</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofMesh_</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> ofMesh <span class=\"token operator\">=</span> ofMesh_<span class=\"token operator\">&lt;</span>ofDefaultVertexType<span class=\"token punctuation\">,</span> ofDefaultNormalType<span class=\"token punctuation\">,</span> ofDefaultColorType<span class=\"token punctuation\">,</span> ofDefaultTexCoordType<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">enum</span> ofFboMode<span class=\"token operator\">:</span> <span class=\"token keyword\">short</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">enum</span> ofLoopType<span class=\"token operator\">:</span> <span class=\"token keyword\">short</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">enum</span> ofOrientation<span class=\"token operator\">:</span> <span class=\"token keyword\">short</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Contains general information about the style of ofGraphics</span>\n<span class=\"token comment\" spellcheck=\"true\">/// elements such as color, line width and others.</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofStyle</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Create a default ofStyle.</span>\n\t\t<span class=\"token function\">ofStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tbFill\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\tblendingMode\t\t<span class=\"token operator\">=</span> OF_BLENDMODE_ALPHA<span class=\"token punctuation\">;</span>\n\t\t\tsmoothing\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\tcircleResolution\t<span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n\t\t\tsphereResolution\t<span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n\t\t\tcurveResolution\t\t<span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n\t\t\tlineWidth\t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n\t\t\tpolyMode\t\t\t<span class=\"token operator\">=</span> OF_POLY_WINDING_ODD<span class=\"token punctuation\">;</span>\n\t\t\trectMode\t\t\t<span class=\"token operator\">=</span> OF_RECTMODE_CORNER<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n\t\t\t\tdrawBitmapMode\t\t<span class=\"token operator\">=</span> OF_BITMAPMODE_SIMPLE<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t\t\tdrawBitmapMode\t\t<span class=\"token operator\">=</span> OF_BITMAPMODE_MODEL_BILLBOARD<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\tbgColor<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//depthTest = false;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Destroy the ofStyle.</span>\n\t\t<span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">ofStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief The color used when rendering.</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">/// This style depends on the state of the ofStyle::bFill.</span>\n\t\tofColor color<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief The background color used when rendering.</span>\n\t\tofColor bgColor<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief The current rendering mode for polygons.</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">/// ofPolyWindingMode determines how ovelapping parts of the same</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">/// polygon are rendered.</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofPolyWindingMode</span>\n\t\tofPolyWindingMode polyMode<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Determine how some shapes are anchored (e.g. ofDrawEllipse).</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">/// The rectMode applies to several shapes, including ofDrawRectangle</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">/// and ofDrawEllipse.  If the current rectMode is `OF_RECTMODE_CENTER`,</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">/// the rendered shape will be drawn with x, y in the center of the</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">/// shape. If the current rectMode is `OF_RECTMODE_CORNER`, the</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">/// rendered shape will be drawn with the x, y in the upper-left-hand</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">/// corner of the shape.</span>\n\t\tofRectMode rectMode<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief True if the renderer should fill a rendered shape.</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">/// If true, the renderer will fill the rendered shape.  If false, the</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">/// renderer will draw the outline of the rendered shape.</span>\n\t\t<span class=\"token keyword\">bool</span> bFill<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief The render mode for bitmaps (e.g. ofDrawBitmapString).</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofDrawBitmapString(const T&amp; textString, float x, float y)</span>\n\t\tofDrawBitmapMode drawBitmapMode<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief The blending mode.</span>\n\t\tofBlendMode blendingMode<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief True if anti-aliasing is enabled.</span>\n\t\t<span class=\"token keyword\">bool</span> smoothing<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// \\brief The resolution of rendered circles and arcs (e.g. ofCircle).</span>\n\t\t<span class=\"token keyword\">int</span> circleResolution<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// \\brief The resolution of rendered spheres (e.g. ofSphere).</span>\n\t\t<span class=\"token keyword\">int</span> sphereResolution<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// \\brief The resolution of rendered curves.</span>\n\t\t<span class=\"token keyword\">int</span> curveResolution<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief The width of rendered lines.</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">/// \\warning This is not currently implemented in modern OF renderers.</span>\n\t\t<span class=\"token keyword\">float</span> lineWidth<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//bool depthTest; removed since it'll break old projects setting depth test through glEnable</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">// ofBaseDraws</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofBaseDraws</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Destroy the abstract object.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">ofBaseDraws</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw at a position at the native size.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Native size is determined by getWidth() and getHeight().</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x Draw position on the x axis.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y Draw position on the y axis.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw at a position with the specified size.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x Draw position on the x axis.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y Draw position on the y axis.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param w Draw width.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param h Draw height.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw at a position at the native size.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Native size is determined by getWidth() and getHeight().</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param point Draw position.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span> point<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw at a position and size specified by a rectangle.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param rect Draw position and size.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofRectangle <span class=\"token operator\">&amp;</span> rect<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw at a position.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param point Draw position.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param w Draw width.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param h Draw height.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span> point<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get the height.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns the height.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">float</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get the width.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns the width.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">float</span> <span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the anchor point the item is drawn around as a percentage.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// This can be useful if you want to rotate an image around a particular</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// point.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param xPct Horizontal position as a percentage (0 - 1).</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param yPct Vertical position as a percentage (0 - 1).</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setAnchorPercent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> xPct<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> yPct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the anchor point the item is drawn around in pixels.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// This can be useful if you want to rotate an image around a particular</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// point.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x Horizontal texture position in pixels.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y Vertical texture position in pixels.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setAnchorPoint</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Reset the anchor point to (0, 0).</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">resetAnchor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief An abstract class representing an object that can be updated.</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofBaseUpdates</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Destroy the ofBaseUpdates.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">ofBaseUpdates</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Update the object's state.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief An abstract class representing an object that has pixels.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// This empty class primarily exists to allow templated subclasses of different</span>\n<span class=\"token comment\" spellcheck=\"true\">/// types to be stored as raw or shared pointers in collections such as</span>\n<span class=\"token comment\" spellcheck=\"true\">/// std::vector.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Example:</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\code{.cpp}</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// std::vector&lt;ofAbstractHasPixels> pixelProviders;</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ofPixels pixels;</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ofFloatPixels floatPixels;</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ofShortPixels shortPixels;</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// // ...</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// pixelProviders.push_back(&amp;pixels);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// pixelProviders.push_back(&amp;floatPixels);</span>\n<span class=\"token comment\" spellcheck=\"true\">/// pixelProviders.push_back(&amp;shortPixels);</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\endcode</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofAbstractHasPixels</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Destroy the ofAbstractHasPixels.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">ofAbstractHasPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief A base class represeting an object that has pixels.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\tparam T The pixel data type.</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofBaseHasPixels_</span><span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofAbstractHasPixels<span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Destroy the ofAbstractHasPixels.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span>ofBaseHasPixels_<span class=\"token operator\">&lt;</span>T<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get a reference to the underlying ofPixels.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns a reference the underlying ofPixels.</span>\n\t<span class=\"token keyword\">virtual</span> ofPixels_<span class=\"token operator\">&lt;</span>T<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get a const reference to the underlying ofPixels.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns a const reference the underlying ofPixels.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">const</span> ofPixels_<span class=\"token operator\">&lt;</span>T<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief A typedef for an unsigned char ofBaseHasPixels_.</span>\n<span class=\"token keyword\">typedef</span> ofBaseHasPixels_<span class=\"token operator\">&lt;</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">></span> ofBaseHasPixels<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief A typedef for an float ofBaseHasPixels_.</span>\n<span class=\"token keyword\">typedef</span> ofBaseHasPixels_<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span> ofBaseHasFloatPixels<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief A typedef for an unsigned short ofBaseHasPixels_.</span>\n<span class=\"token keyword\">typedef</span> ofBaseHasPixels_<span class=\"token operator\">&lt;</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">short</span><span class=\"token operator\">></span> ofBaseHasShortPixels<span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief The base renderer interface.</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofBaseRenderer</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">ofBaseRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get the string representation of the renderer type.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// For example, this method may return \"GL\", \"ProgrammableGL\", or another</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// type depending on the renderer being used.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns The string representation of the renderer type.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> <span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Starts using this renderer as the rendering surface.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">startRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Stop using this renderer as the rendering surface.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">finishRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a polyline with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param poly The polyline to draw with this renderer.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPolyline <span class=\"token operator\">&amp;</span> poly<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a path with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param shape The path to draw with this renderer.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPath <span class=\"token operator\">&amp;</span> shape<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a path with this renderer at \\p x and \\p y.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param shape The path to draw with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate to use to draw \\p shape.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate to use to draw \\p shape.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPath <span class=\"token operator\">&amp;</span> shape<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofBaseRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofBaseRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofBaseRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">popMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a \\p mesh with this renderer using the \\p renderType.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\p renderType defines how the \\p mesh will be rendered and may be:</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \tOF_MESH_POINTS,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_MESH_WIREFRAME,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_MESH_FILL</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param mesh The mesh to draw with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param renderType The render mode to use to draw \\p mesh with this</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofPolyRenderMode</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofMesh <span class=\"token operator\">&amp;</span> mesh<span class=\"token punctuation\">,</span> ofPolyRenderMode renderType<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a mesh with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\p renderType defines how the \\p mesh will be rendered and may be:</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \tOF_MESH_POINTS,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_MESH_WIREFRAME,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_MESH_FILL</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param vertexData The mesh to draw with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param renderType The render mode to use to draw \\p vertexData to</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param useColors True to use per-vertex coloring to draw the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\p vertexData.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param useTextures True to use texture coordinates to draw the \\p</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// vertexData.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param useNormals True to use normals to draw the \\p vertexData.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofPolyRenderMode</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofMesh <span class=\"token operator\">&amp;</span> vertexData<span class=\"token punctuation\">,</span> ofPolyRenderMode renderType<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> useColors<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> useTextures<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> useNormals<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a \\p model with this renderer using the \\p renderType.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\p renderType defines how the \\p model will be rendered and may be:</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \tOF_MESH_POINTS,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_MESH_WIREFRAME,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_MESH_FILL</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param model The model to draw with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param renderType The render mode to use when drawing the \\p model</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofPolyRenderMode</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> of3dPrimitive<span class=\"token operator\">&amp;</span> model<span class=\"token punctuation\">,</span> ofPolyRenderMode renderType<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a node with this renderer using ofNode::customDraw().</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param model The node to draw with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofNode::customDraw()</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofNode<span class=\"token operator\">&amp;</span> model<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw an \\p image with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param image The image to draw with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate to use when drawing \\p image with this</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate to use to draw \\p image with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param z The z coordinate to use to drawing \\p image with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param w The width to use to draw the \\p image with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param h The height to use to draw the \\p image with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param sx The subsection x axis offset within the image texture.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param sy The subsection y axis offset within the image texture.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param sw The subsection width offset within the image texture.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param sh The subsection height offset within the image texture.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofImage <span class=\"token operator\">&amp;</span> image<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sh<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw an \\p image with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param image The image to draw with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate to use to draw \\p image with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate to use to draw \\p image with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param z The z coordinate to use to draw \\p image with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param w The width to use to draw \\p image with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param h The height to use to draw \\p image with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param sx The subsection x axis offset within the image texture.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param sy The subsection y axis offset within the image texture.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param sw The subsection width offset within the image texture.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param sh The subsection height offset within the image texture.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFloatImage <span class=\"token operator\">&amp;</span> image<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sh<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw an \\p image with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param image The image to draw with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate to use to draw \\p image with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate to use to draw \\p image with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param z The z coordinate to use to draw \\p image with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param w The width to use when drawing the image with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param h The height to use when drawing the image with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param sx The subsection x axis offset within the image texture.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param sy The subsection y axis offset within the image texture.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param sw The subsection width offset within the image texture.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param sh The subsection height offset within the image texture.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofShortImage <span class=\"token operator\">&amp;</span> image<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sh<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a \\p video with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param video The video with draw with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate to use to draw \\p video with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate to use to draw \\p video with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param w The width to use to draw the video with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param h The height to use to draw the video with this renderer.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofBaseVideoDraws <span class=\"token operator\">&amp;</span> video<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// transformations</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Push the current viewport into the renderer's viewport stack.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// pushViewport() save the current viewport to the renderer's viewport</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// history stack allowing new viewport operations to effect only the new</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// viewport created by this method. Should be paired with popView.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa viewport()</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">pushView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Pop the current viewport from the renderer's view stack.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// popView() restores the renderer's viewport to the state it was last</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// saved with with a call to pushView().</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa viewport()</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">popView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set this renderer's viewport using a rectangle.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// This method uses the ofGetWidth() and ofGetHeight() to set the width and</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// height of the viewport. It also automatically creates near and far</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// clipping planes based on this width and height.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span>ofRectangle viewport<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set this renderer's viewport manually using x, y, width, and</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// height.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate of the viewport. Defaults to 0.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate of the viewport. Defaults to 0.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param w The width of the viewport. Defaults to -1 setting its width</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// according to the rendering surface's width.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param h The height of the viewport. Defaults to -1 setting its height</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// according to the rendering surface's height.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> vflip<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Setup the renderer to use a perspective matrix.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param width The width of the desired perspective matrix. Defaults to -1</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// setting its width according to the rendering surface's width.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height of the desired perspective matrix. Defaults to</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Defaults to -1 setting its width according to the rendering surface's</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// width.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param fov The field of view to use with the perspective matrix.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Defaults to 60.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param nearDist The near clipping distance to use with the perspective</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// matrix. Setting this value to 0 uses the default near distance. Defaults</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// to 0.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param farDist The far clipping distance to use with the perspective</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// matrix. Setting this value to 0 uses the default near distance. Defaults</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// to 0.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setupScreenPerspective</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> width <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> fov <span class=\"token operator\">=</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> nearDist <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> farDist <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Setup the renderer to use an orthographic matrix.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param width The width of the desired orthographic matrix. Defaults to</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// -1 setting its width according to the rendering surface's width.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height of the desired orthographic matrix. Defaults to</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// -1 setting its height according to the rendering surface's height.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param nearDist The near clipping distance to use with the orthographic</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// matrix. Setting this value to 0 uses the defualt near distance. Defaults</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// to 0.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param farDist The far clipping distance to use with the orthographic</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// matrix. Setting this value to 0 uses the defualt near distance. Defaults</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// to 0.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setupScreenOrtho</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> width <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> nearDist <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> farDist <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief set this renderer's orientation.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Possible orientation values include:</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \tOF_ORIENTATION_DEFAULT</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_ORIENTATION_180</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_ORIENTATION_90_LEFT</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_ORIENTATION_90_RIGHT</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_ORIENTATION_UNKNOWN</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param orientation The orientation to use with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param vFlip True if the orientation should be vertically flipped.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofOrientation</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setOrientation</span><span class=\"token punctuation\">(</span>ofOrientation orientation<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> vFlip<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get this renderer's current viewport.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Unlike getNativeViewport(), this method gets this renderer's current</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// viewport with orientation and vertical flipping applied.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns This renderer's viewport as a rectangle.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa getNativeViewport()</span>\n\t<span class=\"token keyword\">virtual</span> ofRectangle <span class=\"token function\">getCurrentViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get this renderer's current native viewport.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Unlike getViewport(), this method gets this renderer's current viewport</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// without orientation and vertical flipping applied.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns This renderer's native viewport as a rectangle.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa getViewport()</span>\n\t<span class=\"token keyword\">virtual</span> ofRectangle <span class=\"token function\">getNativeViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get the renderer's current viewport width.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns The renderer's current viewport width.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getViewportWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get the renderer's current viewport width.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns The renderer's current viewport width.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getViewportHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Returns true if the renderer's current viewport is vertically</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// flipped.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns True if the renderer's current viewport is vertically flipped.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the coordinate handidness of this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Possible handednesses include OF_LEFT_HANDED and OF_RIGHT_HANDED.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// In a left handed coordinate system positive x, y and z axes point right,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// up and forward, respectively and positive rotation is clockwise about</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// the axis of rotation. In a right handed coordinate system the positive x</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// and y axes point right and up, and the negative z axis points forward</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// and positive rotation is counterclockwise about the axis of rotation.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param handedness The handedness to set this renderer to use.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa http://seanmiddleditch.com/matrices-handedness-pre-and-post-multiplication-row-vs-column-major-and-notations/</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa https://www.evl.uic.edu/ralph/508S98/coordinates.html</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setCoordHandedness</span><span class=\"token punctuation\">(</span>ofHandednessType handedness<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get the coordinate handidness of this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Possible handednesses include OF_LEFT_HANDED and OF_RIGHT_HANDED.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// In a left handed coordinate system positive x, y and z axes point right,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// up and forward, respectively and positive rotation is clockwise about</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// the axis of rotation. In a right handed coordinate system the positive x</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// and y axes point right and up, and the negative z axis points forward</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// and positive rotation is counterclockwise about the axis of rotation.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns The handedness this renderer is using.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa http://seanmiddleditch.com/matrices-handedness-pre-and-post-multiplication-row-vs-column-major-and-notations/</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa https://www.evl.uic.edu/ralph/508S98/coordinates.html</span>\n\t<span class=\"token keyword\">virtual</span> ofHandednessType <span class=\"token function\">getCoordHandedness</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//our openGL wrappers</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Pushes this renderer's matrix stack down by one.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// pushMatrix() saves the renderer's current matrix allowing new</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// transformations and scales to effect only the new matrix created by</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// this method. Should be paired with a call to popMatrix().</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Pops this renderer's current matrix stack.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// popMatrix() restores the renderer's matrix to the state it was last</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// saved with with a call to pushMatrix().</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">popMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get this renderer's current matrix for particular a matrix mode.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Possible matrix modes include:</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_MATRIX_MODELVIEW</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_MATRIX_PROJECTION</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_MATRIX_TEXTURE</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param matrixMode_ The matrix mode to get the current matrix of.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns The current matrix specified by \\p matrixMode_</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofMatrixMode</span>\n\t<span class=\"token keyword\">virtual</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token function\">getCurrentMatrix</span><span class=\"token punctuation\">(</span>ofMatrixMode matrixMode_<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get this renderer's current orientation matrix.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns This renderer's current orientation matrix.</span>\n\t<span class=\"token keyword\">virtual</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token function\">getCurrentOrientationMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Translate this renderer's current matrix by x, y, and z.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate to translate this renderer's current matrix</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// by.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate to translate this renderer's current matrix</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// by.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param z The z coordinate to translate this renderer's current matrix</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// by. Defaults to 0.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Translate this renderer's current matrix by a point.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param p The 3D point to translate this renderer's current matrix by.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Scale this renderer's current matrix by xAmnt, yAmnt, and zAmnt.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param xAmnt The amount to scale this renderer's current matrix's x</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// axis by.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param yAmnt The amount to scale this renderer's current matrix's y</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// axis by.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param zAmnt The amount to scale this renderer's current matrix's z</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// axis by. Defaults to 1.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> xAmnt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> yAmnt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> zAmnt <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Rotate this renderer's current matrix by \\p degrees about a euler.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param degrees Degrees to rotate about vecX, vecY, and vecZ.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param vecX The x axis to rotate about.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param vecY The y axis to rotate about.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param vecZ The z axis to rotate about.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">rotateDeg</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecY<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecZ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Rotate this renderer's current matrix by \\p degrees about the x</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// axis.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param degrees Degrees to rotate about the x axis.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">rotateXDeg</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Rotate this renderer's current matrix by \\p degrees about the y</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// axis.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param degrees Degrees to rotate about the y axis.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">rotateYDeg</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Rotate this renderer's current matrix by \\p degrees about the z</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// axis.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param degrees Degrees to rotate about the z axis.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">rotateZDeg</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Rotate this renderer's current matrix by \\p degrees about the z</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// axis.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// This method is an alias of rotateZ().</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param degrees Degrees to rotate about the z axis.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa rotateZ()</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">rotateDeg</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Rotate this renderer's current matrix by \\p degrees about a euler.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param degrees Degrees to rotate about vecX, vecY, and vecZ.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param vecX The x axis to rotate about.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param vecY The y axis to rotate about.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param vecZ The z axis to rotate about.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">rotateRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecY<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecZ<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Rotate this renderer's current matrix by \\p degrees about the x</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// axis.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param degrees Degrees to rotate about the x axis.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">rotateXRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Rotate this renderer's current matrix by \\p degrees about the y</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// axis.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param degrees Degrees to rotate about the y axis.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">rotateYRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Rotate this renderer's current matrix by \\p degrees about the z</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// axis.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param degrees Degrees to rotate about the z axis.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">rotateZRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Rotate this renderer's current matrix by \\p degrees about the z</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// axis.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// This method is an alias of rotateZ().</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param degrees Degrees to rotate about the z axis.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa rotateZ()</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">rotateRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Sets this renderer's current matrix mode.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The possible matrix modes include:</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_MATRIX_MODELVIEW</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_MATRIX_PROJECTION</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_MATRIX_TEXTURE</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param mode The matrix mode this renderer's matrix should use.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>ofMatrixMode mode<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Load this renderer's identity matrix.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// This identity matrix is an mat4 matrix with 1s on the main</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// diagonal and 0s elsewhere.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// [</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\t[1, 0, 0, 0],</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\t[0, 1, 0, 0],</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\t[0, 0, 1, 0],</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\t[0, 0, 0, 1]</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t]</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Matrix multiplications using this matrix as the multiplier will yield no</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// change in the multiplicand matrix.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">loadIdentityMatrix</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Load a matrix as this renderer's current matrix.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param m The matrix to load into this renderer.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">loadMatrix</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span> m<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Load m as this renderer's current matrix.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\p m can be passed to loadMatrix() in this way from raw data</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param m Float pointer to an 4x4 matrix.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">loadMatrix</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>m<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Multiply this renderer's current matrix by \\p m.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param m The matrix to multiply this renderer's current matrix by.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">multMatrix</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span> m<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Multiply this renderer's current matrix by \\p m.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\p m can be passed to loadMatrix() in this way with raw data</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param m Float pointer to an mat4 to multiply this renderer's</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// current matrix by.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">multMatrix</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>m<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Load \\p m into this renderer's matrix stack as a view matrix.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param m The view matrix to load into this renderer's matrix stack.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">loadViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span> m<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Multiply this renderer's view matrix by \\p m.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param m The matrix to multiply this renderer's view matrix by.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">multViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span> m<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get this renderer's current view matrix.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns This renderer's current view matrix.</span>\n\t<span class=\"token keyword\">virtual</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token function\">getCurrentViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get this renderer's current normal matrix.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns This renderer's current normal matrix.</span>\n\t<span class=\"token keyword\">virtual</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token function\">getCurrentNormalMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Bind \\p camera's matrices to this renderer's matrix stack.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Bind's the \\p camera's modelview and projection matrices to this</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// renderer's matrix stack using \\p viewport. Should be followed with a</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// call to unbind().</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param camera The camera to bind to this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param viewport The viewport to use when binding \\p camera to this</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// renderer.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofCamera <span class=\"token operator\">&amp;</span> camera<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofRectangle <span class=\"token operator\">&amp;</span> viewport<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Unbind the camera from this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param camera The camera to unbind from this renderer.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofCamera <span class=\"token operator\">&amp;</span> camera<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief setup the default graphics settings for this renderer.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setupGraphicDefaults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief setup the default screen settings for this renderer.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setupScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// drawing modes</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set this renderer's rect mode.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Possible rect modes include OF_RECTMODE_CORNER and OF_RECTMODE_CENTER.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param mode The rect mode to request this renderer to use.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofRectMode</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setRectMode</span><span class=\"token punctuation\">(</span>ofRectMode mode<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get this renderer's current rect mode.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Possible rect modes include OF_RECTMODE_CORNER and OF_RECTMODE_CENTER.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns The renderer's current rect mode.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofRectMode</span>\n\t<span class=\"token keyword\">virtual</span> ofRectMode <span class=\"token function\">getRectMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief set this renderer's fill flag.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Possible fill flags include OF_OUTLINE and OF_FILLED.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param fill The fill flag to request this renderer to use.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofFillFlag</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setFillMode</span><span class=\"token punctuation\">(</span>ofFillFlag fill<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get this renderer's current fill flag.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Possible fill flags include OF_OUTLINE and OF_FILLED.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns The fill flag this render is currently using.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofFillFlag</span>\n\t<span class=\"token keyword\">virtual</span> ofFillFlag <span class=\"token function\">getFillMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the line width this renderer should use when drawing lines.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param lineWidth The line width to request this renderer to use.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setLineWidth</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> lineWidth<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Enable/disable depth testing with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// When depth testing is enabled the order shapes are drawn with the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// renderer is dependent on their distance from the camera rather than the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// order their drawing methods were called. This should be enabled when</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// expecting normal behavior when drawing 3D scenes.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param depthTest True to enable depth testing.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setDepthTest</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> depthTest<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set this renderer's current blend mode.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Possible blend modes include:</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Rotate this renderer's current matrix by \\p degrees about the z</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// axis.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// This method is an alias of rotateZ().</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param degrees Degrees to rotate about the z axis.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa rotateZ()</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_BLENDMODE_DISABLED</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_BLENDMODE_ALPHA</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_BLENDMODE_ADD</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_BLENDMODE_SUBTRACT</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_BLENDMODE_MULTIPLY</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_BLENDMODE_SCREEN</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param blendMode The blend mode to request this renderer to use.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofBlendMode</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa https://helpx.adobe.com/photoshop/using/blending-modes.html</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setBlendMode</span><span class=\"token punctuation\">(</span>ofBlendMode blendMode<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Enable/disable line smoothing for this renderer if it's supported.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param smooth True to enable line smoothing for this renderer if it's</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// supported.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setLineSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> smooth<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the resolution to use when drawing ellipses with this</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param res The number of points to use when drawing circles and ellipses</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// with this renderer.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setCircleResolution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> res<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Enable this renderer to use anti-aliasing if it is supported.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">enableAntiAliasing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Disable this renderer from using anti-aliasing.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">disableAntiAliasing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the global color this renderer will use when drawing.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The renderer will continue using a color set by setColor() until another</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// call to setColor() changes the drawing color.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param r The red value between 0 and 255 to use when drawing.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param g The green value between 0 and 255 to use when drawing.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param b The blue value between 0 and 255 to use when drawing.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the global color this renderer will use when drawing.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The renderer will continue using a color set by setColor() until another</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// call to setColor() changes the drawing color.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param r The red value between 0 and 255 to use when drawing.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param g The green value between 0 and 255 to use when drawing.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param b The blue value between 0 and 255 to use when drawing.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param a The alpha value between 0 and 255 to use when drawing.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the global color this renderer will use when drawing.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The renderer will continue using a color set by setColor() until another</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// call to setColor() changes the drawing color.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param color The color to use when drawing.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the global color this renderer will use when drawing.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The renderer will continue using a color set by setColor() until another</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// call to setColor() changes the drawing color.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param color The color to use when drawing.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param _a The alpha value between 0 and 255 to use when drawing.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> _a<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the global color this renderer will use when drawing.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The renderer will continue using a color set by setColor() until another</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// call to setColor() changes the drawing color.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param gray The grayscale value to use when drawing.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> gray<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the global color this renderer will use when drawing.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The renderer will continue using a color set by setColor() until another</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// call to setColor() changes the drawing color.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param hexColor The hexidecimal representation of the color to use when</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// drawing.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setHexColor</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> hexColor <span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set this renderer's bitmap text mode.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Possible bitmap texture modes include:</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_BITMAPMODE_SIMPLE</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_BITMAPMODE_SCREEN</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_BITMAPMODE_VIEWPORT</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_BITMAPMODE_MODEL</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_BITMAPMODE_MODEL_BILLBOARD</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param mode The bitmap mode to request this renderer to use.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofDrawBitmapMode</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setBitmapTextMode</span><span class=\"token punctuation\">(</span>ofDrawBitmapMode mode<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get this renderer's current background color.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns This renderer's current background color.</span>\n\t<span class=\"token keyword\">virtual</span> ofColor <span class=\"token function\">getBackgroundColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set this renderer's background color.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param c The color to request this renderer to use.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setBackgroundColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Immediately paint a background color to the screen.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// If automatic background drawing is enabled (which it is by default) this</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// method called from ofApp::setup() will also repaint the background with</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// this color each frame.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param c The color to paint the background with.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">background</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Immediately paint a grayscale background color to the screen.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// If automatic background drawing is enabled (which it is by default) this</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// method called from ofApp::setup() will also repaint the background with</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// this color each frame.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param brightness The grayscale value between 0 and 255 to paint the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// background with.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">background</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> brightness<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Immediately paint a grayscale background color to the screen.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// If automatic background drawing is enabled (which it is by default) this</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// method called from ofApp::setup() will also repaint the background with</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// this color each frame.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param hexColor The 24-bit hex representation of the color to paint the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// background with.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param _a The alpha value between 0 and 255 to apply to \\p hexColor when</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// when painting the background.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">background</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> hexColor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> _a<span class=\"token operator\">=</span><span class=\"token number\">255.0f</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Immediately paint a background color to the screen.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param r The red value between 0 and 255 to use for the background.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param g The green value between 0 and 255 to use for the background.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param b The blue value between 0 and 255 to use for the background.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param a The alpha value between 0 and 255 to use for the background.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">background</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> a<span class=\"token operator\">=</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Enable/disable automatic redrawing of the background each frame.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param bManual False to disable automatic background redrawing.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setBackgroundAuto</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bManual<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get the current auto redraw background setting for this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns True if this renderer is set to redraw the background each</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// frame.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">getBackgroundAuto</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Clear this renderer's current color and bit depths.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// clear() will clear the screen entirely.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Clear this renderer's color and bit depths and replace them.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// clear() will clear the screen entirely.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param r The red value between 0 and 255 to use when clearing the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// screen.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param g The green value between 0 and 255 to use when clearing the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// screen.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param b The blue value between 0 and 255 use when clearing the screen.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param a The alpha value between 0 and 255 use when clearing the screen.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Defaults to 0.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Clear this renderer's color and bit depths replacing them.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// clear() will clear the screen entirely.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param brightness The grayscale value between 0 and 255 to use when</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// clearing the screen.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param a The alpha value between 0 and 255 to use when clearing the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// screen. Defaults to 0.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> brightness<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Restore the alpha color to its full opacity value.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">clearAlpha</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a line between two 3D points.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x1 The x coordinate of the first point.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y1 The y coordinate of the first point.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param z1 The z coordinate of the first point.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x2 The x coordinate of the second point.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y2 The y coordinate of the second point.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param z2 The z coordinate of the second point.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawLine</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a rectangle using a 3D point and a width and height.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate of the rectangle.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate of the rectangle.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param z The z coordinate of the rectangle.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param w The width of the rectangle.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param h The height of the rectangle.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofRectMode</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawRectangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a triangle using three 3D points.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x1 The x coordinate of the first point.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y1 The y coordinate of the first point.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param z1 The z coordinate of the first point.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x2 The x coordinate of the second point.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y2 The y coordinate of the second point.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param z2 The z coordinate of the second point.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x3 The x coordinate of the third point.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y3 The y coordinate of the third point.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param z3 The z coordinate of the third point.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawTriangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z3<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a circle using a 3D point and a radius.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate of the center of the circle.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate of the center of the circle.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param z The z coordinate of the center of the circle.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The length of the radius of the circle.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawCircle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw an ellipse using a 3D point, width, and height.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate of the center of the circle.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate of the center of the circle.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param z The z coordinate of the center of the circle.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param width The width of the circle.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height of the circle.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawEllipse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw text with this renderer using the current bitmap text mode.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// When using the OF_BITMAPMODE_SIMPLE bitmap text strings are drawn with</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// their origin at the bottom left corner of the text. However,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// setBitmapTextMode() can transform this default behavior with modes like:</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_BITMAPMODE_SIMPLE</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_BITMAPMODE_SCREEN</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_BITMAPMODE_VIEWPORT</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_BITMAPMODE_MODEL</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_BITMAPMODE_MODEL_BILLBOARD</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param text The text to draw with the renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x position for the bottom of \\p text.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y position for the left alignment of \\p text.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param z The z position of the text.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawString</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string text<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw text with this renderer using an ofTrueType font.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param font The font to use when drawing \\p text.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param text The text to draw with the renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x position for the bottom of \\p text.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y position for the left alignment of \\p text.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofTrueTypeFont <span class=\"token operator\">&amp;</span> font<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>string text<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token comment\" spellcheck=\"true\">// returns true an ofPath to draw with, this allows to keep</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// immediate mode rendering working in multiwindow with multiple</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// contexts without reimplementing the logic on every renderer</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get a reference to the path used internally by this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns A reference to the path used internally by this renderer.</span>\n\t<span class=\"token keyword\">virtual</span> ofPath <span class=\"token operator\">&amp;</span> <span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get this renderer's current style object.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns This renderer's current style object.</span>\n\t<span class=\"token keyword\">virtual</span> ofStyle <span class=\"token function\">getStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set this renderer's current style object.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param style The style object to set this renderer to use.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setStyle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofStyle <span class=\"token operator\">&amp;</span> style<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Push this renderer's current style into its internal style stack.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// This creates a new style object used by this renderer internally until</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// popStyle() is called.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">pushStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Pop this renderer's current style from its internal style stack.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// This restores the style that was last saved with pushStyle().</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">popStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the resolution used when drawing curves with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param resolution The resolution to request this renderer to use when</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// drawing curves.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setCurveResolution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> resolution<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set this renderer's poly winding mode.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Possible poly winding modes include:</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_POLY_WINDING_ODD</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_POLY_WINDING_NONZERO</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_POLY_WINDING_POSITIVE</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_POLY_WINDING_NEGATIVE</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\tOF_POLY_WINDING_ABS_GEQ_TWO</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param mode The poly winding mode to request this renderer to use.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofPolyWindingMode</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setPolyMode</span><span class=\"token punctuation\">(</span>ofPolyWindingMode mode<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get a const reference of this renderer's 3D graphics object.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns The 3D graphics object currently being used by this renderer.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">const</span> of3dGraphics <span class=\"token operator\">&amp;</span> <span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get a reference with this renderer's 3D graphics object.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns the 3D graphics object currently being used by this renderer.</span>\n\t<span class=\"token keyword\">virtual</span> of3dGraphics <span class=\"token operator\">&amp;</span> <span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set this renderer's plane resolution using \\p column and \\p rows.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param columns The number of columns to use when drawing planes with</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param rows The number of rows to use when drawing planes with this</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// renderer.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setPlaneResolution</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> columns<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> rows <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get this renderer's current plane resolution as a 2D vector.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The resulting vector's x and y values corresponds to the current column</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// and row resolutions of this renderer's plane resolution respectively.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns A 2D vector representing this renderer's plane resolution in</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// columns and rows.</span>\n\t<span class=\"token keyword\">virtual</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token function\">getPlaneResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a plane with the renderer using x, y, width, and height.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The number of rows and columns this plane will have is dependent on this</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// renderer's current plane resolution set with setPlaneResolution().</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate to use when drawing the plane with this</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate to use when drawing the plane with this</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param width The width to use when drawing the plane with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing the plane with this</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// renderer.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawPlane</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a plane with the renderer using x, y, z, width, and height.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The number of rows and columns this plane will have is dependent on this</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// renderer's current plane resolution set with setPlaneResolution().</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate to use when drawing the plane with this</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate to use when drawing the plane with this</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param z The z coordinate to use when drawing the plane with this</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param width The width to use when drawing the plane with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing the plane with this</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// renderer.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawPlane</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a plane with the renderer using a 3D point, width, and height.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The number of rows and columns this plane will have is dependent on this</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// renderer's current plane resolution set with setPlaneResolution().</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param position A 3D point to use as the position to draw the plane with</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param width The width to use when drawing the plane with this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing the plane with this</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// renderer.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawPlane</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a plane with the renderer at the origin.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The number of rows and columns this plane will have is dependent on this</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// renderer's current plane resolution set with setPlaneResolution().</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param width The width of the plane to use when drawing the plane with</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing the plane with this</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// renderer.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawPlane</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height <span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// UV Sphere</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the point resolution to use when drawing a sphere with this</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param res The desired sphere resolution to use with this renderer.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setSphereResolution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get this renderer's current sphere resolution.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns This renderer's current sphere resolution.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getSphereResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a sphere with this renderer using x, y, and radius.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Spheres are drawn with x, y, and z coordinates representing the center</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// of the sphere.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate to use when drawing this sphere.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate to use when drawing this sphere.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this sphere.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a sphere with this renderer using x, y, z, and radius.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Spheres are drawn with x, y, and z coordinates representing the center</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// of the sphere.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate to use when drawing this sphere.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate to use when drawing this sphere.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param z The z coordinate to use when drawing this sphere.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this sphere.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a sphere with this renderer using a position point and</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// radius.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Spheres are drawn with x, y, and z coordinates representing the center</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// of the sphere.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param position The 3D position point to use when drawing the sphere.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this sphere.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a sphere with the renderer at the defualt origin using</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// radius.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing the sphere with this</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// renderer.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// Ico Sphere</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the point resolution to use when drawing an icosphere with</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// this renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param res The desired icosphere resolution to use with this renderer.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setIcoSphereResolution</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> res <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get this renderer's current icosphere resolution.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns This renderer's current icosphere resolution.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getIcoSphereResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw an icosphere with this renderer using x, y, and radius.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Spheres are drawn with x, y, and z coordinates representing the center</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// of the icosphere.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate to use when drawing this icosphere.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate to use when drawing this icosphere.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param z The z coordinate to use when drawing this icosphere.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this icosphere.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawIcoSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw an icosphere with this renderer using x, y, and radius.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Spheres are drawn with x, y, and z coordinates representing the center</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// of the icosphere.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate to use when drawing this icosphere.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate to use when drawing this icosphere.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this icosphere.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawIcoSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw an icosphere with this renderer using x, y, and radius.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Icospheres are drawn with x, y, and z coordinates representing the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// center of the icosphere.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param position The 3D position point to use when drawing the icosphere.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this icosphere.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawIcoSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw an icosphere with the renderer at the origin using radius.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing the icosphere with this</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// renderer.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawIcoSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set this renderer's cylinder resolution.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radiusSegments The number of facets (subdivisions) around the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// icosphere's circular footprint. A larger number yields a higher</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// resolution.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param heightSegments The number of subdivisions from the cylinder's top</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// to bottom.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param capSegments The number of annular (ring-shaped) subdivisions of</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// the cylinder's endcap. Defaults to 2.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setCylinderResolution</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> radiusSegments<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> heightSegments<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> capSegments<span class=\"token operator\">=</span><span class=\"token number\">2</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get this renderer's cylinder resolution as a 3D vector.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The resulting vector's x, y, and z properties correspond to the radius</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// segments, height segments, and cap segments of this renderer's cylinder</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// resolution respectively.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns A 3D vector representing this renderer's current cylinder</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// resolution.</span>\n\t<span class=\"token keyword\">virtual</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token function\">getCylinderResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cylinder with this renderer using x, y, radius, and</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// height.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Cyliners are drawn with x, y, and z coordinates representing the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// centroid of the cylinder. Radius is the radius of the cylinder's</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// circular footprint and height representing the height of the cylinder.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate to use when drawing this cylinder.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate to use when drawing this cylinder.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this cylinder's circular</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// footprint.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing this cylinder.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawCylinder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cylinder with this renderer using x, y, z, radius, and</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// height.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Cyliners are drawn with x, y, and z coordinates representing the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// centroid of the cylinder. Radius is the radius of the cylinder's</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// circular footprint and height representing the height of the cylinder.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate to use when drawing this cylinder.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate to use when drawing this cylinder.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param z The z coordinate to use when drawing this cylinder.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this cylinder's circular</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// footprint.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing this cylinder.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawCylinder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cylinder with this renderer using position, radius, and</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// height.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Cyliners are drawn with x, y, and z coordinates representing the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// centroid of the cylinder. Radius is the radius of the cylinder's</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// circular footprint and height representing the height of the cylinder.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param position The 3D point to use as a position coordinate when</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// drawing this cylinder.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this cylinder's circular</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// footprint.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing this cylinder.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawCylinder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cylinder at the origin using radius and height.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// A cylinder drawn in this way will be positioned at the origin. Radius is</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// the radius of the cylinder's circular footprint and height representing</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// the height of the cylinder.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this cylinder's circular</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// footprint.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing this cylinder.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawCylinder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the resolution of a polygonized cone.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Allows you to set the polygonization resolution of any cones you</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// subsequently draw with ofDrawCone().</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radiusSegments The number of facets (subdivisions) around the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// cone's circular footprint.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param heightSegments The number of subdivisions from the cone's top to</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// bottom.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param capSegments The number of annular (ring-shaped) subdivisions of</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// the cone's endcap.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setConeResolution</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> radiusSegments<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> heightSegments<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> capSegments<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get this renderer's cone resolution as a 3D vector.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The resulting vector's x, y, and z properties correspond to the radius</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// segments, height segments, and cap segments of this renderer's cone</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// resolution respectively.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns A 3D vector representing this renderer's current cone</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// resolution.</span>\n\t<span class=\"token keyword\">virtual</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token function\">getConeResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cone with this renderer using x, y, z, radius, and</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// height.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Cones are drawn with x, y, and z coordinates representing the centroid</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// of the cone. Radius is the radius of the cone's circular</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// footprint and height representing the height of the cone.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate to use when drawing this cone.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate to use when drawing this cone.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param z The z coordinate to use when drawing this cone.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this cone's circular</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// footprint.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing this cone.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawCone</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cone with this renderer using x, y, z, radius, and</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// height.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Cones are drawn with x, y, and z coordinates representing the centroid</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// of the cylinder. Radius is the radius of the cone's circular</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// footprint and height representing the height of the cone's.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate to use when drawing this cone.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate to use when drawing this cone.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this cone's circular</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// footprint.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing this cone.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawCone</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cone with this renderer using x, y, z, radius, and</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// height.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Cones are drawn with x, y, and z coordinates representing the centroid</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// of the cone. \\p Radius is the radius of the cone's circular</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// footprint and \\p height representing the height of the cone's.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param position The 3D point representing this cone's position.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this cone's circular</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// footprint.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing this cone.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawCone</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cone at the origin using radius and height.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// This cone will be drawn with its position at the coordinate system's</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// origin. \\p Radius is the radius of the cone's circular footprint and</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\p height representing the height of the cone.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this cone's circular</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// footprint.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing this cone.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawCone</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// Box</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the resolution this renderer uses when drawing boxes.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param res The resolution to use for box widths, heights, and depths.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setBoxResolution</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> res <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the resolution this renderer uses when drawing boxes.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param resWidth The width resolution this renderer uses when drawing</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// boxes.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param resHeight The height resolution this renderer uses when drawing</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// boxes.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param resDepth The depth resolution this renderer uses when drawing</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// boxes.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setBoxResolution</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> resWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> resHeight<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> resDepth <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get this renderer's current box resolution as a 3D vector.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The returned vector's x, y, and z properties represent this renderer's</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// current resolution width, resolution height, and resolution depth</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// respectively.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns This renderer's current box resolution as a 3D vector.</span>\n\t<span class=\"token keyword\">virtual</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token function\">getBoxResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws a rectangular box using x, y, z, width, height, and depth.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// A box is a rectangular solid: an extruded rectangle.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// It is drawn starting from a 3D reference coordinate.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// It has a width (in x), a height (in y), and a depth (in z).</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The box is drawn with the current color, e.g. set with ofSetColor().</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The box is drawn filled by default; change this with ofFill();</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x-coordinate of the box's origin.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y-coordinate of the box's origin.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param z The z-coordinate of the box's origin.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param width The width of the box.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height of the box.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param depth The depth of the box.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawBox</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> depth<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws a cube using x, y, z, and size.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// coordinates.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// A cube is a rectangular solid bounded by six square faces of equal size.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// It is also known as a regular hexahedron, a square parallelepiped, an</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// equilateral cuboid and a right rhombohedron. It is a regular square</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// prism in three orientations.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// It is drawn starting from a 3D reference coordinate, with the specified</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// size. The cube is drawn with the current color, e.g. set with</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// ofSetColor(). The cube is drawn filled by default; change this with</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// ofFill().</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x-coordinate of the cube's origin.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y-coordinate of the cube's origin.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param z The z-coordinate of the cube's origin.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param size The size of the cube.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> size<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws a rectangular box using position, width, height and depth.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// A box is a rectangular solid: an extruded rectangle.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// It is drawn starting from a 3D reference coordinate.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// It has a width (in x), a height (in y), and a depth (in z).</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The box is drawn with the current color, e.g. set with ofSetColor().</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The box is drawn filled by default; change this with ofFill();</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param position an glm::vec3 which contains the (x,y,z) coordinates for the box's reference corner.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param width The width of the box.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height of the box.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param depth The depth of the box.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> depth<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws a cube with the specified size, starting from the specified</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// position.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// A cube is drawn starting from a 3D reference position, with the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// specified size. The cube is drawn with the current color, e.g. set with</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// ofSetColor(). The cube is drawn filled by default; change this with</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// ofFill().</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param position an glm::vec3 which contains the (x,y,z) coordinates for</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// the cube's reference corner.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param size The size of the cube.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> size<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws a cube with the specified size at the origin.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The cube is drawn with the current color, e.g. set with ofSetColor().</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The cube is drawn filled by default; change this with ofFill();</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param size The size of the cube.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> size<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws a rectangular box with the specified dimensions, starting from the origin.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// A box is a rectangular solid: an extruded rectangle.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// It is drawn starting from the origin of the current reference frame.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// It has a width (in x), a height (in y), and a depth (in z).</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The box is drawn with the current color, e.g. set with ofSetColor().</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The box is drawn filled by default; change this with ofFill();</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param width The width of the box.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height of the box.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param depth The depth of the box.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawBox</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> depth <span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw the coordinate system's axes with the renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// This draws a red, green, and blue lines for the x, y, and z axes</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// respectively. This can be helpful when trying to orient other objects</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// in respect to the coordinate system.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param size The length to draw each axis line.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawAxis</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> size<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw the coordinate system's axes as a grid with the renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param stepSize The size of each row/column in each axis grid.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param numberOfSteps The number of rows/columns in each axis grid.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param labels True to draw the name and values of the axis as a bitmap</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// string.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x True to draw the x axis.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y True to draw the y axis.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param z True to draw the z axis.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawGrid</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> stepSize<span class=\"token punctuation\">,</span> size_t numberOfSteps<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> labels<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> z<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a coordinate system plane using the y and z axes.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param stepSize The size of each row/column on the axis grid.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param numberOfSteps The number of rows/columns on the axis grid.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param labels True to draw the names and values of the axes.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawGridPlane</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> stepSize<span class=\"token punctuation\">,</span> size_t numberOfSteps<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> labels<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw an arrow between two 3D points.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief start The 3D vector to use as the first point.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief end The 3D vector to use as the second point.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\float headSize The size of the arrowhead.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawArrow</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> start<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> end<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> headSize<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw the coordinate system's axes with the renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// This draws red, green, and blue lines for the x, y, and z rotation</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// axes respectively. This can be helpful when trying to orient other</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// object's rotation in respect to the coordinate system.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to draw the rotation axes with.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param stripWidth The width of each axis line.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param circleRes The circle resolution to use when drawing the axes.</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawRotationAxes</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> stripWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> circleRes<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n","type":"source","static":true}}],"fetch":[]}