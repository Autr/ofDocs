{"data":[{"page":{"entry":{"name":"ofGstUtils.cpp","filename":"ofGstUtils.cpp","absolute":"/Users/gilbertsinnott/Code/openFrameworks/libs/openFrameworks/video/ofGstUtils.cpp","path":"/openframeworks/video/ofGstUtils_cpp","route":"/openframeworks/video/ofGstUtils.cpp","dir":"../libs/openFrameworks/video","ext":"cpp","type":"source","id":362,"parent":354,"breadcrumbs":[354,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGstUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_ANDROID</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;gst/app/gstappsink.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;gst/video/video.h></span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR>0</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;gst/video/gstvideometa.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_USE_GST_GL</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> GST_USE_UNSTABLE_API</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;gst/gl/gl.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;glib-object.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;glib.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;algorithm></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofVideoPlayer.h\"</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_USE_GST_GL</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;gst/gl/x11/gstgldisplay_x11.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;gst/gl/egl/gstgldisplay_egl.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_WIN32</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;winbase.h></span>\t</span><span class=\"token comment\" spellcheck=\"true\">// to use SetEnvironmentVariableA</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\nofGstUtils<span class=\"token operator\">::</span>ofGstMainLoopThread <span class=\"token operator\">*</span> ofGstUtils<span class=\"token operator\">::</span>mainLoop <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">startGstMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> initialized <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>initialized<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tmainLoop <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> ofGstMainLoopThread<span class=\"token punctuation\">;</span>\n\t\tmainLoop<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tinitialized<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nGMainLoop <span class=\"token operator\">*</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">getGstMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> mainLoop<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">quitGstMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mainLoop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tmainLoop<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">quit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">delete</span> mainLoop<span class=\"token punctuation\">;</span>\n\t\tmainLoop <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------- gstUtils</span>\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------------</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> plugin_registered <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> gst_inited <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">// called when the appsink notifies us that there is a new buffer ready for</span>\n<span class=\"token comment\" spellcheck=\"true\">// processing</span>\n\n<span class=\"token keyword\">static</span> GstFlowReturn <span class=\"token function\">on_new_buffer_from_source</span> <span class=\"token punctuation\">(</span>GstAppSink <span class=\"token operator\">*</span> elt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==0</span>\n\tshared_ptr<span class=\"token operator\">&lt;</span>GstBuffer<span class=\"token operator\">></span> <span class=\"token function\">buffer</span><span class=\"token punctuation\">(</span><span class=\"token function\">gst_app_sink_pull_buffer</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GST_APP_SINK</span> <span class=\"token punctuation\">(</span>elt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>gst_buffer_unref<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\tshared_ptr<span class=\"token operator\">&lt;</span>GstSample<span class=\"token operator\">></span> <span class=\"token function\">buffer</span><span class=\"token punctuation\">(</span><span class=\"token function\">gst_app_sink_pull_sample</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GST_APP_SINK</span> <span class=\"token punctuation\">(</span>elt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>gst_sample_unref<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ofGstUtils<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>data<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">buffer_cb</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> GstFlowReturn <span class=\"token function\">on_new_preroll_from_source</span> <span class=\"token punctuation\">(</span>GstAppSink <span class=\"token operator\">*</span> elt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==0</span>\n\tshared_ptr<span class=\"token operator\">&lt;</span>GstBuffer<span class=\"token operator\">></span> <span class=\"token function\">buffer</span><span class=\"token punctuation\">(</span><span class=\"token function\">gst_app_sink_pull_preroll</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_APP_SINK</span> <span class=\"token punctuation\">(</span>elt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>gst_buffer_unref<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\tshared_ptr<span class=\"token operator\">&lt;</span>GstSample<span class=\"token operator\">></span> <span class=\"token function\">buffer</span><span class=\"token punctuation\">(</span><span class=\"token function\">gst_app_sink_pull_preroll</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_APP_SINK</span> <span class=\"token punctuation\">(</span>elt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>gst_sample_unref<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ofGstUtils<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>data<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">preroll_cb</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">on_eos_from_source</span> <span class=\"token punctuation\">(</span>GstAppSink <span class=\"token operator\">*</span> elt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ofGstUtils<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>data<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">eos_cb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> gboolean <span class=\"token function\">appsink_plugin_init</span> <span class=\"token punctuation\">(</span>GstPlugin <span class=\"token operator\">*</span> plugin<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token function\">gst_element_register</span> <span class=\"token punctuation\">(</span>plugin<span class=\"token punctuation\">,</span> <span class=\"token string\">\"appsink\"</span><span class=\"token punctuation\">,</span> GST_RANK_NONE<span class=\"token punctuation\">,</span> GST_TYPE_APP_SINK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> TRUE<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n\nofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">ofGstUtils</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tbLoaded \t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tspeed \t\t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\tbPaused\t\t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tbIsMovieDone\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tbPlaying\t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tloopMode\t\t\t\t\t<span class=\"token operator\">=</span> OF_LOOP_NONE<span class=\"token punctuation\">;</span>\n\tbFrameByFrame \t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\tgstPipeline\t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\tgstSink\t\t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\n\tdurationNanos\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\tisAppSink\t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tisStream\t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\tappsink\t\t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\tclosing \t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\tbusWatchID\t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GLIB_MINOR_VERSION&lt;32</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">g_thread_supported</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">g_thread_init</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>gst_inited<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_WIN32</span>\n\t\tstring gst_path<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t gst_path <span class=\"token operator\">=</span> <span class=\"token function\">g_getenv</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GSTREAMER_1_0_ROOT_X86\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\tgst_path <span class=\"token operator\">=</span> <span class=\"token function\">g_getenv</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GSTREAMER_1_0_ROOT_X86_64\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//putenv((\"GST_PLUGIN_PATH_1_0=\" + ofFilePath::join(gst_path, \"lib\\\\gstreamer-1.0\") + \";.\").c_str());</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// to make it compatible with gcc and C++11 standard</span>\n\t\t<span class=\"token function\">SetEnvironmentVariableA</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GST_PLUGIN_PATH_1_0\"</span><span class=\"token punctuation\">,</span> ofFilePath<span class=\"token operator\">::</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>gst_path<span class=\"token punctuation\">,</span> <span class=\"token string\">\"lib\\\\gstreamer-1.0\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token function\">gst_init</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tgst_inited<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"gstreamer inited\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>plugin_registered<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">gst_plugin_register_static</span><span class=\"token punctuation\">(</span>GST_VERSION_MAJOR<span class=\"token punctuation\">,</span> GST_VERSION_MINOR<span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token string\">\"appsink\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token string\">\"Element application sink\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\tappsink_plugin_init<span class=\"token punctuation\">,</span> <span class=\"token string\">\"0.1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"LGPL\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"ofVideoPlayer\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"openFrameworks\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token string\">\"http://openframeworks.cc/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tplugin_registered<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\nofGstUtils<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofGstUtils</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==0</span>\nGstFlowReturn ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">preroll_cb</span><span class=\"token punctuation\">(</span>shared_ptr<span class=\"token operator\">&lt;</span>GstBuffer<span class=\"token operator\">></span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\nGstFlowReturn ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">preroll_cb</span><span class=\"token punctuation\">(</span>shared_ptr<span class=\"token operator\">&lt;</span>GstSample<span class=\"token operator\">></span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\tbIsMovieDone <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>appsink<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> appsink<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">on_preroll</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">return</span> GST_FLOW_OK<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==0</span>\nGstFlowReturn ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">buffer_cb</span><span class=\"token punctuation\">(</span>shared_ptr<span class=\"token operator\">&lt;</span>GstBuffer<span class=\"token operator\">></span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\nGstFlowReturn ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">buffer_cb</span><span class=\"token punctuation\">(</span>shared_ptr<span class=\"token operator\">&lt;</span>GstSample<span class=\"token operator\">></span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\tbIsMovieDone <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>appsink<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> appsink<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">on_buffer</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">return</span> GST_FLOW_OK<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">eos_cb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbIsMovieDone <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>appsink <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>isAppSink<span class=\"token punctuation\">)</span> appsink<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">on_eos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>closing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tstd<span class=\"token operator\">::</span>unique_lock<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>mutex<span class=\"token operator\">></span> <span class=\"token function\">lck</span><span class=\"token punctuation\">(</span>eosMutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\teosCondition<span class=\"token punctuation\">.</span><span class=\"token function\">notify_all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">setPipelineWithSink</span><span class=\"token punctuation\">(</span>string pipeline<span class=\"token punctuation\">,</span> string sinkname<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> isStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">startGstMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tGError <span class=\"token operator\">*</span> error <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\tgstPipeline <span class=\"token operator\">=</span> <span class=\"token function\">gst_parse_launch</span> <span class=\"token punctuation\">(</span>pipeline<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">g_object_ref_sink</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setPipelineWithSink(): gstreamer pipeline: \"</span> <span class=\"token operator\">&lt;&lt;</span> pipeline<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>error<span class=\"token operator\">!=</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setPipelineWithSink(): couldn't create pipeline: \"</span> <span class=\"token operator\">&lt;&lt;</span> error<span class=\"token operator\">-</span><span class=\"token operator\">></span>message<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>sinkname<span class=\"token operator\">!=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tgstSink <span class=\"token operator\">=</span> <span class=\"token function\">gst_bin_get_by_name</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_BIN</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>sinkname<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>gstSink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setPipelineWithSink(): couldn't get sink from string pipeline\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">setPipelineWithSink</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">,</span>gstSink<span class=\"token punctuation\">,</span>isStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">setPipelineWithSink</span><span class=\"token punctuation\">(</span>GstElement <span class=\"token operator\">*</span> pipeline<span class=\"token punctuation\">,</span> GstElement <span class=\"token operator\">*</span> sink<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> isStream_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">startGstMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tgstPipeline <span class=\"token operator\">=</span> pipeline<span class=\"token punctuation\">;</span>\n\tgstSink <span class=\"token operator\">=</span> sink<span class=\"token punctuation\">;</span>\n\tisStream <span class=\"token operator\">=</span> isStream_<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>gstSink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">gst_base_sink_set_sync</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_BASE_SINK</span><span class=\"token punctuation\">(</span>gstSink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>gstSink <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token function\">gst_plugin_feature_get_name</span><span class=\"token punctuation\">(</span> <span class=\"token function\">GST_PLUGIN_FEATURE</span><span class=\"token punctuation\">(</span><span class=\"token function\">gst_element_get_factory</span><span class=\"token punctuation\">(</span>gstSink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token string\">\"appsink\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tisAppSink <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tisAppSink <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">setFrameByFrame</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> _bFrameByFrame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbFrameByFrame <span class=\"token operator\">=</span> _bFrameByFrame<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>gstSink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">g_object_set</span> <span class=\"token punctuation\">(</span><span class=\"token function\">G_OBJECT</span> <span class=\"token punctuation\">(</span>gstSink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"sync\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span>bFrameByFrame<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">isFrameByFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> bFrameByFrame<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">startPipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\tbPaused \t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\tspeed \t\t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">1.0f</span><span class=\"token punctuation\">;</span>\n\n\n\tGstBus <span class=\"token operator\">*</span> bus <span class=\"token operator\">=</span> <span class=\"token function\">gst_pipeline_get_bus</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GST_PIPELINE</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tbusWatchID <span class=\"token operator\">=</span> <span class=\"token function\">gst_bus_add_watch</span> <span class=\"token punctuation\">(</span>bus<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>GstBusFunc<span class=\"token punctuation\">)</span> busFunction<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">gst_object_unref</span><span class=\"token punctuation\">(</span>bus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>isAppSink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"startPipeline(): attaching callbacks\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// set the appsink to not emit signals, we are using callbacks instead</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// and frameByFrame to get buffers by polling instead of callback</span>\n\t\t<span class=\"token function\">g_object_set</span> <span class=\"token punctuation\">(</span><span class=\"token function\">G_OBJECT</span> <span class=\"token punctuation\">(</span>gstSink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"emit-signals\"</span><span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"sync\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">!</span>bFrameByFrame<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// gst_app_sink_set_drop(GST_APP_SINK(gstSink),1);</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// gst_app_sink_set_max_buffers(GST_APP_SINK(gstSink),2);</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bFrameByFrame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tGstAppSinkCallbacks gstCallbacks<span class=\"token punctuation\">;</span>\n\t\t\tgstCallbacks<span class=\"token punctuation\">.</span>eos <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>on_eos_from_source<span class=\"token punctuation\">;</span>\n\t\t\tgstCallbacks<span class=\"token punctuation\">.</span>new_preroll <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>on_new_preroll_from_source<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==0</span>\n\t\t\tgstCallbacks<span class=\"token punctuation\">.</span>new_buffer <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>on_new_buffer_from_source<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t\tgstCallbacks<span class=\"token punctuation\">.</span>new_sample <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>on_new_buffer_from_source<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t\t\t<span class=\"token function\">gst_app_sink_set_callbacks</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_APP_SINK</span><span class=\"token punctuation\">(</span>gstSink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>gstCallbacks<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// pause the pipeline</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//GstState targetState;</span>\n\tGstState state<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> ret <span class=\"token operator\">=</span> <span class=\"token function\">gst_element_set_state</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_ELEMENT</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> GST_STATE_PAUSED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> GST_STATE_CHANGE_FAILURE<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"startPipeline(): unable to pause pipeline\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GST_STATE_CHANGE_NO_PREROLL<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Pipeline is live and does not need PREROLL waiting PLAY\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">gst_element_set_state</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_ELEMENT</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> GST_STATE_PLAYING<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>isAppSink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">gst_app_sink_set_max_buffers</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_APP_SINK</span><span class=\"token punctuation\">(</span>gstSink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">gst_app_sink_set_drop</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GST_APP_SINK</span><span class=\"token punctuation\">(</span>gstSink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GST_STATE_CHANGE_ASYNC<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Pipeline is PREROLLING\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//targetState = GST_STATE_PAUSED;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isStream <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">gst_element_get_state</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>state<span class=\"token punctuation\">,</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token operator\">*</span>GST_SECOND<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span>GST_STATE_CHANGE_SUCCESS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"startPipeline(): unable to pause pipeline after 5s\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Pipeline is PREROLLED\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GST_STATE_CHANGE_SUCCESS<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Pipeline is PREROLLED\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// wait for paused state to query the duration</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tbPlaying <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\tbLoaded <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setPaused</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//this is if we set the speed first but it only can be set when we are playing.</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isStream<span class=\"token punctuation\">)</span> <span class=\"token function\">setSpeed</span><span class=\"token punctuation\">(</span>speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">setPaused</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> _bPause<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbPaused <span class=\"token operator\">=</span> _bPause<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//timeLastIdle = ofGetElapsedTimeMillis();</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bLoaded<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bPlaying<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bPaused<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">gst_element_set_state</span> <span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">,</span> GST_STATE_PAUSED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">gst_element_set_state</span> <span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">,</span> GST_STATE_PLAYING<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\tGstState state <span class=\"token operator\">=</span> GST_STATE_PAUSED<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">gst_element_set_state</span> <span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">gst_element_get_state</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>state<span class=\"token punctuation\">,</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>GST_SECOND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bPaused<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">gst_element_set_state</span> <span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">,</span> GST_STATE_PLAYING<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\tbPlaying <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bLoaded<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\tGstState state<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bPaused<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tstate <span class=\"token operator\">=</span> GST_STATE_PAUSED<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">gst_element_set_state</span> <span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">gst_element_get_state</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>state<span class=\"token punctuation\">,</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>GST_SECOND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tstate <span class=\"token operator\">=</span> GST_STATE_READY<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">gst_element_set_state</span> <span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">gst_element_get_state</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>state<span class=\"token punctuation\">,</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>GST_SECOND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbPlaying <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tbPaused <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tgint64 pos<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==0</span>\n\t\tGstFormat format<span class=\"token operator\">=</span>GST_FORMAT_TIME<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">gst_element_query_position</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_ELEMENT</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>format<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getPosition(): couldn't query position\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">gst_element_query_position</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_ELEMENT</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>GST_FORMAT_TIME<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getPosition(): couldn't query position\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>pos<span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>durationNanos<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">getSpeed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> speed<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">getDuration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token function\">getDurationNanos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>GST_SECOND<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nint64_t ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">getDurationNanos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tGstFormat format <span class=\"token operator\">=</span> GST_FORMAT_TIME<span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==0</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">gst_element_query_duration</span><span class=\"token punctuation\">(</span><span class=\"token function\">getPipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>format<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>durationNanos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getDurationNanos(): couldn't query time duration\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">gst_element_query_duration</span><span class=\"token punctuation\">(</span><span class=\"token function\">getPipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>format<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>durationNanos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getDurationNanos(): couldn't query time duration\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token keyword\">return</span> durationNanos<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span>  ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">getIsMovieDone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>isAppSink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">gst_app_sink_is_eos</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_APP_SINK</span><span class=\"token punctuation\">(</span>gstSink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> bIsMovieDone<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> pct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//pct = CLAMP(pct, 0,1);// check between 0 and 1;</span>\n\tGstFormat format <span class=\"token operator\">=</span> GST_FORMAT_TIME<span class=\"token punctuation\">;</span>\n\tGstSeekFlags flags <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>GstSeekFlags<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>GST_SEEK_FLAG_ACCURATE <span class=\"token operator\">|</span> GST_SEEK_FLAG_FLUSH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>speed <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">||</span> speed <span class=\"token operator\">&lt;</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tflags <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>GstSeekFlags<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>flags <span class=\"token operator\">|</span> GST_SEEK_FLAG_SKIP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tgint64 pos <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>guint64<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span>pct<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span>durationNanos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/*if(bPaused){\n\t\tseek_lock();\n\t\tgst_element_set_state (gstPipeline, GST_STATE_PLAYING);\n\t\tposChangingPaused=true;\n\t\tseek_unlock();\n\t}*/</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>speed<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">gst_element_seek</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_ELEMENT</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>speed<span class=\"token punctuation\">,</span> \tformat<span class=\"token punctuation\">,</span>\n\t\t\t\tflags<span class=\"token punctuation\">,</span>\n\t\t\t\tGST_SEEK_TYPE_SET<span class=\"token punctuation\">,</span>\n\t\t\t\tpos<span class=\"token punctuation\">,</span>\n\t\t\t\tGST_SEEK_TYPE_SET<span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setPosition(): unable to seek\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">gst_element_seek</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_ELEMENT</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>speed<span class=\"token punctuation\">,</span> \tformat<span class=\"token punctuation\">,</span>\n\t\t\t\tflags<span class=\"token punctuation\">,</span>\n\t\t\t\tGST_SEEK_TYPE_SET<span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\t\t\t\tGST_SEEK_TYPE_SET<span class=\"token punctuation\">,</span>\n\t\t\t\tpos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setPosition(): unable to seek\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">setVolume</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> volume<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tgdouble gvolume <span class=\"token operator\">=</span> volume<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">g_object_set</span><span class=\"token punctuation\">(</span><span class=\"token function\">G_OBJECT</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"volume\"</span><span class=\"token punctuation\">,</span> gvolume<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">setLoopState</span><span class=\"token punctuation\">(</span>ofLoopType state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tloopMode <span class=\"token operator\">=</span> state<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">setSpeed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> _speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>_speed <span class=\"token operator\">==</span> speed<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n\tGstFormat format <span class=\"token operator\">=</span> GST_FORMAT_TIME<span class=\"token punctuation\">;</span>\n\tGstSeekFlags flags <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>GstSeekFlags<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>GST_SEEK_FLAG_ACCURATE <span class=\"token operator\">|</span> GST_SEEK_FLAG_FLUSH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>_speed <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">||</span> _speed <span class=\"token operator\">&lt;</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tflags <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>GstSeekFlags<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>flags <span class=\"token operator\">|</span> GST_SEEK_FLAG_SKIP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tgint64 pos<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>_speed<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">gst_element_set_state</span> <span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">,</span> GST_STATE_PAUSED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==0</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">gst_element_query_position</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_ELEMENT</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>format<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>pos<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> pos<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//ofLogError(\"ofGstUtils\") &lt;&lt; \"setSpeed(): couldn't query position\";</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">gst_element_query_position</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_ELEMENT</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>format<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>pos<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> pos<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//ofLogError(\"ofGstUtils\") &lt;&lt; \"setSpeed(): couldn't query position\";</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\tspeed <span class=\"token operator\">=</span> _speed<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//pos = (float)gstData.lastFrame * (float)fps_d / (float)fps_n * GST_SECOND;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bPaused<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">gst_element_set_state</span> <span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">,</span> GST_STATE_PLAYING<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>speed<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">gst_element_seek</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_ELEMENT</span><span class=\"token punctuation\">(</span>gstSink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> speed<span class=\"token punctuation\">,</span> \tformat<span class=\"token punctuation\">,</span>\n\t\t\t\tflags<span class=\"token punctuation\">,</span>\n\t\t\t\tGST_SEEK_TYPE_SET<span class=\"token punctuation\">,</span>\n\t\t\t\tpos<span class=\"token punctuation\">,</span>\n\t\t\t\tGST_SEEK_TYPE_SET<span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setSpeed(): unable to change speed\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">gst_element_seek</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_ELEMENT</span><span class=\"token punctuation\">(</span>gstSink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> speed<span class=\"token punctuation\">,</span> \tformat<span class=\"token punctuation\">,</span>\n\t\t\t\tflags<span class=\"token punctuation\">,</span>\n\t\t\t\tGST_SEEK_TYPE_SET<span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\t\t\t\tGST_SEEK_TYPE_SET<span class=\"token punctuation\">,</span>\n\t\t\t\tpos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setSpeed(): unable to change speed\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setSpeed(): speed changed to \"</span> <span class=\"token operator\">&lt;&lt;</span> speed<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bPlaying<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bIsMovieDone <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>bPaused <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>isStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tstd<span class=\"token operator\">::</span>unique_lock<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>mutex<span class=\"token operator\">></span> <span class=\"token function\">lck</span><span class=\"token punctuation\">(</span>eosMutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tclosing <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">gst_element_send_event</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">,</span><span class=\"token function\">gst_event_new_eos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>eosCondition<span class=\"token punctuation\">.</span><span class=\"token function\">wait_for</span><span class=\"token punctuation\">(</span>lck<span class=\"token punctuation\">,</span>std<span class=\"token operator\">::</span>chrono<span class=\"token operator\">::</span><span class=\"token function\">milliseconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>std<span class=\"token operator\">::</span>cv_status<span class=\"token operator\">::</span>timeout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"didn't received EOS in 5s, closing pipeline anyway\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\tclosing <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bLoaded<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">gst_element_set_state</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_ELEMENT</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> GST_STATE_NULL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">gst_element_get_state</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">,</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>GST_SECOND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>busWatchID<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token function\">g_source_remove</span><span class=\"token punctuation\">(</span>busWatchID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">gst_object_unref</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tgstPipeline <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\t\tgstSink <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tbLoaded <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/*static string getName(GstState state){\n\tswitch(state){\n\tcase   GST_STATE_VOID_PENDING:\n\t\treturn \"void pending\";\n\tcase   GST_STATE_NULL:\n\t\treturn \"null\";\n\tcase   GST_STATE_READY:\n\t\treturn \"ready\";\n\tcase   GST_STATE_PAUSED:\n\t\treturn \"paused\";\n\tcase   GST_STATE_PLAYING:\n\t\treturn \"playing\";\n\tdefault:\n\t\treturn \"\";\n\t}\n}*/</span>\n\n<span class=\"token keyword\">bool</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">busFunction</span><span class=\"token punctuation\">(</span>GstBus <span class=\"token operator\">*</span> bus<span class=\"token punctuation\">,</span> GstMessage <span class=\"token operator\">*</span> message<span class=\"token punctuation\">,</span> ofGstUtils <span class=\"token operator\">*</span> gstUtils<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> gstUtils<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">gstHandleMessage</span><span class=\"token punctuation\">(</span>bus<span class=\"token punctuation\">,</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">gstHandleMessage</span><span class=\"token punctuation\">(</span>GstBus <span class=\"token operator\">*</span> bus<span class=\"token punctuation\">,</span> GstMessage <span class=\"token operator\">*</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>appsink <span class=\"token operator\">&amp;&amp;</span> appsink<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">on_message</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">/*ofLogVerbose(\"ofGstUtils\") &lt;&lt; \"gstHandleMessage(): got \" &lt;&lt; GST_MESSAGE_TYPE_NAME(msg)\n\t\t\t&lt;&lt; \" message from \" &lt;&lt; GST_MESSAGE_SRC_NAME(msg);*/</span>\n\n\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GST_MESSAGE_TYPE</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n\t\t<span class=\"token keyword\">case</span> GST_MESSAGE_BUFFERING<span class=\"token operator\">:</span>\n\t\t\tgint pctBuffered<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">gst_message_parse_buffering</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>pctBuffered<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"gstHandleMessage(): buffering \"</span> <span class=\"token operator\">&lt;&lt;</span> pctBuffered<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pctBuffered<span class=\"token operator\">&lt;</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">gst_element_set_state</span> <span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">,</span> GST_STATE_PAUSED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bPaused<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">gst_element_set_state</span> <span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">,</span> GST_STATE_PLAYING<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==0</span>\n\t\t<span class=\"token keyword\">case</span> GST_MESSAGE_DURATION<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n\t\t\tGstFormat format<span class=\"token operator\">=</span>GST_FORMAT_TIME<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">gst_element_query_duration</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>format<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>durationNanos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t<span class=\"token keyword\">case</span> GST_MESSAGE_DURATION_CHANGED<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">gst_element_query_duration</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">,</span>GST_FORMAT_TIME<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>durationNanos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t\t<span class=\"token keyword\">case</span> GST_MESSAGE_STATE_CHANGED<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n\t\t\tGstState oldstate<span class=\"token punctuation\">,</span> newstate<span class=\"token punctuation\">,</span> pendstate<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">gst_message_parse_state_changed</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>oldstate<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>newstate<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pendstate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>isStream <span class=\"token operator\">&amp;&amp;</span> newstate<span class=\"token operator\">==</span>GST_STATE_PAUSED <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>bPlaying <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tbLoaded <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t\tbPlaying <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bPaused<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//ofLogVerbose(\"ofGstUtils\") &lt;&lt; \"gstHandleMessage(): setting stream pipeline to play\";</span>\n\t\t\t\t\t<span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">/*ofLogVerbose(\"ofGstUtils\") &lt;&lt; \"gstHandleMessage(): \" &lt;&lt; GST_MESSAGE_SRC_NAME(msg) &lt;&lt; \" state changed from \"\n\t\t\t\t\t&lt;&lt; getName(oldstate) &lt;&lt; \" to \" &lt;&lt; getName(newstate) &lt;&lt; \" (\" + getName(pendstate) &lt;&lt; \")\";*/</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> GST_MESSAGE_ASYNC_DONE<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"gstHandleMessage(): async done\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> GST_MESSAGE_ERROR<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\t\tGError <span class=\"token operator\">*</span>err<span class=\"token punctuation\">;</span>\n\t\t\tgchar <span class=\"token operator\">*</span>debug<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">gst_message_parse_error</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>err<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>debug<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tgchar <span class=\"token operator\">*</span> name <span class=\"token operator\">=</span> <span class=\"token function\">gst_element_get_name</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_MESSAGE_SRC</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"gstHandleMessage(): embedded video playback halted for plugin, module \"</span>\n\t\t\t\t<span class=\"token operator\">&lt;&lt;</span> name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"  reported: \"</span> <span class=\"token operator\">&lt;&lt;</span> err<span class=\"token operator\">-</span><span class=\"token operator\">></span>message<span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token function\">g_free</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">g_error_free</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">g_free</span><span class=\"token punctuation\">(</span>debug<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token function\">gst_element_set_state</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_ELEMENT</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> GST_STATE_NULL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> GST_MESSAGE_EOS<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"gstHandleMessage(): end of the stream\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">bool</span> isClosing <span class=\"token operator\">=</span> closing<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">eos_cb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>isClosing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tbusWatchID <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>loopMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t\t\t<span class=\"token keyword\">case</span> OF_LOOP_NORMAL<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\tGstFormat format <span class=\"token operator\">=</span> GST_FORMAT_TIME<span class=\"token punctuation\">;</span>\n\t\t\t\t\tGstSeekFlags flags <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>GstSeekFlags<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>GST_SEEK_FLAG_FLUSH <span class=\"token operator\">|</span> GST_SEEK_FLAG_KEY_UNIT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>speed<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">gst_element_seek</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_ELEMENT</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t\tspeed<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t\tformat<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t\tflags<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t\tGST_SEEK_TYPE_SET<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t\tGST_SEEK_TYPE_SET<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"gstHandleMessage(): unable to seek\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>speed<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">gst_element_seek</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_ELEMENT</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>speed<span class=\"token punctuation\">,</span> \tformat<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\tflags<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\tGST_SEEK_TYPE_SET<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\tGST_SEEK_TYPE_SET<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\tdurationNanos<span class=\"token number\">-1000000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"gstHandleMessage(): unable to seek\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\t<span class=\"token keyword\">case</span> OF_LOOP_PALINDROME<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\tGstFormat format <span class=\"token operator\">=</span> GST_FORMAT_TIME<span class=\"token punctuation\">;</span>\n\t\t\t\t\tGstSeekFlags flags <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>GstSeekFlags<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>GST_SEEK_FLAG_FLUSH <span class=\"token operator\">|</span>GST_SEEK_FLAG_KEY_UNIT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tgint64 pos<span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==0</span>\n\t\t\t\t\t\t<span class=\"token function\">gst_element_query_position</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_ELEMENT</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>format<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t\t\t\t\t<span class=\"token function\">gst_element_query_position</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_ELEMENT</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>format<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t\t\t<span class=\"token keyword\">float</span> loopSpeed<span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pos<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\tloopSpeed<span class=\"token operator\">=</span><span class=\"token operator\">-</span>speed<span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">else</span>\n\t\t\t\t\t\tloopSpeed<span class=\"token operator\">=</span>speed<span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">gst_element_seek</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_ELEMENT</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\tloopSpeed<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\tGST_FORMAT_UNDEFINED<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\tflags<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\tGST_SEEK_TYPE_NONE<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\tGST_SEEK_TYPE_NONE<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"gstHandleMessage(): unable to seek\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GST_MESSAGE_LATENCY<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">gst_bin_recalculate_latency</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GST_BIN</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getPipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GST_MESSAGE_REQUEST_STATE<span class=\"token operator\">:</span>\t<span class=\"token punctuation\">{</span>\n\t\t\tGstState state<span class=\"token punctuation\">;</span>\n\t\t\tgchar <span class=\"token operator\">*</span>name <span class=\"token operator\">=</span> <span class=\"token function\">gst_object_get_path_string</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GST_MESSAGE_SRC</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token function\">gst_message_parse_request_state</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">gst_element_set_state</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getPipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token function\">g_free</span> <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==1 &amp;&amp; GST_VERSION_MINOR>=2</span>\n\t\t<span class=\"token keyword\">case</span> GST_MESSAGE_HAVE_CONTEXT<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n\t\t\tGstContext <span class=\"token operator\">*</span>context<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">const</span> gchar <span class=\"token operator\">*</span>context_type<span class=\"token punctuation\">;</span>\n\t\t\tgchar <span class=\"token operator\">*</span>context_str<span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token function\">gst_message_parse_have_context</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tcontext_type <span class=\"token operator\">=</span> <span class=\"token function\">gst_context_get_context_type</span> <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tcontext_str <span class=\"token operator\">=</span> <span class=\"token function\">gst_structure_to_string</span> <span class=\"token punctuation\">(</span><span class=\"token function\">gst_context_get_structure</span> <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstUtils\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Got context from element '%s': %s=%s\\n\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token function\">GST_ELEMENT_NAME</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GST_MESSAGE_SRC</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> context_type<span class=\"token punctuation\">,</span>\n\t\t\t\tcontext_str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">g_free</span> <span class=\"token punctuation\">(</span>context_str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">gst_context_unref</span> <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"gstHandleMessage(): unhandled message from \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">GST_MESSAGE_SRC_NAME</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nGstElement \t<span class=\"token operator\">*</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">getPipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> gstPipeline<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nGstElement \t<span class=\"token operator\">*</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">getSink</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> gstSink<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nGstElement \t<span class=\"token operator\">*</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">getGstElementByName</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">gst_bin_get_by_name</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_BIN</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">setSinkListener</span><span class=\"token punctuation\">(</span>ofGstAppSink <span class=\"token operator\">*</span> appsink_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tappsink <span class=\"token operator\">=</span> appsink_<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nuint64_t ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">getMinLatencyNanos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tGstClockTime minlat<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> maxlat<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tGstQuery <span class=\"token operator\">*</span> q <span class=\"token operator\">=</span> <span class=\"token function\">gst_query_new_latency</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">gst_element_query</span> <span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t gboolean live<span class=\"token punctuation\">;</span>\n\t\t <span class=\"token function\">gst_query_parse_latency</span> <span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>live<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>minlat<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>maxlat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">gst_query_unref</span> <span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> minlat<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nuint64_t ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">getMaxLatencyNanos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tGstClockTime minlat<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> maxlat<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tGstQuery <span class=\"token operator\">*</span> q <span class=\"token operator\">=</span> <span class=\"token function\">gst_query_new_latency</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">gst_element_query</span> <span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t gboolean live<span class=\"token punctuation\">;</span>\n\t\t <span class=\"token function\">gst_query_parse_latency</span> <span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>live<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>minlat<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>maxlat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">gst_query_unref</span> <span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> maxlat<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------- videoUtils</span>\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------------</span>\n\n\n\nofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">ofGstVideoUtils</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbIsFrameNew\t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tbHavePixelsChanged\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tbBackPixelsChanged\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==1</span>\n\tGstMapInfo initMapinfo\t\t<span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\tmapinfo \t\t\t\t\t<span class=\"token operator\">=</span> initMapinfo<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\tinternalPixelFormat\t\t\t<span class=\"token operator\">=</span> OF_PIXELS_RGB<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_USE_GST_GL</span>\n\tglDisplay <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\tglContext <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\tcopyPixels <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofGstVideoUtils</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>unique_lock<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>mutex<span class=\"token operator\">></span> <span class=\"token function\">lock</span><span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbackPixels<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\teventPixels<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbIsFrameNew\t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tbHavePixelsChanged\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tbBackPixelsChanged\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tfrontBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbackBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==1</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bufferQueue<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> bufferQueue<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">isInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">isLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">isFrameNew</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> bIsFrameNew<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofPixels<span class=\"token operator\">&amp;</span> ofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> pixels<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> ofPixels <span class=\"token operator\">&amp;</span> ofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> pixels<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofTexture <span class=\"token operator\">*</span> ofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_USE_GST_GL</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>frontTexture<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>frontTexture<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token keyword\">return</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isFrameByFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tstd<span class=\"token operator\">::</span>unique_lock<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>mutex<span class=\"token operator\">></span> <span class=\"token function\">lock</span><span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tbHavePixelsChanged <span class=\"token operator\">=</span> bBackPixelsChanged<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bHavePixelsChanged<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tbBackPixelsChanged<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">,</span>backPixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_USE_GST_GL</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>backTexture<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\tfrontTexture<span class=\"token punctuation\">.</span><span class=\"token function\">getTextureData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> backTexture<span class=\"token punctuation\">.</span><span class=\"token function\">getTextureData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tfrontTexture<span class=\"token punctuation\">.</span><span class=\"token function\">setTextureMinMagFilter</span><span class=\"token punctuation\">(</span>GL_LINEAR<span class=\"token punctuation\">,</span>GL_LINEAR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tfrontTexture<span class=\"token punctuation\">.</span><span class=\"token function\">setTextureWrap</span><span class=\"token punctuation\">(</span>GL_CLAMP_TO_EDGE<span class=\"token punctuation\">,</span>GL_CLAMP_TO_EDGE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>copyPixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\tfrontBuffer <span class=\"token operator\">=</span> backBuffer<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==0</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"frame by frame doesn't work any more in 0.10\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t\tGstBuffer <span class=\"token operator\">*</span> buffer<span class=\"token punctuation\">;</span>\n\t\t\tGstSample <span class=\"token operator\">*</span> sample<span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//get the buffer from appsink</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isPaused</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tsample <span class=\"token operator\">=</span> <span class=\"token function\">gst_app_sink_pull_preroll</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GST_APP_SINK</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getSink</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\tsample <span class=\"token operator\">=</span> <span class=\"token function\">gst_app_sink_pull_sample</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GST_APP_SINK</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getSink</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\tbuffer <span class=\"token operator\">=</span> <span class=\"token function\">gst_sample_get_buffer</span><span class=\"token punctuation\">(</span>sample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token function\">gst_buffer_map</span> <span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>mapinfo<span class=\"token punctuation\">,</span> GST_MAP_READ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//TODO: stride = mapinfo.size / height;</span>\n\t\t\t\t\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">setFromExternalPixels</span><span class=\"token punctuation\">(</span>mapinfo<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getNumChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tbackBuffer <span class=\"token operator\">=</span> shared_ptr<span class=\"token operator\">&lt;</span>GstSample<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>sample<span class=\"token punctuation\">,</span>gst_sample_unref<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tbHavePixelsChanged<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">gst_buffer_unmap</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>mapinfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"update(): ofGstVideoUtils not loaded\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tbIsFrameNew <span class=\"token operator\">=</span> bHavePixelsChanged<span class=\"token punctuation\">;</span>\n\tbHavePixelsChanged <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> ofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> ofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR>0</span>\nstring\tofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">getGstFormatName</span><span class=\"token punctuation\">(</span>ofPixelFormat format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_GRAY<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"GRAY8\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_RGBA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"RGBA\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_BGRA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"BGRA\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB565<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"RGB16\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_NV12<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"NV12\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_NV21<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"NV21\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_YV12<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"YV12\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_I420<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"I420\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_YUY2<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"YUY2\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"RGB\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_BGR<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"BGR\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"UNKNOWN\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nGstVideoFormat\tofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">getGstFormat</span><span class=\"token punctuation\">(</span>ofPixelFormat format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_GRAY<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> GST_VIDEO_FORMAT_GRAY8<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> GST_VIDEO_FORMAT_RGB<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">case</span> OF_PIXELS_BGR<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> GST_VIDEO_FORMAT_BGR<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">case</span> OF_PIXELS_RGBA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> GST_VIDEO_FORMAT_RGBA<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">case</span> OF_PIXELS_BGRA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> GST_VIDEO_FORMAT_BGRA<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB565<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> GST_VIDEO_FORMAT_RGB16<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">case</span> OF_PIXELS_NV12<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> GST_VIDEO_FORMAT_NV12<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">case</span> OF_PIXELS_NV21<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> GST_VIDEO_FORMAT_NV21<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">case</span> OF_PIXELS_YV12<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> GST_VIDEO_FORMAT_YV12<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">case</span> OF_PIXELS_I420<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> GST_VIDEO_FORMAT_I420<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">case</span> OF_PIXELS_YUY2<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> GST_VIDEO_FORMAT_YUY2<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">case</span> OF_PIXELS_UNKNOWN<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_GRAY_ALPHA<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_Y<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_U<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_V<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_UV<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_VU<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> GST_VIDEO_FORMAT_UNKNOWN<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nofPixelFormat ofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">getOFFormat</span><span class=\"token punctuation\">(</span>GstVideoFormat format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> GST_VIDEO_FORMAT_GRAY8<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> OF_PIXELS_GRAY<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">case</span> GST_VIDEO_FORMAT_RGB<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> OF_PIXELS_RGB<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">case</span> GST_VIDEO_FORMAT_BGR<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> OF_PIXELS_BGR<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">case</span> GST_VIDEO_FORMAT_RGBA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> OF_PIXELS_RGBA<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">case</span> GST_VIDEO_FORMAT_BGRA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> OF_PIXELS_BGRA<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">case</span> GST_VIDEO_FORMAT_RGB16<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> OF_PIXELS_RGB565<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">case</span> GST_VIDEO_FORMAT_NV12<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> OF_PIXELS_NV12<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">case</span> GST_VIDEO_FORMAT_NV21<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> OF_PIXELS_NV21<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">case</span> GST_VIDEO_FORMAT_YV12<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> OF_PIXELS_YV12<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">case</span> GST_VIDEO_FORMAT_I420<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> OF_PIXELS_I420<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">case</span> GST_VIDEO_FORMAT_YUY2<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> OF_PIXELS_YUY2<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"non supported format \"</span> <span class=\"token operator\">&lt;&lt;</span> format<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> OF_PIXELS_UNKNOWN<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">/*\ngboolean ofGstVideoUtils::sync_bus_call (GstBus * bus, GstMessage * msg, gpointer data)\n{\n\tswitch (GST_MESSAGE_TYPE (msg)) {\n\t\tcase GST_MESSAGE_NEED_CONTEXT:\n\t\t{\n\t\t\tofGstVideoPlayer * player = (ofGstVideoPlayer*)data;\n\t\t\tconst gchar *context_type;\n\n\t\t\tgst_message_parse_context_type (msg, &amp;context_type);\n\t\t\tofLogNotice(\"ofGstVideoPlayer\",\"got need context %s\\n\", context_type);\n\n\t\t\tif (g_strcmp0 (context_type, GST_GL_DISPLAY_CONTEXT_TYPE) == 0) {\n\t\t\t\tGstContext *display_context =\n\t\t\t\tgst_context_new (GST_GL_DISPLAY_CONTEXT_TYPE, TRUE);\n\t\t\t\tgst_context_set_gl_display (display_context, player->glDisplay);\n\t\t\t\t//GstStructure *s = gst_context_writable_structure (display_context);\n\t\t\t\t//gst_structure_set (s, \"context\", GST_GL_TYPE_CONTEXT, player->glContext,\tNULL);\n\t\t\t\tgst_element_set_context (GST_ELEMENT (msg->src), display_context);\n\t\t\t\treturn TRUE;\n\t\t\t} else if (g_strcmp0 (context_type, \"gst.gl.app_context\") == 0) {\n\t\t\t\tGstContext *app_context = gst_context_new (\"gst.gl.app_context\", TRUE);\n\t\t\t\tGstStructure *s = gst_context_writable_structure (app_context);\n\t\t\t\tgst_structure_set (s, \"context\", GST_GL_TYPE_CONTEXT, player->glContext,\tNULL);\n\t\t\t\tgst_element_set_context (GST_ELEMENT (msg->src), app_context);\n\t\t\t\treturn TRUE;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\tbreak;\n\t}\n\treturn FALSE;\n}*/</span>\n\n<span class=\"token keyword\">void</span> ofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">setCopyPixels</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> copy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcopyPixels <span class=\"token operator\">=</span> copy<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">setPipeline</span><span class=\"token punctuation\">(</span>string pipeline<span class=\"token punctuation\">,</span> ofPixelFormat pixelFormat<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> isStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tinternalPixelFormat <span class=\"token operator\">=</span> pixelFormat<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> OF_USE_GST_GL</span>\n\tstring caps<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==0</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_MONO<span class=\"token operator\">:</span>\n\t\tcaps<span class=\"token operator\">=</span><span class=\"token string\">\"video/x-raw-gray, depth=8, bpp=8\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_RGBA<span class=\"token operator\">:</span>\n\t\tcaps<span class=\"token operator\">=</span><span class=\"token string\">\"video/x-raw-rgb, depth=24, bpp=32, endianness=4321, red_mask=0xff0000, green_mask=0x00ff00, blue_mask=0x0000ff, alpha_mask=0x000000ff\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_BGRA<span class=\"token operator\">:</span>\n\t\tcaps<span class=\"token operator\">=</span><span class=\"token string\">\"video/x-raw-rgb, depth=24, bpp=32, endianness=4321, red_mask=0x0000ff, green_mask=0x00ff00, blue_mask=0xff0000, alpha_mask=0x000000ff\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\tcaps<span class=\"token operator\">=</span><span class=\"token string\">\"video/x-raw-rgb, depth=24, bpp=24, endianness=4321, red_mask=0xff0000, green_mask=0x00ff00, blue_mask=0x0000ff, alpha_mask=0x000000ff\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token operator\">!=</span>OF_PIXELS_NATIVE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tcaps<span class=\"token operator\">=</span><span class=\"token string\">\"video/x-raw, format=\"</span><span class=\"token operator\">+</span><span class=\"token function\">getGstFormatName</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tcaps <span class=\"token operator\">=</span> <span class=\"token string\">\"video/x-raw,format={RGBA,BGRA,RGB,BGR,RGB16,GRAY8,YV12,I420,NV12,NV21,YUY2}\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>w<span class=\"token operator\">!=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> h<span class=\"token operator\">!=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tcaps<span class=\"token operator\">+</span><span class=\"token operator\">=</span><span class=\"token string\">\", width=\"</span> <span class=\"token operator\">+</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\", height=\"</span> <span class=\"token operator\">+</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tstring pipeline_string <span class=\"token operator\">=</span>\n\t\tpipeline <span class=\"token operator\">+</span> <span class=\"token string\">\" ! appsink name=ofappsink enable-last-sample=0 caps=\\\"\"</span> <span class=\"token operator\">+</span> caps <span class=\"token operator\">+</span> <span class=\"token string\">\"\\\"\"</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>w<span class=\"token operator\">==</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">||</span> h<span class=\"token operator\">==</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> pixelFormat<span class=\"token operator\">==</span>OF_PIXELS_NATIVE <span class=\"token operator\">||</span> <span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">setPipelineWithSink</span><span class=\"token punctuation\">(</span>pipeline_string<span class=\"token punctuation\">,</span><span class=\"token string\">\"ofappsink\"</span><span class=\"token punctuation\">,</span>isStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\tstring pipeline_string <span class=\"token operator\">=</span>\n\t\tpipeline <span class=\"token operator\">+</span> <span class=\"token string\">\" ! glcolorscale name=gl_filter ! appsink name=ofappsink enable-last-sample=0 caps=\\\"video/x-raw,format=RGBA\\\"\"</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">bool</span> ret<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>w<span class=\"token operator\">==</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">||</span> h<span class=\"token operator\">==</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> pixelFormat<span class=\"token operator\">==</span>OF_PIXELS_NATIVE <span class=\"token operator\">||</span> <span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tret <span class=\"token operator\">=</span> <span class=\"token function\">setPipelineWithSink</span><span class=\"token punctuation\">(</span>pipeline_string<span class=\"token punctuation\">,</span><span class=\"token string\">\"ofappsink\"</span><span class=\"token punctuation\">,</span>isStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tret <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">auto</span> glfilter <span class=\"token operator\">=</span> <span class=\"token function\">gst_bin_get_by_name</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_BIN</span><span class=\"token punctuation\">(</span><span class=\"token function\">getPipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"gl_filter\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_LINUX) &amp;&amp; !defined(TARGET_OPENGLES)</span>\n\t<span class=\"token function\">glXMakeCurrent</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ofGetX11Display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> None<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tglDisplay <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>GstGLDisplay <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">gst_gl_display_x11_new_with_display</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetX11Display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tglContext <span class=\"token operator\">=</span> <span class=\"token function\">gst_gl_context_new_wrapped</span> <span class=\"token punctuation\">(</span>glDisplay<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>guintptr<span class=\"token punctuation\">)</span> <span class=\"token function\">ofGetGLXContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t    \t\t  GST_GL_PLATFORM_GLX<span class=\"token punctuation\">,</span> GST_GL_API_OPENGL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">g_object_set</span> <span class=\"token punctuation\">(</span><span class=\"token function\">G_OBJECT</span> <span class=\"token punctuation\">(</span>glfilter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"other-context\"</span><span class=\"token punctuation\">,</span> glContext<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// FIXME: this seems to be the way to add the context in 1.4.5</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// GstBus * bus = gst_pipeline_get_bus (GST_PIPELINE(gstPipeline));</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// gst_bus_enable_sync_message_emission (bus);</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// g_signal_connect (bus, \"sync-message\", G_CALLBACK (sync_bus_call), this);</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// gst_object_unref(bus);</span>\n\n\t<span class=\"token function\">glXMakeCurrent</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ofGetX11Display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetX11Window</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLXContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(TARGET_OPENGLES)</span>\n\tcout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"current display \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">ofGetEGLDisplay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">eglMakeCurrent</span> <span class=\"token punctuation\">(</span><span class=\"token function\">eglGetDisplay</span><span class=\"token punctuation\">(</span>EGL_DEFAULT_DISPLAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tglDisplay <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>GstGLDisplay <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">gst_gl_display_egl_new_with_egl_display</span><span class=\"token punctuation\">(</span><span class=\"token function\">eglGetDisplay</span><span class=\"token punctuation\">(</span>EGL_DEFAULT_DISPLAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tglContext <span class=\"token operator\">=</span> <span class=\"token function\">gst_gl_context_new_wrapped</span> <span class=\"token punctuation\">(</span>glDisplay<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>guintptr<span class=\"token punctuation\">)</span> <span class=\"token function\">ofGetEGLContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t    \t\t  GST_GL_PLATFORM_EGL<span class=\"token punctuation\">,</span> GST_GL_API_GLES2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">g_object_set</span> <span class=\"token punctuation\">(</span><span class=\"token function\">G_OBJECT</span> <span class=\"token punctuation\">(</span>glfilter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"other-context\"</span><span class=\"token punctuation\">,</span> glContext<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// FIXME: this seems to be the way to add the context in 1.4.5</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// GstBus * bus = gst_pipeline_get_bus (GST_PIPELINE(gstPipeline));</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// gst_bus_enable_sync_message_emission (bus);</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// g_signal_connect (bus, \"sync-message\", G_CALLBACK (sync_bus_call), this);</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// gst_object_unref(bus);</span>\n\n\t<span class=\"token function\">eglMakeCurrent</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ofGetEGLDisplay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetEGLSurface</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetEGLSurface</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetEGLContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">setPixelFormat</span><span class=\"token punctuation\">(</span>ofPixelFormat pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tinternalPixelFormat <span class=\"token operator\">=</span> pixelFormat<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofPixelFormat ofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> internalPixelFormat<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span> ofPixelFormat pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tstd<span class=\"token operator\">::</span>unique_lock<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>mutex<span class=\"token operator\">></span> <span class=\"token function\">lock</span><span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR>0</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token operator\">!=</span>internalPixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"allocating with \"</span> <span class=\"token operator\">&lt;&lt;</span> w <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"x\"</span> <span class=\"token operator\">&lt;&lt;</span> h <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">getGstFormatName</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbackPixels<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbackPixels<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tbHavePixelsChanged <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tbBackPixelsChanged <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\tinternalPixelFormat <span class=\"token operator\">=</span> pixelFormat<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">reallocateOnNextFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tstd<span class=\"token operator\">::</span>unique_lock<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>mutex<span class=\"token operator\">></span> <span class=\"token function\">lock</span><span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbackPixels<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbIsFrameNew\t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tbHavePixelsChanged\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tbBackPixelsChanged\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tfrontBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbackBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==1</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bufferQueue<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> bufferQueue<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==0</span>\nGstFlowReturn ofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">process_buffer</span><span class=\"token punctuation\">(</span>shared_ptr<span class=\"token operator\">&lt;</span>GstBuffer<span class=\"token operator\">></span> _buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tguint size <span class=\"token operator\">=</span> <span class=\"token function\">GST_BUFFER_SIZE</span> <span class=\"token punctuation\">(</span>_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> stride <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getTotalBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        stride <span class=\"token operator\">=</span> <span class=\"token function\">gst_video_format_get_row_stride</span><span class=\"token punctuation\">(</span> GST_VIDEO_FORMAT_RGB<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>stride <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span>  pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getBytesPerPixel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"buffer_cb(): error on new buffer, buffer size: \"</span> <span class=\"token operator\">&lt;&lt;</span> size <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"!= init size: \"</span> <span class=\"token operator\">&lt;&lt;</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getTotalBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> GST_FLOW_ERROR<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\tmutex<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tbackBuffer <span class=\"token operator\">=</span> _buffer<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>stride <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            backPixels<span class=\"token punctuation\">.</span><span class=\"token function\">setFromAlignedPixels</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_BUFFER_DATA</span> <span class=\"token punctuation\">(</span>backBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>stride<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            backPixels<span class=\"token punctuation\">.</span><span class=\"token function\">setFromExternalPixels</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_BUFFER_DATA</span> <span class=\"token punctuation\">(</span>backBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            eventPixels<span class=\"token punctuation\">.</span><span class=\"token function\">setFromExternalPixels</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_BUFFER_DATA</span> <span class=\"token punctuation\">(</span>backBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\t\tbBackPixelsChanged<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\tmutex<span class=\"token punctuation\">.</span><span class=\"token function\">unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>stride <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        \t<span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span>prerollEvent<span class=\"token punctuation\">,</span>eventPixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>isStream <span class=\"token operator\">&amp;&amp;</span> appsink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tappsink<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">on_stream_prepared</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"preroll_cb(): received a preroll without allocation\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tmutex<span class=\"token punctuation\">.</span><span class=\"token function\">unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> GST_FLOW_OK<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\n<span class=\"token keyword\">static</span> GstVideoInfo <span class=\"token function\">getVideoInfo</span><span class=\"token punctuation\">(</span>GstSample <span class=\"token operator\">*</span> sample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    GstCaps <span class=\"token operator\">*</span>caps <span class=\"token operator\">=</span> <span class=\"token function\">gst_sample_get_caps</span><span class=\"token punctuation\">(</span>sample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    GstVideoInfo vinfo<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>caps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">gst_video_info_from_caps</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>vinfo<span class=\"token punctuation\">,</span> caps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n    \t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"couldn't get sample caps\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> vinfo<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nGstFlowReturn ofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">process_sample</span><span class=\"token punctuation\">(</span>shared_ptr<span class=\"token operator\">&lt;</span>GstSample<span class=\"token operator\">></span> sample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tGstBuffer <span class=\"token operator\">*</span> _buffer <span class=\"token operator\">=</span> <span class=\"token function\">gst_sample_get_buffer</span><span class=\"token punctuation\">(</span>sample<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_USE_GST_GL</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">gst_buffer_map</span> <span class=\"token punctuation\">(</span>_buffer<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>mapinfo<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>GstMapFlags<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>GST_MAP_READ <span class=\"token operator\">|</span> GST_MAP_GL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">gst_is_gl_memory</span> <span class=\"token punctuation\">(</span>mapinfo<span class=\"token punctuation\">.</span>memory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tbufferQueue<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>sample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">gst_buffer_unmap</span><span class=\"token punctuation\">(</span>_buffer<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>mapinfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">bool</span> newTexture<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\tstd<span class=\"token operator\">::</span>unique_lock<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>mutex<span class=\"token operator\">></span> <span class=\"token function\">lock</span><span class=\"token punctuation\">(</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>bufferQueue<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tbackBuffer <span class=\"token operator\">=</span> bufferQueue<span class=\"token punctuation\">.</span><span class=\"token function\">front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tbufferQueue<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tnewTexture <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>newTexture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tGstBuffer <span class=\"token operator\">*</span> _buffer <span class=\"token operator\">=</span> <span class=\"token function\">gst_sample_get_buffer</span><span class=\"token punctuation\">(</span>backBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">gst_buffer_map</span> <span class=\"token punctuation\">(</span>_buffer<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>mapinfo<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>GstMapFlags<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>GST_MAP_READ <span class=\"token operator\">|</span> GST_MAP_GL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">auto</span> texId <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>guint<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>mapinfo<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n\t\t\t\tbackTexture<span class=\"token punctuation\">.</span><span class=\"token function\">setUseExternalTextureID</span><span class=\"token punctuation\">(</span>texId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tofTextureData <span class=\"token operator\">&amp;</span> texData <span class=\"token operator\">=</span> backTexture<span class=\"token punctuation\">.</span><span class=\"token function\">getTextureData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\ttexData<span class=\"token punctuation\">.</span>bAllocated <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t\ttexData<span class=\"token punctuation\">.</span>bFlipTexture <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t\ttexData<span class=\"token punctuation\">.</span>glInternalFormat <span class=\"token operator\">=</span> GL_RGBA<span class=\"token punctuation\">;</span>\n\t\t\t\ttexData<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\ttexData<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> <span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\ttexData<span class=\"token punctuation\">.</span>magFilter <span class=\"token operator\">=</span> GL_LINEAR<span class=\"token punctuation\">;</span>\n\t\t\t\ttexData<span class=\"token punctuation\">.</span>minFilter <span class=\"token operator\">=</span> GL_LINEAR<span class=\"token punctuation\">;</span>\n\t\t\t\ttexData<span class=\"token punctuation\">.</span>tex_h <span class=\"token operator\">=</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\ttexData<span class=\"token punctuation\">.</span>tex_w <span class=\"token operator\">=</span> <span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\ttexData<span class=\"token punctuation\">.</span>tex_u <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t\ttexData<span class=\"token punctuation\">.</span>tex_t <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t\ttexData<span class=\"token punctuation\">.</span>textureID <span class=\"token operator\">=</span> texId<span class=\"token punctuation\">;</span>\n\t\t\t\ttexData<span class=\"token punctuation\">.</span>textureTarget <span class=\"token operator\">=</span> GL_TEXTURE_2D<span class=\"token punctuation\">;</span>\n\t\t\t\ttexData<span class=\"token punctuation\">.</span>wrapModeHorizontal <span class=\"token operator\">=</span> GL_CLAMP_TO_EDGE<span class=\"token punctuation\">;</span>\n\t\t\t\ttexData<span class=\"token punctuation\">.</span>wrapModeVertical <span class=\"token operator\">=</span> GL_CLAMP_TO_EDGE<span class=\"token punctuation\">;</span>\n\t\t\t\tbBackPixelsChanged<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">gst_buffer_unmap</span><span class=\"token punctuation\">(</span>_buffer<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>mapinfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">return</span> GST_FLOW_OK<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// video frame has normal texture</span>\n\t<span class=\"token function\">gst_buffer_map</span> <span class=\"token punctuation\">(</span>_buffer<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>mapinfo<span class=\"token punctuation\">,</span> GST_MAP_READ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tguint size <span class=\"token operator\">=</span> mapinfo<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">;</span>\n\n\tsize_t stride <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getTotalBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token function\">size_t</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tGstVideoInfo v_info <span class=\"token operator\">=</span> <span class=\"token function\">getVideoInfo</span><span class=\"token punctuation\">(</span>sample<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tstride <span class=\"token operator\">=</span> v_info<span class=\"token punctuation\">.</span>stride<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>stride <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getBytesPerPixel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"buffer_cb(): error on new buffer, buffer size: \"</span> <span class=\"token operator\">&lt;&lt;</span> size <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"!= init size: \"</span> <span class=\"token operator\">&lt;&lt;</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getTotalBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> GST_FLOW_ERROR<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\tmutex<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>copyPixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tbackBuffer <span class=\"token operator\">=</span> sample<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>stride <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> OF_PIXELS_I420<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tGstVideoInfo v_info <span class=\"token operator\">=</span> <span class=\"token function\">getVideoInfo</span><span class=\"token punctuation\">(</span>sample<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>size_t<span class=\"token operator\">></span> strides<span class=\"token punctuation\">{</span><span class=\"token function\">size_t</span><span class=\"token punctuation\">(</span>v_info<span class=\"token punctuation\">.</span>stride<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">size_t</span><span class=\"token punctuation\">(</span>v_info<span class=\"token punctuation\">.</span>stride<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">size_t</span><span class=\"token punctuation\">(</span>v_info<span class=\"token punctuation\">.</span>stride<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\t\t\tbackPixels<span class=\"token punctuation\">.</span><span class=\"token function\">setFromAlignedPixels</span><span class=\"token punctuation\">(</span>mapinfo<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>strides<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t\tbackPixels<span class=\"token punctuation\">.</span><span class=\"token function\">setFromAlignedPixels</span><span class=\"token punctuation\">(</span>mapinfo<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>stride<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>copyPixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tbackPixels<span class=\"token punctuation\">.</span><span class=\"token function\">setFromExternalPixels</span><span class=\"token punctuation\">(</span>mapinfo<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\teventPixels<span class=\"token punctuation\">.</span><span class=\"token function\">setFromExternalPixels</span><span class=\"token punctuation\">(</span>mapinfo<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\tbackPixels<span class=\"token punctuation\">.</span><span class=\"token function\">setFromPixels</span><span class=\"token punctuation\">(</span>mapinfo<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\tbBackPixelsChanged<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\tmutex<span class=\"token punctuation\">.</span><span class=\"token function\">unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>stride <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span>prerollEvent<span class=\"token punctuation\">,</span>eventPixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tmutex<span class=\"token punctuation\">.</span><span class=\"token function\">unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>appsink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tappsink<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">on_stream_prepared</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\tGstVideoInfo v_info <span class=\"token operator\">=</span> <span class=\"token function\">getVideoInfo</span><span class=\"token punctuation\">(</span>sample<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>v_info<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>v_info<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span><span class=\"token function\">getOFFormat</span><span class=\"token punctuation\">(</span>v_info<span class=\"token punctuation\">.</span>finfo<span class=\"token operator\">-</span><span class=\"token operator\">></span>format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">gst_buffer_unmap</span><span class=\"token punctuation\">(</span>_buffer<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>mapinfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> GST_FLOW_OK<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==0</span>\nGstFlowReturn ofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">preroll_cb</span><span class=\"token punctuation\">(</span>shared_ptr<span class=\"token operator\">&lt;</span>GstBuffer<span class=\"token operator\">></span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tGstFlowReturn ret <span class=\"token operator\">=</span> <span class=\"token function\">process_buffer</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ret<span class=\"token operator\">==</span>GST_FLOW_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">preroll_cb</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\nGstFlowReturn ofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">preroll_cb</span><span class=\"token punctuation\">(</span>shared_ptr<span class=\"token operator\">&lt;</span>GstSample<span class=\"token operator\">></span> sample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tGstFlowReturn ret <span class=\"token operator\">=</span> <span class=\"token function\">process_sample</span><span class=\"token punctuation\">(</span>sample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ret<span class=\"token operator\">==</span>GST_FLOW_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">preroll_cb</span><span class=\"token punctuation\">(</span>sample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==0</span>\nGstFlowReturn ofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">buffer_cb</span><span class=\"token punctuation\">(</span>shared_ptr<span class=\"token operator\">&lt;</span>GstBuffer<span class=\"token operator\">></span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tGstFlowReturn ret <span class=\"token operator\">=</span> <span class=\"token function\">process_buffer</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ret<span class=\"token operator\">==</span>GST_FLOW_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">buffer_cb</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\nGstFlowReturn ofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">buffer_cb</span><span class=\"token punctuation\">(</span>shared_ptr<span class=\"token operator\">&lt;</span>GstSample<span class=\"token operator\">></span> sample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tGstFlowReturn ret <span class=\"token operator\">=</span> <span class=\"token function\">process_sample</span><span class=\"token punctuation\">(</span>sample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ret<span class=\"token operator\">==</span>GST_FLOW_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">buffer_cb</span><span class=\"token punctuation\">(</span>sample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token keyword\">void</span> ofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">eos_cb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">eos_cb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofEventArgs args<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span>eosEvent<span class=\"token punctuation\">,</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n","type":"source","static":true}}],"fetch":[]}