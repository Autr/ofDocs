{"data":[{"page":{"entry":{"name":"ofAVFoundationPlayer.h","filename":"ofAVFoundationPlayer.h","absolute":"/Users/gilbertsinnott/Code/openFrameworks/libs/openFrameworks/video/ofAVFoundationPlayer.h","path":"/openframeworks/video/ofAVFoundationPlayer_h","route":"/openframeworks/video/ofAVFoundationPlayer.h","dir":"../libs/openFrameworks/video","ext":"h","type":"source","id":356,"parent":354,"breadcrumbs":[354,195],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token comment\" spellcheck=\"true\">//  ofAVFoundationPlayer.h</span>\n<span class=\"token comment\" spellcheck=\"true\">//  Created by Lukasz Karluk on 06/07/14.</span>\n<span class=\"token comment\" spellcheck=\"true\">//\tMerged with code by Sam Kronick, James George and Elie Zananiri.</span>\n<span class=\"token comment\" spellcheck=\"true\">//</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofVideoBaseTypes.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofPixels.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofTexture.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofThread.h\"</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> __OBJC__</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">import</span> \"ofAVFoundationVideoPlayer.h\"</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined TARGET_OF_IOS || defined TARGET_OSX</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">import</span> &lt;CoreVideo/CoreVideo.h></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofAVFoundationPlayer</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofBaseVideoPlayer <span class=\"token punctuation\">{</span>\n\t\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t\n\t<span class=\"token function\">ofAVFoundationPlayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">~</span><span class=\"token function\">ofAVFoundationPlayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t   \n    <span class=\"token keyword\">bool</span> <span class=\"token function\">load</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">loadAsync</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofRectangle <span class=\"token operator\">&amp;</span> rect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">setPixelFormat</span><span class=\"token punctuation\">(</span>ofPixelFormat pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofPixelFormat <span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\n    <span class=\"token keyword\">void</span> <span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n    <span class=\"token keyword\">bool</span> <span class=\"token function\">isFrameNew</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> ofPixels <span class=\"token operator\">&amp;</span> <span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    ofPixels <span class=\"token operator\">&amp;</span> <span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ofTexture <span class=\"token operator\">*</span> <span class=\"token function\">getTexturePtr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">initTextureCache</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">killTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">killTextureCache</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n    <span class=\"token keyword\">float</span> <span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\n    <span class=\"token keyword\">bool</span> <span class=\"token function\">isPaused</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">bool</span> <span class=\"token function\">isLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">bool</span> <span class=\"token function\">isPlaying</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\n    <span class=\"token keyword\">float</span> <span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> <span class=\"token function\">getSpeed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> <span class=\"token function\">getDuration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">bool</span> <span class=\"token function\">getIsMovieDone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setPaused</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bPause<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> pct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setVolume</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> volume<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// 0..1</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setLoopState</span><span class=\"token punctuation\">(</span>ofLoopType state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setSpeed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setFrame</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> frame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">// frame 0 = first frame...</span>\n\t\n    <span class=\"token keyword\">int</span>\t<span class=\"token function\">getCurrentFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span>\t<span class=\"token function\">getTotalNumFrames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    ofLoopType <span class=\"token function\">getLoopState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\n    <span class=\"token keyword\">void</span> <span class=\"token function\">firstFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">nextFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">previousFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tofAVFoundationPlayer<span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ofAVFoundationPlayer other<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> __OBJC__</span>\n\tofAVFoundationVideoPlayer <span class=\"token operator\">*</span> <span class=\"token function\">getAVFoundationVideoPlayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> <span class=\"token function\">getAVFoundationVideoPlayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n    \n    <span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofAVFoundationPlayer::loadMovie() is deprecated, use load() instead.\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">loadMovie</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofAVFoundationPlayer::getPixelsRef() is deprecated, use getPixels() instead.\"</span><span class=\"token punctuation\">,</span> ofPixels <span class=\"token operator\">&amp;</span> <span class=\"token function\">getPixelsRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofAVFoundationPlayer::getPixelsRef() is deprecated, use getPixels() instead.\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofPixels <span class=\"token operator\">&amp;</span> <span class=\"token function\">getPixelsRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofAVFoundationPlayer::getTexture() is deprecated, use getTexturePtr() instead.\"</span><span class=\"token punctuation\">,</span> ofTexture <span class=\"token operator\">*</span> <span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t\n    <span class=\"token keyword\">bool</span> <span class=\"token function\">loadPlayer</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bAsync<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">disposePlayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">bool</span> <span class=\"token function\">isReady</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> __OBJC__</span>\n    ofAVFoundationVideoPlayer <span class=\"token operator\">*</span> videoPlayer<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n    <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> videoPlayer<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n    \n    <span class=\"token keyword\">bool</span> bFrameNew<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">bool</span> bResetPixels<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">bool</span> bUpdatePixels<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">bool</span> bUpdateTexture<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> bUseTextureCache<span class=\"token punctuation\">;</span>\n\t\n    ofPixels pixels<span class=\"token punctuation\">;</span>\n\tofPixelFormat pixelFormat<span class=\"token punctuation\">;</span>\n\tofTexture videoTexture<span class=\"token punctuation\">;</span>\n\t\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OF_IOS</span>\n\tCVOpenGLESTextureCacheRef _videoTextureCache <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\tCVOpenGLESTextureRef _videoTextureRef <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OSX</span>\n\tCVOpenGLTextureCacheRef _videoTextureCache <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\tCVOpenGLTextureRef _videoTextureRef <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n","type":"source","static":true}}],"fetch":[]}