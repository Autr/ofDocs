{"data":[{"page":{"entry":{"name":"ofQTKitGrabber.h","filename":"ofQTKitGrabber.h","absolute":"/Users/gilbertsinnott/Code/openFrameworks/libs/openFrameworks/video/ofQTKitGrabber.h","path":"/openframeworks/video/ofQTKitGrabber_h","route":"/openframeworks/video/ofQTKitGrabber.h","dir":"../libs/openFrameworks/video","ext":"h","type":"source","id":368,"parent":354,"breadcrumbs":[354,195],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">// Copyright (c) 2012 openFrameworks team</span>\n<span class=\"token comment\" spellcheck=\"true\">// openFrameworks is released under the MIT License. See libs/_Licence.txt</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofEvents.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofVideoBaseTypes.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofPixels.h\"</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_CAPTURE_QTKIT</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> !defined(MAC_OS_X_VERSION_10_12) || MAC_OS_X_VERSION_MAX_ALLOWED &lt; MAC_OS_X_VERSION_10_12</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//using this #ifdef lets this .h file be included in cpp files without throwing errors</span>\n<span class=\"token comment\" spellcheck=\"true\">//but when included in .m files it works correctly.  another useful trick for mixing oF/ObjC</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> __OBJC__</span>\n\t@<span class=\"token keyword\">class</span> <span class=\"token class-name\">QTKitVideoGrabber</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofVideoSavedEventArgs</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofEventArgs <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\tstd<span class=\"token operator\">::</span>string videoPath<span class=\"token punctuation\">;</span>\n\tofBaseVideoGrabber<span class=\"token operator\">*</span> grabber<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>string error<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//\"\" if there is no error</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofQTKitGrabber</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofBaseVideoGrabber <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token function\">ofQTKitGrabber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token operator\">~</span><span class=\"token function\">ofQTKitGrabber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t    <span class=\"token keyword\">bool</span>            <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t    <span class=\"token comment\" spellcheck=\"true\">//initGrabberNoPreview if you want to only use this grabber for recording</span>\n\t    <span class=\"token keyword\">bool</span>            <span class=\"token function\">initGrabberWithoutPreview</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span>            <span class=\"token function\">isFrameNew</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span>            <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span>           <span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span>           <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n        ofPixels<span class=\"token operator\">&amp;</span>\t    <span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> ofPixels<span class=\"token operator\">&amp;</span> <span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span>            <span class=\"token function\">setVerbose</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bTalkToMe<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tstd<span class=\"token operator\">::</span>vector <span class=\"token operator\">&lt;</span>ofVideoDevice<span class=\"token operator\">></span> <span class=\"token function\">listDevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector <span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token function\">listAudioDevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector <span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token function\">listVideoDevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">bool</span>            <span class=\"token function\">initRecording</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector <span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token function\">listVideoCodecs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector <span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token function\">listAudioCodecs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span>            <span class=\"token function\">setVideoCodec</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string videoCodecIDString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span>            <span class=\"token function\">setAudioCodec</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string audioCodecIDString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span>            <span class=\"token function\">setUseAudio</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bUseAudio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span>            <span class=\"token function\">startRecording</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string filePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span>            <span class=\"token function\">stopRecording</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span>            <span class=\"token function\">isRecording</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t    <span class=\"token keyword\">bool</span>            <span class=\"token function\">isRecordingReady</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">bool</span>            <span class=\"token function\">isReady</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">bool</span>            <span class=\"token function\">isInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">void</span>            <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">void</span>            <span class=\"token function\">setDeviceID</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> videoDeviceID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span>            <span class=\"token function\">setDeviceID</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string videoDeviceIDString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span>             <span class=\"token function\">getDeviceID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">void</span>            <span class=\"token function\">setVideoDeviceID</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> videoDeviceID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span>            <span class=\"token function\">setVideoDeviceID</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string videoDeviceIDString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span>             <span class=\"token function\">getVideoDeviceID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">void</span>            <span class=\"token function\">setAudioDeviceID</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> audioDeviceID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span>            <span class=\"token function\">setAudioDeviceID</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string audioDeviceIDString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span>             <span class=\"token function\">getAudioDeviceID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">void</span>            <span class=\"token function\">setDesiredFrameRate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> framerate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span>            <span class=\"token function\">setPixelFormat</span><span class=\"token punctuation\">(</span>ofPixelFormat pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tofPixelFormat   <span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t    <span class=\"token keyword\">bool</span>\t\t\t<span class=\"token function\">hasPreview</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span>            <span class=\"token function\">videoSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tofEvent<span class=\"token operator\">&lt;</span>ofVideoSavedEventArgs<span class=\"token operator\">></span> videoSavedEvent<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\n\t\t<span class=\"token keyword\">bool</span> <span class=\"token function\">confirmInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\tofPixelFormat pixelFormat<span class=\"token punctuation\">;</span>\n\t    ofPixels pixels<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">mutable</span> std<span class=\"token operator\">::</span>vector <span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token operator\">></span>  videoDeviceVec<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">mutable</span> std<span class=\"token operator\">::</span>vector <span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token operator\">></span>  audioDeviceVec<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">mutable</span> std<span class=\"token operator\">::</span>vector <span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token operator\">></span>  videoCodecsVec<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">mutable</span> std<span class=\"token operator\">::</span>vector <span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token operator\">></span>  audioCodecsVec<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">int</span> videoDeviceID<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> audioDeviceID<span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token operator\">::</span>string videoCodecIDString<span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token operator\">::</span>string audioCodecIDString<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">bool</span> isInited<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span> bUseAudio<span class=\"token punctuation\">;</span>\n\t    <span class=\"token keyword\">bool</span> bPreview<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> __OBJC__</span>\n\t\t\tQTKitVideoGrabber <span class=\"token operator\">*</span> grabber<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//only obj-c needs to know the type of this protected var</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t\t<span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> grabber<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n","type":"source","static":true}}],"fetch":[]}