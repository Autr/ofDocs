{"data":[{"page":{"entry":{"name":"gtx_matrix_transform_2d_functions","filename":"gtx_matrix_transform_2d_functions.markdown","absolute":"/Users/gilbertsinnott/Code/openFrameworks/ofSite/documentation/glm/gtx_matrix_transform_2d_functions.markdown","path":"/documentation/glm/gtx_matrix_transform_2d_functions","route":"/documentation/glm/gtx_matrix_transform_2d_functions.markdown","dir":"../ofSite/documentation/glm","ext":"markdown","type":"page","id":2052,"parent":1985,"breadcrumbs":[1985,1718],"siblings":[],"translations":{}},"description":{},"methods":[null,{"syntax":"glm::rotate(&m = P, angle)","name":"glm::rotate","returns":"glm::mat3","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat3 <span class=\"token operator\">&amp;</span>m<span class=\"token operator\">=</span>P<span class=\"token punctuation\">,</span> T angle","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Builds a rotation 3 * 3 matrix created from an angle.</p>\n<p><strong>Parameters:</strong></p>\n<p>m Input matrix multiplied by this translation matrix.</p>\n<p>angle Rotation angle expressed in radians if GLM_FORCE_RADIANS is defined or degrees otherwise.</p>\n","desc":""},{"syntax":"glm::scale(&m = P, &v = P)","name":"glm::scale","returns":"glm::mat3","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat3 <span class=\"token operator\">&amp;</span>m<span class=\"token operator\">=</span>P<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span>v<span class=\"token operator\">=</span>P","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Builds a scale 3 * 3 matrix created from a vector of 2 components.</p>\n<p><strong>Parameters:</strong></p>\n<p>m Input matrix multiplied by this translation matrix.</p>\n<p>v Coordinates of a scale vector.</p>\n","desc":""},{"syntax":"glm::shearX(&m = P, y)","name":"glm::shearX","returns":"glm::mat3","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat3 <span class=\"token operator\">&amp;</span>m<span class=\"token operator\">=</span>P<span class=\"token punctuation\">,</span> T y","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Builds an horizontal (parallel to the x axis) shear 3 * 3 matrix.</p>\n<p><strong>Parameters:</strong></p>\n<p>m Input matrix multiplied by this translation matrix.</p>\n<p>y Shear factor.</p>\n","desc":""},{"syntax":"glm::shearY(&m = P, x)","name":"glm::shearY","returns":"glm::mat3","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat3 <span class=\"token operator\">&amp;</span>m<span class=\"token operator\">=</span>P<span class=\"token punctuation\">,</span> T x","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Builds a vertical (parallel to the y axis) shear 3 * 3 matrix.</p>\n<p><strong>Parameters:</strong></p>\n<p>m Input matrix multiplied by this translation matrix.</p>\n<p>x Shear factor.</p>\n","desc":""},{"syntax":"glm::translate(&m = P, &v = P)","name":"glm::translate","returns":"glm::mat3","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat3 <span class=\"token operator\">&amp;</span>m<span class=\"token operator\">=</span>P<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span>v<span class=\"token operator\">=</span>P","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Builds a translation 3 * 3 matrix created from a vector of 2 components.</p>\n<p><strong>Parameters:</strong></p>\n<p>m Input matrix multiplied by this translation matrix.</p>\n<p>v Coordinates of a translation vector.</p>\n","desc":""},{}],"document":"<p>#functions</p>\n<p>&lt;!--\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>##Description</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###glm::mat3 glm::rotate(&amp;m = P, angle)</p>\n<p>&lt;!--\n<em>syntax: glm::rotate(&amp;m = P, angle)</em>\n<em>name: glm::rotate</em>\n<em>returns: glm::mat3</em>\n_returns_description: _\n<em>parameters: const glm::mat3 &amp;m=P, T angle</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Builds a rotation 3 * 3 matrix created from an angle.</p>\n<p><strong>Parameters:</strong></p>\n<p>m Input matrix multiplied by this translation matrix.</p>\n<p>angle Rotation angle expressed in radians if GLM_FORCE_RADIANS is defined or degrees otherwise.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###glm::mat3 glm::scale(&amp;m = P, &amp;v = P)</p>\n<p>&lt;!--\n<em>syntax: glm::scale(&amp;m = P, &amp;v = P)</em>\n<em>name: glm::scale</em>\n<em>returns: glm::mat3</em>\n_returns_description: _\n<em>parameters: const glm::mat3 &amp;m=P, const glm::vec2 &amp;v=P</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Builds a scale 3 * 3 matrix created from a vector of 2 components.</p>\n<p><strong>Parameters:</strong></p>\n<p>m Input matrix multiplied by this translation matrix.</p>\n<p>v Coordinates of a scale vector.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###glm::mat3 glm::shearX(&amp;m = P, y)</p>\n<p>&lt;!--\n<em>syntax: glm::shearX(&amp;m = P, y)</em>\n<em>name: glm::shearX</em>\n<em>returns: glm::mat3</em>\n_returns_description: _\n<em>parameters: const glm::mat3 &amp;m=P, T y</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Builds an horizontal (parallel to the x axis) shear 3 * 3 matrix.</p>\n<p><strong>Parameters:</strong></p>\n<p>m Input matrix multiplied by this translation matrix.</p>\n<p>y Shear factor.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###glm::mat3 glm::shearY(&amp;m = P, x)</p>\n<p>&lt;!--\n<em>syntax: glm::shearY(&amp;m = P, x)</em>\n<em>name: glm::shearY</em>\n<em>returns: glm::mat3</em>\n_returns_description: _\n<em>parameters: const glm::mat3 &amp;m=P, T x</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Builds a vertical (parallel to the y axis) shear 3 * 3 matrix.</p>\n<p><strong>Parameters:</strong></p>\n<p>m Input matrix multiplied by this translation matrix.</p>\n<p>x Shear factor.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###glm::mat3 glm::translate(&amp;m = P, &amp;v = P)</p>\n<p>&lt;!--\n<em>syntax: glm::translate(&amp;m = P, &amp;v = P)</em>\n<em>name: glm::translate</em>\n<em>returns: glm::mat3</em>\n_returns_description: _\n<em>parameters: const glm::mat3 &amp;m=P, const glm::vec2 &amp;v=P</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Builds a translation 3 * 3 matrix created from a vector of 2 components.</p>\n<p><strong>Parameters:</strong></p>\n<p>m Input matrix multiplied by this translation matrix.</p>\n<p>v Coordinates of a translation vector.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n","raw":"#functions\n\n\n<!--\n_visible: True_\n_advanced: False_\n-->\n\n##Description\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::mat3 glm::rotate(&m = P, angle)\n\n<!--\n_syntax: glm::rotate(&m = P, angle)_\n_name: glm::rotate_\n_returns: glm::mat3_\n_returns_description: _\n_parameters: const glm::mat3 &m=P, T angle_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nBuilds a rotation 3 * 3 matrix created from an angle.\n\n\n**Parameters:**\n\nm Input matrix multiplied by this translation matrix.\n\nangle Rotation angle expressed in radians if GLM_FORCE_RADIANS is defined or degrees otherwise.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::mat3 glm::scale(&m = P, &v = P)\n\n<!--\n_syntax: glm::scale(&m = P, &v = P)_\n_name: glm::scale_\n_returns: glm::mat3_\n_returns_description: _\n_parameters: const glm::mat3 &m=P, const glm::vec2 &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nBuilds a scale 3 * 3 matrix created from a vector of 2 components.\n\n\n**Parameters:**\n\nm Input matrix multiplied by this translation matrix.\n\nv Coordinates of a scale vector.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::mat3 glm::shearX(&m = P, y)\n\n<!--\n_syntax: glm::shearX(&m = P, y)_\n_name: glm::shearX_\n_returns: glm::mat3_\n_returns_description: _\n_parameters: const glm::mat3 &m=P, T y_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nBuilds an horizontal (parallel to the x axis) shear 3 * 3 matrix.\n\n\n**Parameters:**\n\nm Input matrix multiplied by this translation matrix.\n\ny Shear factor.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::mat3 glm::shearY(&m = P, x)\n\n<!--\n_syntax: glm::shearY(&m = P, x)_\n_name: glm::shearY_\n_returns: glm::mat3_\n_returns_description: _\n_parameters: const glm::mat3 &m=P, T x_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nBuilds a vertical (parallel to the y axis) shear 3 * 3 matrix.\n\n\n**Parameters:**\n\nm Input matrix multiplied by this translation matrix.\n\nx Shear factor.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::mat3 glm::translate(&m = P, &v = P)\n\n<!--\n_syntax: glm::translate(&m = P, &v = P)_\n_name: glm::translate_\n_returns: glm::mat3_\n_returns_description: _\n_parameters: const glm::mat3 &m=P, const glm::vec2 &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nBuilds a translation 3 * 3 matrix created from a vector of 2 components.\n\n\n**Parameters:**\n\nm Input matrix multiplied by this translation matrix.\n\nv Coordinates of a translation vector.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page","static":true}}],"fetch":[]}