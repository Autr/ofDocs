{"data":[{"page":{"entry":{"name":"of3dUtils_functions","filename":"of3dUtils_functions.markdown","absolute":"/Users/gilbertsinnott/Code/openFrameworks/ofSite/documentation/3d/of3dUtils_functions.markdown","path":"/documentation/3d/of3dUtils_functions","route":"/documentation/3d/of3dUtils_functions.markdown","dir":"../ofSite/documentation/3d","ext":"markdown","type":"page","id":1729,"parent":1717,"breadcrumbs":[1717,1718],"siblings":[],"translations":{}},"description":{},"methods":[null,{"syntax":"ofDrawArrow(&start, &end, headSize = 0.05f)","name":"ofDrawArrow","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span>start<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span>end<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> headSize<span class=\"token operator\">=</span><span class=\"token number\">0.05f</span>","version_started":null,"version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Draws an arrow with the current color.</p>\n<p>This function draws an arrow from a start (tail) point to an end (head)\npoint, with a conical arrowhead at the end point. The arrow is drawn in the\ncurrent color (e.g. set with ofSetColor).</p>\n<pre><code>    <span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ofVec3f <span class=\"token function\">arrowTailPoint</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ofVec3f <span class=\"token function\">arrowHeadPoint</span> <span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">ofDrawArrow</span><span class=\"token punctuation\">(</span>arrowTailPoint<span class=\"token punctuation\">,</span> arrowHeadPoint<span class=\"token punctuation\">,</span> <span class=\"token number\">20.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><strong>Parameters:</strong></p>\n<p>start The start point (tail) of the arrow, expressed as an ofVec3f.</p>\n<p>end The end point (head) of the arrow, expressed as an ofVec3f.</p>\n<p>headSize The size of the arrowhead.</p>\n","desc":""},{"syntax":"ofDrawAxis(size)","name":"ofDrawAxis","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> size","version_started":null,"version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p><strong>Parameters:</strong></p>\n<p>size The size at which to draw the axes.</p>\n","desc":""},{"syntax":"ofDrawGrid(stepSize = 1.25f, numberOfSteps, labels = false, x = true, y = true, z = true)","name":"ofDrawGrid","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> stepSize<span class=\"token operator\">=</span><span class=\"token number\">1.25f</span><span class=\"token punctuation\">,</span> size_t numberOfSteps<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> labels<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> x<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> y<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> z<span class=\"token operator\">=</span><span class=\"token boolean\">true</span>","version_started":null,"version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Draws grid planes representing the current reference frame.</p>\n<p>This function draws a set of three double-ended grid planes centered at the\norigin. Parameters allow each of the grid planes (yz,xz, and xy) to be\nturned on or off. Optionally, the function can include white numeric labels\nfor grid subdivisions. (Numeric labels are drawn using ofDrawBitmapString\ninternally.)</p>\n<p>The yz plane (at x=0) is drawn in red.\nThe xz plane (at y=0) is drawn in green.\nThe xy plane (at z=0) is drawn in blue.</p>\n<p><strong>Parameters:</strong></p>\n<p>stepSize distance between (parallel) lines on the grid</p>\n<p>numberOfSteps number of lines to draw on each side of the central axis of the grid. A number of 8 will draw 8 lines on each side of the central axis, plus one line at the central axis.</p>\n<p>labels Whether or not labels are drawn.</p>\n<p>x Whether or not the yz plane (at x=0) is drawn.</p>\n<p>y Whether or not the xz plane (at y=0) is drawn.</p>\n<p>z Whether or not the xy plane (at z=0) is drawn.</p>\n","desc":""},{"syntax":"ofDrawGridPlane(stepSize = 1.25f, numberOfSteps, labels = false)","name":"ofDrawGridPlane","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> stepSize<span class=\"token operator\">=</span><span class=\"token number\">1.25f</span><span class=\"token punctuation\">,</span> size_t numberOfSteps<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> labels<span class=\"token operator\">=</span><span class=\"token boolean\">false</span>","version_started":null,"version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Draws the YZ grid plane representing the current reference frame.</p>\n<p>This function draws the YZ grid plane, at x=0, in a double-ended manner\ncentered at the origin. Optionally, the function can include white numeric\nlabels for grid subdivisions. (Numeric labels are drawn using\nofDrawBitmapString internally.) The grid is drawn with the current color\n(i.e. set with ofSetColor).</p>\n<p><strong>Parameters:</strong></p>\n<p>stepSize distance between (parallel) lines on the grid</p>\n<p>numberOfSteps number of lines to draw on each side of the central axis of the grid. A number of 8 will draw 8 lines on each side of the central axis, plus one line at the central axis.</p>\n<p>labels Whether or not labels are drawn.</p>\n","desc":""},{"syntax":"ofDrawRotationAxes(radius, stripWidth = 10, circleRes = 60)","name":"ofDrawRotationAxes","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> stripWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> circleRes<span class=\"token operator\">=</span><span class=\"token number\">60</span>","version_started":null,"version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>This function renders a set of 3 axis-aligned circular bands, centered at the origin.</p>\n<p><strong>Parameters:</strong></p>\n<p>radius The radius of the circular bands.</p>\n<p>stripWidth The width of the circular bands. The default is 10 units.</p>\n<p>circleRes The resolution of the circular bands. The default is 60 segments.</p>\n","desc":""},{}],"document":"<p>#functions</p>\n<p>&lt;!--\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>##Description</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void ofDrawArrow(&amp;start, &amp;end, headSize = 0.05f)</p>\n<p>&lt;!--\n<em>syntax: ofDrawArrow(&amp;start, &amp;end, headSize = 0.05f)</em>\n<em>name: ofDrawArrow</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const glm::vec3 &amp;start, const glm::vec3 &amp;end, float headSize=0.05f</em>\n_version_started: _\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Draws an arrow with the current color.</p>\n<p>This function draws an arrow from a start (tail) point to an end (head)\npoint, with a conical arrowhead at the end point. The arrow is drawn in the\ncurrent color (e.g. set with ofSetColor).</p>\n<pre><code>    <span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ofVec3f <span class=\"token function\">arrowTailPoint</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ofVec3f <span class=\"token function\">arrowHeadPoint</span> <span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">ofDrawArrow</span><span class=\"token punctuation\">(</span>arrowTailPoint<span class=\"token punctuation\">,</span> arrowHeadPoint<span class=\"token punctuation\">,</span> <span class=\"token number\">20.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p><strong>Parameters:</strong></p>\n<p>start The start point (tail) of the arrow, expressed as an ofVec3f.</p>\n<p>end The end point (head) of the arrow, expressed as an ofVec3f.</p>\n<p>headSize The size of the arrowhead.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void ofDrawAxis(size)</p>\n<p>&lt;!--\n<em>syntax: ofDrawAxis(size)</em>\n<em>name: ofDrawAxis</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float size</em>\n_version_started: _\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p><strong>Parameters:</strong></p>\n<p>size The size at which to draw the axes.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void ofDrawGrid(stepSize = 1.25f, numberOfSteps, labels = false, x = true, y = true, z = true)</p>\n<p>&lt;!--\n<em>syntax: ofDrawGrid(stepSize = 1.25f, numberOfSteps, labels = false, x = true, y = true, z = true)</em>\n<em>name: ofDrawGrid</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float stepSize=1.25f, size_t numberOfSteps, bool labels=false, bool x=true, bool y=true, bool z=true</em>\n_version_started: _\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Draws grid planes representing the current reference frame.</p>\n<p>This function draws a set of three double-ended grid planes centered at the\norigin. Parameters allow each of the grid planes (yz,xz, and xy) to be\nturned on or off. Optionally, the function can include white numeric labels\nfor grid subdivisions. (Numeric labels are drawn using ofDrawBitmapString\ninternally.)</p>\n<p>The yz plane (at x=0) is drawn in red.\nThe xz plane (at y=0) is drawn in green.\nThe xy plane (at z=0) is drawn in blue.</p>\n<p><strong>Parameters:</strong></p>\n<p>stepSize distance between (parallel) lines on the grid</p>\n<p>numberOfSteps number of lines to draw on each side of the central axis of the grid. A number of 8 will draw 8 lines on each side of the central axis, plus one line at the central axis.</p>\n<p>labels Whether or not labels are drawn.</p>\n<p>x Whether or not the yz plane (at x=0) is drawn.</p>\n<p>y Whether or not the xz plane (at y=0) is drawn.</p>\n<p>z Whether or not the xy plane (at z=0) is drawn.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void ofDrawGridPlane(stepSize = 1.25f, numberOfSteps, labels = false)</p>\n<p>&lt;!--\n<em>syntax: ofDrawGridPlane(stepSize = 1.25f, numberOfSteps, labels = false)</em>\n<em>name: ofDrawGridPlane</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float stepSize=1.25f, size_t numberOfSteps, bool labels=false</em>\n_version_started: _\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Draws the YZ grid plane representing the current reference frame.</p>\n<p>This function draws the YZ grid plane, at x=0, in a double-ended manner\ncentered at the origin. Optionally, the function can include white numeric\nlabels for grid subdivisions. (Numeric labels are drawn using\nofDrawBitmapString internally.) The grid is drawn with the current color\n(i.e. set with ofSetColor).</p>\n<p><strong>Parameters:</strong></p>\n<p>stepSize distance between (parallel) lines on the grid</p>\n<p>numberOfSteps number of lines to draw on each side of the central axis of the grid. A number of 8 will draw 8 lines on each side of the central axis, plus one line at the central axis.</p>\n<p>labels Whether or not labels are drawn.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void ofDrawRotationAxes(radius, stripWidth = 10, circleRes = 60)</p>\n<p>&lt;!--\n<em>syntax: ofDrawRotationAxes(radius, stripWidth = 10, circleRes = 60)</em>\n<em>name: ofDrawRotationAxes</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float radius, float stripWidth, int circleRes=60</em>\n_version_started: _\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>This function renders a set of 3 axis-aligned circular bands, centered at the origin.</p>\n<p><strong>Parameters:</strong></p>\n<p>radius The radius of the circular bands.</p>\n<p>stripWidth The width of the circular bands. The default is 10 units.</p>\n<p>circleRes The resolution of the circular bands. The default is 60 segments.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n","raw":"#functions\n\n\n<!--\n_visible: True_\n_advanced: False_\n-->\n\n##Description\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void ofDrawArrow(&start, &end, headSize = 0.05f)\n\n<!--\n_syntax: ofDrawArrow(&start, &end, headSize = 0.05f)_\n_name: ofDrawArrow_\n_returns: void_\n_returns_description: _\n_parameters: const glm::vec3 &start, const glm::vec3 &end, float headSize=0.05f_\n_version_started: _\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nDraws an arrow with the current color.\n\nThis function draws an arrow from a start (tail) point to an end (head)\npoint, with a conical arrowhead at the end point. The arrow is drawn in the\ncurrent color (e.g. set with ofSetColor).\n\n~~~~{.cpp}\n    ofSetColor(0,0,0);\n    ofVec3f arrowTailPoint (0,0,0);\n    ofVec3f arrowHeadPoint (100, 150,0);\n    ofDrawArrow(arrowTailPoint, arrowHeadPoint, 20.0);\n~~~~\n\n\n**Parameters:**\n\nstart The start point (tail) of the arrow, expressed as an ofVec3f.\n\nend The end point (head) of the arrow, expressed as an ofVec3f.\n\nheadSize The size of the arrowhead.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void ofDrawAxis(size)\n\n<!--\n_syntax: ofDrawAxis(size)_\n_name: ofDrawAxis_\n_returns: void_\n_returns_description: _\n_parameters: float size_\n_version_started: _\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n**Parameters:**\n\nsize The size at which to draw the axes.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void ofDrawGrid(stepSize = 1.25f, numberOfSteps, labels = false, x = true, y = true, z = true)\n\n<!--\n_syntax: ofDrawGrid(stepSize = 1.25f, numberOfSteps, labels = false, x = true, y = true, z = true)_\n_name: ofDrawGrid_\n_returns: void_\n_returns_description: _\n_parameters: float stepSize=1.25f, size_t numberOfSteps, bool labels=false, bool x=true, bool y=true, bool z=true_\n_version_started: _\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nDraws grid planes representing the current reference frame.\n\nThis function draws a set of three double-ended grid planes centered at the\norigin. Parameters allow each of the grid planes (yz,xz, and xy) to be\nturned on or off. Optionally, the function can include white numeric labels\nfor grid subdivisions. (Numeric labels are drawn using ofDrawBitmapString\ninternally.)\n\nThe yz plane (at x=0) is drawn in red.\nThe xz plane (at y=0) is drawn in green.\nThe xy plane (at z=0) is drawn in blue.\n\n\n**Parameters:**\n\nstepSize distance between (parallel) lines on the grid\n\nnumberOfSteps number of lines to draw on each side of the central axis of the grid. A number of 8 will draw 8 lines on each side of the central axis, plus one line at the central axis.\n\nlabels Whether or not labels are drawn.\n\nx Whether or not the yz plane (at x=0) is drawn.\n\ny Whether or not the xz plane (at y=0) is drawn.\n\nz Whether or not the xy plane (at z=0) is drawn.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void ofDrawGridPlane(stepSize = 1.25f, numberOfSteps, labels = false)\n\n<!--\n_syntax: ofDrawGridPlane(stepSize = 1.25f, numberOfSteps, labels = false)_\n_name: ofDrawGridPlane_\n_returns: void_\n_returns_description: _\n_parameters: float stepSize=1.25f, size_t numberOfSteps, bool labels=false_\n_version_started: _\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nDraws the YZ grid plane representing the current reference frame.\n\nThis function draws the YZ grid plane, at x=0, in a double-ended manner\ncentered at the origin. Optionally, the function can include white numeric\nlabels for grid subdivisions. (Numeric labels are drawn using\nofDrawBitmapString internally.) The grid is drawn with the current color\n(i.e. set with ofSetColor).\n\n\n**Parameters:**\n\nstepSize distance between (parallel) lines on the grid\n\nnumberOfSteps number of lines to draw on each side of the central axis of the grid. A number of 8 will draw 8 lines on each side of the central axis, plus one line at the central axis.\n\nlabels Whether or not labels are drawn.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void ofDrawRotationAxes(radius, stripWidth = 10, circleRes = 60)\n\n<!--\n_syntax: ofDrawRotationAxes(radius, stripWidth = 10, circleRes = 60)_\n_name: ofDrawRotationAxes_\n_returns: void_\n_returns_description: _\n_parameters: float radius, float stripWidth, int circleRes=60_\n_version_started: _\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nThis function renders a set of 3 axis-aligned circular bands, centered at the origin.\n\n\n**Parameters:**\n\nradius The radius of the circular bands.\n\nstripWidth The width of the circular bands. The default is 10 units.\n\ncircleRes The resolution of the circular bands. The default is 60 segments.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page","static":true}}],"fetch":[]}