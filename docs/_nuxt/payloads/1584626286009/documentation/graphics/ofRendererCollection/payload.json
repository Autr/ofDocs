{"data":[{"page":{"entry":{"name":"ofRendererCollection","filename":"ofRendererCollection.markdown","absolute":"/Users/gilbertsinnott/Code/openFrameworks/ofSite/documentation/graphics/ofRendererCollection.markdown","path":"/documentation/graphics/ofRendererCollection","route":"/documentation/graphics/ofRendererCollection.markdown","dir":"../ofSite/documentation/graphics","ext":"markdown","type":"page","id":2108,"parent":2075,"breadcrumbs":[2075,1718],"siblings":[],"translations":{}},"description":{"short":"","full":"<h1></h1>\n"},"config":{"visible":"True","advanced":"True","istemplated":"False","extends":"ofBaseRenderer"},"methods":[{"syntax":"background(&c)","name":"background","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span>c","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"background(brightness)","name":"background","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> brightness","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"background(hexColor, _a = 255.0f)","name":"background","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> hexColor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> _a<span class=\"token operator\">=</span><span class=\"token number\">255.0f</span>","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"background(r, g, b, a = 255)","name":"background","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> a<span class=\"token operator\">=</span><span class=\"token number\">255</span>","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"bind(&camera, &viewport)","name":"bind","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofCamera <span class=\"token operator\">&amp;</span>camera<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofRectangle <span class=\"token operator\">&amp;</span>viewport","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"clear()","name":"clear","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"clear(brightness, a)","name":"clear","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> brightness<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"clear(r, g, b, a)","name":"clear","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"clearAlpha()","name":"clearAlpha","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"disableAntiAliasing()","name":"disableAntiAliasing","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"disablePointSprites()","name":"disablePointSprites","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"draw(&img, x, y, z, w, h, sx, sy, sw, sh)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofImage <span class=\"token operator\">&amp;</span>img<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sh","access":"public","version_started":"0071","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"draw(&img, x, y, z, w, h, sx, sy, sw, sh)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofFloatImage <span class=\"token operator\">&amp;</span>img<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sh","access":"public","version_started":"0071","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"draw(&img, x, y, z, w, h, sx, sy, sw, sh)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofShortImage <span class=\"token operator\">&amp;</span>img<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sh","access":"public","version_started":"0071","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"draw(&model, renderType)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> of3dPrimitive <span class=\"token operator\">&amp;</span>model<span class=\"token punctuation\">,</span> ofPolyRenderMode renderType","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"draw(&node)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofNode <span class=\"token operator\">&amp;</span>node","access":"public","version_started":"0071","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"draw(&poly)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofPolyline <span class=\"token operator\">&amp;</span>poly","access":"public","version_started":"0071","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"draw(&shape)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofPath <span class=\"token operator\">&amp;</span>shape","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"draw(&vertexData, mode, useColors, useTextures, useNormals)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofMesh <span class=\"token operator\">&amp;</span>vertexData<span class=\"token punctuation\">,</span> ofPolyRenderMode mode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> useColors<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> useTextures<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> useNormals","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"draw(&video, x, y, w, h)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofBaseVideoDraws <span class=\"token operator\">&amp;</span>video<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"drawCircle(x, y, z, radius)","name":"drawCircle","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"drawEllipse(x, y, z, width, height)","name":"drawEllipse","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"drawLine(x1, y1, z1, x2, y2, z2)","name":"drawLine","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z2","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"drawRectangle(x, y, z, w, h)","name":"drawRectangle","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"drawString(&font, text, x, y)","name":"drawString","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofTrueTypeFont <span class=\"token operator\">&amp;</span>font<span class=\"token punctuation\">,</span> string text<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"drawString(text, x, y, z)","name":"drawString","returns":"void","returns_description":null,"parameters":"string text<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"drawTriangle(x1, y1, z1, x2, y2, z2, x3, y3, z3)","name":"drawTriangle","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z3","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"enableAntiAliasing()","name":"enableAntiAliasing","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"enablePointSprites()","name":"enablePointSprites","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"finishRender()","name":"finishRender","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"get3dGraphics()","name":"get3dGraphics","returns":"const of3dGraphics &","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"get3dGraphics()","name":"get3dGraphics","returns":"of3dGraphics &","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getBackgroundAuto()","name":"getBackgroundAuto","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getBackgroundColor()","name":"getBackgroundColor","returns":"ofColor","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getCoordHandedness()","name":"getCoordHandedness","returns":"ofHandednessType","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getCurrentMatrix(matrixMode_)","name":"getCurrentMatrix","returns":"glm::mat4","returns_description":null,"parameters":"ofMatrixMode matrixMode_","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getCurrentNormalMatrix()","name":"getCurrentNormalMatrix","returns":"glm::mat4","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getCurrentOrientationMatrix()","name":"getCurrentOrientationMatrix","returns":"glm::mat4","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getCurrentViewMatrix()","name":"getCurrentViewMatrix","returns":"glm::mat4","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getCurrentViewport()","name":"getCurrentViewport","returns":"ofRectangle","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getFillMode()","name":"getFillMode","returns":"ofFillFlag","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"short":"","desc":""},{"syntax":"getNativeViewport()","name":"getNativeViewport","returns":"ofRectangle","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getPath()","name":"getPath","returns":"ofPath &","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getRectMode()","name":"getRectMode","returns":"ofRectMode","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getStyle()","name":"getStyle","returns":"ofStyle","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getType()","name":"getType","returns":"const string &","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getViewportHeight()","name":"getViewportHeight","returns":"int","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getViewportWidth()","name":"getViewportWidth","returns":"int","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"isVFlipped()","name":"isVFlipped","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"loadIdentityMatrix()","name":"loadIdentityMatrix","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0072","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"loadMatrix(&m)","name":"loadMatrix","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span>m","access":"public","version_started":"0072","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"loadMatrix(*m)","name":"loadMatrix","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>m","access":"public","version_started":"0072","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"loadViewMatrix(&m)","name":"loadViewMatrix","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span>m","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"matrixMode(mode)","name":"matrixMode","returns":"void","returns_description":null,"parameters":"ofMatrixMode mode","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"multMatrix(&m)","name":"multMatrix","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span>m","access":"public","version_started":"0072","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"multMatrix(*m)","name":"multMatrix","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>m","access":"public","version_started":"0072","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"multViewMatrix(&m)","name":"multViewMatrix","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span>m","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"ofRendererCollection()","name":"ofRendererCollection","returns":null,"returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"popMatrix()","name":"popMatrix","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"popStyle()","name":"popStyle","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"popView()","name":"popView","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"pushMatrix()","name":"pushMatrix","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"pushStyle()","name":"pushStyle","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"pushView()","name":"pushView","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"rendersPathPrimitives()","name":"rendersPathPrimitives","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"rotateDeg(degrees)","name":"rotateDeg","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> degrees","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"rotateDeg(degrees, vecX, vecY, vecZ)","name":"rotateDeg","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecY<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecZ","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"rotateRad(radians)","name":"rotateRad","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> radians","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"rotateRad(radians, vecX, vecY, vecZ)","name":"rotateRad","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> radians<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecY<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecZ","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"rotateXDeg(degrees)","name":"rotateXDeg","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> degrees","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"rotateXRad(radians)","name":"rotateXRad","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> radians","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"rotateYDeg(degrees)","name":"rotateYDeg","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> degrees","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"rotateYRad(radians)","name":"rotateYRad","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> radians","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"rotateZDeg(degrees)","name":"rotateZDeg","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> degrees","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"rotateZRad(radians)","name":"rotateZRad","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> radians","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"scale(xAmnt, yAmnt, zAmnt)","name":"scale","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> xAmnt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> yAmnt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> zAmnt","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setBackgroundAuto(bManual)","name":"setBackgroundAuto","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">bool</span> bManual","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setBackgroundColor(&color)","name":"setBackgroundColor","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span>color","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setBitmapTextMode(mode)","name":"setBitmapTextMode","returns":"void","returns_description":null,"parameters":"ofDrawBitmapMode mode","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setBlendMode(blendMode)","name":"setBlendMode","returns":"void","returns_description":null,"parameters":"ofBlendMode blendMode","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setCircleResolution(res)","name":"setCircleResolution","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> res","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setColor(&color)","name":"setColor","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span>color","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setColor(&color, _a)","name":"setColor","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span>color<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> _a","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setColor(gray)","name":"setColor","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> gray","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setColor(r, g, b)","name":"setColor","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setColor(r, g, b, a)","name":"setColor","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> a","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setCoordHandedness(handedness)","name":"setCoordHandedness","returns":"void","returns_description":null,"parameters":"ofHandednessType handedness","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setCurveResolution(res)","name":"setCurveResolution","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> res","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setDepthTest(depthTest)","name":"setDepthTest","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">bool</span> depthTest","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setFillMode(fill)","name":"setFillMode","returns":"void","returns_description":null,"parameters":"ofFillFlag fill","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setHexColor(hexColor)","name":"setHexColor","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> hexColor","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setLineSmoothing(smooth)","name":"setLineSmoothing","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">bool</span> smooth","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setLineWidth(lineWidth)","name":"setLineWidth","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> lineWidth","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setOrientation(orientation, vflip)","name":"setOrientation","returns":"void","returns_description":null,"parameters":"ofOrientation orientation<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> vflip","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setPolyMode(mode)","name":"setPolyMode","returns":"void","returns_description":null,"parameters":"ofPolyWindingMode mode","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setRectMode(mode)","name":"setRectMode","returns":"void","returns_description":null,"parameters":"ofRectMode mode","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setStyle(&style)","name":"setStyle","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofStyle <span class=\"token operator\">&amp;</span>style","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setupGraphicDefaults()","name":"setupGraphicDefaults","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setupScreen()","name":"setupScreen","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setupScreenOrtho(width, height, nearDist, farDist)","name":"setupScreenOrtho","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> nearDist<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> farDist","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setupScreenPerspective(width, height, fov, nearDist, farDist)","name":"setupScreenPerspective","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> fov<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> nearDist<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> farDist","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"startRender()","name":"startRender","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"translate(&p)","name":"translate","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span>p","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"translate(x, y, z)","name":"translate","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"unbind(&camera)","name":"unbind","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofCamera <span class=\"token operator\">&amp;</span>camera","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"viewport(viewport)","name":"viewport","returns":"void","returns_description":null,"parameters":"ofRectangle viewport","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"viewport(x, y, width, height, vflip = true)","name":"viewport","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> vflip<span class=\"token operator\">=</span><span class=\"token boolean\">true</span>","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"~ofRendererCollection()","name":"~ofRendererCollection","returns":null,"returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"name":"TYPE","type":"const string","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"graphics3d","type":"of3dGraphics","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{"name":"path","type":"ofPath","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{"name":"renderers","type":"ofPtr","access":"public","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{}],"document":"<p>#class ofRendererCollection</p>\n<p>&lt;!--\n<em>visible: True</em>\n<em>advanced: True</em>\n<em>istemplated: False</em>\n<em>extends: ofBaseRenderer</em>\n--&gt;</p>\n<p>##InlineDescription</p>\n<p>##Description</p>\n<p>##Methods</p>\n<p>###void background(&amp;c)</p>\n<p>&lt;!--\n<em>syntax: background(&amp;c)</em>\n<em>name: background</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofColor &amp;c</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void background(brightness)</p>\n<p>&lt;!--\n<em>syntax: background(brightness)</em>\n<em>name: background</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float brightness</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void background(hexColor, _a = 255.0f)</p>\n<p>&lt;!--\n_syntax: background(hexColor, <em>a = 255.0f)</em>\n<em>name: background</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: int hexColor, float <em>a=255.0f</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void background(r, g, b, a = 255)</p>\n<p>&lt;!--\n<em>syntax: background(r, g, b, a = 255)</em>\n<em>name: background</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: int r, int g, int b, int a=255</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void bind(&amp;camera, &amp;viewport)</p>\n<p>&lt;!--\n<em>syntax: bind(&amp;camera, &amp;viewport)</em>\n<em>name: bind</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofCamera &amp;camera, const ofRectangle &amp;viewport</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void clear()</p>\n<p>&lt;!--\n<em>syntax: clear()</em>\n<em>name: clear</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void clear(brightness, a)</p>\n<p>&lt;!--\n<em>syntax: clear(brightness, a)</em>\n<em>name: clear</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float brightness, float a</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void clear(r, g, b, a)</p>\n<p>&lt;!--\n<em>syntax: clear(r, g, b, a)</em>\n<em>name: clear</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float r, float g, float b, float a</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void clearAlpha()</p>\n<p>&lt;!--\n<em>syntax: clearAlpha()</em>\n<em>name: clearAlpha</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void disableAntiAliasing()</p>\n<p>&lt;!--\n<em>syntax: disableAntiAliasing()</em>\n<em>name: disableAntiAliasing</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0073</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void disablePointSprites()</p>\n<p>&lt;!--\n<em>syntax: disablePointSprites()</em>\n<em>name: disablePointSprites</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void draw(&amp;img, x, y, z, w, h, sx, sy, sw, sh)</p>\n<p>&lt;!--\n<em>syntax: draw(&amp;img, x, y, z, w, h, sx, sy, sw, sh)</em>\n<em>name: draw</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofImage &amp;img, float x, float y, float z, float w, float h, float sx, float sy, float sw, float sh</em>\n<em>access: public</em>\n<em>version_started: 0071</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void draw(&amp;img, x, y, z, w, h, sx, sy, sw, sh)</p>\n<p>&lt;!--\n<em>syntax: draw(&amp;img, x, y, z, w, h, sx, sy, sw, sh)</em>\n<em>name: draw</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofFloatImage &amp;img, float x, float y, float z, float w, float h, float sx, float sy, float sw, float sh</em>\n<em>access: public</em>\n<em>version_started: 0071</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void draw(&amp;img, x, y, z, w, h, sx, sy, sw, sh)</p>\n<p>&lt;!--\n<em>syntax: draw(&amp;img, x, y, z, w, h, sx, sy, sw, sh)</em>\n<em>name: draw</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofShortImage &amp;img, float x, float y, float z, float w, float h, float sx, float sy, float sw, float sh</em>\n<em>access: public</em>\n<em>version_started: 0071</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void draw(&amp;model, renderType)</p>\n<p>&lt;!--\n<em>syntax: draw(&amp;model, renderType)</em>\n<em>name: draw</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const of3dPrimitive &amp;model, ofPolyRenderMode renderType</em>\n<em>access: public</em>\n<em>version_started: 0073</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void draw(&amp;node)</p>\n<p>&lt;!--\n<em>syntax: draw(&amp;node)</em>\n<em>name: draw</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofNode &amp;node</em>\n<em>access: public</em>\n<em>version_started: 0071</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void draw(&amp;poly)</p>\n<p>&lt;!--\n<em>syntax: draw(&amp;poly)</em>\n<em>name: draw</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofPolyline &amp;poly</em>\n<em>access: public</em>\n<em>version_started: 0071</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void draw(&amp;shape)</p>\n<p>&lt;!--\n<em>syntax: draw(&amp;shape)</em>\n<em>name: draw</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofPath &amp;shape</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void draw(&amp;vertexData, mode, useColors, useTextures, useNormals)</p>\n<p>&lt;!--\n<em>syntax: draw(&amp;vertexData, mode, useColors, useTextures, useNormals)</em>\n<em>name: draw</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofMesh &amp;vertexData, ofPolyRenderMode mode, bool useColors, bool useTextures, bool useNormals</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void draw(&amp;video, x, y, w, h)</p>\n<p>&lt;!--\n<em>syntax: draw(&amp;video, x, y, w, h)</em>\n<em>name: draw</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofBaseVideoDraws &amp;video, float x, float y, float w, float h</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void drawCircle(x, y, z, radius)</p>\n<p>&lt;!--\n<em>syntax: drawCircle(x, y, z, radius)</em>\n<em>name: drawCircle</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float x, float y, float z, float radius</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void drawEllipse(x, y, z, width, height)</p>\n<p>&lt;!--\n<em>syntax: drawEllipse(x, y, z, width, height)</em>\n<em>name: drawEllipse</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float x, float y, float z, float width, float height</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void drawLine(x1, y1, z1, x2, y2, z2)</p>\n<p>&lt;!--\n<em>syntax: drawLine(x1, y1, z1, x2, y2, z2)</em>\n<em>name: drawLine</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float x1, float y1, float z1, float x2, float y2, float z2</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void drawRectangle(x, y, z, w, h)</p>\n<p>&lt;!--\n<em>syntax: drawRectangle(x, y, z, w, h)</em>\n<em>name: drawRectangle</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float x, float y, float z, float w, float h</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void drawString(&amp;font, text, x, y)</p>\n<p>&lt;!--\n<em>syntax: drawString(&amp;font, text, x, y)</em>\n<em>name: drawString</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofTrueTypeFont &amp;font, string text, float x, float y</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void drawString(text, x, y, z)</p>\n<p>&lt;!--\n<em>syntax: drawString(text, x, y, z)</em>\n<em>name: drawString</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: string text, float x, float y, float z</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void drawTriangle(x1, y1, z1, x2, y2, z2, x3, y3, z3)</p>\n<p>&lt;!--\n<em>syntax: drawTriangle(x1, y1, z1, x2, y2, z2, x3, y3, z3)</em>\n<em>name: drawTriangle</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void enableAntiAliasing()</p>\n<p>&lt;!--\n<em>syntax: enableAntiAliasing()</em>\n<em>name: enableAntiAliasing</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void enablePointSprites()</p>\n<p>&lt;!--\n<em>syntax: enablePointSprites()</em>\n<em>name: enablePointSprites</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void finishRender()</p>\n<p>&lt;!--\n<em>syntax: finishRender()</em>\n<em>name: finishRender</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###const of3dGraphics &amp; get3dGraphics()</p>\n<p>&lt;!--\n<em>syntax: get3dGraphics()</em>\n<em>name: get3dGraphics</em>\n<em>returns: const of3dGraphics &amp;</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###of3dGraphics &amp; get3dGraphics()</p>\n<p>&lt;!--\n<em>syntax: get3dGraphics()</em>\n<em>name: get3dGraphics</em>\n<em>returns: of3dGraphics &amp;</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool getBackgroundAuto()</p>\n<p>&lt;!--\n<em>syntax: getBackgroundAuto()</em>\n<em>name: getBackgroundAuto</em>\n<em>returns: bool</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofColor getBackgroundColor()</p>\n<p>&lt;!--\n<em>syntax: getBackgroundColor()</em>\n<em>name: getBackgroundColor</em>\n<em>returns: ofColor</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofHandednessType getCoordHandedness()</p>\n<p>&lt;!--\n<em>syntax: getCoordHandedness()</em>\n<em>name: getCoordHandedness</em>\n<em>returns: ofHandednessType</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###glm::mat4 getCurrentMatrix(matrixMode_)</p>\n<p>&lt;!--\n<em>syntax: getCurrentMatrix(matrixMode</em>)_\n<em>name: getCurrentMatrix</em>\n<em>returns: glm::mat4</em>\n<em>returns_description: _\n<em>parameters: ofMatrixMode matrixMode</em></em>\n<em>access: public</em>\n<em>version_started: 0.8.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###glm::mat4 getCurrentNormalMatrix()</p>\n<p>&lt;!--\n<em>syntax: getCurrentNormalMatrix()</em>\n<em>name: getCurrentNormalMatrix</em>\n<em>returns: glm::mat4</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###glm::mat4 getCurrentOrientationMatrix()</p>\n<p>&lt;!--\n<em>syntax: getCurrentOrientationMatrix()</em>\n<em>name: getCurrentOrientationMatrix</em>\n<em>returns: glm::mat4</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###glm::mat4 getCurrentViewMatrix()</p>\n<p>&lt;!--\n<em>syntax: getCurrentViewMatrix()</em>\n<em>name: getCurrentViewMatrix</em>\n<em>returns: glm::mat4</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofRectangle getCurrentViewport()</p>\n<p>&lt;!--\n<em>syntax: getCurrentViewport()</em>\n<em>name: getCurrentViewport</em>\n<em>returns: ofRectangle</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofFillFlag getFillMode()</p>\n<p>&lt;!--\n<em>syntax: getFillMode()</em>\n<em>name: getFillMode</em>\n<em>returns: ofFillFlag</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###shared_ptr&lt; ofBaseGLRenderer &gt; getGLRenderer()</p>\n<p>&lt;!--\n<em>syntax: getGLRenderer()</em>\n<em>name: getGLRenderer</em>\n<em>returns: shared_ptr&lt; ofBaseGLRenderer &gt;</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofRectangle getNativeViewport()</p>\n<p>&lt;!--\n<em>syntax: getNativeViewport()</em>\n<em>name: getNativeViewport</em>\n<em>returns: ofRectangle</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofPath &amp; getPath()</p>\n<p>&lt;!--\n<em>syntax: getPath()</em>\n<em>name: getPath</em>\n<em>returns: ofPath &amp;</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofRectMode getRectMode()</p>\n<p>&lt;!--\n<em>syntax: getRectMode()</em>\n<em>name: getRectMode</em>\n<em>returns: ofRectMode</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofStyle getStyle()</p>\n<p>&lt;!--\n<em>syntax: getStyle()</em>\n<em>name: getStyle</em>\n<em>returns: ofStyle</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###const string &amp; getType()</p>\n<p>&lt;!--\n<em>syntax: getType()</em>\n<em>name: getType</em>\n<em>returns: const string &amp;</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###int getViewportHeight()</p>\n<p>&lt;!--\n<em>syntax: getViewportHeight()</em>\n<em>name: getViewportHeight</em>\n<em>returns: int</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###int getViewportWidth()</p>\n<p>&lt;!--\n<em>syntax: getViewportWidth()</em>\n<em>name: getViewportWidth</em>\n<em>returns: int</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool isVFlipped()</p>\n<p>&lt;!--\n<em>syntax: isVFlipped()</em>\n<em>name: isVFlipped</em>\n<em>returns: bool</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void loadIdentityMatrix()</p>\n<p>&lt;!--\n<em>syntax: loadIdentityMatrix()</em>\n<em>name: loadIdentityMatrix</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0072</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void loadMatrix(&amp;m)</p>\n<p>&lt;!--\n<em>syntax: loadMatrix(&amp;m)</em>\n<em>name: loadMatrix</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const glm::mat4 &amp;m</em>\n<em>access: public</em>\n<em>version_started: 0072</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void loadMatrix(*m)</p>\n<p>&lt;!--\n<em>syntax: loadMatrix(*m)</em>\n<em>name: loadMatrix</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const float *m</em>\n<em>access: public</em>\n<em>version_started: 0072</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void loadViewMatrix(&amp;m)</p>\n<p>&lt;!--\n<em>syntax: loadViewMatrix(&amp;m)</em>\n<em>name: loadViewMatrix</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const glm::mat4 &amp;m</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void matrixMode(mode)</p>\n<p>&lt;!--\n<em>syntax: matrixMode(mode)</em>\n<em>name: matrixMode</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: ofMatrixMode mode</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void multMatrix(&amp;m)</p>\n<p>&lt;!--\n<em>syntax: multMatrix(&amp;m)</em>\n<em>name: multMatrix</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const glm::mat4 &amp;m</em>\n<em>access: public</em>\n<em>version_started: 0072</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void multMatrix(*m)</p>\n<p>&lt;!--\n<em>syntax: multMatrix(*m)</em>\n<em>name: multMatrix</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const float *m</em>\n<em>access: public</em>\n<em>version_started: 0072</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void multViewMatrix(&amp;m)</p>\n<p>&lt;!--\n<em>syntax: multViewMatrix(&amp;m)</em>\n<em>name: multViewMatrix</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const glm::mat4 &amp;m</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<h3>ofRendererCollection()</h3>\n<p>&lt;!--\n<em>syntax: ofRendererCollection()</em>\n<em>name: ofRendererCollection</em>\n_returns: _\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void popMatrix()</p>\n<p>&lt;!--\n<em>syntax: popMatrix()</em>\n<em>name: popMatrix</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void popStyle()</p>\n<p>&lt;!--\n<em>syntax: popStyle()</em>\n<em>name: popStyle</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void popView()</p>\n<p>&lt;!--\n<em>syntax: popView()</em>\n<em>name: popView</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void pushMatrix()</p>\n<p>&lt;!--\n<em>syntax: pushMatrix()</em>\n<em>name: pushMatrix</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void pushStyle()</p>\n<p>&lt;!--\n<em>syntax: pushStyle()</em>\n<em>name: pushStyle</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void pushView()</p>\n<p>&lt;!--\n<em>syntax: pushView()</em>\n<em>name: pushView</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool rendersPathPrimitives()</p>\n<p>&lt;!--\n<em>syntax: rendersPathPrimitives()</em>\n<em>name: rendersPathPrimitives</em>\n<em>returns: bool</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void rotateDeg(degrees)</p>\n<p>&lt;!--\n<em>syntax: rotateDeg(degrees)</em>\n<em>name: rotateDeg</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float degrees</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void rotateDeg(degrees, vecX, vecY, vecZ)</p>\n<p>&lt;!--\n<em>syntax: rotateDeg(degrees, vecX, vecY, vecZ)</em>\n<em>name: rotateDeg</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float degrees, float vecX, float vecY, float vecZ</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void rotateRad(radians)</p>\n<p>&lt;!--\n<em>syntax: rotateRad(radians)</em>\n<em>name: rotateRad</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float radians</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void rotateRad(radians, vecX, vecY, vecZ)</p>\n<p>&lt;!--\n<em>syntax: rotateRad(radians, vecX, vecY, vecZ)</em>\n<em>name: rotateRad</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float radians, float vecX, float vecY, float vecZ</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void rotateXDeg(degrees)</p>\n<p>&lt;!--\n<em>syntax: rotateXDeg(degrees)</em>\n<em>name: rotateXDeg</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float degrees</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void rotateXRad(radians)</p>\n<p>&lt;!--\n<em>syntax: rotateXRad(radians)</em>\n<em>name: rotateXRad</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float radians</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void rotateYDeg(degrees)</p>\n<p>&lt;!--\n<em>syntax: rotateYDeg(degrees)</em>\n<em>name: rotateYDeg</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float degrees</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void rotateYRad(radians)</p>\n<p>&lt;!--\n<em>syntax: rotateYRad(radians)</em>\n<em>name: rotateYRad</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float radians</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void rotateZDeg(degrees)</p>\n<p>&lt;!--\n<em>syntax: rotateZDeg(degrees)</em>\n<em>name: rotateZDeg</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float degrees</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void rotateZRad(radians)</p>\n<p>&lt;!--\n<em>syntax: rotateZRad(radians)</em>\n<em>name: rotateZRad</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float radians</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void scale(xAmnt, yAmnt, zAmnt)</p>\n<p>&lt;!--\n<em>syntax: scale(xAmnt, yAmnt, zAmnt)</em>\n<em>name: scale</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float xAmnt, float yAmnt, float zAmnt</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setBackgroundAuto(bManual)</p>\n<p>&lt;!--\n<em>syntax: setBackgroundAuto(bManual)</em>\n<em>name: setBackgroundAuto</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: bool bManual</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setBackgroundColor(&amp;color)</p>\n<p>&lt;!--\n<em>syntax: setBackgroundColor(&amp;color)</em>\n<em>name: setBackgroundColor</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofColor &amp;color</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setBitmapTextMode(mode)</p>\n<p>&lt;!--\n<em>syntax: setBitmapTextMode(mode)</em>\n<em>name: setBitmapTextMode</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: ofDrawBitmapMode mode</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setBlendMode(blendMode)</p>\n<p>&lt;!--\n<em>syntax: setBlendMode(blendMode)</em>\n<em>name: setBlendMode</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: ofBlendMode blendMode</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setCircleResolution(res)</p>\n<p>&lt;!--\n<em>syntax: setCircleResolution(res)</em>\n<em>name: setCircleResolution</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: int res</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setColor(&amp;color)</p>\n<p>&lt;!--\n<em>syntax: setColor(&amp;color)</em>\n<em>name: setColor</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofColor &amp;color</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setColor(&amp;color, _a)</p>\n<p>&lt;!--\n_syntax: setColor(&amp;color, <em>a)</em>\n<em>name: setColor</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: const ofColor &amp;color, int <em>a</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setColor(gray)</p>\n<p>&lt;!--\n<em>syntax: setColor(gray)</em>\n<em>name: setColor</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: int gray</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setColor(r, g, b)</p>\n<p>&lt;!--\n<em>syntax: setColor(r, g, b)</em>\n<em>name: setColor</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: int r, int g, int b</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setColor(r, g, b, a)</p>\n<p>&lt;!--\n<em>syntax: setColor(r, g, b, a)</em>\n<em>name: setColor</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: int r, int g, int b, int a</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setCoordHandedness(handedness)</p>\n<p>&lt;!--\n<em>syntax: setCoordHandedness(handedness)</em>\n<em>name: setCoordHandedness</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: ofHandednessType handedness</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setCurveResolution(res)</p>\n<p>&lt;!--\n<em>syntax: setCurveResolution(res)</em>\n<em>name: setCurveResolution</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: int res</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setDepthTest(depthTest)</p>\n<p>&lt;!--\n<em>syntax: setDepthTest(depthTest)</em>\n<em>name: setDepthTest</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: bool depthTest</em>\n<em>access: public</em>\n<em>version_started: 0073</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setFillMode(fill)</p>\n<p>&lt;!--\n<em>syntax: setFillMode(fill)</em>\n<em>name: setFillMode</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: ofFillFlag fill</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setHexColor(hexColor)</p>\n<p>&lt;!--\n<em>syntax: setHexColor(hexColor)</em>\n<em>name: setHexColor</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: int hexColor</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setLineSmoothing(smooth)</p>\n<p>&lt;!--\n<em>syntax: setLineSmoothing(smooth)</em>\n<em>name: setLineSmoothing</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: bool smooth</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setLineWidth(lineWidth)</p>\n<p>&lt;!--\n<em>syntax: setLineWidth(lineWidth)</em>\n<em>name: setLineWidth</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float lineWidth</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setOrientation(orientation, vflip)</p>\n<p>&lt;!--\n<em>syntax: setOrientation(orientation, vflip)</em>\n<em>name: setOrientation</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: ofOrientation orientation, bool vflip</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setPolyMode(mode)</p>\n<p>&lt;!--\n<em>syntax: setPolyMode(mode)</em>\n<em>name: setPolyMode</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: ofPolyWindingMode mode</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setRectMode(mode)</p>\n<p>&lt;!--\n<em>syntax: setRectMode(mode)</em>\n<em>name: setRectMode</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: ofRectMode mode</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setStyle(&amp;style)</p>\n<p>&lt;!--\n<em>syntax: setStyle(&amp;style)</em>\n<em>name: setStyle</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofStyle &amp;style</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setupGraphicDefaults()</p>\n<p>&lt;!--\n<em>syntax: setupGraphicDefaults()</em>\n<em>name: setupGraphicDefaults</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setupScreen()</p>\n<p>&lt;!--\n<em>syntax: setupScreen()</em>\n<em>name: setupScreen</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setupScreenOrtho(width, height, nearDist, farDist)</p>\n<p>&lt;!--\n<em>syntax: setupScreenOrtho(width, height, nearDist, farDist)</em>\n<em>name: setupScreenOrtho</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float width, float height, float nearDist, float farDist</em>\n<em>access: public</em>\n<em>version_started: 0073</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setupScreenPerspective(width, height, fov, nearDist, farDist)</p>\n<p>&lt;!--\n<em>syntax: setupScreenPerspective(width, height, fov, nearDist, farDist)</em>\n<em>name: setupScreenPerspective</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float width, float height, float fov, float nearDist, float farDist</em>\n<em>access: public</em>\n<em>version_started: 0073</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void startRender()</p>\n<p>&lt;!--\n<em>syntax: startRender()</em>\n<em>name: startRender</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void translate(&amp;p)</p>\n<p>&lt;!--\n<em>syntax: translate(&amp;p)</em>\n<em>name: translate</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const glm::vec3 &amp;p</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void translate(x, y, z)</p>\n<p>&lt;!--\n<em>syntax: translate(x, y, z)</em>\n<em>name: translate</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float x, float y, float z</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void unbind(&amp;camera)</p>\n<p>&lt;!--\n<em>syntax: unbind(&amp;camera)</em>\n<em>name: unbind</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofCamera &amp;camera</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void viewport(viewport)</p>\n<p>&lt;!--\n<em>syntax: viewport(viewport)</em>\n<em>name: viewport</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: ofRectangle viewport</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void viewport(x, y, width, height, vflip = true)</p>\n<p>&lt;!--\n<em>syntax: viewport(x, y, width, height, vflip = true)</em>\n<em>name: viewport</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float x, float y, float width, float height, bool vflip=true</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<h3>~ofRendererCollection()</h3>\n<p>&lt;!--\n<em>syntax: ~ofRendererCollection()</em>\n<em>name: ~ofRendererCollection</em>\n_returns: _\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>##Variables</p>\n<p>###const string TYPE</p>\n<p>&lt;!--\n<em>name: TYPE</em>\n<em>type: const string</em>\n<em>access: public</em>\n<em>version_started: 0073</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###of3dGraphics graphics3d</p>\n<p>&lt;!--\n<em>name: graphics3d</em>\n<em>type: of3dGraphics</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofPath path</p>\n<p>&lt;!--\n<em>name: path</em>\n<em>type: ofPath</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofPtr renderers</p>\n<p>&lt;!--\n<em>name: renderers</em>\n<em>type: ofPtr</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n","raw":"#class ofRendererCollection\n\n\n<!--\n_visible: True_\n_advanced: True_\n_istemplated: False_\n_extends: ofBaseRenderer_\n-->\n\n##InlineDescription\n\n\n\n\n\n\n##Description\n\n\n\n\n\n##Methods\n\n\n\n###void background(&c)\n\n<!--\n_syntax: background(&c)_\n_name: background_\n_returns: void_\n_returns_description: _\n_parameters: const ofColor &c_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void background(brightness)\n\n<!--\n_syntax: background(brightness)_\n_name: background_\n_returns: void_\n_returns_description: _\n_parameters: float brightness_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void background(hexColor, _a = 255.0f)\n\n<!--\n_syntax: background(hexColor, _a = 255.0f)_\n_name: background_\n_returns: void_\n_returns_description: _\n_parameters: int hexColor, float _a=255.0f_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void background(r, g, b, a = 255)\n\n<!--\n_syntax: background(r, g, b, a = 255)_\n_name: background_\n_returns: void_\n_returns_description: _\n_parameters: int r, int g, int b, int a=255_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void bind(&camera, &viewport)\n\n<!--\n_syntax: bind(&camera, &viewport)_\n_name: bind_\n_returns: void_\n_returns_description: _\n_parameters: const ofCamera &camera, const ofRectangle &viewport_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void clear()\n\n<!--\n_syntax: clear()_\n_name: clear_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void clear(brightness, a)\n\n<!--\n_syntax: clear(brightness, a)_\n_name: clear_\n_returns: void_\n_returns_description: _\n_parameters: float brightness, float a_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void clear(r, g, b, a)\n\n<!--\n_syntax: clear(r, g, b, a)_\n_name: clear_\n_returns: void_\n_returns_description: _\n_parameters: float r, float g, float b, float a_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void clearAlpha()\n\n<!--\n_syntax: clearAlpha()_\n_name: clearAlpha_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void disableAntiAliasing()\n\n<!--\n_syntax: disableAntiAliasing()_\n_name: disableAntiAliasing_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void disablePointSprites()\n\n<!--\n_syntax: disablePointSprites()_\n_name: disablePointSprites_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void draw(&img, x, y, z, w, h, sx, sy, sw, sh)\n\n<!--\n_syntax: draw(&img, x, y, z, w, h, sx, sy, sw, sh)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: const ofImage &img, float x, float y, float z, float w, float h, float sx, float sy, float sw, float sh_\n_access: public_\n_version_started: 0071_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void draw(&img, x, y, z, w, h, sx, sy, sw, sh)\n\n<!--\n_syntax: draw(&img, x, y, z, w, h, sx, sy, sw, sh)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: const ofFloatImage &img, float x, float y, float z, float w, float h, float sx, float sy, float sw, float sh_\n_access: public_\n_version_started: 0071_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void draw(&img, x, y, z, w, h, sx, sy, sw, sh)\n\n<!--\n_syntax: draw(&img, x, y, z, w, h, sx, sy, sw, sh)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: const ofShortImage &img, float x, float y, float z, float w, float h, float sx, float sy, float sw, float sh_\n_access: public_\n_version_started: 0071_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void draw(&model, renderType)\n\n<!--\n_syntax: draw(&model, renderType)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: const of3dPrimitive &model, ofPolyRenderMode renderType_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void draw(&node)\n\n<!--\n_syntax: draw(&node)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: const ofNode &node_\n_access: public_\n_version_started: 0071_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void draw(&poly)\n\n<!--\n_syntax: draw(&poly)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: const ofPolyline &poly_\n_access: public_\n_version_started: 0071_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void draw(&shape)\n\n<!--\n_syntax: draw(&shape)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: const ofPath &shape_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void draw(&vertexData, mode, useColors, useTextures, useNormals)\n\n<!--\n_syntax: draw(&vertexData, mode, useColors, useTextures, useNormals)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: const ofMesh &vertexData, ofPolyRenderMode mode, bool useColors, bool useTextures, bool useNormals_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void draw(&video, x, y, w, h)\n\n<!--\n_syntax: draw(&video, x, y, w, h)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: const ofBaseVideoDraws &video, float x, float y, float w, float h_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void drawCircle(x, y, z, radius)\n\n<!--\n_syntax: drawCircle(x, y, z, radius)_\n_name: drawCircle_\n_returns: void_\n_returns_description: _\n_parameters: float x, float y, float z, float radius_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void drawEllipse(x, y, z, width, height)\n\n<!--\n_syntax: drawEllipse(x, y, z, width, height)_\n_name: drawEllipse_\n_returns: void_\n_returns_description: _\n_parameters: float x, float y, float z, float width, float height_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void drawLine(x1, y1, z1, x2, y2, z2)\n\n<!--\n_syntax: drawLine(x1, y1, z1, x2, y2, z2)_\n_name: drawLine_\n_returns: void_\n_returns_description: _\n_parameters: float x1, float y1, float z1, float x2, float y2, float z2_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void drawRectangle(x, y, z, w, h)\n\n<!--\n_syntax: drawRectangle(x, y, z, w, h)_\n_name: drawRectangle_\n_returns: void_\n_returns_description: _\n_parameters: float x, float y, float z, float w, float h_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void drawString(&font, text, x, y)\n\n<!--\n_syntax: drawString(&font, text, x, y)_\n_name: drawString_\n_returns: void_\n_returns_description: _\n_parameters: const ofTrueTypeFont &font, string text, float x, float y_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void drawString(text, x, y, z)\n\n<!--\n_syntax: drawString(text, x, y, z)_\n_name: drawString_\n_returns: void_\n_returns_description: _\n_parameters: string text, float x, float y, float z_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void drawTriangle(x1, y1, z1, x2, y2, z2, x3, y3, z3)\n\n<!--\n_syntax: drawTriangle(x1, y1, z1, x2, y2, z2, x3, y3, z3)_\n_name: drawTriangle_\n_returns: void_\n_returns_description: _\n_parameters: float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void enableAntiAliasing()\n\n<!--\n_syntax: enableAntiAliasing()_\n_name: enableAntiAliasing_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void enablePointSprites()\n\n<!--\n_syntax: enablePointSprites()_\n_name: enablePointSprites_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void finishRender()\n\n<!--\n_syntax: finishRender()_\n_name: finishRender_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###const of3dGraphics & get3dGraphics()\n\n<!--\n_syntax: get3dGraphics()_\n_name: get3dGraphics_\n_returns: const of3dGraphics &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###of3dGraphics & get3dGraphics()\n\n<!--\n_syntax: get3dGraphics()_\n_name: get3dGraphics_\n_returns: of3dGraphics &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool getBackgroundAuto()\n\n<!--\n_syntax: getBackgroundAuto()_\n_name: getBackgroundAuto_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofColor getBackgroundColor()\n\n<!--\n_syntax: getBackgroundColor()_\n_name: getBackgroundColor_\n_returns: ofColor_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofHandednessType getCoordHandedness()\n\n<!--\n_syntax: getCoordHandedness()_\n_name: getCoordHandedness_\n_returns: ofHandednessType_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::mat4 getCurrentMatrix(matrixMode_)\n\n<!--\n_syntax: getCurrentMatrix(matrixMode_)_\n_name: getCurrentMatrix_\n_returns: glm::mat4_\n_returns_description: _\n_parameters: ofMatrixMode matrixMode__\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::mat4 getCurrentNormalMatrix()\n\n<!--\n_syntax: getCurrentNormalMatrix()_\n_name: getCurrentNormalMatrix_\n_returns: glm::mat4_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::mat4 getCurrentOrientationMatrix()\n\n<!--\n_syntax: getCurrentOrientationMatrix()_\n_name: getCurrentOrientationMatrix_\n_returns: glm::mat4_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::mat4 getCurrentViewMatrix()\n\n<!--\n_syntax: getCurrentViewMatrix()_\n_name: getCurrentViewMatrix_\n_returns: glm::mat4_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofRectangle getCurrentViewport()\n\n<!--\n_syntax: getCurrentViewport()_\n_name: getCurrentViewport_\n_returns: ofRectangle_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofFillFlag getFillMode()\n\n<!--\n_syntax: getFillMode()_\n_name: getFillMode_\n_returns: ofFillFlag_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###shared_ptr< ofBaseGLRenderer > getGLRenderer()\n\n<!--\n_syntax: getGLRenderer()_\n_name: getGLRenderer_\n_returns: shared_ptr< ofBaseGLRenderer >_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofRectangle getNativeViewport()\n\n<!--\n_syntax: getNativeViewport()_\n_name: getNativeViewport_\n_returns: ofRectangle_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofPath & getPath()\n\n<!--\n_syntax: getPath()_\n_name: getPath_\n_returns: ofPath &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofRectMode getRectMode()\n\n<!--\n_syntax: getRectMode()_\n_name: getRectMode_\n_returns: ofRectMode_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofStyle getStyle()\n\n<!--\n_syntax: getStyle()_\n_name: getStyle_\n_returns: ofStyle_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###const string & getType()\n\n<!--\n_syntax: getType()_\n_name: getType_\n_returns: const string &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int getViewportHeight()\n\n<!--\n_syntax: getViewportHeight()_\n_name: getViewportHeight_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int getViewportWidth()\n\n<!--\n_syntax: getViewportWidth()_\n_name: getViewportWidth_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool isVFlipped()\n\n<!--\n_syntax: isVFlipped()_\n_name: isVFlipped_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void loadIdentityMatrix()\n\n<!--\n_syntax: loadIdentityMatrix()_\n_name: loadIdentityMatrix_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void loadMatrix(&m)\n\n<!--\n_syntax: loadMatrix(&m)_\n_name: loadMatrix_\n_returns: void_\n_returns_description: _\n_parameters: const glm::mat4 &m_\n_access: public_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void loadMatrix(*m)\n\n<!--\n_syntax: loadMatrix(*m)_\n_name: loadMatrix_\n_returns: void_\n_returns_description: _\n_parameters: const float *m_\n_access: public_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void loadViewMatrix(&m)\n\n<!--\n_syntax: loadViewMatrix(&m)_\n_name: loadViewMatrix_\n_returns: void_\n_returns_description: _\n_parameters: const glm::mat4 &m_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void matrixMode(mode)\n\n<!--\n_syntax: matrixMode(mode)_\n_name: matrixMode_\n_returns: void_\n_returns_description: _\n_parameters: ofMatrixMode mode_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void multMatrix(&m)\n\n<!--\n_syntax: multMatrix(&m)_\n_name: multMatrix_\n_returns: void_\n_returns_description: _\n_parameters: const glm::mat4 &m_\n_access: public_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void multMatrix(*m)\n\n<!--\n_syntax: multMatrix(*m)_\n_name: multMatrix_\n_returns: void_\n_returns_description: _\n_parameters: const float *m_\n_access: public_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void multViewMatrix(&m)\n\n<!--\n_syntax: multViewMatrix(&m)_\n_name: multViewMatrix_\n_returns: void_\n_returns_description: _\n_parameters: const glm::mat4 &m_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n### ofRendererCollection()\n\n<!--\n_syntax: ofRendererCollection()_\n_name: ofRendererCollection_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void popMatrix()\n\n<!--\n_syntax: popMatrix()_\n_name: popMatrix_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void popStyle()\n\n<!--\n_syntax: popStyle()_\n_name: popStyle_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void popView()\n\n<!--\n_syntax: popView()_\n_name: popView_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void pushMatrix()\n\n<!--\n_syntax: pushMatrix()_\n_name: pushMatrix_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void pushStyle()\n\n<!--\n_syntax: pushStyle()_\n_name: pushStyle_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void pushView()\n\n<!--\n_syntax: pushView()_\n_name: pushView_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool rendersPathPrimitives()\n\n<!--\n_syntax: rendersPathPrimitives()_\n_name: rendersPathPrimitives_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void rotateDeg(degrees)\n\n<!--\n_syntax: rotateDeg(degrees)_\n_name: rotateDeg_\n_returns: void_\n_returns_description: _\n_parameters: float degrees_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void rotateDeg(degrees, vecX, vecY, vecZ)\n\n<!--\n_syntax: rotateDeg(degrees, vecX, vecY, vecZ)_\n_name: rotateDeg_\n_returns: void_\n_returns_description: _\n_parameters: float degrees, float vecX, float vecY, float vecZ_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void rotateRad(radians)\n\n<!--\n_syntax: rotateRad(radians)_\n_name: rotateRad_\n_returns: void_\n_returns_description: _\n_parameters: float radians_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void rotateRad(radians, vecX, vecY, vecZ)\n\n<!--\n_syntax: rotateRad(radians, vecX, vecY, vecZ)_\n_name: rotateRad_\n_returns: void_\n_returns_description: _\n_parameters: float radians, float vecX, float vecY, float vecZ_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void rotateXDeg(degrees)\n\n<!--\n_syntax: rotateXDeg(degrees)_\n_name: rotateXDeg_\n_returns: void_\n_returns_description: _\n_parameters: float degrees_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void rotateXRad(radians)\n\n<!--\n_syntax: rotateXRad(radians)_\n_name: rotateXRad_\n_returns: void_\n_returns_description: _\n_parameters: float radians_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void rotateYDeg(degrees)\n\n<!--\n_syntax: rotateYDeg(degrees)_\n_name: rotateYDeg_\n_returns: void_\n_returns_description: _\n_parameters: float degrees_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void rotateYRad(radians)\n\n<!--\n_syntax: rotateYRad(radians)_\n_name: rotateYRad_\n_returns: void_\n_returns_description: _\n_parameters: float radians_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void rotateZDeg(degrees)\n\n<!--\n_syntax: rotateZDeg(degrees)_\n_name: rotateZDeg_\n_returns: void_\n_returns_description: _\n_parameters: float degrees_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void rotateZRad(radians)\n\n<!--\n_syntax: rotateZRad(radians)_\n_name: rotateZRad_\n_returns: void_\n_returns_description: _\n_parameters: float radians_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void scale(xAmnt, yAmnt, zAmnt)\n\n<!--\n_syntax: scale(xAmnt, yAmnt, zAmnt)_\n_name: scale_\n_returns: void_\n_returns_description: _\n_parameters: float xAmnt, float yAmnt, float zAmnt_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setBackgroundAuto(bManual)\n\n<!--\n_syntax: setBackgroundAuto(bManual)_\n_name: setBackgroundAuto_\n_returns: void_\n_returns_description: _\n_parameters: bool bManual_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setBackgroundColor(&color)\n\n<!--\n_syntax: setBackgroundColor(&color)_\n_name: setBackgroundColor_\n_returns: void_\n_returns_description: _\n_parameters: const ofColor &color_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setBitmapTextMode(mode)\n\n<!--\n_syntax: setBitmapTextMode(mode)_\n_name: setBitmapTextMode_\n_returns: void_\n_returns_description: _\n_parameters: ofDrawBitmapMode mode_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setBlendMode(blendMode)\n\n<!--\n_syntax: setBlendMode(blendMode)_\n_name: setBlendMode_\n_returns: void_\n_returns_description: _\n_parameters: ofBlendMode blendMode_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setCircleResolution(res)\n\n<!--\n_syntax: setCircleResolution(res)_\n_name: setCircleResolution_\n_returns: void_\n_returns_description: _\n_parameters: int res_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setColor(&color)\n\n<!--\n_syntax: setColor(&color)_\n_name: setColor_\n_returns: void_\n_returns_description: _\n_parameters: const ofColor &color_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setColor(&color, _a)\n\n<!--\n_syntax: setColor(&color, _a)_\n_name: setColor_\n_returns: void_\n_returns_description: _\n_parameters: const ofColor &color, int _a_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setColor(gray)\n\n<!--\n_syntax: setColor(gray)_\n_name: setColor_\n_returns: void_\n_returns_description: _\n_parameters: int gray_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setColor(r, g, b)\n\n<!--\n_syntax: setColor(r, g, b)_\n_name: setColor_\n_returns: void_\n_returns_description: _\n_parameters: int r, int g, int b_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setColor(r, g, b, a)\n\n<!--\n_syntax: setColor(r, g, b, a)_\n_name: setColor_\n_returns: void_\n_returns_description: _\n_parameters: int r, int g, int b, int a_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setCoordHandedness(handedness)\n\n<!--\n_syntax: setCoordHandedness(handedness)_\n_name: setCoordHandedness_\n_returns: void_\n_returns_description: _\n_parameters: ofHandednessType handedness_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setCurveResolution(res)\n\n<!--\n_syntax: setCurveResolution(res)_\n_name: setCurveResolution_\n_returns: void_\n_returns_description: _\n_parameters: int res_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setDepthTest(depthTest)\n\n<!--\n_syntax: setDepthTest(depthTest)_\n_name: setDepthTest_\n_returns: void_\n_returns_description: _\n_parameters: bool depthTest_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setFillMode(fill)\n\n<!--\n_syntax: setFillMode(fill)_\n_name: setFillMode_\n_returns: void_\n_returns_description: _\n_parameters: ofFillFlag fill_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setHexColor(hexColor)\n\n<!--\n_syntax: setHexColor(hexColor)_\n_name: setHexColor_\n_returns: void_\n_returns_description: _\n_parameters: int hexColor_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setLineSmoothing(smooth)\n\n<!--\n_syntax: setLineSmoothing(smooth)_\n_name: setLineSmoothing_\n_returns: void_\n_returns_description: _\n_parameters: bool smooth_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setLineWidth(lineWidth)\n\n<!--\n_syntax: setLineWidth(lineWidth)_\n_name: setLineWidth_\n_returns: void_\n_returns_description: _\n_parameters: float lineWidth_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setOrientation(orientation, vflip)\n\n<!--\n_syntax: setOrientation(orientation, vflip)_\n_name: setOrientation_\n_returns: void_\n_returns_description: _\n_parameters: ofOrientation orientation, bool vflip_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setPolyMode(mode)\n\n<!--\n_syntax: setPolyMode(mode)_\n_name: setPolyMode_\n_returns: void_\n_returns_description: _\n_parameters: ofPolyWindingMode mode_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setRectMode(mode)\n\n<!--\n_syntax: setRectMode(mode)_\n_name: setRectMode_\n_returns: void_\n_returns_description: _\n_parameters: ofRectMode mode_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setStyle(&style)\n\n<!--\n_syntax: setStyle(&style)_\n_name: setStyle_\n_returns: void_\n_returns_description: _\n_parameters: const ofStyle &style_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setupGraphicDefaults()\n\n<!--\n_syntax: setupGraphicDefaults()_\n_name: setupGraphicDefaults_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setupScreen()\n\n<!--\n_syntax: setupScreen()_\n_name: setupScreen_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setupScreenOrtho(width, height, nearDist, farDist)\n\n<!--\n_syntax: setupScreenOrtho(width, height, nearDist, farDist)_\n_name: setupScreenOrtho_\n_returns: void_\n_returns_description: _\n_parameters: float width, float height, float nearDist, float farDist_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setupScreenPerspective(width, height, fov, nearDist, farDist)\n\n<!--\n_syntax: setupScreenPerspective(width, height, fov, nearDist, farDist)_\n_name: setupScreenPerspective_\n_returns: void_\n_returns_description: _\n_parameters: float width, float height, float fov, float nearDist, float farDist_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void startRender()\n\n<!--\n_syntax: startRender()_\n_name: startRender_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void translate(&p)\n\n<!--\n_syntax: translate(&p)_\n_name: translate_\n_returns: void_\n_returns_description: _\n_parameters: const glm::vec3 &p_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void translate(x, y, z)\n\n<!--\n_syntax: translate(x, y, z)_\n_name: translate_\n_returns: void_\n_returns_description: _\n_parameters: float x, float y, float z_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void unbind(&camera)\n\n<!--\n_syntax: unbind(&camera)_\n_name: unbind_\n_returns: void_\n_returns_description: _\n_parameters: const ofCamera &camera_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void viewport(viewport)\n\n<!--\n_syntax: viewport(viewport)_\n_name: viewport_\n_returns: void_\n_returns_description: _\n_parameters: ofRectangle viewport_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void viewport(x, y, width, height, vflip = true)\n\n<!--\n_syntax: viewport(x, y, width, height, vflip = true)_\n_name: viewport_\n_returns: void_\n_returns_description: _\n_parameters: float x, float y, float width, float height, bool vflip=true_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n### ~ofRendererCollection()\n\n<!--\n_syntax: ~ofRendererCollection()_\n_name: ~ofRendererCollection_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n##Variables\n\n\n\n###const string TYPE\n\n<!--\n_name: TYPE_\n_type: const string_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###of3dGraphics graphics3d\n\n<!--\n_name: graphics3d_\n_type: of3dGraphics_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofPath path\n\n<!--\n_name: path_\n_type: ofPath_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofPtr renderers\n\n<!--\n_name: renderers_\n_type: ofPtr_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page","static":true}}],"fetch":[]}