{"data":[{"page":{"entry":{"name":"ofStyle","filename":"ofStyle.markdown","absolute":"/Users/gilbertsinnott/Code/openFrameworks/ofSite/documentation/types/ofStyle.markdown","path":"/documentation/types/ofStyle","route":"/documentation/types/ofStyle.markdown","dir":"../ofSite/documentation/types","ext":"markdown","type":"page","id":2195,"parent":2157,"breadcrumbs":[2157,1718],"siblings":[],"translations":{}},"description":{"short":"<p>Contains general information about the style of ofGraphics\nelements such as color, line width and others.</p>\n","full":"<p>ofStyle class contains general information about the style of our ofGraphics elements such as color, line width and others.</p>\n<h1></h1>\n"},"config":{"visible":"True","advanced":"False","istemplated":"False","extends":null},"methods":[{"syntax":"ofStyle()","name":"ofStyle","returns":null,"returns_description":null,"parameters":null,"access":"public","version_started":"006","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Create a default ofStyle.</p>\n","desc":""},{"syntax":"~ofStyle()","name":"~ofStyle","returns":null,"returns_description":null,"parameters":null,"access":"public","version_started":"006","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Destroy the ofStyle.</p>\n","desc":""},{"name":"bFill","type":"bool","access":"public","version_started":"006","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"<p>True if the renderer should fill a rendered shape.</p>\n<p>If true, the renderer will fill the rendered shape.  If false, the\nrenderer will draw the outline of the rendered shape.</p>\n","desc":"<p>bFill variable contains information about how the graphics have to be drawed: Fill or noFill(empty)</p>\n"},{"name":"bgColor","type":"ofColor","access":"public","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"<p>The background color used when rendering.</p>\n","desc":""},{"name":"blendingMode","type":"ofBlendMode","access":"public","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"<p>The blending mode.</p>\n","desc":""},{"name":"circleResolution","type":"int","access":"public","version_started":"006","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":"<p>circleResolution variable contains the resolution of a ofDrawCircle.</p>\n"},{"name":"color","type":"ofColor","access":"public","version_started":"006","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"<p>The color used when rendering.</p>\n<p>This style depends on the state of the ofStyle::bFill.</p>\n","desc":"<p>color variable contain the color information for the style object.</p>\n"},{"name":"curveResolution","type":"int","access":"public","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"drawBitmapMode","type":"ofDrawBitmapMode","access":"public","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"<p>The render mode for bitmaps (e.g. ofDrawBitmapString).</p>\n<p><strong>See also</strong>: ofDrawBitmapString(const T&amp; textString, float x, float y)</p>\n","desc":""},{"name":"lineWidth","type":"float","access":"public","version_started":"006","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"<p>The width of rendered lines.</p>\n<p><strong>Warning</strong>: This is not currently implemented in modern OF renderers.</p>\n","desc":"<p>lineWidth contains information about the width of the line for our ofDrawLine.</p>\n"},{"name":"polyMode","type":"int","access":"public","version_started":"006","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"<p>The current rendering mode for polygons.</p>\n<p>ofPolyWindingMode determines how ovelapping parts of the same\npolygon are rendered.</p>\n<p><strong>See also</strong>: ofPolyWindingMode</p>\n","desc":"<p>polyMode variable contains information about the drawing behavior for ovelapping parts of the same polygon when we create a shape.</p>\n<p>Possible modes are:\nOF_POLY_WINDING_ODD -\nOF_POLY_WINDING_NONZERO -\nOF_POLY_WINDING_POSITIVE -\nOF_POLY_WINDING_NEGATIVE -\nOF_POLY_WINDING_ABS_GEQ_TWO -</p>\n"},{"name":"rectMode","type":"int","access":"public","version_started":"006","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"<p>Determine how some shapes are anchored (e.g. ofDrawEllipse).</p>\n<p>The rectMode applies to several shapes, including ofDrawRectangle\nand ofDrawEllipse.  If the current rectMode is <code>OF_RECTMODE_CENTER</code>,\nthe rendered shape will be drawn with x, y in the center of the\nshape. If the current rectMode is <code>OF_RECTMODE_CORNER</code>, the\nrendered shape will be drawn with the x, y in the upper-left-hand\ncorner of the shape.</p>\n","desc":"<p>rectMode contains information about the mode for drawing rectangles.\nIf they are corner aligned, or drawn so that the x,y position is the center of the rectangle. Possible options are OF_RECTMODE_CENTER and OF_RECTMODE_CORNER</p>\n"},{"name":"smoothing","type":"bool","access":"public","version_started":"006","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"<p>True if anti-aliasing is enabled.</p>\n","desc":"<p>smoothing variable contains the information about if smoothing effect is activated or not.</p>\n"},{"name":"sphereResolution","type":"int","access":"public","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{}],"document":"<p>#class ofStyle</p>\n<p>&lt;!--\n<em>visible: True</em>\n<em>advanced: False</em>\n<em>istemplated: False</em>\n_extends: _\n--&gt;</p>\n<p>##InlineDescription</p>\n<p>Contains general information about the style of ofGraphics\nelements such as color, line width and others.</p>\n<p>##Description</p>\n<p>ofStyle class contains general information about the style of our ofGraphics elements such as color, line width and others.</p>\n<p>##Methods</p>\n<h3>ofStyle()</h3>\n<p>&lt;!--\n<em>syntax: ofStyle()</em>\n<em>name: ofStyle</em>\n_returns: _\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 006</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Create a default ofStyle.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<h3>~ofStyle()</h3>\n<p>&lt;!--\n<em>syntax: ~ofStyle()</em>\n<em>name: ~ofStyle</em>\n_returns: _\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 006</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Destroy the ofStyle.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>##Variables</p>\n<p>###bool bFill</p>\n<p>&lt;!--\n<em>name: bFill</em>\n<em>type: bool</em>\n<em>access: public</em>\n<em>version_started: 006</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>True if the renderer should fill a rendered shape.</p>\n<p>If true, the renderer will fill the rendered shape.  If false, the\nrenderer will draw the outline of the rendered shape.</p>\n<p>_description: _</p>\n<p>bFill variable contains information about how the graphics have to be drawed: Fill or noFill(empty)</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofColor bgColor</p>\n<p>&lt;!--\n<em>name: bgColor</em>\n<em>type: ofColor</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>The background color used when rendering.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofBlendMode blendingMode</p>\n<p>&lt;!--\n<em>name: blendingMode</em>\n<em>type: ofBlendMode</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>The blending mode.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###int circleResolution</p>\n<p>&lt;!--\n<em>name: circleResolution</em>\n<em>type: int</em>\n<em>access: public</em>\n<em>version_started: 006</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>circleResolution variable contains the resolution of a ofDrawCircle.</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofColor color</p>\n<p>&lt;!--\n<em>name: color</em>\n<em>type: ofColor</em>\n<em>access: public</em>\n<em>version_started: 006</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>The color used when rendering.</p>\n<p>This style depends on the state of the ofStyle::bFill.</p>\n<p>_description: _</p>\n<p>color variable contain the color information for the style object.</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###int curveResolution</p>\n<p>&lt;!--\n<em>name: curveResolution</em>\n<em>type: int</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofDrawBitmapMode drawBitmapMode</p>\n<p>&lt;!--\n<em>name: drawBitmapMode</em>\n<em>type: ofDrawBitmapMode</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>The render mode for bitmaps (e.g. ofDrawBitmapString).</p>\n<p><strong>See also</strong>: ofDrawBitmapString(const T&amp; textString, float x, float y)</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###float lineWidth</p>\n<p>&lt;!--\n<em>name: lineWidth</em>\n<em>type: float</em>\n<em>access: public</em>\n<em>version_started: 006</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>The width of rendered lines.</p>\n<p><strong>Warning</strong>: This is not currently implemented in modern OF renderers.</p>\n<p>_description: _</p>\n<p>lineWidth contains information about the width of the line for our ofDrawLine.</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###int polyMode</p>\n<p>&lt;!--\n<em>name: polyMode</em>\n<em>type: int</em>\n<em>access: public</em>\n<em>version_started: 006</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>The current rendering mode for polygons.</p>\n<p>ofPolyWindingMode determines how ovelapping parts of the same\npolygon are rendered.</p>\n<p><strong>See also</strong>: ofPolyWindingMode</p>\n<p>_description: _</p>\n<p>polyMode variable contains information about the drawing behavior for ovelapping parts of the same polygon when we create a shape.</p>\n<p>Possible modes are:\nOF_POLY_WINDING_ODD -\nOF_POLY_WINDING_NONZERO -\nOF_POLY_WINDING_POSITIVE -\nOF_POLY_WINDING_NEGATIVE -\nOF_POLY_WINDING_ABS_GEQ_TWO -</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###int rectMode</p>\n<p>&lt;!--\n<em>name: rectMode</em>\n<em>type: int</em>\n<em>access: public</em>\n<em>version_started: 006</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Determine how some shapes are anchored (e.g. ofDrawEllipse).</p>\n<p>The rectMode applies to several shapes, including ofDrawRectangle\nand ofDrawEllipse.  If the current rectMode is <code>OF_RECTMODE_CENTER</code>,\nthe rendered shape will be drawn with x, y in the center of the\nshape. If the current rectMode is <code>OF_RECTMODE_CORNER</code>, the\nrendered shape will be drawn with the x, y in the upper-left-hand\ncorner of the shape.</p>\n<p>_description: _</p>\n<p>rectMode contains information about the mode for drawing rectangles.\nIf they are corner aligned, or drawn so that the x,y position is the center of the rectangle. Possible options are OF_RECTMODE_CENTER and OF_RECTMODE_CORNER</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool smoothing</p>\n<p>&lt;!--\n<em>name: smoothing</em>\n<em>type: bool</em>\n<em>access: public</em>\n<em>version_started: 006</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>True if anti-aliasing is enabled.</p>\n<p>_description: _</p>\n<p>smoothing variable contains the information about if smoothing effect is activated or not.</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###int sphereResolution</p>\n<p>&lt;!--\n<em>name: sphereResolution</em>\n<em>type: int</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n","raw":"#class ofStyle\n\n\n<!--\n_visible: True_\n_advanced: False_\n_istemplated: False_\n_extends: _\n-->\n\n##InlineDescription\n\nContains general information about the style of ofGraphics\nelements such as color, line width and others.\n\n\n\n\n\n##Description\n\nofStyle class contains general information about the style of our ofGraphics elements such as color, line width and others.\n\n\n\n\n\n##Methods\n\n\n\n### ofStyle()\n\n<!--\n_syntax: ofStyle()_\n_name: ofStyle_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 006_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nCreate a default ofStyle.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n### ~ofStyle()\n\n<!--\n_syntax: ~ofStyle()_\n_name: ~ofStyle_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 006_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nDestroy the ofStyle.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n##Variables\n\n\n\n###bool bFill\n\n<!--\n_name: bFill_\n_type: bool_\n_access: public_\n_version_started: 006_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nTrue if the renderer should fill a rendered shape.\n\nIf true, the renderer will fill the rendered shape.  If false, the\nrenderer will draw the outline of the rendered shape.\n\n\n\n\n\n_description: _\n\nbFill variable contains information about how the graphics have to be drawed: Fill or noFill(empty)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofColor bgColor\n\n<!--\n_name: bgColor_\n_type: ofColor_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nThe background color used when rendering.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofBlendMode blendingMode\n\n<!--\n_name: blendingMode_\n_type: ofBlendMode_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nThe blending mode.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int circleResolution\n\n<!--\n_name: circleResolution_\n_type: int_\n_access: public_\n_version_started: 006_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\ncircleResolution variable contains the resolution of a ofDrawCircle.\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofColor color\n\n<!--\n_name: color_\n_type: ofColor_\n_access: public_\n_version_started: 006_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nThe color used when rendering.\n\nThis style depends on the state of the ofStyle::bFill.\n\n\n\n\n\n_description: _\n\ncolor variable contain the color information for the style object.\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int curveResolution\n\n<!--\n_name: curveResolution_\n_type: int_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofDrawBitmapMode drawBitmapMode\n\n<!--\n_name: drawBitmapMode_\n_type: ofDrawBitmapMode_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nThe render mode for bitmaps (e.g. ofDrawBitmapString).\n\n\n**See also**: ofDrawBitmapString(const T& textString, float x, float y)\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float lineWidth\n\n<!--\n_name: lineWidth_\n_type: float_\n_access: public_\n_version_started: 006_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nThe width of rendered lines.\n\n**Warning**: This is not currently implemented in modern OF renderers.\n\n\n\n\n\n_description: _\n\nlineWidth contains information about the width of the line for our ofDrawLine.\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int polyMode\n\n<!--\n_name: polyMode_\n_type: int_\n_access: public_\n_version_started: 006_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nThe current rendering mode for polygons.\n\nofPolyWindingMode determines how ovelapping parts of the same\npolygon are rendered.\n\n\n**See also**: ofPolyWindingMode\n\n\n\n\n\n_description: _\n\npolyMode variable contains information about the drawing behavior for ovelapping parts of the same polygon when we create a shape.\n\nPossible modes are:\nOF_POLY_WINDING_ODD -\nOF_POLY_WINDING_NONZERO -\nOF_POLY_WINDING_POSITIVE -\nOF_POLY_WINDING_NEGATIVE -\nOF_POLY_WINDING_ABS_GEQ_TWO -\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int rectMode\n\n<!--\n_name: rectMode_\n_type: int_\n_access: public_\n_version_started: 006_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nDetermine how some shapes are anchored (e.g. ofDrawEllipse).\n\nThe rectMode applies to several shapes, including ofDrawRectangle\nand ofDrawEllipse.  If the current rectMode is `OF_RECTMODE_CENTER`,\nthe rendered shape will be drawn with x, y in the center of the\nshape. If the current rectMode is `OF_RECTMODE_CORNER`, the\nrendered shape will be drawn with the x, y in the upper-left-hand\ncorner of the shape.\n\n\n\n\n\n_description: _\n\nrectMode contains information about the mode for drawing rectangles.\nIf they are corner aligned, or drawn so that the x,y position is the center of the rectangle. Possible options are OF_RECTMODE_CENTER and OF_RECTMODE_CORNER\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool smoothing\n\n<!--\n_name: smoothing_\n_type: bool_\n_access: public_\n_version_started: 006_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nTrue if anti-aliasing is enabled.\n\n\n\n\n\n_description: _\n\nsmoothing variable contains the information about if smoothing effect is activated or not.\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int sphereResolution\n\n<!--\n_name: sphereResolution_\n_type: int_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page","static":true}}],"fetch":[]}