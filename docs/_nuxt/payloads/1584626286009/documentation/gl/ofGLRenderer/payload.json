{"data":[{"page":{"entry":{"name":"ofGLRenderer","filename":"ofGLRenderer.markdown","absolute":"/Users/gilbertsinnott/Code/openFrameworks/ofSite/documentation/gl/ofGLRenderer.markdown","path":"/documentation/gl/ofGLRenderer","route":"/documentation/gl/ofGLRenderer.markdown","dir":"../ofSite/documentation/gl","ext":"markdown","type":"page","id":1954,"parent":1942,"breadcrumbs":[1942,1718],"siblings":[],"translations":{}},"description":{"short":"","full":"<p>The ofGLRenderer is a renderer for OF that supports OpenGL 2 and lower. It's the more classic, &quot;direct mode&quot; version of OpenGL that you may be familiar with but that also uses vertex arrays underneath to store all of the vertices that you create for the basic OF drawing operations. This is the default renderer that is created when you create your OF app:</p>\n<pre><code><span class=\"token function\">ofSetupOpenGL</span><span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">,</span><span class=\"token number\">768</span><span class=\"token punctuation\">,</span> OF_WINDOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\" spellcheck=\"true\">// by default this makes a ofGLRenderer</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// this kicks off the running of my app</span>\n<span class=\"token comment\" spellcheck=\"true\">// can be OF_WINDOW or OF_FULLSCREEN</span>\n<span class=\"token comment\" spellcheck=\"true\">// pass in width and height too:</span>\n<span class=\"token function\">ofRunApp</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">new</span> <span class=\"token function\">testApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<p>This renderer does not work so well with mobile devices (more specifically with GLES) or on ARM6/7 Linux devices (Raspberry Pi, for instance) but it is the classic version that will be supported on all laptops and desktop machines. Most of the calls to this renderer are handled by other functions, so most of this documentation will simply link to the end user functions that you should call, since you probably don't want to call the renderer directly.</p>\n<h1></h1>\n"},"config":{"visible":"True","advanced":"False","istemplated":"False","extends":"ofBaseGLRenderer"},"methods":[{"syntax":"background(&c)","name":"background","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span>c","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofBackground\">ofBackground</a></p>\n"},{"syntax":"background(brightness)","name":"background","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> brightness","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"background(hexColor, _a = 255.0f)","name":"background","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> hexColor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> _a<span class=\"token operator\">=</span><span class=\"token number\">255.0f</span>","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofBackground\">ofBackground</a></p>\n"},{"syntax":"background(r, g, b, a = 255)","name":"background","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> a<span class=\"token operator\">=</span><span class=\"token number\">255</span>","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofBackground\">ofBackground</a></p>\n"},{"syntax":"begin(&fbo, mode)","name":"begin","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofFbo <span class=\"token operator\">&amp;</span>fbo<span class=\"token punctuation\">,</span> ofFboMode mode","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"bind(&camera, &viewport)","name":"bind","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofCamera <span class=\"token operator\">&amp;</span>camera<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofRectangle <span class=\"token operator\">&amp;</span>viewport","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"bind(&fbo)","name":"bind","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofFbo <span class=\"token operator\">&amp;</span>fbo","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"bind(&material)","name":"bind","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofBaseMaterial <span class=\"token operator\">&amp;</span>material","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"bind(&shader)","name":"bind","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofShader <span class=\"token operator\">&amp;</span>shader","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"bind(&texture, location)","name":"bind","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofTexture <span class=\"token operator\">&amp;</span>texture<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> location","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"bind(&video)","name":"bind","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofBaseVideoDraws <span class=\"token operator\">&amp;</span>video","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"bindForBlitting(&fboSrc, &fboDst, attachmentPoint)","name":"bindForBlitting","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofFbo <span class=\"token operator\">&amp;</span>fboSrc<span class=\"token punctuation\">,</span> ofFbo <span class=\"token operator\">&amp;</span>fboDst<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> attachmentPoint","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"clear()","name":"clear","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"clear(brightness, a)","name":"clear","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> brightness<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofClear\">ofClear</a></p>\n"},{"syntax":"clear(r, g, b, a)","name":"clear","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofClear\">ofClear</a></p>\n"},{"syntax":"clearAlpha()","name":"clearAlpha","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofClear\">ofClear</a></p>\n"},{"syntax":"disableAlphaMask()","name":"disableAlphaMask","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"disableAntiAliasing()","name":"disableAntiAliasing","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofDisableAntiAliasing\">ofDisableAntiAliasing</a></p>\n"},{"syntax":"disableLight(lightIndex)","name":"disableLight","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> lightIndex","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"disableLighting()","name":"disableLighting","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"disablePointSprites()","name":"disablePointSprites","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"disableSeparateSpecularLight()","name":"disableSeparateSpecularLight","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"disableTextureTarget(textureTarget, textureLocation)","name":"disableTextureTarget","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> textureTarget<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> textureLocation","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"draw(&image, x, y, z, w, h, sx, sy, sw, sh)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofImage <span class=\"token operator\">&amp;</span>image<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sh","access":"public","version_started":"0071","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>Draws an texture.</p>\n"},{"syntax":"draw(&image, x, y, z, w, h, sx, sy, sw, sh)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofFloatImage <span class=\"token operator\">&amp;</span>image<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sh","access":"public","version_started":"0071","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>Draws an texture.</p>\n"},{"syntax":"draw(&image, x, y, z, w, h, sx, sy, sw, sh)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofShortImage <span class=\"token operator\">&amp;</span>image<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sh","access":"public","version_started":"0071","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>Draws an ofMesh.</p>\n"},{"syntax":"draw(&image, x, y, z, w, h, sx, sy, sw, sh)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofTexture <span class=\"token operator\">&amp;</span>image<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sh","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"draw(&mesh, renderType)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofVboMesh <span class=\"token operator\">&amp;</span>mesh<span class=\"token punctuation\">,</span> ofPolyRenderMode renderType","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"draw(&model)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofNode <span class=\"token operator\">&amp;</span>model","access":"public","version_started":"0071","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>Draws an texture.</p>\n"},{"syntax":"draw(&model, renderType)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> of3dPrimitive <span class=\"token operator\">&amp;</span>model<span class=\"token punctuation\">,</span> ofPolyRenderMode renderType","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>Draws a of3dPrimitive. Called internally.</p>\n"},{"syntax":"draw(&path)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofPath <span class=\"token operator\">&amp;</span>path","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>Handles drawing ofPath. This is called when you call ofPath::draw().</p>\n"},{"syntax":"draw(&poly)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofPolyline <span class=\"token operator\">&amp;</span>poly","access":"public","version_started":"0071","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>Draws an ofMesh.</p>\n"},{"syntax":"draw(&vbo, drawMode, first, total)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofVbo <span class=\"token operator\">&amp;</span>vbo<span class=\"token punctuation\">,</span> GLuint drawMode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> first<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"draw(&vertexData, renderType, useColors, useTextures, useNormals)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofMesh <span class=\"token operator\">&amp;</span>vertexData<span class=\"token punctuation\">,</span> ofPolyRenderMode renderType<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> useColors<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> useTextures<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> useNormals","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>Handles drawing ofPolylines. This is called when you call line.draw().</p>\n"},{"syntax":"draw(&video, x, y, w, h)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofBaseVideoDraws <span class=\"token operator\">&amp;</span>video<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"drawCircle(x, y, z, radius)","name":"drawCircle","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofDrawCircle\">ofDrawCircle</a></p>\n"},{"syntax":"drawElements(&vbo, drawMode, amt, offsetelements = 0)","name":"drawElements","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofVbo <span class=\"token operator\">&amp;</span>vbo<span class=\"token punctuation\">,</span> GLuint drawMode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> amt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> offsetelements<span class=\"token operator\">=</span><span class=\"token number\">0</span>","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"drawElementsInstanced(&vbo, drawMode, amt, primCount)","name":"drawElementsInstanced","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofVbo <span class=\"token operator\">&amp;</span>vbo<span class=\"token punctuation\">,</span> GLuint drawMode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> amt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> primCount","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"drawEllipse(x, y, z, width, height)","name":"drawEllipse","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofDrawEllipse\">ofDrawEllipse</a></p>\n"},{"syntax":"drawInstanced(&mesh, renderType, primCount)","name":"drawInstanced","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofVboMesh <span class=\"token operator\">&amp;</span>mesh<span class=\"token punctuation\">,</span> ofPolyRenderMode renderType<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> primCount","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"drawInstanced(&vbo, drawMode, first, total, primCount)","name":"drawInstanced","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofVbo <span class=\"token operator\">&amp;</span>vbo<span class=\"token punctuation\">,</span> GLuint drawMode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> first<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> primCount","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"drawLine(x1, y1, z1, x2, y2, z2)","name":"drawLine","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z2","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofLine\">ofLine</a></p>\n"},{"syntax":"drawRectangle(x, y, z, w, h)","name":"drawRectangle","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofRect\">ofRect</a></p>\n"},{"syntax":"drawString(&font, text, x, y)","name":"drawString","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofTrueTypeFont <span class=\"token operator\">&amp;</span>font<span class=\"token punctuation\">,</span> string text<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"drawString(text, x, y, z)","name":"drawString","returns":"void","returns_description":null,"parameters":"string text<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>Draws a characters to the screen.</p>\n"},{"syntax":"drawTriangle(x1, y1, z1, x2, y2, z2, x3, y3, z3)","name":"drawTriangle","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z3","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>Draw a Triangle.</p>\n"},{"syntax":"enableAntiAliasing()","name":"enableAntiAliasing","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofEnableAntiAliasing\">ofEnableAntiAliasing</a></p>\n"},{"syntax":"enableLight(lightIndex)","name":"enableLight","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> lightIndex","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"enableLighting()","name":"enableLighting","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"enablePointSprites()","name":"enablePointSprites","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"enableSeparateSpecularLight()","name":"enableSeparateSpecularLight","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"enableTextureTarget(&tex, textureLocation)","name":"enableTextureTarget","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofTexture <span class=\"token operator\">&amp;</span>tex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> textureLocation","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"end(&fbo)","name":"end","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofFbo <span class=\"token operator\">&amp;</span>fbo","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"endSmoothing()","name":"endSmoothing","returns":"void","returns_description":null,"parameters":null,"access":"private","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"finishRender()","name":"finishRender","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"get3dGraphics()","name":"get3dGraphics","returns":"const of3dGraphics &","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"get3dGraphics()","name":"get3dGraphics","returns":"of3dGraphics &","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getBackgroundAuto()","name":"getBackgroundAuto","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getBackgroundColor()","name":"getBackgroundColor","returns":"ofColor","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getCoordHandedness()","name":"getCoordHandedness","returns":"ofHandednessType","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofGetCoordHandedness\">ofGetCoordHandedness</a></p>\n"},{"syntax":"getCurrentMatrix(matrixMode_)","name":"getCurrentMatrix","returns":"glm::mat4","returns_description":null,"parameters":"ofMatrixMode matrixMode_","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getCurrentNormalMatrix()","name":"getCurrentNormalMatrix","returns":"glm::mat4","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getCurrentOrientationMatrix()","name":"getCurrentOrientationMatrix","returns":"glm::mat4","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getCurrentViewMatrix()","name":"getCurrentViewMatrix","returns":"glm::mat4","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getCurrentViewport()","name":"getCurrentViewport","returns":"ofRectangle","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofGetCurrentViewport\">ofGetCurrentViewport</a></p>\n"},{"syntax":"getFillMode()","name":"getFillMode","returns":"ofFillFlag","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofGetFill\">ofGetFill</a></p>\n"},{"syntax":"getGLVersionMajor()","name":"getGLVersionMajor","returns":"int","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getGLVersionMinor()","name":"getGLVersionMinor","returns":"int","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getLightingEnabled()","name":"getLightingEnabled","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getNativeViewport()","name":"getNativeViewport","returns":"ofRectangle","returns_description":null,"parameters":null,"access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofGetNativeViewport\">ofGetNativeViewport</a></p>\n"},{"syntax":"getPath()","name":"getPath","returns":"ofPath &","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getRectMode()","name":"getRectMode","returns":"ofRectMode","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofGetRectMode\">ofGetRectMode</a></p>\n"},{"syntax":"getStyle()","name":"getStyle","returns":"ofStyle","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getType()","name":"getType","returns":"const string &","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getViewportHeight()","name":"getViewportHeight","returns":"int","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofGetViewportHeight\">ofGetViewportHeight</a></p>\n"},{"syntax":"getViewportWidth()","name":"getViewportWidth","returns":"int","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofGetViewportWidth\">ofGetViewportWidth</a></p>\n"},{"syntax":"isVFlipped()","name":"isVFlipped","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofIsVFlipped\">ofIsVFlipped</a></p>\n"},{"syntax":"loadIdentityMatrix()","name":"loadIdentityMatrix","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0072","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofLoadIdentityMatrix\">ofLoadIdentityMatrix</a></p>\n"},{"syntax":"loadMatrix(&m)","name":"loadMatrix","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span>m","access":"public","version_started":"0072","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofLoadMatrix\">ofLoadMatrix</a></p>\n"},{"syntax":"loadMatrix(*m)","name":"loadMatrix","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>m","access":"public","version_started":"0072","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofLoadMatrix\">ofLoadMatrix</a></p>\n"},{"syntax":"loadViewMatrix(&m)","name":"loadViewMatrix","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span>m","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"matrixMode(mode)","name":"matrixMode","returns":"void","returns_description":null,"parameters":"ofMatrixMode mode","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"multMatrix(&m)","name":"multMatrix","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span>m","access":"public","version_started":"0072","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"multMatrix(*m)","name":"multMatrix","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>m","access":"public","version_started":"0072","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"multViewMatrix(&m)","name":"multViewMatrix","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span>m","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"ofGLRenderer(*window)","name":"ofGLRenderer","returns":null,"returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofAppBaseWindow <span class=\"token operator\">*</span>window","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"popMatrix()","name":"popMatrix","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../graphics/ofGraphics/#!show_ofPopMatrix\">ofPopMatrix</a></p>\n"},{"syntax":"popStyle()","name":"popStyle","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"popView()","name":"popView","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"pushMatrix()","name":"pushMatrix","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofPushMatrix\">ofPushMatrix</a></p>\n"},{"syntax":"pushStyle()","name":"pushStyle","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"pushView()","name":"pushView","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"rotateDeg(radians)","name":"rotateDeg","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> radians","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"rotateDeg(radians, vecX, vecY, vecZ)","name":"rotateDeg","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> radians<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecY<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecZ","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"rotateRad(radians)","name":"rotateRad","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> radians","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"rotateRad(radians, vecX, vecY, vecZ)","name":"rotateRad","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> radians<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecY<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecZ","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"rotateXDeg(radians)","name":"rotateXDeg","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> radians","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"rotateXRad(radians)","name":"rotateXRad","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> radians","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"rotateYDeg(radians)","name":"rotateYDeg","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> radians","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"rotateYRad(radians)","name":"rotateYRad","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> radians","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"rotateZDeg(radians)","name":"rotateZDeg","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> radians","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"rotateZRad(radians)","name":"rotateZRad","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> radians","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"saveFullViewport(&pixels)","name":"saveFullViewport","returns":"void","returns_description":null,"parameters":"ofPixels <span class=\"token operator\">&amp;</span>pixels","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"saveScreen(x, y, w, h, &pixels)","name":"saveScreen","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span> ofPixels <span class=\"token operator\">&amp;</span>pixels","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"scale(xAmnt, yAmnt, zAmnt)","name":"scale","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> xAmnt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> yAmnt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> zAmnt","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../graphics/../ofGraphics/!#show_ofScale\">ofScale</a></p>\n"},{"syntax":"setAlphaMaskTex(&tex)","name":"setAlphaMaskTex","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofTexture <span class=\"token operator\">&amp;</span>tex","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setBackgroundAuto(bManual)","name":"setBackgroundAuto","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">bool</span> bManual","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setBackgroundColor(&c)","name":"setBackgroundColor","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span>c","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setBitmapTextMode(mode)","name":"setBitmapTextMode","returns":"void","returns_description":null,"parameters":"ofDrawBitmapMode mode","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setBlendMode(blendMode)","name":"setBlendMode","returns":"void","returns_description":null,"parameters":"ofBlendMode blendMode","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofEnableBlendMode\">ofEnableBlendMode</a></p>\n"},{"syntax":"setCircleResolution(res)","name":"setCircleResolution","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> res","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofSetCircleResolution\">ofSetCircleResolution</a></p>\n"},{"syntax":"setColor(&color)","name":"setColor","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span>color","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofSetColor\">ofSetColor</a></p>\n"},{"syntax":"setColor(&color, _a)","name":"setColor","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span>color<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> _a","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofSetColor\">ofSetColor</a></p>\n"},{"syntax":"setColor(gray)","name":"setColor","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> gray","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofSetColor\">ofSetColor</a></p>\n"},{"syntax":"setColor(r, g, b)","name":"setColor","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofSetColor\">ofSetColor</a></p>\n"},{"syntax":"setColor(r, g, b, a)","name":"setColor","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> a","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofSetColor\">ofSetColor</a></p>\n"},{"syntax":"setCoordHandedness(handedness)","name":"setCoordHandedness","returns":"void","returns_description":null,"parameters":"ofHandednessType handedness","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofSetCoordHandedness\">ofSetCoordHandedness</a></p>\n"},{"syntax":"setCurveResolution(resolution)","name":"setCurveResolution","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> resolution","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setDepthTest(depthTest)","name":"setDepthTest","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">bool</span> depthTest","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofDisableDepthTest\">ofDisableDepthTest</a> and <a href=\"../ofGraphics/!#show_ofEnableDepthTest\">ofEnableDepthTest</a></p>\n"},{"syntax":"setFillMode(fill)","name":"setFillMode","returns":"void","returns_description":null,"parameters":"ofFillFlag fill","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setGlobalAmbientColor(&c)","name":"setGlobalAmbientColor","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span>c","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setHexColor(hexColor)","name":"setHexColor","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> hexColor","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofSetColor\">ofSetColor</a></p>\n"},{"syntax":"setLightAmbientColor(lightIndex, &c)","name":"setLightAmbientColor","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> lightIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofFloatColor <span class=\"token operator\">&amp;</span>c","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setLightAttenuation(lightIndex, constant, linear, quadratic)","name":"setLightAttenuation","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> lightIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> constant<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> linear<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> quadratic","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setLightDiffuseColor(lightIndex, &c)","name":"setLightDiffuseColor","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> lightIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofFloatColor <span class=\"token operator\">&amp;</span>c","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setLightPosition(lightIndex, &position)","name":"setLightPosition","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> lightIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec4 <span class=\"token operator\">&amp;</span>position","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setLightSpecularColor(lightIndex, &c)","name":"setLightSpecularColor","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> lightIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofFloatColor <span class=\"token operator\">&amp;</span>c","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setLightSpotConcentration(lightIndex, exponent)","name":"setLightSpotConcentration","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> lightIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> exponent","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setLightSpotDirection(lightIndex, &direction)","name":"setLightSpotDirection","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> lightIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec4 <span class=\"token operator\">&amp;</span>direction","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setLightSpotlightCutOff(lightIndex, spotCutOff)","name":"setLightSpotlightCutOff","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> lightIndex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> spotCutOff","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setLineSmoothing(smooth)","name":"setLineSmoothing","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">bool</span> smooth","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setLineWidth(lineWidth)","name":"setLineWidth","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> lineWidth","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofSetLineWidth\">ofSetLineWidth</a></p>\n"},{"syntax":"setOrientation(orientation, vFlip)","name":"setOrientation","returns":"void","returns_description":null,"parameters":"ofOrientation orientation<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> vFlip","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setPolyMode(mode)","name":"setPolyMode","returns":"void","returns_description":null,"parameters":"ofPolyWindingMode mode","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setRectMode(mode)","name":"setRectMode","returns":"void","returns_description":null,"parameters":"ofRectMode mode","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofSetRectMode\">ofSetRectMode</a></p>\n"},{"syntax":"setSmoothLighting(b)","name":"setSmoothLighting","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">bool</span> b","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setStyle(&style)","name":"setStyle","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofStyle <span class=\"token operator\">&amp;</span>style","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setup()","name":"setup","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setupGraphicDefaults()","name":"setupGraphicDefaults","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setupScreen()","name":"setupScreen","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofSetupScreen\">ofSetupScreen</a></p>\n"},{"syntax":"setupScreenOrtho(width, height, nearDist, farDist)","name":"setupScreenOrtho","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> nearDist<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> farDist","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofSetupScreenOrtho\">ofSetupScreenOrth</a></p>\n"},{"syntax":"setupScreenPerspective(width, height, fov, nearDist, farDist)","name":"setupScreenPerspective","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> fov<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> nearDist<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> farDist","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofSetupScreenPerspective\">ofSetupScreenPerspective</a></p>\n"},{"syntax":"startRender()","name":"startRender","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"startSmoothing()","name":"startSmoothing","returns":"void","returns_description":null,"parameters":null,"access":"private","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"texturesNeedVFlip()","name":"texturesNeedVFlip","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"translate(&p)","name":"translate","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span>p","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofTranslate\">ofTranslate</a></p>\n"},{"syntax":"translate(x, y, z)","name":"translate","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>See <a href=\"../ofGraphics/!#show_ofTranslate\">ofTranslate</a></p>\n"},{"syntax":"unbind(&camera)","name":"unbind","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofCamera <span class=\"token operator\">&amp;</span>camera","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"unbind(&fbo)","name":"unbind","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofFbo <span class=\"token operator\">&amp;</span>fbo","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"unbind(&material)","name":"unbind","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofBaseMaterial <span class=\"token operator\">&amp;</span>material","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"unbind(&shader)","name":"unbind","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofShader <span class=\"token operator\">&amp;</span>shader","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"unbind(&texture, location)","name":"unbind","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofTexture <span class=\"token operator\">&amp;</span>texture<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> location","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"unbind(&video)","name":"unbind","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofBaseVideoDraws <span class=\"token operator\">&amp;</span>video","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"viewport(viewport)","name":"viewport","returns":"void","returns_description":null,"parameters":"ofRectangle viewport","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"viewport(x, y, width, height, vflip = true)","name":"viewport","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> vflip<span class=\"token operator\">=</span><span class=\"token boolean\">true</span>","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"~ofGLRenderer()","name":"~ofGLRenderer","returns":null,"returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"name":"TYPE","type":"const string","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"alphaMaskTextureTarget","type":"int","access":"private","version_started":"0.9.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{"name":"bBackgroundAuto","type":"bool","access":"private","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"bitmapFont","type":"ofBitmapFont","access":"private","version_started":"0.9.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{"name":"circlePoints","type":"ofPoint","access":"private","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"circlePolyline","type":"ofPolyline","access":"private","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"currentFramebufferId","type":"GLuint","access":"private","version_started":"0.9.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"<p>&lt; the framebuffer id currently bound to the GL_FRAMEBUFFER target</p>\n","desc":""},{"name":"currentStyle","type":"ofStyle","access":"private","version_started":"0.9.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{"name":"defaultFramebufferId","type":"GLuint","access":"private","version_started":"0.9.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"<p>&lt; default GL_FRAMEBUFFER_BINDING, windowing frameworks might want to set this to their MSAA framebuffer, defaults to 0</p>\n","desc":""},{"short":"<p>&lt; keeps track of currently bound framebuffers</p>\n","desc":""},{"name":"graphics3d","type":"of3dGraphics","access":"private","version_started":"0.9.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{"name":"lightingEnabled","type":"bool","access":"private","version_started":"0.9.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{"name":"linePoints","type":"ofPoint","access":"private","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"materialBound","type":"bool","access":"private","version_started":"0.9.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{"name":"matrixStack","type":"ofMatrixStack","access":"private","version_started":"0073","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"normalsEnabled","type":"bool","access":"private","version_started":"0.9.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{"name":"path","type":"ofPath","access":"private","version_started":"0.9.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{"name":"rectPoints","type":"ofPoint","access":"private","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"short":"","desc":""},{"short":"","desc":""},{"name":"triPoints","type":"ofPoint","access":"private","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"window","type":"const ofAppBaseWindow *","access":"private","version_started":"0.9.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{}],"document":"<p>#class ofGLRenderer</p>\n<p>&lt;!--\n<em>visible: True</em>\n<em>advanced: False</em>\n<em>istemplated: False</em>\n<em>extends: ofBaseGLRenderer</em>\n--&gt;</p>\n<p>##InlineDescription</p>\n<p>##Description</p>\n<p>The ofGLRenderer is a renderer for OF that supports OpenGL 2 and lower. It's the more classic, &quot;direct mode&quot; version of OpenGL that you may be familiar with but that also uses vertex arrays underneath to store all of the vertices that you create for the basic OF drawing operations. This is the default renderer that is created when you create your OF app:</p>\n<pre><code><span class=\"token function\">ofSetupOpenGL</span><span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">,</span><span class=\"token number\">768</span><span class=\"token punctuation\">,</span> OF_WINDOW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\" spellcheck=\"true\">// by default this makes a ofGLRenderer</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// this kicks off the running of my app</span>\n<span class=\"token comment\" spellcheck=\"true\">// can be OF_WINDOW or OF_FULLSCREEN</span>\n<span class=\"token comment\" spellcheck=\"true\">// pass in width and height too:</span>\n<span class=\"token function\">ofRunApp</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">new</span> <span class=\"token function\">testApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<p>This renderer does not work so well with mobile devices (more specifically with GLES) or on ARM6/7 Linux devices (Raspberry Pi, for instance) but it is the classic version that will be supported on all laptops and desktop machines. Most of the calls to this renderer are handled by other functions, so most of this documentation will simply link to the end user functions that you should call, since you probably don't want to call the renderer directly.</p>\n<p>##Methods</p>\n<p>###void background(&amp;c)</p>\n<p>&lt;!--\n<em>syntax: background(&amp;c)</em>\n<em>name: background</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofColor &amp;c</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofBackground\">ofBackground</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void background(brightness)</p>\n<p>&lt;!--\n<em>syntax: background(brightness)</em>\n<em>name: background</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float brightness</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void background(hexColor, _a = 255.0f)</p>\n<p>&lt;!--\n_syntax: background(hexColor, <em>a = 255.0f)</em>\n<em>name: background</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: int hexColor, float <em>a=255.0f</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofBackground\">ofBackground</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void background(r, g, b, a = 255)</p>\n<p>&lt;!--\n<em>syntax: background(r, g, b, a = 255)</em>\n<em>name: background</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: int r, int g, int b, int a=255</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofBackground\">ofBackground</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void begin(&amp;fbo, mode)</p>\n<p>&lt;!--\n<em>syntax: begin(&amp;fbo, mode)</em>\n<em>name: begin</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofFbo &amp;fbo, ofFboMode mode</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void bind(&amp;camera, &amp;viewport)</p>\n<p>&lt;!--\n<em>syntax: bind(&amp;camera, &amp;viewport)</em>\n<em>name: bind</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofCamera &amp;camera, const ofRectangle &amp;viewport</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void bind(&amp;fbo)</p>\n<p>&lt;!--\n<em>syntax: bind(&amp;fbo)</em>\n<em>name: bind</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofFbo &amp;fbo</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void bind(&amp;material)</p>\n<p>&lt;!--\n<em>syntax: bind(&amp;material)</em>\n<em>name: bind</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofBaseMaterial &amp;material</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void bind(&amp;shader)</p>\n<p>&lt;!--\n<em>syntax: bind(&amp;shader)</em>\n<em>name: bind</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofShader &amp;shader</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void bind(&amp;texture, location)</p>\n<p>&lt;!--\n<em>syntax: bind(&amp;texture, location)</em>\n<em>name: bind</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofTexture &amp;texture, int location</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void bind(&amp;video)</p>\n<p>&lt;!--\n<em>syntax: bind(&amp;video)</em>\n<em>name: bind</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofBaseVideoDraws &amp;video</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void bindForBlitting(&amp;fboSrc, &amp;fboDst, attachmentPoint)</p>\n<p>&lt;!--\n<em>syntax: bindForBlitting(&amp;fboSrc, &amp;fboDst, attachmentPoint)</em>\n<em>name: bindForBlitting</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofFbo &amp;fboSrc, ofFbo &amp;fboDst, int attachmentPoint</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void clear()</p>\n<p>&lt;!--\n<em>syntax: clear()</em>\n<em>name: clear</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void clear(brightness, a)</p>\n<p>&lt;!--\n<em>syntax: clear(brightness, a)</em>\n<em>name: clear</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float brightness, float a</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofClear\">ofClear</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void clear(r, g, b, a)</p>\n<p>&lt;!--\n<em>syntax: clear(r, g, b, a)</em>\n<em>name: clear</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float r, float g, float b, float a</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofClear\">ofClear</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void clearAlpha()</p>\n<p>&lt;!--\n<em>syntax: clearAlpha()</em>\n<em>name: clearAlpha</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofClear\">ofClear</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void disableAlphaMask()</p>\n<p>&lt;!--\n<em>syntax: disableAlphaMask()</em>\n<em>name: disableAlphaMask</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void disableAntiAliasing()</p>\n<p>&lt;!--\n<em>syntax: disableAntiAliasing()</em>\n<em>name: disableAntiAliasing</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0073</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofDisableAntiAliasing\">ofDisableAntiAliasing</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void disableLight(lightIndex)</p>\n<p>&lt;!--\n<em>syntax: disableLight(lightIndex)</em>\n<em>name: disableLight</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: int lightIndex</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void disableLighting()</p>\n<p>&lt;!--\n<em>syntax: disableLighting()</em>\n<em>name: disableLighting</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void disablePointSprites()</p>\n<p>&lt;!--\n<em>syntax: disablePointSprites()</em>\n<em>name: disablePointSprites</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void disableSeparateSpecularLight()</p>\n<p>&lt;!--\n<em>syntax: disableSeparateSpecularLight()</em>\n<em>name: disableSeparateSpecularLight</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void disableTextureTarget(textureTarget, textureLocation)</p>\n<p>&lt;!--\n<em>syntax: disableTextureTarget(textureTarget, textureLocation)</em>\n<em>name: disableTextureTarget</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: int textureTarget, int textureLocation</em>\n<em>access: public</em>\n<em>version_started: 0073</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void draw(&amp;image, x, y, z, w, h, sx, sy, sw, sh)</p>\n<p>&lt;!--\n<em>syntax: draw(&amp;image, x, y, z, w, h, sx, sy, sw, sh)</em>\n<em>name: draw</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofImage &amp;image, float x, float y, float z, float w, float h, float sx, float sy, float sw, float sh</em>\n<em>access: public</em>\n<em>version_started: 0071</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>Draws an texture.</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void draw(&amp;image, x, y, z, w, h, sx, sy, sw, sh)</p>\n<p>&lt;!--\n<em>syntax: draw(&amp;image, x, y, z, w, h, sx, sy, sw, sh)</em>\n<em>name: draw</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofFloatImage &amp;image, float x, float y, float z, float w, float h, float sx, float sy, float sw, float sh</em>\n<em>access: public</em>\n<em>version_started: 0071</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>Draws an texture.</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void draw(&amp;image, x, y, z, w, h, sx, sy, sw, sh)</p>\n<p>&lt;!--\n<em>syntax: draw(&amp;image, x, y, z, w, h, sx, sy, sw, sh)</em>\n<em>name: draw</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofShortImage &amp;image, float x, float y, float z, float w, float h, float sx, float sy, float sw, float sh</em>\n<em>access: public</em>\n<em>version_started: 0071</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>Draws an ofMesh.</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void draw(&amp;image, x, y, z, w, h, sx, sy, sw, sh)</p>\n<p>&lt;!--\n<em>syntax: draw(&amp;image, x, y, z, w, h, sx, sy, sw, sh)</em>\n<em>name: draw</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofTexture &amp;image, float x, float y, float z, float w, float h, float sx, float sy, float sw, float sh</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void draw(&amp;mesh, renderType)</p>\n<p>&lt;!--\n<em>syntax: draw(&amp;mesh, renderType)</em>\n<em>name: draw</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofVboMesh &amp;mesh, ofPolyRenderMode renderType</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void draw(&amp;model)</p>\n<p>&lt;!--\n<em>syntax: draw(&amp;model)</em>\n<em>name: draw</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofNode &amp;model</em>\n<em>access: public</em>\n<em>version_started: 0071</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>Draws an texture.</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void draw(&amp;model, renderType)</p>\n<p>&lt;!--\n<em>syntax: draw(&amp;model, renderType)</em>\n<em>name: draw</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const of3dPrimitive &amp;model, ofPolyRenderMode renderType</em>\n<em>access: public</em>\n<em>version_started: 0073</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>Draws a of3dPrimitive. Called internally.</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void draw(&amp;path)</p>\n<p>&lt;!--\n<em>syntax: draw(&amp;path)</em>\n<em>name: draw</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofPath &amp;path</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>Handles drawing ofPath. This is called when you call ofPath::draw().</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void draw(&amp;poly)</p>\n<p>&lt;!--\n<em>syntax: draw(&amp;poly)</em>\n<em>name: draw</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofPolyline &amp;poly</em>\n<em>access: public</em>\n<em>version_started: 0071</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>Draws an ofMesh.</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void draw(&amp;vbo, drawMode, first, total)</p>\n<p>&lt;!--\n<em>syntax: draw(&amp;vbo, drawMode, first, total)</em>\n<em>name: draw</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofVbo &amp;vbo, GLuint drawMode, int first, int total</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void draw(&amp;vertexData, renderType, useColors, useTextures, useNormals)</p>\n<p>&lt;!--\n<em>syntax: draw(&amp;vertexData, renderType, useColors, useTextures, useNormals)</em>\n<em>name: draw</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofMesh &amp;vertexData, ofPolyRenderMode renderType, bool useColors, bool useTextures, bool useNormals</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>Handles drawing ofPolylines. This is called when you call line.draw().</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void draw(&amp;video, x, y, w, h)</p>\n<p>&lt;!--\n<em>syntax: draw(&amp;video, x, y, w, h)</em>\n<em>name: draw</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofBaseVideoDraws &amp;video, float x, float y, float w, float h</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void drawCircle(x, y, z, radius)</p>\n<p>&lt;!--\n<em>syntax: drawCircle(x, y, z, radius)</em>\n<em>name: drawCircle</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float x, float y, float z, float radius</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofDrawCircle\">ofDrawCircle</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void drawElements(&amp;vbo, drawMode, amt, offsetelements = 0)</p>\n<p>&lt;!--\n<em>syntax: drawElements(&amp;vbo, drawMode, amt, offsetelements = 0)</em>\n<em>name: drawElements</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofVbo &amp;vbo, GLuint drawMode, int amt, int offsetelements=0</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void drawElementsInstanced(&amp;vbo, drawMode, amt, primCount)</p>\n<p>&lt;!--\n<em>syntax: drawElementsInstanced(&amp;vbo, drawMode, amt, primCount)</em>\n<em>name: drawElementsInstanced</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofVbo &amp;vbo, GLuint drawMode, int amt, int primCount</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void drawEllipse(x, y, z, width, height)</p>\n<p>&lt;!--\n<em>syntax: drawEllipse(x, y, z, width, height)</em>\n<em>name: drawEllipse</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float x, float y, float z, float width, float height</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofDrawEllipse\">ofDrawEllipse</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void drawInstanced(&amp;mesh, renderType, primCount)</p>\n<p>&lt;!--\n<em>syntax: drawInstanced(&amp;mesh, renderType, primCount)</em>\n<em>name: drawInstanced</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofVboMesh &amp;mesh, ofPolyRenderMode renderType, int primCount</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void drawInstanced(&amp;vbo, drawMode, first, total, primCount)</p>\n<p>&lt;!--\n<em>syntax: drawInstanced(&amp;vbo, drawMode, first, total, primCount)</em>\n<em>name: drawInstanced</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofVbo &amp;vbo, GLuint drawMode, int first, int total, int primCount</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void drawLine(x1, y1, z1, x2, y2, z2)</p>\n<p>&lt;!--\n<em>syntax: drawLine(x1, y1, z1, x2, y2, z2)</em>\n<em>name: drawLine</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float x1, float y1, float z1, float x2, float y2, float z2</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofLine\">ofLine</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void drawRectangle(x, y, z, w, h)</p>\n<p>&lt;!--\n<em>syntax: drawRectangle(x, y, z, w, h)</em>\n<em>name: drawRectangle</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float x, float y, float z, float w, float h</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofRect\">ofRect</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void drawString(&amp;font, text, x, y)</p>\n<p>&lt;!--\n<em>syntax: drawString(&amp;font, text, x, y)</em>\n<em>name: drawString</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofTrueTypeFont &amp;font, string text, float x, float y</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void drawString(text, x, y, z)</p>\n<p>&lt;!--\n<em>syntax: drawString(text, x, y, z)</em>\n<em>name: drawString</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: string text, float x, float y, float z</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>Draws a characters to the screen.</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void drawTriangle(x1, y1, z1, x2, y2, z2, x3, y3, z3)</p>\n<p>&lt;!--\n<em>syntax: drawTriangle(x1, y1, z1, x2, y2, z2, x3, y3, z3)</em>\n<em>name: drawTriangle</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>Draw a Triangle.</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void enableAntiAliasing()</p>\n<p>&lt;!--\n<em>syntax: enableAntiAliasing()</em>\n<em>name: enableAntiAliasing</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0073</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofEnableAntiAliasing\">ofEnableAntiAliasing</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void enableLight(lightIndex)</p>\n<p>&lt;!--\n<em>syntax: enableLight(lightIndex)</em>\n<em>name: enableLight</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: int lightIndex</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void enableLighting()</p>\n<p>&lt;!--\n<em>syntax: enableLighting()</em>\n<em>name: enableLighting</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void enablePointSprites()</p>\n<p>&lt;!--\n<em>syntax: enablePointSprites()</em>\n<em>name: enablePointSprites</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void enableSeparateSpecularLight()</p>\n<p>&lt;!--\n<em>syntax: enableSeparateSpecularLight()</em>\n<em>name: enableSeparateSpecularLight</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void enableTextureTarget(&amp;tex, textureLocation)</p>\n<p>&lt;!--\n<em>syntax: enableTextureTarget(&amp;tex, textureLocation)</em>\n<em>name: enableTextureTarget</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofTexture &amp;tex, int textureLocation</em>\n<em>access: public</em>\n<em>version_started: 0073</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void end(&amp;fbo)</p>\n<p>&lt;!--\n<em>syntax: end(&amp;fbo)</em>\n<em>name: end</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofFbo &amp;fbo</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void endSmoothing()</p>\n<p>&lt;!--\n<em>syntax: endSmoothing()</em>\n<em>name: endSmoothing</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: private</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void finishRender()</p>\n<p>&lt;!--\n<em>syntax: finishRender()</em>\n<em>name: finishRender</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###const of3dGraphics &amp; get3dGraphics()</p>\n<p>&lt;!--\n<em>syntax: get3dGraphics()</em>\n<em>name: get3dGraphics</em>\n<em>returns: const of3dGraphics &amp;</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###of3dGraphics &amp; get3dGraphics()</p>\n<p>&lt;!--\n<em>syntax: get3dGraphics()</em>\n<em>name: get3dGraphics</em>\n<em>returns: of3dGraphics &amp;</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool getBackgroundAuto()</p>\n<p>&lt;!--\n<em>syntax: getBackgroundAuto()</em>\n<em>name: getBackgroundAuto</em>\n<em>returns: bool</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofColor getBackgroundColor()</p>\n<p>&lt;!--\n<em>syntax: getBackgroundColor()</em>\n<em>name: getBackgroundColor</em>\n<em>returns: ofColor</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofHandednessType getCoordHandedness()</p>\n<p>&lt;!--\n<em>syntax: getCoordHandedness()</em>\n<em>name: getCoordHandedness</em>\n<em>returns: ofHandednessType</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofGetCoordHandedness\">ofGetCoordHandedness</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###glm::mat4 getCurrentMatrix(matrixMode_)</p>\n<p>&lt;!--\n<em>syntax: getCurrentMatrix(matrixMode</em>)_\n<em>name: getCurrentMatrix</em>\n<em>returns: glm::mat4</em>\n<em>returns_description: _\n<em>parameters: ofMatrixMode matrixMode</em></em>\n<em>access: public</em>\n<em>version_started: 0.8.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###glm::mat4 getCurrentNormalMatrix()</p>\n<p>&lt;!--\n<em>syntax: getCurrentNormalMatrix()</em>\n<em>name: getCurrentNormalMatrix</em>\n<em>returns: glm::mat4</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###glm::mat4 getCurrentOrientationMatrix()</p>\n<p>&lt;!--\n<em>syntax: getCurrentOrientationMatrix()</em>\n<em>name: getCurrentOrientationMatrix</em>\n<em>returns: glm::mat4</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###glm::mat4 getCurrentViewMatrix()</p>\n<p>&lt;!--\n<em>syntax: getCurrentViewMatrix()</em>\n<em>name: getCurrentViewMatrix</em>\n<em>returns: glm::mat4</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofRectangle getCurrentViewport()</p>\n<p>&lt;!--\n<em>syntax: getCurrentViewport()</em>\n<em>name: getCurrentViewport</em>\n<em>returns: ofRectangle</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofGetCurrentViewport\">ofGetCurrentViewport</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofFillFlag getFillMode()</p>\n<p>&lt;!--\n<em>syntax: getFillMode()</em>\n<em>name: getFillMode</em>\n<em>returns: ofFillFlag</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofGetFill\">ofGetFill</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###int getGLVersionMajor()</p>\n<p>&lt;!--\n<em>syntax: getGLVersionMajor()</em>\n<em>name: getGLVersionMajor</em>\n<em>returns: int</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###int getGLVersionMinor()</p>\n<p>&lt;!--\n<em>syntax: getGLVersionMinor()</em>\n<em>name: getGLVersionMinor</em>\n<em>returns: int</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool getLightingEnabled()</p>\n<p>&lt;!--\n<em>syntax: getLightingEnabled()</em>\n<em>name: getLightingEnabled</em>\n<em>returns: bool</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofRectangle getNativeViewport()</p>\n<p>&lt;!--\n<em>syntax: getNativeViewport()</em>\n<em>name: getNativeViewport</em>\n<em>returns: ofRectangle</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0073</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofGetNativeViewport\">ofGetNativeViewport</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofPath &amp; getPath()</p>\n<p>&lt;!--\n<em>syntax: getPath()</em>\n<em>name: getPath</em>\n<em>returns: ofPath &amp;</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofRectMode getRectMode()</p>\n<p>&lt;!--\n<em>syntax: getRectMode()</em>\n<em>name: getRectMode</em>\n<em>returns: ofRectMode</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofGetRectMode\">ofGetRectMode</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofStyle getStyle()</p>\n<p>&lt;!--\n<em>syntax: getStyle()</em>\n<em>name: getStyle</em>\n<em>returns: ofStyle</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###const string &amp; getType()</p>\n<p>&lt;!--\n<em>syntax: getType()</em>\n<em>name: getType</em>\n<em>returns: const string &amp;</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###int getViewportHeight()</p>\n<p>&lt;!--\n<em>syntax: getViewportHeight()</em>\n<em>name: getViewportHeight</em>\n<em>returns: int</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofGetViewportHeight\">ofGetViewportHeight</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###int getViewportWidth()</p>\n<p>&lt;!--\n<em>syntax: getViewportWidth()</em>\n<em>name: getViewportWidth</em>\n<em>returns: int</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofGetViewportWidth\">ofGetViewportWidth</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool isVFlipped()</p>\n<p>&lt;!--\n<em>syntax: isVFlipped()</em>\n<em>name: isVFlipped</em>\n<em>returns: bool</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0073</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofIsVFlipped\">ofIsVFlipped</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void loadIdentityMatrix()</p>\n<p>&lt;!--\n<em>syntax: loadIdentityMatrix()</em>\n<em>name: loadIdentityMatrix</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0072</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofLoadIdentityMatrix\">ofLoadIdentityMatrix</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void loadMatrix(&amp;m)</p>\n<p>&lt;!--\n<em>syntax: loadMatrix(&amp;m)</em>\n<em>name: loadMatrix</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const glm::mat4 &amp;m</em>\n<em>access: public</em>\n<em>version_started: 0072</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofLoadMatrix\">ofLoadMatrix</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void loadMatrix(*m)</p>\n<p>&lt;!--\n<em>syntax: loadMatrix(*m)</em>\n<em>name: loadMatrix</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const float *m</em>\n<em>access: public</em>\n<em>version_started: 0072</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofLoadMatrix\">ofLoadMatrix</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void loadViewMatrix(&amp;m)</p>\n<p>&lt;!--\n<em>syntax: loadViewMatrix(&amp;m)</em>\n<em>name: loadViewMatrix</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const glm::mat4 &amp;m</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void matrixMode(mode)</p>\n<p>&lt;!--\n<em>syntax: matrixMode(mode)</em>\n<em>name: matrixMode</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: ofMatrixMode mode</em>\n<em>access: public</em>\n<em>version_started: 0073</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void multMatrix(&amp;m)</p>\n<p>&lt;!--\n<em>syntax: multMatrix(&amp;m)</em>\n<em>name: multMatrix</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const glm::mat4 &amp;m</em>\n<em>access: public</em>\n<em>version_started: 0072</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void multMatrix(*m)</p>\n<p>&lt;!--\n<em>syntax: multMatrix(*m)</em>\n<em>name: multMatrix</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const float *m</em>\n<em>access: public</em>\n<em>version_started: 0072</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void multViewMatrix(&amp;m)</p>\n<p>&lt;!--\n<em>syntax: multViewMatrix(&amp;m)</em>\n<em>name: multViewMatrix</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const glm::mat4 &amp;m</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<h3>ofGLRenderer(*window)</h3>\n<p>&lt;!--\n<em>syntax: ofGLRenderer(*window)</em>\n<em>name: ofGLRenderer</em>\n_returns: _\n_returns_description: _\n<em>parameters: const ofAppBaseWindow *window</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void popMatrix()</p>\n<p>&lt;!--\n<em>syntax: popMatrix()</em>\n<em>name: popMatrix</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../graphics/ofGraphics/#!show_ofPopMatrix\">ofPopMatrix</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void popStyle()</p>\n<p>&lt;!--\n<em>syntax: popStyle()</em>\n<em>name: popStyle</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void popView()</p>\n<p>&lt;!--\n<em>syntax: popView()</em>\n<em>name: popView</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void pushMatrix()</p>\n<p>&lt;!--\n<em>syntax: pushMatrix()</em>\n<em>name: pushMatrix</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofPushMatrix\">ofPushMatrix</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void pushStyle()</p>\n<p>&lt;!--\n<em>syntax: pushStyle()</em>\n<em>name: pushStyle</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void pushView()</p>\n<p>&lt;!--\n<em>syntax: pushView()</em>\n<em>name: pushView</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void rotateDeg(radians)</p>\n<p>&lt;!--\n<em>syntax: rotateDeg(radians)</em>\n<em>name: rotateDeg</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float radians</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void rotateDeg(radians, vecX, vecY, vecZ)</p>\n<p>&lt;!--\n<em>syntax: rotateDeg(radians, vecX, vecY, vecZ)</em>\n<em>name: rotateDeg</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float radians, float vecX, float vecY, float vecZ</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void rotateRad(radians)</p>\n<p>&lt;!--\n<em>syntax: rotateRad(radians)</em>\n<em>name: rotateRad</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float radians</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void rotateRad(radians, vecX, vecY, vecZ)</p>\n<p>&lt;!--\n<em>syntax: rotateRad(radians, vecX, vecY, vecZ)</em>\n<em>name: rotateRad</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float radians, float vecX, float vecY, float vecZ</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void rotateXDeg(radians)</p>\n<p>&lt;!--\n<em>syntax: rotateXDeg(radians)</em>\n<em>name: rotateXDeg</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float radians</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void rotateXRad(radians)</p>\n<p>&lt;!--\n<em>syntax: rotateXRad(radians)</em>\n<em>name: rotateXRad</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float radians</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void rotateYDeg(radians)</p>\n<p>&lt;!--\n<em>syntax: rotateYDeg(radians)</em>\n<em>name: rotateYDeg</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float radians</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void rotateYRad(radians)</p>\n<p>&lt;!--\n<em>syntax: rotateYRad(radians)</em>\n<em>name: rotateYRad</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float radians</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void rotateZDeg(radians)</p>\n<p>&lt;!--\n<em>syntax: rotateZDeg(radians)</em>\n<em>name: rotateZDeg</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float radians</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void rotateZRad(radians)</p>\n<p>&lt;!--\n<em>syntax: rotateZRad(radians)</em>\n<em>name: rotateZRad</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float radians</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void saveFullViewport(&amp;pixels)</p>\n<p>&lt;!--\n<em>syntax: saveFullViewport(&amp;pixels)</em>\n<em>name: saveFullViewport</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: ofPixels &amp;pixels</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void saveScreen(x, y, w, h, &amp;pixels)</p>\n<p>&lt;!--\n<em>syntax: saveScreen(x, y, w, h, &amp;pixels)</em>\n<em>name: saveScreen</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: int x, int y, int w, int h, ofPixels &amp;pixels</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void scale(xAmnt, yAmnt, zAmnt)</p>\n<p>&lt;!--\n<em>syntax: scale(xAmnt, yAmnt, zAmnt)</em>\n<em>name: scale</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float xAmnt, float yAmnt, float zAmnt</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../graphics/../ofGraphics/!#show_ofScale\">ofScale</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setAlphaMaskTex(&amp;tex)</p>\n<p>&lt;!--\n<em>syntax: setAlphaMaskTex(&amp;tex)</em>\n<em>name: setAlphaMaskTex</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofTexture &amp;tex</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setBackgroundAuto(bManual)</p>\n<p>&lt;!--\n<em>syntax: setBackgroundAuto(bManual)</em>\n<em>name: setBackgroundAuto</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: bool bManual</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setBackgroundColor(&amp;c)</p>\n<p>&lt;!--\n<em>syntax: setBackgroundColor(&amp;c)</em>\n<em>name: setBackgroundColor</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofColor &amp;c</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setBitmapTextMode(mode)</p>\n<p>&lt;!--\n<em>syntax: setBitmapTextMode(mode)</em>\n<em>name: setBitmapTextMode</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: ofDrawBitmapMode mode</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setBlendMode(blendMode)</p>\n<p>&lt;!--\n<em>syntax: setBlendMode(blendMode)</em>\n<em>name: setBlendMode</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: ofBlendMode blendMode</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofEnableBlendMode\">ofEnableBlendMode</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setCircleResolution(res)</p>\n<p>&lt;!--\n<em>syntax: setCircleResolution(res)</em>\n<em>name: setCircleResolution</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: int res</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofSetCircleResolution\">ofSetCircleResolution</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setColor(&amp;color)</p>\n<p>&lt;!--\n<em>syntax: setColor(&amp;color)</em>\n<em>name: setColor</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofColor &amp;color</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofSetColor\">ofSetColor</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setColor(&amp;color, _a)</p>\n<p>&lt;!--\n_syntax: setColor(&amp;color, <em>a)</em>\n<em>name: setColor</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: const ofColor &amp;color, int <em>a</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofSetColor\">ofSetColor</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setColor(gray)</p>\n<p>&lt;!--\n<em>syntax: setColor(gray)</em>\n<em>name: setColor</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: int gray</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofSetColor\">ofSetColor</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setColor(r, g, b)</p>\n<p>&lt;!--\n<em>syntax: setColor(r, g, b)</em>\n<em>name: setColor</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: int r, int g, int b</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofSetColor\">ofSetColor</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setColor(r, g, b, a)</p>\n<p>&lt;!--\n<em>syntax: setColor(r, g, b, a)</em>\n<em>name: setColor</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: int r, int g, int b, int a</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofSetColor\">ofSetColor</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setCoordHandedness(handedness)</p>\n<p>&lt;!--\n<em>syntax: setCoordHandedness(handedness)</em>\n<em>name: setCoordHandedness</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: ofHandednessType handedness</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofSetCoordHandedness\">ofSetCoordHandedness</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setCurveResolution(resolution)</p>\n<p>&lt;!--\n<em>syntax: setCurveResolution(resolution)</em>\n<em>name: setCurveResolution</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: int resolution</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setDepthTest(depthTest)</p>\n<p>&lt;!--\n<em>syntax: setDepthTest(depthTest)</em>\n<em>name: setDepthTest</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: bool depthTest</em>\n<em>access: public</em>\n<em>version_started: 0073</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofDisableDepthTest\">ofDisableDepthTest</a> and <a href=\"../ofGraphics/!#show_ofEnableDepthTest\">ofEnableDepthTest</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setFillMode(fill)</p>\n<p>&lt;!--\n<em>syntax: setFillMode(fill)</em>\n<em>name: setFillMode</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: ofFillFlag fill</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setGlobalAmbientColor(&amp;c)</p>\n<p>&lt;!--\n<em>syntax: setGlobalAmbientColor(&amp;c)</em>\n<em>name: setGlobalAmbientColor</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofColor &amp;c</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setHexColor(hexColor)</p>\n<p>&lt;!--\n<em>syntax: setHexColor(hexColor)</em>\n<em>name: setHexColor</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: int hexColor</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofSetColor\">ofSetColor</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setLightAmbientColor(lightIndex, &amp;c)</p>\n<p>&lt;!--\n<em>syntax: setLightAmbientColor(lightIndex, &amp;c)</em>\n<em>name: setLightAmbientColor</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: int lightIndex, const ofFloatColor &amp;c</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setLightAttenuation(lightIndex, constant, linear, quadratic)</p>\n<p>&lt;!--\n<em>syntax: setLightAttenuation(lightIndex, constant, linear, quadratic)</em>\n<em>name: setLightAttenuation</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: int lightIndex, float constant, float linear, float quadratic</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setLightDiffuseColor(lightIndex, &amp;c)</p>\n<p>&lt;!--\n<em>syntax: setLightDiffuseColor(lightIndex, &amp;c)</em>\n<em>name: setLightDiffuseColor</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: int lightIndex, const ofFloatColor &amp;c</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setLightPosition(lightIndex, &amp;position)</p>\n<p>&lt;!--\n<em>syntax: setLightPosition(lightIndex, &amp;position)</em>\n<em>name: setLightPosition</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: int lightIndex, const glm::vec4 &amp;position</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setLightSpecularColor(lightIndex, &amp;c)</p>\n<p>&lt;!--\n<em>syntax: setLightSpecularColor(lightIndex, &amp;c)</em>\n<em>name: setLightSpecularColor</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: int lightIndex, const ofFloatColor &amp;c</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setLightSpotConcentration(lightIndex, exponent)</p>\n<p>&lt;!--\n<em>syntax: setLightSpotConcentration(lightIndex, exponent)</em>\n<em>name: setLightSpotConcentration</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: int lightIndex, float exponent</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setLightSpotDirection(lightIndex, &amp;direction)</p>\n<p>&lt;!--\n<em>syntax: setLightSpotDirection(lightIndex, &amp;direction)</em>\n<em>name: setLightSpotDirection</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: int lightIndex, const glm::vec4 &amp;direction</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setLightSpotlightCutOff(lightIndex, spotCutOff)</p>\n<p>&lt;!--\n<em>syntax: setLightSpotlightCutOff(lightIndex, spotCutOff)</em>\n<em>name: setLightSpotlightCutOff</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: int lightIndex, float spotCutOff</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setLineSmoothing(smooth)</p>\n<p>&lt;!--\n<em>syntax: setLineSmoothing(smooth)</em>\n<em>name: setLineSmoothing</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: bool smooth</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setLineWidth(lineWidth)</p>\n<p>&lt;!--\n<em>syntax: setLineWidth(lineWidth)</em>\n<em>name: setLineWidth</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float lineWidth</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofSetLineWidth\">ofSetLineWidth</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setOrientation(orientation, vFlip)</p>\n<p>&lt;!--\n<em>syntax: setOrientation(orientation, vFlip)</em>\n<em>name: setOrientation</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: ofOrientation orientation, bool vFlip</em>\n<em>access: public</em>\n<em>version_started: 0073</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setPolyMode(mode)</p>\n<p>&lt;!--\n<em>syntax: setPolyMode(mode)</em>\n<em>name: setPolyMode</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: ofPolyWindingMode mode</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setRectMode(mode)</p>\n<p>&lt;!--\n<em>syntax: setRectMode(mode)</em>\n<em>name: setRectMode</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: ofRectMode mode</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofSetRectMode\">ofSetRectMode</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setSmoothLighting(b)</p>\n<p>&lt;!--\n<em>syntax: setSmoothLighting(b)</em>\n<em>name: setSmoothLighting</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: bool b</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setStyle(&amp;style)</p>\n<p>&lt;!--\n<em>syntax: setStyle(&amp;style)</em>\n<em>name: setStyle</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofStyle &amp;style</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setup()</p>\n<p>&lt;!--\n<em>syntax: setup()</em>\n<em>name: setup</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setupGraphicDefaults()</p>\n<p>&lt;!--\n<em>syntax: setupGraphicDefaults()</em>\n<em>name: setupGraphicDefaults</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setupScreen()</p>\n<p>&lt;!--\n<em>syntax: setupScreen()</em>\n<em>name: setupScreen</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofSetupScreen\">ofSetupScreen</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setupScreenOrtho(width, height, nearDist, farDist)</p>\n<p>&lt;!--\n<em>syntax: setupScreenOrtho(width, height, nearDist, farDist)</em>\n<em>name: setupScreenOrtho</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float width, float height, float nearDist, float farDist</em>\n<em>access: public</em>\n<em>version_started: 0073</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofSetupScreenOrtho\">ofSetupScreenOrth</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setupScreenPerspective(width, height, fov, nearDist, farDist)</p>\n<p>&lt;!--\n<em>syntax: setupScreenPerspective(width, height, fov, nearDist, farDist)</em>\n<em>name: setupScreenPerspective</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float width, float height, float fov, float nearDist, float farDist</em>\n<em>access: public</em>\n<em>version_started: 0073</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofSetupScreenPerspective\">ofSetupScreenPerspective</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void startRender()</p>\n<p>&lt;!--\n<em>syntax: startRender()</em>\n<em>name: startRender</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void startSmoothing()</p>\n<p>&lt;!--\n<em>syntax: startSmoothing()</em>\n<em>name: startSmoothing</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: private</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool texturesNeedVFlip()</p>\n<p>&lt;!--\n<em>syntax: texturesNeedVFlip()</em>\n<em>name: texturesNeedVFlip</em>\n<em>returns: bool</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0073</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void translate(&amp;p)</p>\n<p>&lt;!--\n<em>syntax: translate(&amp;p)</em>\n<em>name: translate</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const glm::vec3 &amp;p</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofTranslate\">ofTranslate</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void translate(x, y, z)</p>\n<p>&lt;!--\n<em>syntax: translate(x, y, z)</em>\n<em>name: translate</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float x, float y, float z</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>See <a href=\"../ofGraphics/!#show_ofTranslate\">ofTranslate</a></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void unbind(&amp;camera)</p>\n<p>&lt;!--\n<em>syntax: unbind(&amp;camera)</em>\n<em>name: unbind</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofCamera &amp;camera</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void unbind(&amp;fbo)</p>\n<p>&lt;!--\n<em>syntax: unbind(&amp;fbo)</em>\n<em>name: unbind</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofFbo &amp;fbo</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void unbind(&amp;material)</p>\n<p>&lt;!--\n<em>syntax: unbind(&amp;material)</em>\n<em>name: unbind</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofBaseMaterial &amp;material</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void unbind(&amp;shader)</p>\n<p>&lt;!--\n<em>syntax: unbind(&amp;shader)</em>\n<em>name: unbind</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofShader &amp;shader</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void unbind(&amp;texture, location)</p>\n<p>&lt;!--\n<em>syntax: unbind(&amp;texture, location)</em>\n<em>name: unbind</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofTexture &amp;texture, int location</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void unbind(&amp;video)</p>\n<p>&lt;!--\n<em>syntax: unbind(&amp;video)</em>\n<em>name: unbind</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofBaseVideoDraws &amp;video</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void viewport(viewport)</p>\n<p>&lt;!--\n<em>syntax: viewport(viewport)</em>\n<em>name: viewport</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: ofRectangle viewport</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void viewport(x, y, width, height, vflip = true)</p>\n<p>&lt;!--\n<em>syntax: viewport(x, y, width, height, vflip = true)</em>\n<em>name: viewport</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float x, float y, float width, float height, bool vflip=true</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<h3>~ofGLRenderer()</h3>\n<p>&lt;!--\n<em>syntax: ~ofGLRenderer()</em>\n<em>name: ~ofGLRenderer</em>\n_returns: _\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>##Variables</p>\n<p>###const string TYPE</p>\n<p>&lt;!--\n<em>name: TYPE</em>\n<em>type: const string</em>\n<em>access: public</em>\n<em>version_started: 0073</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###int alphaMaskTextureTarget</p>\n<p>&lt;!--\n<em>name: alphaMaskTextureTarget</em>\n<em>type: int</em>\n<em>access: private</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool bBackgroundAuto</p>\n<p>&lt;!--\n<em>name: bBackgroundAuto</em>\n<em>type: bool</em>\n<em>access: private</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofBitmapFont bitmapFont</p>\n<p>&lt;!--\n<em>name: bitmapFont</em>\n<em>type: ofBitmapFont</em>\n<em>access: private</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofPoint circlePoints</p>\n<p>&lt;!--\n<em>name: circlePoints</em>\n<em>type: ofPoint</em>\n<em>access: private</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofPolyline circlePolyline</p>\n<p>&lt;!--\n<em>name: circlePolyline</em>\n<em>type: ofPolyline</em>\n<em>access: private</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###GLuint currentFramebufferId</p>\n<p>&lt;!--\n<em>name: currentFramebufferId</em>\n<em>type: GLuint</em>\n<em>access: private</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>&lt; the framebuffer id currently bound to the GL_FRAMEBUFFER target</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofStyle currentStyle</p>\n<p>&lt;!--\n<em>name: currentStyle</em>\n<em>type: ofStyle</em>\n<em>access: private</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###GLuint defaultFramebufferId</p>\n<p>&lt;!--\n<em>name: defaultFramebufferId</em>\n<em>type: GLuint</em>\n<em>access: private</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>&lt; default GL_FRAMEBUFFER_BINDING, windowing frameworks might want to set this to their MSAA framebuffer, defaults to 0</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###deque&lt; GLuint &gt; framebufferIdStack</p>\n<p>&lt;!--\n<em>name: framebufferIdStack</em>\n<em>type: deque&lt; GLuint &gt;</em>\n<em>access: private</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>&lt; keeps track of currently bound framebuffers</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###of3dGraphics graphics3d</p>\n<p>&lt;!--\n<em>name: graphics3d</em>\n<em>type: of3dGraphics</em>\n<em>access: private</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool lightingEnabled</p>\n<p>&lt;!--\n<em>name: lightingEnabled</em>\n<em>type: bool</em>\n<em>access: private</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofPoint linePoints</p>\n<p>&lt;!--\n<em>name: linePoints</em>\n<em>type: ofPoint</em>\n<em>access: private</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool materialBound</p>\n<p>&lt;!--\n<em>name: materialBound</em>\n<em>type: bool</em>\n<em>access: private</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofMatrixStack matrixStack</p>\n<p>&lt;!--\n<em>name: matrixStack</em>\n<em>type: ofMatrixStack</em>\n<em>access: private</em>\n<em>version_started: 0073</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool normalsEnabled</p>\n<p>&lt;!--\n<em>name: normalsEnabled</em>\n<em>type: bool</em>\n<em>access: private</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofPath path</p>\n<p>&lt;!--\n<em>name: path</em>\n<em>type: ofPath</em>\n<em>access: private</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofPoint rectPoints</p>\n<p>&lt;!--\n<em>name: rectPoints</em>\n<em>type: ofPoint</em>\n<em>access: private</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###deque&lt; ofStyle &gt; styleHistory</p>\n<p>&lt;!--\n<em>name: styleHistory</em>\n<em>type: deque&lt; ofStyle &gt;</em>\n<em>access: private</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###set&lt; int &gt; textureLocationsEnabled</p>\n<p>&lt;!--\n<em>name: textureLocationsEnabled</em>\n<em>type: set&lt; int &gt;</em>\n<em>access: private</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofPoint triPoints</p>\n<p>&lt;!--\n<em>name: triPoints</em>\n<em>type: ofPoint</em>\n<em>access: private</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###const ofAppBaseWindow * window</p>\n<p>&lt;!--\n<em>name: window</em>\n<em>type: const ofAppBaseWindow *</em>\n<em>access: private</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n","raw":"#class ofGLRenderer\n\n\n<!--\n_visible: True_\n_advanced: False_\n_istemplated: False_\n_extends: ofBaseGLRenderer_\n-->\n\n##InlineDescription\n\n\n\n\n\n\n##Description\n\nThe ofGLRenderer is a renderer for OF that supports OpenGL 2 and lower. It's the more classic, \"direct mode\" version of OpenGL that you may be familiar with but that also uses vertex arrays underneath to store all of the vertices that you create for the basic OF drawing operations. This is the default renderer that is created when you create your OF app:\n\n~~~~{.cpp}\nofSetupOpenGL(1024,768, OF_WINDOW);\t\t\t// by default this makes a ofGLRenderer\n\n// this kicks off the running of my app\n// can be OF_WINDOW or OF_FULLSCREEN\n// pass in width and height too:\nofRunApp( new testApp());\n\n~~~~\n\nThis renderer does not work so well with mobile devices (more specifically with GLES) or on ARM6/7 Linux devices (Raspberry Pi, for instance) but it is the classic version that will be supported on all laptops and desktop machines. Most of the calls to this renderer are handled by other functions, so most of this documentation will simply link to the end user functions that you should call, since you probably don't want to call the renderer directly.\n\n\n\n\n\n##Methods\n\n\n\n###void background(&c)\n\n<!--\n_syntax: background(&c)_\n_name: background_\n_returns: void_\n_returns_description: _\n_parameters: const ofColor &c_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofBackground](../ofGraphics/!#show_ofBackground)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void background(brightness)\n\n<!--\n_syntax: background(brightness)_\n_name: background_\n_returns: void_\n_returns_description: _\n_parameters: float brightness_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void background(hexColor, _a = 255.0f)\n\n<!--\n_syntax: background(hexColor, _a = 255.0f)_\n_name: background_\n_returns: void_\n_returns_description: _\n_parameters: int hexColor, float _a=255.0f_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofBackground](../ofGraphics/!#show_ofBackground)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void background(r, g, b, a = 255)\n\n<!--\n_syntax: background(r, g, b, a = 255)_\n_name: background_\n_returns: void_\n_returns_description: _\n_parameters: int r, int g, int b, int a=255_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofBackground](../ofGraphics/!#show_ofBackground)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void begin(&fbo, mode)\n\n<!--\n_syntax: begin(&fbo, mode)_\n_name: begin_\n_returns: void_\n_returns_description: _\n_parameters: const ofFbo &fbo, ofFboMode mode_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void bind(&camera, &viewport)\n\n<!--\n_syntax: bind(&camera, &viewport)_\n_name: bind_\n_returns: void_\n_returns_description: _\n_parameters: const ofCamera &camera, const ofRectangle &viewport_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void bind(&fbo)\n\n<!--\n_syntax: bind(&fbo)_\n_name: bind_\n_returns: void_\n_returns_description: _\n_parameters: const ofFbo &fbo_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void bind(&material)\n\n<!--\n_syntax: bind(&material)_\n_name: bind_\n_returns: void_\n_returns_description: _\n_parameters: const ofBaseMaterial &material_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void bind(&shader)\n\n<!--\n_syntax: bind(&shader)_\n_name: bind_\n_returns: void_\n_returns_description: _\n_parameters: const ofShader &shader_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void bind(&texture, location)\n\n<!--\n_syntax: bind(&texture, location)_\n_name: bind_\n_returns: void_\n_returns_description: _\n_parameters: const ofTexture &texture, int location_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void bind(&video)\n\n<!--\n_syntax: bind(&video)_\n_name: bind_\n_returns: void_\n_returns_description: _\n_parameters: const ofBaseVideoDraws &video_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void bindForBlitting(&fboSrc, &fboDst, attachmentPoint)\n\n<!--\n_syntax: bindForBlitting(&fboSrc, &fboDst, attachmentPoint)_\n_name: bindForBlitting_\n_returns: void_\n_returns_description: _\n_parameters: const ofFbo &fboSrc, ofFbo &fboDst, int attachmentPoint_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void clear()\n\n<!--\n_syntax: clear()_\n_name: clear_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void clear(brightness, a)\n\n<!--\n_syntax: clear(brightness, a)_\n_name: clear_\n_returns: void_\n_returns_description: _\n_parameters: float brightness, float a_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofClear](../ofGraphics/!#show_ofClear)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void clear(r, g, b, a)\n\n<!--\n_syntax: clear(r, g, b, a)_\n_name: clear_\n_returns: void_\n_returns_description: _\n_parameters: float r, float g, float b, float a_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofClear](../ofGraphics/!#show_ofClear)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void clearAlpha()\n\n<!--\n_syntax: clearAlpha()_\n_name: clearAlpha_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofClear](../ofGraphics/!#show_ofClear)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void disableAlphaMask()\n\n<!--\n_syntax: disableAlphaMask()_\n_name: disableAlphaMask_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void disableAntiAliasing()\n\n<!--\n_syntax: disableAntiAliasing()_\n_name: disableAntiAliasing_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofDisableAntiAliasing](../ofGraphics/!#show_ofDisableAntiAliasing)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void disableLight(lightIndex)\n\n<!--\n_syntax: disableLight(lightIndex)_\n_name: disableLight_\n_returns: void_\n_returns_description: _\n_parameters: int lightIndex_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void disableLighting()\n\n<!--\n_syntax: disableLighting()_\n_name: disableLighting_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void disablePointSprites()\n\n<!--\n_syntax: disablePointSprites()_\n_name: disablePointSprites_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void disableSeparateSpecularLight()\n\n<!--\n_syntax: disableSeparateSpecularLight()_\n_name: disableSeparateSpecularLight_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void disableTextureTarget(textureTarget, textureLocation)\n\n<!--\n_syntax: disableTextureTarget(textureTarget, textureLocation)_\n_name: disableTextureTarget_\n_returns: void_\n_returns_description: _\n_parameters: int textureTarget, int textureLocation_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void draw(&image, x, y, z, w, h, sx, sy, sw, sh)\n\n<!--\n_syntax: draw(&image, x, y, z, w, h, sx, sy, sw, sh)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: const ofImage &image, float x, float y, float z, float w, float h, float sx, float sy, float sw, float sh_\n_access: public_\n_version_started: 0071_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nDraws an texture.\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void draw(&image, x, y, z, w, h, sx, sy, sw, sh)\n\n<!--\n_syntax: draw(&image, x, y, z, w, h, sx, sy, sw, sh)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: const ofFloatImage &image, float x, float y, float z, float w, float h, float sx, float sy, float sw, float sh_\n_access: public_\n_version_started: 0071_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nDraws an texture.\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void draw(&image, x, y, z, w, h, sx, sy, sw, sh)\n\n<!--\n_syntax: draw(&image, x, y, z, w, h, sx, sy, sw, sh)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: const ofShortImage &image, float x, float y, float z, float w, float h, float sx, float sy, float sw, float sh_\n_access: public_\n_version_started: 0071_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nDraws an ofMesh.\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void draw(&image, x, y, z, w, h, sx, sy, sw, sh)\n\n<!--\n_syntax: draw(&image, x, y, z, w, h, sx, sy, sw, sh)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: const ofTexture &image, float x, float y, float z, float w, float h, float sx, float sy, float sw, float sh_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void draw(&mesh, renderType)\n\n<!--\n_syntax: draw(&mesh, renderType)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: const ofVboMesh &mesh, ofPolyRenderMode renderType_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void draw(&model)\n\n<!--\n_syntax: draw(&model)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: const ofNode &model_\n_access: public_\n_version_started: 0071_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nDraws an texture.\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void draw(&model, renderType)\n\n<!--\n_syntax: draw(&model, renderType)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: const of3dPrimitive &model, ofPolyRenderMode renderType_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nDraws a of3dPrimitive. Called internally.\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void draw(&path)\n\n<!--\n_syntax: draw(&path)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: const ofPath &path_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nHandles drawing ofPath. This is called when you call ofPath::draw().\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void draw(&poly)\n\n<!--\n_syntax: draw(&poly)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: const ofPolyline &poly_\n_access: public_\n_version_started: 0071_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nDraws an ofMesh.\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void draw(&vbo, drawMode, first, total)\n\n<!--\n_syntax: draw(&vbo, drawMode, first, total)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: const ofVbo &vbo, GLuint drawMode, int first, int total_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void draw(&vertexData, renderType, useColors, useTextures, useNormals)\n\n<!--\n_syntax: draw(&vertexData, renderType, useColors, useTextures, useNormals)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: const ofMesh &vertexData, ofPolyRenderMode renderType, bool useColors, bool useTextures, bool useNormals_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nHandles drawing ofPolylines. This is called when you call line.draw().\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void draw(&video, x, y, w, h)\n\n<!--\n_syntax: draw(&video, x, y, w, h)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: const ofBaseVideoDraws &video, float x, float y, float w, float h_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void drawCircle(x, y, z, radius)\n\n<!--\n_syntax: drawCircle(x, y, z, radius)_\n_name: drawCircle_\n_returns: void_\n_returns_description: _\n_parameters: float x, float y, float z, float radius_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofDrawCircle](../ofGraphics/!#show_ofDrawCircle)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void drawElements(&vbo, drawMode, amt, offsetelements = 0)\n\n<!--\n_syntax: drawElements(&vbo, drawMode, amt, offsetelements = 0)_\n_name: drawElements_\n_returns: void_\n_returns_description: _\n_parameters: const ofVbo &vbo, GLuint drawMode, int amt, int offsetelements=0_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void drawElementsInstanced(&vbo, drawMode, amt, primCount)\n\n<!--\n_syntax: drawElementsInstanced(&vbo, drawMode, amt, primCount)_\n_name: drawElementsInstanced_\n_returns: void_\n_returns_description: _\n_parameters: const ofVbo &vbo, GLuint drawMode, int amt, int primCount_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void drawEllipse(x, y, z, width, height)\n\n<!--\n_syntax: drawEllipse(x, y, z, width, height)_\n_name: drawEllipse_\n_returns: void_\n_returns_description: _\n_parameters: float x, float y, float z, float width, float height_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofDrawEllipse](../ofGraphics/!#show_ofDrawEllipse)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void drawInstanced(&mesh, renderType, primCount)\n\n<!--\n_syntax: drawInstanced(&mesh, renderType, primCount)_\n_name: drawInstanced_\n_returns: void_\n_returns_description: _\n_parameters: const ofVboMesh &mesh, ofPolyRenderMode renderType, int primCount_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void drawInstanced(&vbo, drawMode, first, total, primCount)\n\n<!--\n_syntax: drawInstanced(&vbo, drawMode, first, total, primCount)_\n_name: drawInstanced_\n_returns: void_\n_returns_description: _\n_parameters: const ofVbo &vbo, GLuint drawMode, int first, int total, int primCount_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void drawLine(x1, y1, z1, x2, y2, z2)\n\n<!--\n_syntax: drawLine(x1, y1, z1, x2, y2, z2)_\n_name: drawLine_\n_returns: void_\n_returns_description: _\n_parameters: float x1, float y1, float z1, float x2, float y2, float z2_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofLine](../ofGraphics/!#show_ofLine)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void drawRectangle(x, y, z, w, h)\n\n<!--\n_syntax: drawRectangle(x, y, z, w, h)_\n_name: drawRectangle_\n_returns: void_\n_returns_description: _\n_parameters: float x, float y, float z, float w, float h_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofRect](../ofGraphics/!#show_ofRect)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void drawString(&font, text, x, y)\n\n<!--\n_syntax: drawString(&font, text, x, y)_\n_name: drawString_\n_returns: void_\n_returns_description: _\n_parameters: const ofTrueTypeFont &font, string text, float x, float y_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void drawString(text, x, y, z)\n\n<!--\n_syntax: drawString(text, x, y, z)_\n_name: drawString_\n_returns: void_\n_returns_description: _\n_parameters: string text, float x, float y, float z_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nDraws a characters to the screen.\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void drawTriangle(x1, y1, z1, x2, y2, z2, x3, y3, z3)\n\n<!--\n_syntax: drawTriangle(x1, y1, z1, x2, y2, z2, x3, y3, z3)_\n_name: drawTriangle_\n_returns: void_\n_returns_description: _\n_parameters: float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nDraw a Triangle.\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void enableAntiAliasing()\n\n<!--\n_syntax: enableAntiAliasing()_\n_name: enableAntiAliasing_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofEnableAntiAliasing](../ofGraphics/!#show_ofEnableAntiAliasing)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void enableLight(lightIndex)\n\n<!--\n_syntax: enableLight(lightIndex)_\n_name: enableLight_\n_returns: void_\n_returns_description: _\n_parameters: int lightIndex_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void enableLighting()\n\n<!--\n_syntax: enableLighting()_\n_name: enableLighting_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void enablePointSprites()\n\n<!--\n_syntax: enablePointSprites()_\n_name: enablePointSprites_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void enableSeparateSpecularLight()\n\n<!--\n_syntax: enableSeparateSpecularLight()_\n_name: enableSeparateSpecularLight_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void enableTextureTarget(&tex, textureLocation)\n\n<!--\n_syntax: enableTextureTarget(&tex, textureLocation)_\n_name: enableTextureTarget_\n_returns: void_\n_returns_description: _\n_parameters: const ofTexture &tex, int textureLocation_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void end(&fbo)\n\n<!--\n_syntax: end(&fbo)_\n_name: end_\n_returns: void_\n_returns_description: _\n_parameters: const ofFbo &fbo_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void endSmoothing()\n\n<!--\n_syntax: endSmoothing()_\n_name: endSmoothing_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void finishRender()\n\n<!--\n_syntax: finishRender()_\n_name: finishRender_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###const of3dGraphics & get3dGraphics()\n\n<!--\n_syntax: get3dGraphics()_\n_name: get3dGraphics_\n_returns: const of3dGraphics &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###of3dGraphics & get3dGraphics()\n\n<!--\n_syntax: get3dGraphics()_\n_name: get3dGraphics_\n_returns: of3dGraphics &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool getBackgroundAuto()\n\n<!--\n_syntax: getBackgroundAuto()_\n_name: getBackgroundAuto_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofColor getBackgroundColor()\n\n<!--\n_syntax: getBackgroundColor()_\n_name: getBackgroundColor_\n_returns: ofColor_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofHandednessType getCoordHandedness()\n\n<!--\n_syntax: getCoordHandedness()_\n_name: getCoordHandedness_\n_returns: ofHandednessType_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofGetCoordHandedness](../ofGraphics/!#show_ofGetCoordHandedness)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::mat4 getCurrentMatrix(matrixMode_)\n\n<!--\n_syntax: getCurrentMatrix(matrixMode_)_\n_name: getCurrentMatrix_\n_returns: glm::mat4_\n_returns_description: _\n_parameters: ofMatrixMode matrixMode__\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::mat4 getCurrentNormalMatrix()\n\n<!--\n_syntax: getCurrentNormalMatrix()_\n_name: getCurrentNormalMatrix_\n_returns: glm::mat4_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::mat4 getCurrentOrientationMatrix()\n\n<!--\n_syntax: getCurrentOrientationMatrix()_\n_name: getCurrentOrientationMatrix_\n_returns: glm::mat4_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::mat4 getCurrentViewMatrix()\n\n<!--\n_syntax: getCurrentViewMatrix()_\n_name: getCurrentViewMatrix_\n_returns: glm::mat4_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofRectangle getCurrentViewport()\n\n<!--\n_syntax: getCurrentViewport()_\n_name: getCurrentViewport_\n_returns: ofRectangle_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofGetCurrentViewport](../ofGraphics/!#show_ofGetCurrentViewport)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofFillFlag getFillMode()\n\n<!--\n_syntax: getFillMode()_\n_name: getFillMode_\n_returns: ofFillFlag_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofGetFill](../ofGraphics/!#show_ofGetFill)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int getGLVersionMajor()\n\n<!--\n_syntax: getGLVersionMajor()_\n_name: getGLVersionMajor_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int getGLVersionMinor()\n\n<!--\n_syntax: getGLVersionMinor()_\n_name: getGLVersionMinor_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool getLightingEnabled()\n\n<!--\n_syntax: getLightingEnabled()_\n_name: getLightingEnabled_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofRectangle getNativeViewport()\n\n<!--\n_syntax: getNativeViewport()_\n_name: getNativeViewport_\n_returns: ofRectangle_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofGetNativeViewport](../ofGraphics/!#show_ofGetNativeViewport)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofPath & getPath()\n\n<!--\n_syntax: getPath()_\n_name: getPath_\n_returns: ofPath &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofRectMode getRectMode()\n\n<!--\n_syntax: getRectMode()_\n_name: getRectMode_\n_returns: ofRectMode_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofGetRectMode](../ofGraphics/!#show_ofGetRectMode)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofStyle getStyle()\n\n<!--\n_syntax: getStyle()_\n_name: getStyle_\n_returns: ofStyle_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###const string & getType()\n\n<!--\n_syntax: getType()_\n_name: getType_\n_returns: const string &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int getViewportHeight()\n\n<!--\n_syntax: getViewportHeight()_\n_name: getViewportHeight_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofGetViewportHeight](../ofGraphics/!#show_ofGetViewportHeight)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int getViewportWidth()\n\n<!--\n_syntax: getViewportWidth()_\n_name: getViewportWidth_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofGetViewportWidth](../ofGraphics/!#show_ofGetViewportWidth)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool isVFlipped()\n\n<!--\n_syntax: isVFlipped()_\n_name: isVFlipped_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofIsVFlipped](../ofGraphics/!#show_ofIsVFlipped)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void loadIdentityMatrix()\n\n<!--\n_syntax: loadIdentityMatrix()_\n_name: loadIdentityMatrix_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofLoadIdentityMatrix](../ofGraphics/!#show_ofLoadIdentityMatrix)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void loadMatrix(&m)\n\n<!--\n_syntax: loadMatrix(&m)_\n_name: loadMatrix_\n_returns: void_\n_returns_description: _\n_parameters: const glm::mat4 &m_\n_access: public_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofLoadMatrix](../ofGraphics/!#show_ofLoadMatrix)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void loadMatrix(*m)\n\n<!--\n_syntax: loadMatrix(*m)_\n_name: loadMatrix_\n_returns: void_\n_returns_description: _\n_parameters: const float *m_\n_access: public_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofLoadMatrix](../ofGraphics/!#show_ofLoadMatrix)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void loadViewMatrix(&m)\n\n<!--\n_syntax: loadViewMatrix(&m)_\n_name: loadViewMatrix_\n_returns: void_\n_returns_description: _\n_parameters: const glm::mat4 &m_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void matrixMode(mode)\n\n<!--\n_syntax: matrixMode(mode)_\n_name: matrixMode_\n_returns: void_\n_returns_description: _\n_parameters: ofMatrixMode mode_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void multMatrix(&m)\n\n<!--\n_syntax: multMatrix(&m)_\n_name: multMatrix_\n_returns: void_\n_returns_description: _\n_parameters: const glm::mat4 &m_\n_access: public_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void multMatrix(*m)\n\n<!--\n_syntax: multMatrix(*m)_\n_name: multMatrix_\n_returns: void_\n_returns_description: _\n_parameters: const float *m_\n_access: public_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void multViewMatrix(&m)\n\n<!--\n_syntax: multViewMatrix(&m)_\n_name: multViewMatrix_\n_returns: void_\n_returns_description: _\n_parameters: const glm::mat4 &m_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n### ofGLRenderer(*window)\n\n<!--\n_syntax: ofGLRenderer(*window)_\n_name: ofGLRenderer_\n_returns: _\n_returns_description: _\n_parameters: const ofAppBaseWindow *window_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void popMatrix()\n\n<!--\n_syntax: popMatrix()_\n_name: popMatrix_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofPopMatrix](../graphics/ofGraphics/#!show_ofPopMatrix)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void popStyle()\n\n<!--\n_syntax: popStyle()_\n_name: popStyle_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void popView()\n\n<!--\n_syntax: popView()_\n_name: popView_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void pushMatrix()\n\n<!--\n_syntax: pushMatrix()_\n_name: pushMatrix_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofPushMatrix](../ofGraphics/!#show_ofPushMatrix)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void pushStyle()\n\n<!--\n_syntax: pushStyle()_\n_name: pushStyle_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void pushView()\n\n<!--\n_syntax: pushView()_\n_name: pushView_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void rotateDeg(radians)\n\n<!--\n_syntax: rotateDeg(radians)_\n_name: rotateDeg_\n_returns: void_\n_returns_description: _\n_parameters: float radians_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void rotateDeg(radians, vecX, vecY, vecZ)\n\n<!--\n_syntax: rotateDeg(radians, vecX, vecY, vecZ)_\n_name: rotateDeg_\n_returns: void_\n_returns_description: _\n_parameters: float radians, float vecX, float vecY, float vecZ_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void rotateRad(radians)\n\n<!--\n_syntax: rotateRad(radians)_\n_name: rotateRad_\n_returns: void_\n_returns_description: _\n_parameters: float radians_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void rotateRad(radians, vecX, vecY, vecZ)\n\n<!--\n_syntax: rotateRad(radians, vecX, vecY, vecZ)_\n_name: rotateRad_\n_returns: void_\n_returns_description: _\n_parameters: float radians, float vecX, float vecY, float vecZ_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void rotateXDeg(radians)\n\n<!--\n_syntax: rotateXDeg(radians)_\n_name: rotateXDeg_\n_returns: void_\n_returns_description: _\n_parameters: float radians_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void rotateXRad(radians)\n\n<!--\n_syntax: rotateXRad(radians)_\n_name: rotateXRad_\n_returns: void_\n_returns_description: _\n_parameters: float radians_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void rotateYDeg(radians)\n\n<!--\n_syntax: rotateYDeg(radians)_\n_name: rotateYDeg_\n_returns: void_\n_returns_description: _\n_parameters: float radians_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void rotateYRad(radians)\n\n<!--\n_syntax: rotateYRad(radians)_\n_name: rotateYRad_\n_returns: void_\n_returns_description: _\n_parameters: float radians_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void rotateZDeg(radians)\n\n<!--\n_syntax: rotateZDeg(radians)_\n_name: rotateZDeg_\n_returns: void_\n_returns_description: _\n_parameters: float radians_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void rotateZRad(radians)\n\n<!--\n_syntax: rotateZRad(radians)_\n_name: rotateZRad_\n_returns: void_\n_returns_description: _\n_parameters: float radians_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void saveFullViewport(&pixels)\n\n<!--\n_syntax: saveFullViewport(&pixels)_\n_name: saveFullViewport_\n_returns: void_\n_returns_description: _\n_parameters: ofPixels &pixels_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void saveScreen(x, y, w, h, &pixels)\n\n<!--\n_syntax: saveScreen(x, y, w, h, &pixels)_\n_name: saveScreen_\n_returns: void_\n_returns_description: _\n_parameters: int x, int y, int w, int h, ofPixels &pixels_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void scale(xAmnt, yAmnt, zAmnt)\n\n<!--\n_syntax: scale(xAmnt, yAmnt, zAmnt)_\n_name: scale_\n_returns: void_\n_returns_description: _\n_parameters: float xAmnt, float yAmnt, float zAmnt_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofScale](../graphics/../ofGraphics/!#show_ofScale)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setAlphaMaskTex(&tex)\n\n<!--\n_syntax: setAlphaMaskTex(&tex)_\n_name: setAlphaMaskTex_\n_returns: void_\n_returns_description: _\n_parameters: const ofTexture &tex_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setBackgroundAuto(bManual)\n\n<!--\n_syntax: setBackgroundAuto(bManual)_\n_name: setBackgroundAuto_\n_returns: void_\n_returns_description: _\n_parameters: bool bManual_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setBackgroundColor(&c)\n\n<!--\n_syntax: setBackgroundColor(&c)_\n_name: setBackgroundColor_\n_returns: void_\n_returns_description: _\n_parameters: const ofColor &c_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setBitmapTextMode(mode)\n\n<!--\n_syntax: setBitmapTextMode(mode)_\n_name: setBitmapTextMode_\n_returns: void_\n_returns_description: _\n_parameters: ofDrawBitmapMode mode_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setBlendMode(blendMode)\n\n<!--\n_syntax: setBlendMode(blendMode)_\n_name: setBlendMode_\n_returns: void_\n_returns_description: _\n_parameters: ofBlendMode blendMode_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofEnableBlendMode](../ofGraphics/!#show_ofEnableBlendMode)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setCircleResolution(res)\n\n<!--\n_syntax: setCircleResolution(res)_\n_name: setCircleResolution_\n_returns: void_\n_returns_description: _\n_parameters: int res_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofSetCircleResolution](../ofGraphics/!#show_ofSetCircleResolution)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setColor(&color)\n\n<!--\n_syntax: setColor(&color)_\n_name: setColor_\n_returns: void_\n_returns_description: _\n_parameters: const ofColor &color_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofSetColor](../ofGraphics/!#show_ofSetColor)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setColor(&color, _a)\n\n<!--\n_syntax: setColor(&color, _a)_\n_name: setColor_\n_returns: void_\n_returns_description: _\n_parameters: const ofColor &color, int _a_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofSetColor](../ofGraphics/!#show_ofSetColor)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setColor(gray)\n\n<!--\n_syntax: setColor(gray)_\n_name: setColor_\n_returns: void_\n_returns_description: _\n_parameters: int gray_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofSetColor](../ofGraphics/!#show_ofSetColor)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setColor(r, g, b)\n\n<!--\n_syntax: setColor(r, g, b)_\n_name: setColor_\n_returns: void_\n_returns_description: _\n_parameters: int r, int g, int b_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofSetColor](../ofGraphics/!#show_ofSetColor)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setColor(r, g, b, a)\n\n<!--\n_syntax: setColor(r, g, b, a)_\n_name: setColor_\n_returns: void_\n_returns_description: _\n_parameters: int r, int g, int b, int a_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofSetColor](../ofGraphics/!#show_ofSetColor)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setCoordHandedness(handedness)\n\n<!--\n_syntax: setCoordHandedness(handedness)_\n_name: setCoordHandedness_\n_returns: void_\n_returns_description: _\n_parameters: ofHandednessType handedness_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofSetCoordHandedness](../ofGraphics/!#show_ofSetCoordHandedness)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setCurveResolution(resolution)\n\n<!--\n_syntax: setCurveResolution(resolution)_\n_name: setCurveResolution_\n_returns: void_\n_returns_description: _\n_parameters: int resolution_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setDepthTest(depthTest)\n\n<!--\n_syntax: setDepthTest(depthTest)_\n_name: setDepthTest_\n_returns: void_\n_returns_description: _\n_parameters: bool depthTest_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofDisableDepthTest](../ofGraphics/!#show_ofDisableDepthTest) and [ofEnableDepthTest](../ofGraphics/!#show_ofEnableDepthTest)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setFillMode(fill)\n\n<!--\n_syntax: setFillMode(fill)_\n_name: setFillMode_\n_returns: void_\n_returns_description: _\n_parameters: ofFillFlag fill_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setGlobalAmbientColor(&c)\n\n<!--\n_syntax: setGlobalAmbientColor(&c)_\n_name: setGlobalAmbientColor_\n_returns: void_\n_returns_description: _\n_parameters: const ofColor &c_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setHexColor(hexColor)\n\n<!--\n_syntax: setHexColor(hexColor)_\n_name: setHexColor_\n_returns: void_\n_returns_description: _\n_parameters: int hexColor_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofSetColor](../ofGraphics/!#show_ofSetColor)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setLightAmbientColor(lightIndex, &c)\n\n<!--\n_syntax: setLightAmbientColor(lightIndex, &c)_\n_name: setLightAmbientColor_\n_returns: void_\n_returns_description: _\n_parameters: int lightIndex, const ofFloatColor &c_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setLightAttenuation(lightIndex, constant, linear, quadratic)\n\n<!--\n_syntax: setLightAttenuation(lightIndex, constant, linear, quadratic)_\n_name: setLightAttenuation_\n_returns: void_\n_returns_description: _\n_parameters: int lightIndex, float constant, float linear, float quadratic_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setLightDiffuseColor(lightIndex, &c)\n\n<!--\n_syntax: setLightDiffuseColor(lightIndex, &c)_\n_name: setLightDiffuseColor_\n_returns: void_\n_returns_description: _\n_parameters: int lightIndex, const ofFloatColor &c_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setLightPosition(lightIndex, &position)\n\n<!--\n_syntax: setLightPosition(lightIndex, &position)_\n_name: setLightPosition_\n_returns: void_\n_returns_description: _\n_parameters: int lightIndex, const glm::vec4 &position_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setLightSpecularColor(lightIndex, &c)\n\n<!--\n_syntax: setLightSpecularColor(lightIndex, &c)_\n_name: setLightSpecularColor_\n_returns: void_\n_returns_description: _\n_parameters: int lightIndex, const ofFloatColor &c_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setLightSpotConcentration(lightIndex, exponent)\n\n<!--\n_syntax: setLightSpotConcentration(lightIndex, exponent)_\n_name: setLightSpotConcentration_\n_returns: void_\n_returns_description: _\n_parameters: int lightIndex, float exponent_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setLightSpotDirection(lightIndex, &direction)\n\n<!--\n_syntax: setLightSpotDirection(lightIndex, &direction)_\n_name: setLightSpotDirection_\n_returns: void_\n_returns_description: _\n_parameters: int lightIndex, const glm::vec4 &direction_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setLightSpotlightCutOff(lightIndex, spotCutOff)\n\n<!--\n_syntax: setLightSpotlightCutOff(lightIndex, spotCutOff)_\n_name: setLightSpotlightCutOff_\n_returns: void_\n_returns_description: _\n_parameters: int lightIndex, float spotCutOff_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setLineSmoothing(smooth)\n\n<!--\n_syntax: setLineSmoothing(smooth)_\n_name: setLineSmoothing_\n_returns: void_\n_returns_description: _\n_parameters: bool smooth_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setLineWidth(lineWidth)\n\n<!--\n_syntax: setLineWidth(lineWidth)_\n_name: setLineWidth_\n_returns: void_\n_returns_description: _\n_parameters: float lineWidth_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofSetLineWidth](../ofGraphics/!#show_ofSetLineWidth)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setOrientation(orientation, vFlip)\n\n<!--\n_syntax: setOrientation(orientation, vFlip)_\n_name: setOrientation_\n_returns: void_\n_returns_description: _\n_parameters: ofOrientation orientation, bool vFlip_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setPolyMode(mode)\n\n<!--\n_syntax: setPolyMode(mode)_\n_name: setPolyMode_\n_returns: void_\n_returns_description: _\n_parameters: ofPolyWindingMode mode_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setRectMode(mode)\n\n<!--\n_syntax: setRectMode(mode)_\n_name: setRectMode_\n_returns: void_\n_returns_description: _\n_parameters: ofRectMode mode_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofSetRectMode](../ofGraphics/!#show_ofSetRectMode)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setSmoothLighting(b)\n\n<!--\n_syntax: setSmoothLighting(b)_\n_name: setSmoothLighting_\n_returns: void_\n_returns_description: _\n_parameters: bool b_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setStyle(&style)\n\n<!--\n_syntax: setStyle(&style)_\n_name: setStyle_\n_returns: void_\n_returns_description: _\n_parameters: const ofStyle &style_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setup()\n\n<!--\n_syntax: setup()_\n_name: setup_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setupGraphicDefaults()\n\n<!--\n_syntax: setupGraphicDefaults()_\n_name: setupGraphicDefaults_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setupScreen()\n\n<!--\n_syntax: setupScreen()_\n_name: setupScreen_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofSetupScreen](../ofGraphics/!#show_ofSetupScreen)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setupScreenOrtho(width, height, nearDist, farDist)\n\n<!--\n_syntax: setupScreenOrtho(width, height, nearDist, farDist)_\n_name: setupScreenOrtho_\n_returns: void_\n_returns_description: _\n_parameters: float width, float height, float nearDist, float farDist_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofSetupScreenOrth](../ofGraphics/!#show_ofSetupScreenOrtho)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setupScreenPerspective(width, height, fov, nearDist, farDist)\n\n<!--\n_syntax: setupScreenPerspective(width, height, fov, nearDist, farDist)_\n_name: setupScreenPerspective_\n_returns: void_\n_returns_description: _\n_parameters: float width, float height, float fov, float nearDist, float farDist_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofSetupScreenPerspective](../ofGraphics/!#show_ofSetupScreenPerspective)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void startRender()\n\n<!--\n_syntax: startRender()_\n_name: startRender_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void startSmoothing()\n\n<!--\n_syntax: startSmoothing()_\n_name: startSmoothing_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool texturesNeedVFlip()\n\n<!--\n_syntax: texturesNeedVFlip()_\n_name: texturesNeedVFlip_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void translate(&p)\n\n<!--\n_syntax: translate(&p)_\n_name: translate_\n_returns: void_\n_returns_description: _\n_parameters: const glm::vec3 &p_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofTranslate](../ofGraphics/!#show_ofTranslate)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void translate(x, y, z)\n\n<!--\n_syntax: translate(x, y, z)_\n_name: translate_\n_returns: void_\n_returns_description: _\n_parameters: float x, float y, float z_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nSee [ofTranslate](../ofGraphics/!#show_ofTranslate)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void unbind(&camera)\n\n<!--\n_syntax: unbind(&camera)_\n_name: unbind_\n_returns: void_\n_returns_description: _\n_parameters: const ofCamera &camera_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void unbind(&fbo)\n\n<!--\n_syntax: unbind(&fbo)_\n_name: unbind_\n_returns: void_\n_returns_description: _\n_parameters: const ofFbo &fbo_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void unbind(&material)\n\n<!--\n_syntax: unbind(&material)_\n_name: unbind_\n_returns: void_\n_returns_description: _\n_parameters: const ofBaseMaterial &material_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void unbind(&shader)\n\n<!--\n_syntax: unbind(&shader)_\n_name: unbind_\n_returns: void_\n_returns_description: _\n_parameters: const ofShader &shader_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void unbind(&texture, location)\n\n<!--\n_syntax: unbind(&texture, location)_\n_name: unbind_\n_returns: void_\n_returns_description: _\n_parameters: const ofTexture &texture, int location_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void unbind(&video)\n\n<!--\n_syntax: unbind(&video)_\n_name: unbind_\n_returns: void_\n_returns_description: _\n_parameters: const ofBaseVideoDraws &video_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void viewport(viewport)\n\n<!--\n_syntax: viewport(viewport)_\n_name: viewport_\n_returns: void_\n_returns_description: _\n_parameters: ofRectangle viewport_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void viewport(x, y, width, height, vflip = true)\n\n<!--\n_syntax: viewport(x, y, width, height, vflip = true)_\n_name: viewport_\n_returns: void_\n_returns_description: _\n_parameters: float x, float y, float width, float height, bool vflip=true_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n### ~ofGLRenderer()\n\n<!--\n_syntax: ~ofGLRenderer()_\n_name: ~ofGLRenderer_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n##Variables\n\n\n\n###const string TYPE\n\n<!--\n_name: TYPE_\n_type: const string_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int alphaMaskTextureTarget\n\n<!--\n_name: alphaMaskTextureTarget_\n_type: int_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool bBackgroundAuto\n\n<!--\n_name: bBackgroundAuto_\n_type: bool_\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofBitmapFont bitmapFont\n\n<!--\n_name: bitmapFont_\n_type: ofBitmapFont_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofPoint circlePoints\n\n<!--\n_name: circlePoints_\n_type: ofPoint_\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofPolyline circlePolyline\n\n<!--\n_name: circlePolyline_\n_type: ofPolyline_\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###GLuint currentFramebufferId\n\n<!--\n_name: currentFramebufferId_\n_type: GLuint_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< the framebuffer id currently bound to the GL_FRAMEBUFFER target\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofStyle currentStyle\n\n<!--\n_name: currentStyle_\n_type: ofStyle_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###GLuint defaultFramebufferId\n\n<!--\n_name: defaultFramebufferId_\n_type: GLuint_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< default GL_FRAMEBUFFER_BINDING, windowing frameworks might want to set this to their MSAA framebuffer, defaults to 0\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###deque< GLuint > framebufferIdStack\n\n<!--\n_name: framebufferIdStack_\n_type: deque< GLuint >_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< keeps track of currently bound framebuffers\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###of3dGraphics graphics3d\n\n<!--\n_name: graphics3d_\n_type: of3dGraphics_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool lightingEnabled\n\n<!--\n_name: lightingEnabled_\n_type: bool_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofPoint linePoints\n\n<!--\n_name: linePoints_\n_type: ofPoint_\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool materialBound\n\n<!--\n_name: materialBound_\n_type: bool_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofMatrixStack matrixStack\n\n<!--\n_name: matrixStack_\n_type: ofMatrixStack_\n_access: private_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool normalsEnabled\n\n<!--\n_name: normalsEnabled_\n_type: bool_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofPath path\n\n<!--\n_name: path_\n_type: ofPath_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofPoint rectPoints\n\n<!--\n_name: rectPoints_\n_type: ofPoint_\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###deque< ofStyle > styleHistory\n\n<!--\n_name: styleHistory_\n_type: deque< ofStyle >_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###set< int > textureLocationsEnabled\n\n<!--\n_name: textureLocationsEnabled_\n_type: set< int >_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofPoint triPoints\n\n<!--\n_name: triPoints_\n_type: ofPoint_\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###const ofAppBaseWindow * window\n\n<!--\n_name: window_\n_type: const ofAppBaseWindow *_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page","static":true}}],"fetch":[]}