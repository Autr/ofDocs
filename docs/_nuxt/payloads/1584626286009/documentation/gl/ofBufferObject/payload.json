{"data":[{"page":{"entry":{"name":"ofBufferObject","filename":"ofBufferObject.markdown","absolute":"/Users/gilbertsinnott/Code/openFrameworks/ofSite/documentation/gl/ofBufferObject.markdown","path":"/documentation/gl/ofBufferObject","route":"/documentation/gl/ofBufferObject.markdown","dir":"../ofSite/documentation/gl","ext":"markdown","type":"page","id":1949,"parent":1942,"breadcrumbs":[1942,1718],"siblings":[],"translations":{}},"description":{"short":"","full":"<h1></h1>\n"},"config":{"visible":"True","advanced":"False","istemplated":"False","extends":null},"methods":[{"short":"","desc":""},{"short":"","desc":""},{"syntax":"allocate()","name":"allocate","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>creates a buffer without allocating any memory yet\nglGenBuffers, allocates a GL buffer</p>\n","desc":""},{"syntax":"allocate(bytes, *data, usage)","name":"allocate","returns":"void","returns_description":null,"parameters":"GLsizeiptr bytes<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>data<span class=\"token punctuation\">,</span> GLenum usage","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"allocate(bytes, usage)","name":"allocate","returns":"void","returns_description":null,"parameters":"GLsizeiptr bytes<span class=\"token punctuation\">,</span> GLenum usage","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>creates a buffer and allocates the required number of bytes\nglGenBuffers + glNamedBufferData: https://www.opengl.org/sdk/docs/man4/html/glBufferData.xhtml\nbefore GL 4.5 emulates glNamedBufferData by binding to last known target\nfor this buffer uploading data to that target and unbinding again</p>\n","desc":""},{"syntax":"bind(target)","name":"bind","returns":"void","returns_description":null,"parameters":"GLenum target","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>glBindBuffer: https://www.opengl.org/sdk/docs/man4/html/glBindBuffer.xhtml</p>\n","desc":""},{"syntax":"bindBase(target, index)","name":"bindBase","returns":"void","returns_description":null,"parameters":"GLenum target<span class=\"token punctuation\">,</span> GLuint index","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>glBindBufferBase: https://www.opengl.org/sdk/docs/man4/html/glBindBufferBase.xhtml</p>\n","desc":""},{"syntax":"bindRange(target, index, offset, size)","name":"bindRange","returns":"void","returns_description":null,"parameters":"GLenum target<span class=\"token punctuation\">,</span> GLuint index<span class=\"token punctuation\">,</span> GLintptr offset<span class=\"token punctuation\">,</span> GLsizeiptr size","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>glBindBufferRange: https://www.opengl.org/sdk/docs/man4/html/glBindBufferRange.xhtml</p>\n","desc":""},{"syntax":"copyTo(&dstBuffer)","name":"copyTo","returns":"void","returns_description":null,"parameters":"ofBufferObject <span class=\"token operator\">&amp;</span>dstBuffer","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"copyTo(&dstBuffer, readOffset, writeOffset, size)","name":"copyTo","returns":"void","returns_description":null,"parameters":"ofBufferObject <span class=\"token operator\">&amp;</span>dstBuffer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> readOffset<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> writeOffset<span class=\"token punctuation\">,</span> size_t size","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getId()","name":"getId","returns":"GLuint","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>returns the id of the buffer if it's allocated or 0 otherwise</p>\n","desc":""},{"syntax":"invalidate()","name":"invalidate","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"isAllocated()","name":"isAllocated","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>true if allocate was called before</p>\n","desc":""},{"syntax":"map(access)","name":"map","returns":"void *","returns_description":null,"parameters":"GLenum access","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>glMapNamedBuffer: https://www.opengl.org/sdk/docs/man4/html/glMapBuffer.xhtml\nbefore GL 4.5 emulates glMapNamedBuffer by binding to last known target\nfor this buffer and mapping that target</p>\n","desc":""},{"syntax":"map(access)","name":"map","returns":"T *","returns_description":null,"parameters":"GLenum access","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","desc":""},{"syntax":"mapRange(offset, length, access)","name":"mapRange","returns":"void *","returns_description":null,"parameters":"GLintptr offset<span class=\"token punctuation\">,</span> GLsizeiptr length<span class=\"token punctuation\">,</span> GLenum access","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>glMapNamedBufferRange: https://www.opengl.org/sdk/docs/man4/html/glMapBufferRange.xhtml\nbefore GL 4.5 emulates glMapNamedBufferRange by binding to last known target\nfor this buffer and mapping that target</p>\n","desc":""},{"syntax":"mapRange(offset, length, access)","name":"mapRange","returns":"T *","returns_description":null,"parameters":"GLintptr offset<span class=\"token punctuation\">,</span> GLsizeiptr length<span class=\"token punctuation\">,</span> GLenum access","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","desc":""},{"syntax":"ofBufferObject()","name":"ofBufferObject","returns":null,"returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"short":"<p>typed version of setData, same functionality but guesses the size from the size\nof the passed vector and size of the type</p>\n","desc":""},{"short":"","desc":""},{"syntax":"setData(bytes, *data, usage)","name":"setData","returns":"void","returns_description":null,"parameters":"GLsizeiptr bytes<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>data<span class=\"token punctuation\">,</span> GLenum usage","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>glNamedBufferData: https://www.opengl.org/sdk/docs/man4/html/glBufferData.xhtml\nbefore GL 4.5 emulates glNamedBufferData by binding to last known target\nfor this buffer uploading data to that target and unbinding again</p>\n","desc":""},{"syntax":"size()","name":"size","returns":"GLsizeiptr","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"unbind(target)","name":"unbind","returns":"void","returns_description":null,"parameters":"GLenum target","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>binds the passed target to buffer 0</p>\n","desc":""},{"syntax":"unbindBase(target, index)","name":"unbindBase","returns":"void","returns_description":null,"parameters":"GLenum target<span class=\"token punctuation\">,</span> GLuint index","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>binds the given target and index to buffer 0</p>\n","desc":""},{"syntax":"unbindRange(target, index)","name":"unbindRange","returns":"void","returns_description":null,"parameters":"GLenum target<span class=\"token punctuation\">,</span> GLuint index","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>binds the given target and index to 0</p>\n","desc":""},{"syntax":"unmap()","name":"unmap","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>glUnmapNamedBuffer: https://www.opengl.org/sdk/docs/man4/html/glUnmapBuffer.xhtml\nbefore GL 4.5 emulates glUnmapNamedBuffer by unmapping and unbinding\nthe last known target for this buffer</p>\n","desc":""},{"syntax":"unmapRange()","name":"unmapRange","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>same as unmap, just to make the api more clear</p>\n","desc":""},{"short":"<p>typed version of updateData, same functionality but guesses the size from the size\nof the passed vector and size of the type</p>\n","desc":""},{"syntax":"updateData(bytes, *data)","name":"updateData","returns":"void","returns_description":null,"parameters":"GLsizeiptr bytes<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>data","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"short":"<p>typed version of updateData, same functionality but guesses the size from the size\nof the passed vector and size of the type</p>\n","desc":""},{"syntax":"updateData(offset, bytes, *data)","name":"updateData","returns":"void","returns_description":null,"parameters":"GLintptr offset<span class=\"token punctuation\">,</span> GLsizeiptr bytes<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>data","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>glNamedBufferSubData: https://www.opengl.org/sdk/docs/man4/html/glBufferSubData.xhtml\nbefore GL 4.5 emulates glNamedBufferSubData by binding to last known target\nfor this buffer uploading data to that target and unbinding again</p>\n","desc":""},{"short":"","desc":""},{}],"document":"<p>#class ofBufferObject</p>\n<p>&lt;!--\n<em>visible: True</em>\n<em>advanced: False</em>\n<em>istemplated: False</em>\n_extends: _\n--&gt;</p>\n<p>##InlineDescription</p>\n<p>##Description</p>\n<p>##Methods</p>\n<p>###void allocate(&amp;data, usage)</p>\n<p>&lt;!--\n<em>syntax: allocate(&amp;data, usage)</em>\n<em>name: allocate</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const vector&lt; T &gt; &amp;data, GLenum usage</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void allocate(&amp;data, usage)</p>\n<p>&lt;!--\n<em>syntax: allocate(&amp;data, usage)</em>\n<em>name: allocate</em>\n<em>returns: void</em>\n<em>returns_description: _\n<em>parameters: const ofPixels</em>&lt; T &gt; &amp;data, GLenum usage</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void allocate()</p>\n<p>&lt;!--\n<em>syntax: allocate()</em>\n<em>name: allocate</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>creates a buffer without allocating any memory yet\nglGenBuffers, allocates a GL buffer</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void allocate(bytes, *data, usage)</p>\n<p>&lt;!--\n<em>syntax: allocate(bytes, *data, usage)</em>\n<em>name: allocate</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: GLsizeiptr bytes, const void *data, GLenum usage</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void allocate(bytes, usage)</p>\n<p>&lt;!--\n<em>syntax: allocate(bytes, usage)</em>\n<em>name: allocate</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: GLsizeiptr bytes, GLenum usage</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>creates a buffer and allocates the required number of bytes\nglGenBuffers + glNamedBufferData: https://www.opengl.org/sdk/docs/man4/html/glBufferData.xhtml\nbefore GL 4.5 emulates glNamedBufferData by binding to last known target\nfor this buffer uploading data to that target and unbinding again</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void bind(target)</p>\n<p>&lt;!--\n<em>syntax: bind(target)</em>\n<em>name: bind</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: GLenum target</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>glBindBuffer: https://www.opengl.org/sdk/docs/man4/html/glBindBuffer.xhtml</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void bindBase(target, index)</p>\n<p>&lt;!--\n<em>syntax: bindBase(target, index)</em>\n<em>name: bindBase</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: GLenum target, GLuint index</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>glBindBufferBase: https://www.opengl.org/sdk/docs/man4/html/glBindBufferBase.xhtml</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void bindRange(target, index, offset, size)</p>\n<p>&lt;!--\n<em>syntax: bindRange(target, index, offset, size)</em>\n<em>name: bindRange</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: GLenum target, GLuint index, GLintptr offset, GLsizeiptr size</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>glBindBufferRange: https://www.opengl.org/sdk/docs/man4/html/glBindBufferRange.xhtml</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void copyTo(&amp;dstBuffer)</p>\n<p>&lt;!--\n<em>syntax: copyTo(&amp;dstBuffer)</em>\n<em>name: copyTo</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: ofBufferObject &amp;dstBuffer</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void copyTo(&amp;dstBuffer, readOffset, writeOffset, size)</p>\n<p>&lt;!--\n<em>syntax: copyTo(&amp;dstBuffer, readOffset, writeOffset, size)</em>\n<em>name: copyTo</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: ofBufferObject &amp;dstBuffer, int readOffset, int writeOffset, size_t size</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###GLuint getId()</p>\n<p>&lt;!--\n<em>syntax: getId()</em>\n<em>name: getId</em>\n<em>returns: GLuint</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>returns the id of the buffer if it's allocated or 0 otherwise</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void invalidate()</p>\n<p>&lt;!--\n<em>syntax: invalidate()</em>\n<em>name: invalidate</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool isAllocated()</p>\n<p>&lt;!--\n<em>syntax: isAllocated()</em>\n<em>name: isAllocated</em>\n<em>returns: bool</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>true if allocate was called before</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void * map(access)</p>\n<p>&lt;!--\n<em>syntax: map(access)</em>\n<em>name: map</em>\n<em>returns: void *</em>\n_returns_description: _\n<em>parameters: GLenum access</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>glMapNamedBuffer: https://www.opengl.org/sdk/docs/man4/html/glMapBuffer.xhtml\nbefore GL 4.5 emulates glMapNamedBuffer by binding to last known target\nfor this buffer and mapping that target</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###T * map(access)</p>\n<p>&lt;!--\n<em>syntax: map(access)</em>\n<em>name: map</em>\n<em>returns: T *</em>\n_returns_description: _\n<em>parameters: GLenum access</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>typed version of map, returns an array of T when used like:\nbuffer.map&lt;Type&gt;(access)</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void * mapRange(offset, length, access)</p>\n<p>&lt;!--\n<em>syntax: mapRange(offset, length, access)</em>\n<em>name: mapRange</em>\n<em>returns: void *</em>\n_returns_description: _\n<em>parameters: GLintptr offset, GLsizeiptr length, GLenum access</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>glMapNamedBufferRange: https://www.opengl.org/sdk/docs/man4/html/glMapBufferRange.xhtml\nbefore GL 4.5 emulates glMapNamedBufferRange by binding to last known target\nfor this buffer and mapping that target</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###T * mapRange(offset, length, access)</p>\n<p>&lt;!--\n<em>syntax: mapRange(offset, length, access)</em>\n<em>name: mapRange</em>\n<em>returns: T *</em>\n_returns_description: _\n<em>parameters: GLintptr offset, GLsizeiptr length, GLenum access</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>typed version of mapRange, returns an array of T when used like:\nbuffer.mapRange&lt;Type&gt;(access)</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<h3>ofBufferObject()</h3>\n<p>&lt;!--\n<em>syntax: ofBufferObject()</em>\n<em>name: ofBufferObject</em>\n_returns: _\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setData(&amp;data, usage)</p>\n<p>&lt;!--\n<em>syntax: setData(&amp;data, usage)</em>\n<em>name: setData</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const vector&lt; T &gt; &amp;data, GLenum usage</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>typed version of setData, same functionality but guesses the size from the size\nof the passed vector and size of the type</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setData(&amp;data, usage)</p>\n<p>&lt;!--\n<em>syntax: setData(&amp;data, usage)</em>\n<em>name: setData</em>\n<em>returns: void</em>\n<em>returns_description: _\n<em>parameters: const ofPixels</em>&lt; T &gt; &amp;data, GLenum usage</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setData(bytes, *data, usage)</p>\n<p>&lt;!--\n<em>syntax: setData(bytes, *data, usage)</em>\n<em>name: setData</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: GLsizeiptr bytes, const void *data, GLenum usage</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>glNamedBufferData: https://www.opengl.org/sdk/docs/man4/html/glBufferData.xhtml\nbefore GL 4.5 emulates glNamedBufferData by binding to last known target\nfor this buffer uploading data to that target and unbinding again</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###GLsizeiptr size()</p>\n<p>&lt;!--\n<em>syntax: size()</em>\n<em>name: size</em>\n<em>returns: GLsizeiptr</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void unbind(target)</p>\n<p>&lt;!--\n<em>syntax: unbind(target)</em>\n<em>name: unbind</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: GLenum target</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>binds the passed target to buffer 0</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void unbindBase(target, index)</p>\n<p>&lt;!--\n<em>syntax: unbindBase(target, index)</em>\n<em>name: unbindBase</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: GLenum target, GLuint index</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>binds the given target and index to buffer 0</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void unbindRange(target, index)</p>\n<p>&lt;!--\n<em>syntax: unbindRange(target, index)</em>\n<em>name: unbindRange</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: GLenum target, GLuint index</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>binds the given target and index to 0</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void unmap()</p>\n<p>&lt;!--\n<em>syntax: unmap()</em>\n<em>name: unmap</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>glUnmapNamedBuffer: https://www.opengl.org/sdk/docs/man4/html/glUnmapBuffer.xhtml\nbefore GL 4.5 emulates glUnmapNamedBuffer by unmapping and unbinding\nthe last known target for this buffer</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void unmapRange()</p>\n<p>&lt;!--\n<em>syntax: unmapRange()</em>\n<em>name: unmapRange</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>same as unmap, just to make the api more clear</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void updateData(&amp;data)</p>\n<p>&lt;!--\n<em>syntax: updateData(&amp;data)</em>\n<em>name: updateData</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const vector&lt; T &gt; &amp;data</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>typed version of updateData, same functionality but guesses the size from the size\nof the passed vector and size of the type</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void updateData(bytes, *data)</p>\n<p>&lt;!--\n<em>syntax: updateData(bytes, *data)</em>\n<em>name: updateData</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: GLsizeiptr bytes, const void *data</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void updateData(offset, &amp;data)</p>\n<p>&lt;!--\n<em>syntax: updateData(offset, &amp;data)</em>\n<em>name: updateData</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: GLintptr offset, const vector&lt; T &gt; &amp;data</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>typed version of updateData, same functionality but guesses the size from the size\nof the passed vector and size of the type</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void updateData(offset, bytes, *data)</p>\n<p>&lt;!--\n<em>syntax: updateData(offset, bytes, *data)</em>\n<em>name: updateData</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: GLintptr offset, GLsizeiptr bytes, const void *data</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>glNamedBufferSubData: https://www.opengl.org/sdk/docs/man4/html/glBufferSubData.xhtml\nbefore GL 4.5 emulates glNamedBufferSubData by binding to last known target\nfor this buffer uploading data to that target and unbinding again</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>##Variables</p>\n<p>###shared_ptr&lt; ofBufferObject::Data &gt; data</p>\n<p>&lt;!--\n<em>name: data</em>\n<em>type: shared_ptr&lt; ofBufferObject::Data &gt;</em>\n<em>access: private</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n","raw":"#class ofBufferObject\n\n\n<!--\n_visible: True_\n_advanced: False_\n_istemplated: False_\n_extends: _\n-->\n\n##InlineDescription\n\n\n\n\n\n\n##Description\n\n\n\n\n\n##Methods\n\n\n\n###void allocate(&data, usage)\n\n<!--\n_syntax: allocate(&data, usage)_\n_name: allocate_\n_returns: void_\n_returns_description: _\n_parameters: const vector< T > &data, GLenum usage_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void allocate(&data, usage)\n\n<!--\n_syntax: allocate(&data, usage)_\n_name: allocate_\n_returns: void_\n_returns_description: _\n_parameters: const ofPixels_< T > &data, GLenum usage_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void allocate()\n\n<!--\n_syntax: allocate()_\n_name: allocate_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\ncreates a buffer without allocating any memory yet\nglGenBuffers, allocates a GL buffer\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void allocate(bytes, *data, usage)\n\n<!--\n_syntax: allocate(bytes, *data, usage)_\n_name: allocate_\n_returns: void_\n_returns_description: _\n_parameters: GLsizeiptr bytes, const void *data, GLenum usage_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void allocate(bytes, usage)\n\n<!--\n_syntax: allocate(bytes, usage)_\n_name: allocate_\n_returns: void_\n_returns_description: _\n_parameters: GLsizeiptr bytes, GLenum usage_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\ncreates a buffer and allocates the required number of bytes\nglGenBuffers + glNamedBufferData: https://www.opengl.org/sdk/docs/man4/html/glBufferData.xhtml\nbefore GL 4.5 emulates glNamedBufferData by binding to last known target\nfor this buffer uploading data to that target and unbinding again\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void bind(target)\n\n<!--\n_syntax: bind(target)_\n_name: bind_\n_returns: void_\n_returns_description: _\n_parameters: GLenum target_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nglBindBuffer: https://www.opengl.org/sdk/docs/man4/html/glBindBuffer.xhtml\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void bindBase(target, index)\n\n<!--\n_syntax: bindBase(target, index)_\n_name: bindBase_\n_returns: void_\n_returns_description: _\n_parameters: GLenum target, GLuint index_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nglBindBufferBase: https://www.opengl.org/sdk/docs/man4/html/glBindBufferBase.xhtml\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void bindRange(target, index, offset, size)\n\n<!--\n_syntax: bindRange(target, index, offset, size)_\n_name: bindRange_\n_returns: void_\n_returns_description: _\n_parameters: GLenum target, GLuint index, GLintptr offset, GLsizeiptr size_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nglBindBufferRange: https://www.opengl.org/sdk/docs/man4/html/glBindBufferRange.xhtml\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void copyTo(&dstBuffer)\n\n<!--\n_syntax: copyTo(&dstBuffer)_\n_name: copyTo_\n_returns: void_\n_returns_description: _\n_parameters: ofBufferObject &dstBuffer_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void copyTo(&dstBuffer, readOffset, writeOffset, size)\n\n<!--\n_syntax: copyTo(&dstBuffer, readOffset, writeOffset, size)_\n_name: copyTo_\n_returns: void_\n_returns_description: _\n_parameters: ofBufferObject &dstBuffer, int readOffset, int writeOffset, size_t size_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###GLuint getId()\n\n<!--\n_syntax: getId()_\n_name: getId_\n_returns: GLuint_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nreturns the id of the buffer if it's allocated or 0 otherwise\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void invalidate()\n\n<!--\n_syntax: invalidate()_\n_name: invalidate_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool isAllocated()\n\n<!--\n_syntax: isAllocated()_\n_name: isAllocated_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\ntrue if allocate was called before\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void * map(access)\n\n<!--\n_syntax: map(access)_\n_name: map_\n_returns: void *_\n_returns_description: _\n_parameters: GLenum access_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nglMapNamedBuffer: https://www.opengl.org/sdk/docs/man4/html/glMapBuffer.xhtml\nbefore GL 4.5 emulates glMapNamedBuffer by binding to last known target\nfor this buffer and mapping that target\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###T * map(access)\n\n<!--\n_syntax: map(access)_\n_name: map_\n_returns: T *_\n_returns_description: _\n_parameters: GLenum access_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\ntyped version of map, returns an array of T when used like:\nbuffer.map<Type>(access)\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void * mapRange(offset, length, access)\n\n<!--\n_syntax: mapRange(offset, length, access)_\n_name: mapRange_\n_returns: void *_\n_returns_description: _\n_parameters: GLintptr offset, GLsizeiptr length, GLenum access_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nglMapNamedBufferRange: https://www.opengl.org/sdk/docs/man4/html/glMapBufferRange.xhtml\nbefore GL 4.5 emulates glMapNamedBufferRange by binding to last known target\nfor this buffer and mapping that target\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###T * mapRange(offset, length, access)\n\n<!--\n_syntax: mapRange(offset, length, access)_\n_name: mapRange_\n_returns: T *_\n_returns_description: _\n_parameters: GLintptr offset, GLsizeiptr length, GLenum access_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\ntyped version of mapRange, returns an array of T when used like:\nbuffer.mapRange<Type>(access)\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n### ofBufferObject()\n\n<!--\n_syntax: ofBufferObject()_\n_name: ofBufferObject_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setData(&data, usage)\n\n<!--\n_syntax: setData(&data, usage)_\n_name: setData_\n_returns: void_\n_returns_description: _\n_parameters: const vector< T > &data, GLenum usage_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\ntyped version of setData, same functionality but guesses the size from the size\nof the passed vector and size of the type\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setData(&data, usage)\n\n<!--\n_syntax: setData(&data, usage)_\n_name: setData_\n_returns: void_\n_returns_description: _\n_parameters: const ofPixels_< T > &data, GLenum usage_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setData(bytes, *data, usage)\n\n<!--\n_syntax: setData(bytes, *data, usage)_\n_name: setData_\n_returns: void_\n_returns_description: _\n_parameters: GLsizeiptr bytes, const void *data, GLenum usage_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nglNamedBufferData: https://www.opengl.org/sdk/docs/man4/html/glBufferData.xhtml\nbefore GL 4.5 emulates glNamedBufferData by binding to last known target\nfor this buffer uploading data to that target and unbinding again\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###GLsizeiptr size()\n\n<!--\n_syntax: size()_\n_name: size_\n_returns: GLsizeiptr_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void unbind(target)\n\n<!--\n_syntax: unbind(target)_\n_name: unbind_\n_returns: void_\n_returns_description: _\n_parameters: GLenum target_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nbinds the passed target to buffer 0\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void unbindBase(target, index)\n\n<!--\n_syntax: unbindBase(target, index)_\n_name: unbindBase_\n_returns: void_\n_returns_description: _\n_parameters: GLenum target, GLuint index_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nbinds the given target and index to buffer 0\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void unbindRange(target, index)\n\n<!--\n_syntax: unbindRange(target, index)_\n_name: unbindRange_\n_returns: void_\n_returns_description: _\n_parameters: GLenum target, GLuint index_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nbinds the given target and index to 0\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void unmap()\n\n<!--\n_syntax: unmap()_\n_name: unmap_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nglUnmapNamedBuffer: https://www.opengl.org/sdk/docs/man4/html/glUnmapBuffer.xhtml\nbefore GL 4.5 emulates glUnmapNamedBuffer by unmapping and unbinding\nthe last known target for this buffer\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void unmapRange()\n\n<!--\n_syntax: unmapRange()_\n_name: unmapRange_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nsame as unmap, just to make the api more clear\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void updateData(&data)\n\n<!--\n_syntax: updateData(&data)_\n_name: updateData_\n_returns: void_\n_returns_description: _\n_parameters: const vector< T > &data_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\ntyped version of updateData, same functionality but guesses the size from the size\nof the passed vector and size of the type\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void updateData(bytes, *data)\n\n<!--\n_syntax: updateData(bytes, *data)_\n_name: updateData_\n_returns: void_\n_returns_description: _\n_parameters: GLsizeiptr bytes, const void *data_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void updateData(offset, &data)\n\n<!--\n_syntax: updateData(offset, &data)_\n_name: updateData_\n_returns: void_\n_returns_description: _\n_parameters: GLintptr offset, const vector< T > &data_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\ntyped version of updateData, same functionality but guesses the size from the size\nof the passed vector and size of the type\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void updateData(offset, bytes, *data)\n\n<!--\n_syntax: updateData(offset, bytes, *data)_\n_name: updateData_\n_returns: void_\n_returns_description: _\n_parameters: GLintptr offset, GLsizeiptr bytes, const void *data_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nglNamedBufferSubData: https://www.opengl.org/sdk/docs/man4/html/glBufferSubData.xhtml\nbefore GL 4.5 emulates glNamedBufferSubData by binding to last known target\nfor this buffer uploading data to that target and unbinding again\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n##Variables\n\n\n\n###shared_ptr< ofBufferObject::Data > data\n\n<!--\n_name: data_\n_type: shared_ptr< ofBufferObject::Data >_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page","static":true}}],"fetch":[]}