{"data":[{"page":{"entry":{"name":"msys2-ja","filename":"msys2.ja.md","absolute":"/Users/gilbertsinnott/Code/openFrameworks/ofSite/content/setup/msys2.ja.md","path":"/guides/msys2-ja","route":"/guides/msys2.ja.md","dir":"../ofSite/content/setup","ext":"md","type":"page","id":19,"parent":3,"breadcrumbs":[3],"siblings":[],"translations":{}},"description":{},"document":"<h2>-<em>- coding: utf-8 -</em>-</h2>\n<p>.. title: msys2</p>\n<p><a href=\"/\">openFrameworks</a> | <a href=\"table_of_contents.md\">Documentation table of contents</a></p>\n<h1>msys2</h1>\n<h2>msys2をインストール</h2>\n<p>まず、 <a href=\"https://msys2.github.io/\">1クリックインストーラー</a> もしくは <a href=\"http://sourceforge.net/projects/msys2/files/Base/x86_64/\">リポジトリ</a> を直接解凍してMSYS2をインストールします。</p>\n<p>もしQtCreatorを使用したいと考えているなら、msys2はデフォルトのインストール場所の c:\\msys64 にインストールする必要があります。</p>\n<p><strong>MSYS2 shell</strong> (<code>C<span class=\"token operator\">:</span>\\msys64\\msys2_shell<span class=\"token punctuation\">.</span>bat</code>) を開いて、システムのパッケージをアップデートします。</p>\n<pre><code>pacman <span class=\"token operator\">--</span>noconfirm  <span class=\"token operator\">--</span>needed <span class=\"token operator\">-</span>Sy bash pacman pacman<span class=\"token operator\">-</span>mirrors msys2<span class=\"token operator\">-</span>runtime\n</code></pre>\n<p>いちど開いていたshellを閉じ、新規に起動して残りのパッケージをアップデートします。</p>\n<pre><code>pacman <span class=\"token operator\">--</span>noconfirm <span class=\"token operator\">-</span>Su\n</code></pre>\n<p>これでopenFrameworksをインストールする準備ができました。</p>\n<h2>openFrameworksのインストール</h2>\n<p><strong>qt creator / msys2</strong> バージョンのopenFrameworksをダウンロードして解凍します。</p>\n<p><strong>MSYS shell</strong> (<code>C<span class=\"token operator\">:</span>\\msys64\\msys2_shell<span class=\"token punctuation\">.</span>bat</code>) を開いて、openFrameworksの依存関係をインストールします。</p>\n<pre><code>cd your_oF_directory<span class=\"token operator\">/</span>scripts<span class=\"token operator\">/</span>msys2\n<span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>install_dependencies<span class=\"token punctuation\">.</span>sh`\n</code></pre>\n<p>もし、Qt Creatorの使用を考えているなら、依存関係のインストールスクリプトの実行を終えてから、コンピューターの再起動をお勧めします。再起動によって、システムへの変更が正しく更新されます。</p>\n<p><strong>MINGW32</strong> shell (<code>C<span class=\"token operator\">:</span>\\msys64\\mingw32_shell<span class=\"token punctuation\">.</span>bat</code>を起動) を開いて、openFrameworksのライブラリーをコンパイルします。</p>\n<pre><code>cd your_oF_directory<span class=\"token operator\">/</span>libs<span class=\"token operator\">/</span>openFrameworksCompiled<span class=\"token operator\">/</span>project\nmake\n</code></pre>\n<p><code>make <span class=\"token operator\">-</span>j4</code>とすることで複数コアを使った並列ビルドも可能です(数字部分は使いたいコア数に応じて変更してください)。</p>\n<h2>PATH環境変数の設定</h2>\n<p>普通install_dependencies.shのスクリプトは、パスの設定を行ってくれるはずです。もしコンピューターを再起動した後でもQt Creatorやコンパイルに関して問題があるようであれば、正しくパスが設定されているか確認することができ、もし正しくない場合は以下の手動で手動で修正可能です。</p>\n<p>MSYS2とともにopenFrameworksを使うためにはMSYS2のパッケージマネージャーである<code>pacman</code>が提供するいくつかのDLLが必要になります。PATH環境変数はDLLの場所をシステムに教えるためのものです。Windowsでは、実行ファイルはカレントディレクトリ、システム環境変数で定義されたPATH、ユーザー環境変数で定義されたPATHの順に探索されます。</p>\n<p>PATH環境変数の設定方法はこちらを参照してください :  http://www.computerhope.com/issues/ch000549.htm</p>\n<p><code>c<span class=\"token operator\">:</span>\\msys64\\mingw32\\bin</code> と <code>c<span class=\"token operator\">:</span>\\msys64\\usr\\bin</code> をPATHに追加する必要があります。2種類の方法があります。</p>\n<ol>\n<li>「コントロールパネル &gt; システム &gt; システムの詳細設定」で表示される画面の「環境変数」のボタンを押す</li>\n<li>WindowsのコマンドプロンプトからPATHを設定</li>\n</ol>\n<pre><code>setx PATH <span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span>c<span class=\"token operator\">:</span>\\msys64\\mingw32\\bin<span class=\"token punctuation\">;</span>c<span class=\"token operator\">:</span>\\msys64\\usr\\bin<span class=\"token punctuation\">;</span><span class=\"token operator\">%</span>PATH<span class=\"token operator\">%</span><span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>もし管理者権限を持っていればシステム環境変数の設定も可能です。この場合、すべてのユーザーが恩恵を受けることができるでしょう。</p>\n<p>これで完了です。まずはサンプルプロジェクトを楽しんでみてください！</p>\n<h2>サンプルプロジェクトの実行</h2>\n<p>例として3DPrimitivesExampleをコンパイルしてみましょう。</p>\n<pre><code>cd your_oF_directory<span class=\"token operator\">/</span>examples<span class=\"token operator\">/</span>3d<span class=\"token operator\">/</span>3DPrimitivesExample\nmake\n</code></pre>\n<p><code>make run</code>と打つかダブルクリックしてアプリケーションを起動してください。</p>\n<h2>Makefile</h2>\n<p>すべてのサンプルプロジェクトにはMakefileがあり、config.makeファイルおよびaddons.makeファイルを使用して設定をおこなうことができます。</p>\n<p>config.make: 一般的なMakefileの記法を使ってサーチパスやライブラリの追加をおこなうためのファイルです。ファイル内のコメントを参考にしてください。</p>\n<p>addons.make: アドオンを使いたい場合は、そのアドオンの名前をこのファイルに書き加えます。</p>\n<h2>QtCreator</h2>\n<p>IDEとしてQt Creatorを使用することもできます。詳しくは<a href=\"https://openframeworks.cc/ja/setup/qtcreator\">セットアップガイド</a>を参照してください。</p>\n<h2>よくある質問</h2>\n<ul>\n<li>exeファイルをダブルクリックすると &quot;TLSv1_1_client_method missing&quot; というエラーが出ます</li>\n</ul>\n<p>実行ファイルが見つけたssleay32.dllおよびlibeay32.dllがTLS v1.1をサポートしていないために出るエラーで、Intel iClsソフトウェアでよく起こります。解決するにはyour_msys2_directory\\mingw32\\binのパスを衝突しているパスより前に移動させます。衝突しているパスがシステム環境変数の中にあり、管理者権限を持っていない場合は、ssleay32.dllとlibeay32.dllをyour_msys2_directory\\mingw32\\binからexeファイルのあるフォルダにコピーもしくはリンクしてください。</p>\n<ul>\n<li>会社のネットワークにプロキシが設定されているため、pacmanからパッケージをダウンロードできません</li>\n</ul>\n<p>HTTP_PROXYおよびHTTPS_PROXY環境変数を設定する必要があります。コマンドプロンプトで以下のように打ち込んでください。</p>\n<pre><code>From a DOS<span class=\"token operator\">/</span>CMD prompt <span class=\"token operator\">:</span>\nset http_proxy<span class=\"token operator\">=</span>http<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>your_proxy<span class=\"token operator\">:</span>your_port\nset http_proxy<span class=\"token operator\">=</span>http<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>username<span class=\"token operator\">:</span>password@your_proxy<span class=\"token operator\">:</span>your_port\nset https_proxy<span class=\"token operator\">=</span>https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>your_proxy<span class=\"token operator\">:</span>your_port\nset https_proxy<span class=\"token operator\">=</span>https<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>username<span class=\"token operator\">:</span>password@your_proxy<span class=\"token operator\">:</span>your_port\n</code></pre>\n<p>パスワードに含まれる特殊文字をエスケープするのをお忘れなく。</p>\n<p>ありがとう! oFチームより。</p>\n","raw":"## -*- coding: utf-8 -*-\r\n.. title: msys2\r\n\r\n[openFrameworks](/) | [Documentation table of contents](table_of_contents.md)\r\n\r\nmsys2\r\n=====\r\n\r\nmsys2をインストール\r\n----------------\r\n\r\nまず、 [1クリックインストーラー](https://msys2.github.io/) もしくは [リポジトリ](http://sourceforge.net/projects/msys2/files/Base/x86_64/) を直接解凍してMSYS2をインストールします。\r\n\r\nもしQtCreatorを使用したいと考えているなら、msys2はデフォルトのインストール場所の c:\\msys64 にインストールする必要があります。\r\n\r\n**MSYS2 shell** (`C:\\msys64\\msys2_shell.bat`) を開いて、システムのパッケージをアップデートします。\r\n\r\n    pacman --noconfirm  --needed -Sy bash pacman pacman-mirrors msys2-runtime\r\n\r\nいちど開いていたshellを閉じ、新規に起動して残りのパッケージをアップデートします。\r\n\r\n    pacman --noconfirm -Su\r\n\r\nこれでopenFrameworksをインストールする準備ができました。\r\n\r\n\r\nopenFrameworksのインストール\r\n-------------------------\r\n\r\n**qt creator / msys2** バージョンのopenFrameworksをダウンロードして解凍します。\r\n\r\n**MSYS shell** (`C:\\msys64\\msys2_shell.bat`) を開いて、openFrameworksの依存関係をインストールします。\r\n\r\n    cd your_oF_directory/scripts/msys2\r\n    ./install_dependencies.sh`\r\n\r\nもし、Qt Creatorの使用を考えているなら、依存関係のインストールスクリプトの実行を終えてから、コンピューターの再起動をお勧めします。再起動によって、システムへの変更が正しく更新されます。\r\n\r\n **MINGW32** shell (`C:\\msys64\\mingw32_shell.bat`を起動) を開いて、openFrameworksのライブラリーをコンパイルします。 \r\n\r\n    cd your_oF_directory/libs/openFrameworksCompiled/project\r\n    make\r\n\r\n`make -j4`とすることで複数コアを使った並列ビルドも可能です(数字部分は使いたいコア数に応じて変更してください)。\r\n\r\n\r\nPATH環境変数の設定\r\n-------------------------\r\n\r\n普通install_dependencies.shのスクリプトは、パスの設定を行ってくれるはずです。もしコンピューターを再起動した後でもQt Creatorやコンパイルに関して問題があるようであれば、正しくパスが設定されているか確認することができ、もし正しくない場合は以下の手動で手動で修正可能です。\r\n\r\nMSYS2とともにopenFrameworksを使うためにはMSYS2のパッケージマネージャーである`pacman`が提供するいくつかのDLLが必要になります。PATH環境変数はDLLの場所をシステムに教えるためのものです。Windowsでは、実行ファイルはカレントディレクトリ、システム環境変数で定義されたPATH、ユーザー環境変数で定義されたPATHの順に探索されます。\r\n\r\nPATH環境変数の設定方法はこちらを参照してください :  http://www.computerhope.com/issues/ch000549.htm\r\n\r\n`c:\\msys64\\mingw32\\bin` と `c:\\msys64\\usr\\bin` をPATHに追加する必要があります。2種類の方法があります。\r\n\r\n1. 「コントロールパネル > システム > システムの詳細設定」で表示される画面の「環境変数」のボタンを押す\r\n2. WindowsのコマンドプロンプトからPATHを設定\r\n\r\n```\r\nsetx PATH \"c:\\msys64\\mingw32\\bin;c:\\msys64\\usr\\bin;%PATH%\"\r\n```\r\n\r\nもし管理者権限を持っていればシステム環境変数の設定も可能です。この場合、すべてのユーザーが恩恵を受けることができるでしょう。\r\n\r\nこれで完了です。まずはサンプルプロジェクトを楽しんでみてください！\r\n\r\nサンプルプロジェクトの実行\r\n----------------\r\n\r\n例として3DPrimitivesExampleをコンパイルしてみましょう。\r\n\r\n    cd your_oF_directory/examples/3d/3DPrimitivesExample\r\n    make\r\n\r\n`make run`と打つかダブルクリックしてアプリケーションを起動してください。\r\n\r\n\r\nMakefile\r\n--------\r\n\r\nすべてのサンプルプロジェクトにはMakefileがあり、config.makeファイルおよびaddons.makeファイルを使用して設定をおこなうことができます。\r\n\r\nconfig.make: 一般的なMakefileの記法を使ってサーチパスやライブラリの追加をおこなうためのファイルです。ファイル内のコメントを参考にしてください。\r\n\r\naddons.make: アドオンを使いたい場合は、そのアドオンの名前をこのファイルに書き加えます。\r\n\r\nQtCreator\r\n---------\r\n\r\nIDEとしてQt Creatorを使用することもできます。詳しくは[セットアップガイド](https://openframeworks.cc/ja/setup/qtcreator)を参照してください。\r\n\r\n## よくある質問\r\n\r\n- exeファイルをダブルクリックすると \"TLSv1_1_client_method missing\" というエラーが出ます\r\n\r\n実行ファイルが見つけたssleay32.dllおよびlibeay32.dllがTLS v1.1をサポートしていないために出るエラーで、Intel iClsソフトウェアでよく起こります。解決するにはyour_msys2_directory\\mingw32\\binのパスを衝突しているパスより前に移動させます。衝突しているパスがシステム環境変数の中にあり、管理者権限を持っていない場合は、ssleay32.dllとlibeay32.dllをyour_msys2_directory\\mingw32\\binからexeファイルのあるフォルダにコピーもしくはリンクしてください。\r\n\r\n- 会社のネットワークにプロキシが設定されているため、pacmanからパッケージをダウンロードできません\r\n\r\nHTTP_PROXYおよびHTTPS_PROXY環境変数を設定する必要があります。コマンドプロンプトで以下のように打ち込んでください。\r\n\r\n    From a DOS/CMD prompt :\r\n    set http_proxy=http://your_proxy:your_port\r\n    set http_proxy=http://username:password@your_proxy:your_port\r\n    set https_proxy=https://your_proxy:your_port\r\n    set https_proxy=https://username:password@your_proxy:your_port\r\nパスワードに含まれる特殊文字をエスケープするのをお忘れなく。\r\n\r\nありがとう! oFチームより。\r\n\r\n","type":"page","static":true}}],"fetch":[]}