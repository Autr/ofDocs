{"data":[{"page":{"entry":{"name":"README","filename":"README.md","absolute":"/Users/gilbertsinnott/Code/openFrameworks/examples/gl/computeShaderTextureExample/README.md","path":"/examples/gl/computeShaderTextureExample/README","route":"/examples/gl/computeShaderTextureExample/README.md","dir":"../examples/gl/computeShaderTextureExample","ext":"md","type":"page","id":820,"parent":818,"breadcrumbs":[818,783,436],"translations":{},"siblings":[]},"description":{},"document":"<h1>computeShaderTextureExample</h1>\n<p><img src=\"computeShaderTextureExample.png\" alt=\"Screenshot of computeShaderTextureExample\"></p>\n<h3>Learning Objectives</h3>\n<p>This example demonstrates how to find contours in a video using background subtraction. The compute shader is used to convert a video frame into black and white (binary) pixels by the difference between the frame and a given background image. Afterwards the openCV addon for openFrameworks is used to retrieve a contour as a vector of points.</p>\n<p>You will learn how to..</p>\n<ul>\n<li>store the pixels of a video frame into a texture using <code>ofTexture<span class=\"token operator\">::</span><span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></li>\n<li>store texture data in an <code>ofBufferObject</code> using <code>ofTexture<span class=\"token operator\">::</span><span class=\"token function\">copyTo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></li>\n<li>load data from an <code>ofBufferObject</code> to <code>ofxCvGrayscaleImage</code></li>\n<li>compute the difference between two textures</li>\n<li>use the openCV contour finder in openFrameworks</li>\n</ul>\n<p>In the code, pay attention to:</p>\n<ul>\n<li>the handling of <code>GL_READ_ONLY</code> and <code>GL_WRITE_ONLY</code> textures in the C++ code as well as in the shader</li>\n<li>the definition of working groups for parallel computation by setting <code><span class=\"token function\">dispatchCompute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code> from the C++ shader object and <code><span class=\"token function\">layout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code> from within the shader</li>\n<li>the functions a compute shader uses to read and write pixels in comparison to a pixel shader</li>\n</ul>\n<h3>Expected Behavior</h3>\n<p>When launching this app, you should see a window with two image frames. In the top right corner the framerate is displayed. The left frame shows a video of a while light with a hand that appears in front of it as a black contour. On the right side the difference between the current video frame and the defined background image is shown. It is displayed as a black and white (binary) image. Each contour computed from that image appears as a cyan line on top of the left image, framed by a purple bounding rectangle.</p>\n<p>Instructions for use:</p>\n<ul>\n<li>Press the space key to use the current video frame as the background image that will be subtracted from all other frames in order to find contours</li>\n</ul>\n<h3>Other classes used in this file</h3>\n<p>This Example uses the following classes:</p>\n<ul>\n<li><a href=\"http://openframeworks.cc/documentation/gl/ofShader/\">ofShader</a></li>\n<li><a href=\"http://openframeworks.cc/documentation/gl/ofTexture/\">ofTexture</a></li>\n<li><a href=\"http://openframeworks.cc/documentation/video/ofVideoPlayer/\">ofVideoPlayer</a></li>\n<li><a href=\"http://openframeworks.cc/documentation/gl/ofBufferObject/\">ofBufferObject</a></li>\n<li><a href=\"http://openframeworks.cc/documentation/ofxOpenCv/ofxCvGrayscaleImage/\">ofxCvGrayscaleImage</a></li>\n<li><a href=\"http://openframeworks.cc/documentation/ofxOpenCv/ofxCvContourFinder/\">ofxCvContourFinder</a></li>\n</ul>\n","raw":"# computeShaderTextureExample\n\n![Screenshot of computeShaderTextureExample](computeShaderTextureExample.png)\n\n### Learning Objectives\n\nThis example demonstrates how to find contours in a video using background subtraction. The compute shader is used to convert a video frame into black and white (binary) pixels by the difference between the frame and a given background image. Afterwards the openCV addon for openFrameworks is used to retrieve a contour as a vector of points.\n\nYou will learn how to..\n* store the pixels of a video frame into a texture using `ofTexture::loadData()`\n* store texture data in an `ofBufferObject` using `ofTexture::copyTo()`\n* load data from an `ofBufferObject` to `ofxCvGrayscaleImage`\n* compute the difference between two textures\n* use the openCV contour finder in openFrameworks\n\nIn the code, pay attention to:\n* the handling of `GL_READ_ONLY` and `GL_WRITE_ONLY` textures in the C++ code as well as in the shader\n* the definition of working groups for parallel computation by setting `dispatchCompute()` from the C++ shader object and `layout()` from within the shader\n* the functions a compute shader uses to read and write pixels in comparison to a pixel shader\n\n### Expected Behavior\n\nWhen launching this app, you should see a window with two image frames. In the top right corner the framerate is displayed. The left frame shows a video of a while light with a hand that appears in front of it as a black contour. On the right side the difference between the current video frame and the defined background image is shown. It is displayed as a black and white (binary) image. Each contour computed from that image appears as a cyan line on top of the left image, framed by a purple bounding rectangle.\n\nInstructions for use:\n\n* Press the space key to use the current video frame as the background image that will be subtracted from all other frames in order to find contours\n\n### Other classes used in this file\n\nThis Example uses the following classes:\n\n* [ofShader](http://openframeworks.cc/documentation/gl/ofShader/)\n* [ofTexture](http://openframeworks.cc/documentation/gl/ofTexture/)\n* [ofVideoPlayer](http://openframeworks.cc/documentation/video/ofVideoPlayer/)\n* [ofBufferObject](http://openframeworks.cc/documentation/gl/ofBufferObject/)\n* [ofxCvGrayscaleImage](http://openframeworks.cc/documentation/ofxOpenCv/ofxCvGrayscaleImage/)\n* [ofxCvContourFinder](http://openframeworks.cc/documentation/ofxOpenCv/ofxCvContourFinder/)\n","type":"page","static":true}}],"fetch":[]}