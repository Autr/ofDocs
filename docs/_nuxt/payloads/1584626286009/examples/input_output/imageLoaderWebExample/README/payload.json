{"data":[{"page":{"entry":{"name":"README","filename":"README.md","absolute":"/Users/gilbertsinnott/Code/openFrameworks/examples/input_output/imageLoaderWebExample/README.md","path":"/examples/input_output/imageLoaderWebExample/README","route":"/examples/input_output/imageLoaderWebExample/README.md","dir":"../examples/input_output/imageLoaderWebExample","ext":"md","type":"page","id":1122,"parent":1120,"breadcrumbs":[1120,1069,436],"translations":{},"siblings":[]},"description":{},"document":"<h1>About Image Loader Web Example</h1>\n<p>--\n<img src=\"imageLoaderWebExample.png\" alt=\"Screenshot of Example\"></p>\n<h3>Learning Objectives</h3>\n<p>This openFrameworks example demonstrates how to load an image from the web and then apply a pointillism effect to the image.</p>\n<p>In this example, pay attention to the following code:</p>\n<ul>\n<li>Request to load an image using <code>ofLoadURLAsync</code> which passes the url, and a name for the request</li>\n<li>Handle the response from the request using <code><span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span>urlResponse</code></li>\n<li>Determine information about the fullfilled request by inspecting the status code <code>response<span class=\"token punctuation\">.</span>status</code> and the request name <code>response<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>name</code></li>\n<li>On exit of the application, unregister the application from being notified of the URL request completion using <code>ofUnregisterURLNotification</code></li>\n<li>Load the data from the request into an image holder using <code>img<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span></code></li>\n<li>Inspect the pixel information of the image to draw a pointillism effect leveraging <code>img<span class=\"token punctuation\">.</span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span></code> , <code>ofSetColor</code> and <code>ofDrawCircle</code></li>\n</ul>\n<h3>Expected Behavior</h3>\n<p>When launching this app, you should see:</p>\n<ul>\n<li>a gray screen</li>\n<li>instructions to hit the spacebar to load the image</li>\n</ul>\n<p>Instructions for use:</p>\n<ul>\n<li>Press the <code>spacebar</code> to make the load request for the image</li>\n</ul>\n<p>When the image is loaded, the pointillism effect will be created on the left hand side. Moving your mouse around will affect the size of the circles used to create the effect.</p>\n<h3>Other classes used in this file</h3>\n<p>This Example uses no other classes.</p>\n","raw":"# About Image Loader Web Example\n\n--\n![Screenshot of Example](imageLoaderWebExample.png)\n\n### Learning Objectives\n\nThis openFrameworks example demonstrates how to load an image from the web and then apply a pointillism effect to the image.  \n\nIn this example, pay attention to the following code:\n\n* Request to load an image using ```ofLoadURLAsync``` which passes the url, and a name for the request \n* Handle the response from the request using ```void ofApp::urlResponse```\n* Determine information about the fullfilled request by inspecting the status code ```response.status``` and the request name ```response.request.name```\n* On exit of the application, unregister the application from being notified of the URL request completion using ```ofUnregisterURLNotification```\n* Load the data from the request into an image holder using ```img.load(response.data)```\n* Inspect the pixel information of the image to draw a pointillism effect leveraging ```img.getColor(x,y)``` , ```ofSetColor``` and ```ofDrawCircle```\n\n\n### Expected Behavior\n\nWhen launching this app, you should see:\n\n* a gray screen \n* instructions to hit the spacebar to load the image\n\nInstructions for use:\n\n* Press the ```spacebar``` to make the load request for the image\n\nWhen the image is loaded, the pointillism effect will be created on the left hand side. Moving your mouse around will affect the size of the circles used to create the effect.\n\n\n### Other classes used in this file\n\nThis Example uses no other classes.\n","type":"page","static":true}}],"fetch":[]}