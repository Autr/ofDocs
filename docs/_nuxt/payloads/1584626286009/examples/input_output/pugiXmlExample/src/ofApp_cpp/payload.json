{"data":[{"page":{"entry":{"name":"ofApp.cpp","filename":"ofApp.cpp","absolute":"/Users/gilbertsinnott/Code/openFrameworks/examples/input_output/pugiXmlExample/src/ofApp.cpp","path":"/examples/input_output/pugiXmlExample/src/ofApp_cpp","route":"/examples/input_output/pugiXmlExample/src/ofApp.cpp","dir":"../examples/input_output/pugiXmlExample/src","ext":"cpp","type":"source","id":1166,"parent":1163,"breadcrumbs":[1163,1164,1069,436],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofApp.h\"</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// load the file and check if it was loaded ok. Also check it's</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// format is correct, it needs to have:</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// - a root called drawing which</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// - contains a background element which itself contains nodes</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//   red, green and blue</span>\n\t<span class=\"token keyword\">auto</span> isLoaded <span class=\"token operator\">=</span> xml<span class=\"token punctuation\">.</span><span class=\"token function\">load_file</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofToDataPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"points.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> pugi<span class=\"token operator\">::</span>status_ok<span class=\"token punctuation\">;</span>\n\tisLoaded <span class=\"token operator\">&amp;</span><span class=\"token operator\">=</span> <span class=\"token keyword\">bool</span><span class=\"token punctuation\">(</span>xml<span class=\"token punctuation\">.</span><span class=\"token function\">child</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"drawing\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tisLoaded <span class=\"token operator\">&amp;</span><span class=\"token operator\">=</span> <span class=\"token keyword\">bool</span><span class=\"token punctuation\">(</span>xml<span class=\"token punctuation\">.</span><span class=\"token function\">select_node</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"//drawing/background[red and green and blue]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// Last check could have also been done like:</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// isLoaded &amp;= bool(xml.select_node(\"//drawing/background/red\"));</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// isLoaded &amp;= bool(xml.select_node(\"//drawing/background/green\"));</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// isLoaded &amp;= bool(xml.select_node(\"//drawing/background/blue\"));</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isLoaded<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"File not found or incorrect format, creating\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">auto</span> bg <span class=\"token operator\">=</span> xml<span class=\"token punctuation\">.</span><span class=\"token function\">append_child</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"drawing\"</span><span class=\"token punctuation\">)</span>\n\t\t\t\t  <span class=\"token punctuation\">.</span><span class=\"token function\">append_child</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"background\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tbg<span class=\"token punctuation\">.</span><span class=\"token function\">append_child</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"red\"</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">append_child</span><span class=\"token punctuation\">(</span>pugi<span class=\"token operator\">::</span>node_pcdata<span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">set_value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"255\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tbg<span class=\"token punctuation\">.</span><span class=\"token function\">append_child</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"green\"</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">append_child</span><span class=\"token punctuation\">(</span>pugi<span class=\"token operator\">::</span>node_pcdata<span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">set_value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"255\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tbg<span class=\"token punctuation\">.</span><span class=\"token function\">append_child</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">append_child</span><span class=\"token punctuation\">(</span>pugi<span class=\"token operator\">::</span>node_pcdata<span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">.</span><span class=\"token function\">set_value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"255\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// select background and read it's values</span>\n\t<span class=\"token keyword\">auto</span> background <span class=\"token operator\">=</span> xml<span class=\"token punctuation\">.</span><span class=\"token function\">select_node</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"//background\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">node</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>background<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tbgColor<span class=\"token punctuation\">.</span>r <span class=\"token operator\">=</span> background<span class=\"token punctuation\">.</span><span class=\"token function\">child</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"red\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">as_int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tbgColor<span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> background<span class=\"token punctuation\">.</span><span class=\"token function\">child</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"green\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">as_int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tbgColor<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> background<span class=\"token punctuation\">.</span><span class=\"token function\">child</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"blue\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">as_int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// select all strokes and iterate through them</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// for each stroke, create a new mesh</span>\n\t<span class=\"token keyword\">auto</span> strokesXml <span class=\"token operator\">=</span> xml<span class=\"token punctuation\">.</span><span class=\"token function\">select_nodes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"//strokes\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> <span class=\"token operator\">&amp;</span> stroke<span class=\"token operator\">:</span> strokesXml<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tstrokes<span class=\"token punctuation\">.</span><span class=\"token function\">emplace_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tstrokes<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setMode</span><span class=\"token punctuation\">(</span>OF_PRIMITIVE_LINE_STRIP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// for each pt in the stroke insert a new</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// vertex in the mesh</span>\n\t\t<span class=\"token keyword\">auto</span> pts <span class=\"token operator\">=</span> stroke<span class=\"token punctuation\">.</span><span class=\"token function\">node</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">children</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> <span class=\"token operator\">&amp;</span> pt<span class=\"token operator\">:</span> pts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">auto</span> x <span class=\"token operator\">=</span> pt<span class=\"token punctuation\">.</span><span class=\"token function\">attribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">as_int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">auto</span> y <span class=\"token operator\">=</span> pt<span class=\"token punctuation\">.</span><span class=\"token function\">attribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"y\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">as_int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tstrokes<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addVertex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> <span class=\"token operator\">&amp;</span> stroke<span class=\"token operator\">:</span> strokes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tstroke<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">keyPressed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> <span class=\"token string\">'s'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\txml<span class=\"token punctuation\">.</span><span class=\"token function\">save_file</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofToDataPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"points.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">keyReleased</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseMoved</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseDragged</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">auto</span> pt <span class=\"token operator\">=</span> currentStroke<span class=\"token punctuation\">.</span><span class=\"token function\">append_child</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tpt<span class=\"token punctuation\">.</span><span class=\"token function\">append_attribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"x\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">set_value</span><span class=\"token punctuation\">(</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tpt<span class=\"token punctuation\">.</span><span class=\"token function\">append_attribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"y\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">set_value</span><span class=\"token punctuation\">(</span><span class=\"token function\">to_string</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tstrokes<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addVertex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mousePressed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcurrentStroke <span class=\"token operator\">=</span> xml<span class=\"token punctuation\">.</span><span class=\"token function\">child</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"drawing\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append_child</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"stroke\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tstrokes<span class=\"token punctuation\">.</span><span class=\"token function\">emplace_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tstrokes<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setMode</span><span class=\"token punctuation\">(</span>OF_PRIMITIVE_LINE_STRIP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseReleased</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseEntered</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseExited</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">windowResized</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">gotMessage</span><span class=\"token punctuation\">(</span>ofMessage msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">dragEvent</span><span class=\"token punctuation\">(</span>ofDragInfo dragInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n","type":"source","static":true}}],"fetch":[]}