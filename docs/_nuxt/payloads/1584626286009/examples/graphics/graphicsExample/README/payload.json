{"data":[{"page":{"entry":{"name":"README","filename":"README.md","absolute":"/Users/gilbertsinnott/Code/openFrameworks/examples/graphics/graphicsExample/README.md","path":"/examples/graphics/graphicsExample/README","route":"/examples/graphics/graphicsExample/README.md","dir":"../examples/graphics/graphicsExample","ext":"md","type":"page","id":985,"parent":983,"breadcrumbs":[983,943,436],"translations":{},"siblings":[]},"description":{},"document":"<h1>About graphicsExample</h1>\n<p><img src=\"graphicsExample.png\" alt=\"Screenshot of graphicsExample\"></p>\n<h3>Learning Objectives</h3>\n<p>This example demonstrates a few of the most basic graphics capabilities of openFrameworks. After studying this example, you'll understand how to render some simple colored lines and elementary shapes, such as ellipses and rectangles.</p>\n<p>In the code, pay attention to:</p>\n<ul>\n<li>different commands for setting the active color, such as <code><span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code> and <code><span class=\"token function\">ofSetHexColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code>. These commands set the color for subsequent drawing operations, including lines and fills.</li>\n<li>toggling transparency, with <code><span class=\"token function\">ofEnableAlphaBlending</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code> and <code><span class=\"token function\">ofDisableAlphaBlending</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></li>\n<li>toggling of shape fills, with <code><span class=\"token function\">ofFill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code> and <code><span class=\"token function\">ofNoFill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></li>\n<li>toggling the anti-aliasing of lines, with <code><span class=\"token function\">ofEnableAntiAliasing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code> and <code><span class=\"token function\">ofDisableAntiAliasing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></li>\n<li>rendering bitmap text to the screen, with <code><span class=\"token function\">ofDrawBitmapString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code>.</li>\n</ul>\n<h3>Expected Behavior</h3>\n<p>When launching this app, you should see a screen with:</p>\n<ul>\n<li>a filled and unfilled (outline) circle</li>\n<li>a group of 200 randomly-colored, randomly-positioned rectangles</li>\n<li>some transparent and opaque rectangles</li>\n<li>some diagonal red lines</li>\n<li>some bitmap text.</li>\n</ul>\n<p>Instructions for using the app:</p>\n<ul>\n<li>Press <code>s</code> (&quot;smooth&quot;) to toggle whether or not the red lines are anti-aliased.</li>\n</ul>\n<h3>Other classes used in this file</h3>\n<p>This example uses no other classes.</p>\n","raw":"# About graphicsExample\n\n![Screenshot of graphicsExample](graphicsExample.png)\n\n### Learning Objectives\n\nThis example demonstrates a few of the most basic graphics capabilities of openFrameworks. After studying this example, you'll understand how to render some simple colored lines and elementary shapes, such as ellipses and rectangles.\n\nIn the code, pay attention to: \n\n* different commands for setting the active color, such as ```ofSetColor()``` and ```ofSetHexColor()```. These commands set the color for subsequent drawing operations, including lines and fills.\n* toggling transparency, with ```ofEnableAlphaBlending()``` and ```ofDisableAlphaBlending()```\n* toggling of shape fills, with ```ofFill()``` and ```ofNoFill()```\n* toggling the anti-aliasing of lines, with ```ofEnableAntiAliasing()``` and ```ofDisableAntiAliasing()```\n* rendering bitmap text to the screen, with ```ofDrawBitmapString()```.\n\n### Expected Behavior\n\nWhen launching this app, you should see a screen with:\n\n* a filled and unfilled (outline) circle\n* a group of 200 randomly-colored, randomly-positioned rectangles\n* some transparent and opaque rectangles\n* some diagonal red lines\n* some bitmap text. \n\nInstructions for using the app:\n\n* Press ```s``` (\"smooth\") to toggle whether or not the red lines are anti-aliased. \n\n### Other classes used in this file\n\nThis example uses no other classes.","type":"page","static":true}}],"fetch":[]}