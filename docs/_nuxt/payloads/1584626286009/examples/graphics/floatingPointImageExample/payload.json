{"data":[{"page":{"entry":{"name":"floatingPointImageExample","filename":"floatingPointImageExample","absolute":"/Users/gilbertsinnott/Code/openFrameworks/examples/graphics/floatingPointImageExample","path":"/examples/graphics/floatingPointImageExample/","dir":"../examples/graphics","route":"/examples/graphics/floatingPointImageExample/","ext":"","type":"folder","id":964,"children":[965,966,967],"parent":943,"breadcrumbs":[943,436],"siblings":[],"translations":{}},"intro":{"name":"README","filename":"README.md","absolute":"/Users/gilbertsinnott/Code/openFrameworks/examples/graphics/floatingPointImageExample/README.md","path":"/examples/graphics/floatingPointImageExample/README","route":"/examples/graphics/floatingPointImageExample/README.md","dir":"../examples/graphics/floatingPointImageExample","ext":"md","type":"page","id":966,"parent":964,"breadcrumbs":[964,943,436],"translations":{},"siblings":[]},"document":"<h2>#Level2_floatingPointImageExample</h2>\n<p><img src=\"floatingPointImageExample.png\" alt=\"Screenshot of Example\"></p>\n<h3>Learning Objectives</h3>\n<p>This openFrameworks Example is designed to demonstrate how to draw a mesh using floating points.</p>\n<p>In this example, pay attention to the following code:</p>\n<ul>\n<li><code>ofEasyCam</code> a simple camera for interacting with objects in 3D space</li>\n<li><code>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">addNormal</span><span class=\"token punctuation\">(</span>normal<span class=\"token punctuation\">)</span></code> adds a normal to the mesh as a 3D vector, typically perpendicular to the plane of the face.</li>\n<li><code>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">advertex</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></code> adding vertices to mesh</li>\n<li><code>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">setmode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code> specifies what primitive mode the mesh should be set to</li>\n<li><code>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code> draws the mesh</li>\n<li><code>getVertexFromImg</code>gets the vertex from the image using <code>glm<span class=\"token operator\">::</span>vec3</code></li>\n</ul>\n<h3>Expected Behavior</h3>\n<p>When launching this app, you should see:</p>\n<ul>\n<li>a 3D mesh drawn from the image</li>\n</ul>\n<h3>Other classes used in this file</h3>\n<p>This Example does not use any other classes.</p>\n","raw":"#Level2_floatingPointImageExample\n--\n![Screenshot of Example](floatingPointImageExample.png)\n\n### Learning Objectives\n\nThis openFrameworks Example is designed to demonstrate how to draw a mesh using floating points.\n\nIn this example, pay attention to the following code:\n\n* ```ofEasyCam``` a simple camera for interacting with objects in 3D space\n* ```mesh.addNormal(normal)``` adds a normal to the mesh as a 3D vector, typically perpendicular to the plane of the face. \n* ```mesh.advertex(a)``` adding vertices to mesh \n* ```mesh.setmode()``` specifies what primitive mode the mesh should be set to \n* ```mesh.draw()``` draws the mesh\n* ```getVertexFromImg```gets the vertex from the image using ```glm::vec3```\n\n\n### Expected Behavior\n\nWhen launching this app, you should see:\n\n* a 3D mesh drawn from the image\n\n\n### Other classes used in this file\n\nThis Example does not use any other classes. \n","type":"folder","static":true}}],"fetch":[]}