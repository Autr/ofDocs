{"data":[{"page":{"entry":{"name":"ofApp.cpp","filename":"ofApp.cpp","absolute":"/Users/gilbertsinnott/Code/openFrameworks/examples/computer_vision/opencvExample/src/ofApp.cpp","path":"/examples/computer_vision/opencvExample/src/ofApp_cpp","route":"/examples/computer_vision/opencvExample/src/ofApp.cpp","dir":"../examples/computer_vision/opencvExample/src","ext":"cpp","type":"source","id":732,"parent":730,"breadcrumbs":[730,727,723,436],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofApp.h\"</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> _USE_LIVE_VIDEO</span>\n        vidGrabber<span class=\"token punctuation\">.</span><span class=\"token function\">setVerbose</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        vidGrabber<span class=\"token punctuation\">.</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token number\">320</span><span class=\"token punctuation\">,</span><span class=\"token number\">240</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n        vidPlayer<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fingers.mov\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        vidPlayer<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        vidPlayer<span class=\"token punctuation\">.</span><span class=\"token function\">setLoopState</span><span class=\"token punctuation\">(</span>OF_LOOP_NORMAL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n    colorImg<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token number\">320</span><span class=\"token punctuation\">,</span><span class=\"token number\">240</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tgrayImage<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token number\">320</span><span class=\"token punctuation\">,</span><span class=\"token number\">240</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tgrayBg<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token number\">320</span><span class=\"token punctuation\">,</span><span class=\"token number\">240</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tgrayDiff<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token number\">320</span><span class=\"token punctuation\">,</span><span class=\"token number\">240</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tbLearnBakground <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\tthreshold <span class=\"token operator\">=</span> <span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofBackground</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">bool</span> bNewFrame <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> _USE_LIVE_VIDEO</span>\n       vidGrabber<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t   bNewFrame <span class=\"token operator\">=</span> vidGrabber<span class=\"token punctuation\">.</span><span class=\"token function\">isFrameNew</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n        vidPlayer<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bNewFrame <span class=\"token operator\">=</span> vidPlayer<span class=\"token punctuation\">.</span><span class=\"token function\">isFrameNew</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bNewFrame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> _USE_LIVE_VIDEO</span>\n            colorImg<span class=\"token punctuation\">.</span><span class=\"token function\">setFromPixels</span><span class=\"token punctuation\">(</span>vidGrabber<span class=\"token punctuation\">.</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t    <span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n            colorImg<span class=\"token punctuation\">.</span><span class=\"token function\">setFromPixels</span><span class=\"token punctuation\">(</span>vidPlayer<span class=\"token punctuation\">.</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n        grayImage <span class=\"token operator\">=</span> colorImg<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bLearnBakground <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tgrayBg <span class=\"token operator\">=</span> grayImage<span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\" spellcheck=\"true\">// the = sign copys the pixels from grayImage into grayBg (operator overloading)</span>\n\t\t\tbLearnBakground <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// take the abs value of the difference between background and incoming and then threshold:</span>\n\t\tgrayDiff<span class=\"token punctuation\">.</span><span class=\"token function\">absDiff</span><span class=\"token punctuation\">(</span>grayBg<span class=\"token punctuation\">,</span> grayImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tgrayDiff<span class=\"token punctuation\">.</span><span class=\"token function\">threshold</span><span class=\"token punctuation\">(</span>threshold<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// find contours which are between the size of 20 pixels and 1/3 the w*h pixels.</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// also, find holes is set to true so we will get interior contours as well....</span>\n\t\tcontourFinder<span class=\"token punctuation\">.</span><span class=\"token function\">findContours</span><span class=\"token punctuation\">(</span>grayDiff<span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">340</span><span class=\"token operator\">*</span><span class=\"token number\">240</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\" spellcheck=\"true\">// find holes</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// draw the incoming, the grayscale, the bg and the thresholded difference</span>\n\t<span class=\"token function\">ofSetHexColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xffffff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcolorImg<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tgrayImage<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token number\">360</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tgrayBg<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">280</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tgrayDiff<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token number\">360</span><span class=\"token punctuation\">,</span><span class=\"token number\">280</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// then draw the contours:</span>\n\n\t<span class=\"token function\">ofFill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofSetHexColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x333333</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofDrawRectangle</span><span class=\"token punctuation\">(</span><span class=\"token number\">360</span><span class=\"token punctuation\">,</span><span class=\"token number\">540</span><span class=\"token punctuation\">,</span><span class=\"token number\">320</span><span class=\"token punctuation\">,</span><span class=\"token number\">240</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofSetHexColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xffffff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// we could draw the whole contour finder</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//contourFinder.draw(360,540);</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// or, instead we can draw each blob individually from the blobs vector,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// this is how to get access to them:</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> contourFinder<span class=\"token punctuation\">.</span>nBlobs<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        contourFinder<span class=\"token punctuation\">.</span>blobs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token number\">360</span><span class=\"token punctuation\">,</span><span class=\"token number\">540</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">// draw over the centroid if the blob is a hole</span>\n\t\t<span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>contourFinder<span class=\"token punctuation\">.</span>blobs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>hole<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofDrawBitmapString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hole\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\tcontourFinder<span class=\"token punctuation\">.</span>blobs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>boundingRect<span class=\"token punctuation\">.</span><span class=\"token function\">getCenter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> <span class=\"token number\">360</span><span class=\"token punctuation\">,</span>\n\t\t\t\tcontourFinder<span class=\"token punctuation\">.</span>blobs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>boundingRect<span class=\"token punctuation\">.</span><span class=\"token function\">getCenter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> <span class=\"token number\">540</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// finally, a report:</span>\n\t<span class=\"token function\">ofSetHexColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xffffff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tstringstream reportStr<span class=\"token punctuation\">;</span>\n\treportStr <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"bg subtraction and blob detection\"</span> <span class=\"token operator\">&lt;&lt;</span> endl\n\t\t\t  <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"press ' ' to capture bg\"</span> <span class=\"token operator\">&lt;&lt;</span> endl\n\t\t\t  <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"threshold \"</span> <span class=\"token operator\">&lt;&lt;</span> threshold <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" (press: +/-)\"</span> <span class=\"token operator\">&lt;&lt;</span> endl\n\t\t\t  <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"num blobs found \"</span> <span class=\"token operator\">&lt;&lt;</span> contourFinder<span class=\"token punctuation\">.</span>nBlobs <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", fps: \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">ofGetFrameRate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofDrawBitmapString</span><span class=\"token punctuation\">(</span>reportStr<span class=\"token punctuation\">.</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">keyPressed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token string\">' '</span><span class=\"token operator\">:</span>\n\t\t\tbLearnBakground <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token string\">'+'</span><span class=\"token operator\">:</span>\n\t\t\tthreshold <span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>threshold <span class=\"token operator\">></span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span> threshold <span class=\"token operator\">=</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token string\">'-'</span><span class=\"token operator\">:</span>\n\t\t\tthreshold <span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>threshold <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> threshold <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">keyReleased</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseMoved</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseDragged</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mousePressed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseReleased</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseEntered</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseExited</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">windowResized</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">gotMessage</span><span class=\"token punctuation\">(</span>ofMessage msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">dragEvent</span><span class=\"token punctuation\">(</span>ofDragInfo dragInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> \n\n<span class=\"token punctuation\">}</span>\n","type":"source","static":true}}],"fetch":[]}