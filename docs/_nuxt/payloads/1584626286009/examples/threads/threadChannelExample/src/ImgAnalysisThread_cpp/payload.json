{"data":[{"page":{"entry":{"name":"ImgAnalysisThread.cpp","filename":"ImgAnalysisThread.cpp","absolute":"/Users/gilbertsinnott/Code/openFrameworks/examples/threads/threadChannelExample/src/ImgAnalysisThread.cpp","path":"/examples/threads/threadChannelExample/src/ImgAnalysisThread_cpp","route":"/examples/threads/threadChannelExample/src/ImgAnalysisThread.cpp","dir":"../examples/threads/threadChannelExample/src","ext":"cpp","type":"source","id":1637,"parent":1634,"breadcrumbs":[1634,1635,1636,436],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">/*\n * ImgAnalysisThread.cpp\n *\n *  Created on: Oct 8, 2014\n *      Author: arturo\n */</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ImgAnalysisThread.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n\nImgAnalysisThread<span class=\"token operator\">::</span><span class=\"token function\">ImgAnalysisThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">:</span><span class=\"token function\">newFrame</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// start the thread as soon as the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// class is created, it won't use any CPU</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// until we send a new frame to be analyzed</span>\n\t<span class=\"token function\">startThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nImgAnalysisThread<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ImgAnalysisThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// when the class is destroyed</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// close both channels and wait for</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// the thread to finish</span>\n\ttoAnalyze<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tanalyzed<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">waitForThread</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ImgAnalysisThread<span class=\"token operator\">::</span><span class=\"token function\">analyze</span><span class=\"token punctuation\">(</span>ofPixels <span class=\"token operator\">&amp;</span> pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// send the frame to the thread for analyzing</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// this makes a copy but we can't avoid it anyway if</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// we want to update the grabber while analyzing</span>\n    <span class=\"token comment\" spellcheck=\"true\">// previous frames</span>\n\ttoAnalyze<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ImgAnalysisThread<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// check if there's a new analyzed frame and upload</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// it to the texture. we use a while loop to drop any</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// extra frame in case the main thread is slower than</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// the analysis</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// tryReceive doesn't reallocate or make any copies</span>\n\tnewFrame <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>analyzed<span class=\"token punctuation\">.</span><span class=\"token function\">tryReceive</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tnewFrame <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>newFrame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>texture<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            texture<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\t\ttexture<span class=\"token punctuation\">.</span><span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ImgAnalysisThread<span class=\"token operator\">::</span><span class=\"token function\">isFrameNew</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> newFrame<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofPixels <span class=\"token operator\">&amp;</span> ImgAnalysisThread<span class=\"token operator\">::</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> pixels<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofTexture <span class=\"token operator\">&amp;</span> ImgAnalysisThread<span class=\"token operator\">::</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> texture<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ImgAnalysisThread<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        texture<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofDrawBitmapString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No frames analyzed yet\"</span><span class=\"token punctuation\">,</span> x<span class=\"token operator\">+</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">+</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ImgAnalysisThread<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        texture<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofDrawBitmapString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No frames analyzed yet\"</span><span class=\"token punctuation\">,</span> x<span class=\"token operator\">+</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">+</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ImgAnalysisThread<span class=\"token operator\">::</span><span class=\"token function\">threadedFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// wait until there's a new frame</span>\n    <span class=\"token comment\" spellcheck=\"true\">// this blocks the thread, so it doesn't use</span>\n    <span class=\"token comment\" spellcheck=\"true\">// the CPU at all, until a frame arrives.</span>\n    <span class=\"token comment\" spellcheck=\"true\">// also receive doesn't allocate or make any copies</span>\n    ofPixels pixels<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>toAnalyze<span class=\"token punctuation\">.</span><span class=\"token function\">receive</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\" spellcheck=\"true\">// we have a new frame, process it, the analysis</span>\n        <span class=\"token comment\" spellcheck=\"true\">// here is just a thresholding for the sake of</span>\n        <span class=\"token comment\" spellcheck=\"true\">// simplicity</span>\n        pixels<span class=\"token punctuation\">.</span><span class=\"token function\">setImageType</span><span class=\"token punctuation\">(</span>OF_IMAGE_GRAYSCALE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> <span class=\"token operator\">&amp;</span> p<span class=\"token operator\">:</span> pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>p <span class=\"token operator\">></span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span> p <span class=\"token operator\">=</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> p <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">// once processed send the result back to the</span>\n        <span class=\"token comment\" spellcheck=\"true\">// main thread. in c++11 we can move it to</span>\n        <span class=\"token comment\" spellcheck=\"true\">// avoid a copy</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> __cplusplus>=201103</span>\n        analyzed<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n        analyzed<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n","type":"source","static":true}}],"fetch":[]}