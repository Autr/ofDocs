{"data":[{"page":{"entry":{"name":"ofxLabel.h","filename":"ofxLabel.h","absolute":"/Users/gilbertsinnott/Code/openFrameworks/addons/ofxGui/src/ofxLabel.h","path":"/addons/ofxGui/src/ofxLabel_h","route":"/addons/ofxGui/src/ofxLabel.h","dir":"../addons/ofxGui/src","ext":"h","type":"source","id":101,"parent":86,"breadcrumbs":[86,87,36],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxBaseGui.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofParameter.h\"</span></span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxLabel</span><span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofxBaseGui <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">ofxLabel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>label<span class=\"token punctuation\">.</span><span class=\"token function\">setSerializable</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n    <span class=\"token function\">ofxLabel</span><span class=\"token punctuation\">(</span>ofParameter<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token operator\">></span> _label<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width <span class=\"token operator\">=</span> defaultWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height <span class=\"token operator\">=</span> defaultHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> F<span class=\"token operator\">></span>\n\t<span class=\"token function\">ofxLabel</span><span class=\"token punctuation\">(</span>ofReadOnlyParameter<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token punctuation\">,</span>F<span class=\"token operator\">></span> _label<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width <span class=\"token operator\">=</span> defaultWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height <span class=\"token operator\">=</span> defaultHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>_label<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">ofxLabel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    ofxLabel <span class=\"token operator\">*</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>ofParameter<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token operator\">></span> _label<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width <span class=\"token operator\">=</span> defaultWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height <span class=\"token operator\">=</span> defaultHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> F<span class=\"token operator\">></span>\n\tofxLabel<span class=\"token operator\">*</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>ofReadOnlyParameter<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token punctuation\">,</span>F<span class=\"token operator\">></span> _label<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tlabel<span class=\"token punctuation\">.</span><span class=\"token function\">makeReferenceTo</span><span class=\"token punctuation\">(</span>_label<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tb<span class=\"token punctuation\">.</span>width  <span class=\"token operator\">=</span> width<span class=\"token punctuation\">;</span>\n\t\tb<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> height<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">setNeedsRedraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t_label<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>ofxLabel<span class=\"token operator\">::</span>valueChanged<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n    ofxLabel <span class=\"token operator\">*</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> labelName<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>string label<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width <span class=\"token operator\">=</span> defaultWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height <span class=\"token operator\">=</span> defaultHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// Abstract methods we must implement, but have no need for!</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">mouseMoved</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">mousePressed</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">mouseDragged</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">mouseReleased</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">mouseScrolled</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">ListenerClass</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> ListenerMethod<span class=\"token operator\">></span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>ListenerClass <span class=\"token operator\">*</span> listener<span class=\"token punctuation\">,</span> ListenerMethod method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tlabel<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>listener<span class=\"token punctuation\">,</span>method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">ListenerClass</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> ListenerMethod<span class=\"token operator\">></span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">removeListener</span><span class=\"token punctuation\">(</span>ListenerClass <span class=\"token operator\">*</span> listener<span class=\"token punctuation\">,</span> ListenerMethod method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tlabel<span class=\"token punctuation\">.</span><span class=\"token function\">removeListener</span><span class=\"token punctuation\">(</span>listener<span class=\"token punctuation\">,</span>method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\n\tstd<span class=\"token operator\">::</span>string <span class=\"token keyword\">operator</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string v<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> label <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span> <span class=\"token keyword\">return</span> v<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">operator</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>       <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> label<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n    ofAbstractParameter <span class=\"token operator\">&amp;</span> <span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofReadOnlyParameter<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token punctuation\">,</span> ofxLabel<span class=\"token operator\">></span> label<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">generateDraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">valueChanged</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">bool</span> <span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> mx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> my<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bCheckBounds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n    ofPath bg<span class=\"token punctuation\">;</span>\n    ofVboMesh textMesh<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n","type":"source","static":true}}],"fetch":[]}