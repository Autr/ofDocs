{"data":[{"page":{"entry":{"name":"ofxInputField.cpp","filename":"ofxInputField.cpp","absolute":"/Users/gilbertsinnott/Code/openFrameworks/addons/ofxGui/src/ofxInputField.cpp","path":"/addons/ofxGui/src/ofxInputField_cpp","route":"/addons/ofxGui/src/ofxInputField.cpp","dir":"../addons/ofxGui/src","ext":"cpp","type":"source","id":98,"parent":86,"breadcrumbs":[86,87,36],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token comment\" spellcheck=\"true\">//  ofxInputField.cpp</span>\n<span class=\"token comment\" spellcheck=\"true\">//  ofxInputField</span>\n<span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token comment\" spellcheck=\"true\">//  Based on ofxInputField by Felix Lange</span>\n<span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token comment\" spellcheck=\"true\">//</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxInputField.h\"</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGraphics.h\"</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n\t<span class=\"token keyword\">typename</span> std<span class=\"token operator\">::</span>enable_if<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>is_integral<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span>value<span class=\"token punctuation\">,</span> Type<span class=\"token operator\">></span><span class=\"token operator\">::</span>type\n\t<span class=\"token function\">getRange</span><span class=\"token punctuation\">(</span>Type min<span class=\"token punctuation\">,</span> Type max<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">double</span> range <span class=\"token operator\">=</span> max <span class=\"token operator\">-</span> min<span class=\"token punctuation\">;</span>\n\t\trange <span class=\"token operator\">/</span><span class=\"token operator\">=</span> width<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> std<span class=\"token operator\">::</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>range<span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n\t<span class=\"token keyword\">typename</span> std<span class=\"token operator\">::</span>enable_if<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>is_floating_point<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span>value<span class=\"token punctuation\">,</span> Type<span class=\"token operator\">></span><span class=\"token operator\">::</span>type\n\t<span class=\"token function\">getRange</span><span class=\"token punctuation\">(</span>Type min<span class=\"token punctuation\">,</span> Type max<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">double</span> range <span class=\"token operator\">=</span> max <span class=\"token operator\">-</span> min<span class=\"token punctuation\">;</span>\n\t\trange <span class=\"token operator\">/</span><span class=\"token operator\">=</span> width<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> range<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n\tstd<span class=\"token operator\">::</span>string <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>Type t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n\tstd<span class=\"token operator\">::</span>string <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>uint8_t t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n\tstd<span class=\"token operator\">::</span>string <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>int8_t t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n\tstd<span class=\"token operator\">::</span>string <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> t<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">isHexNotation</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string <span class=\"token keyword\">const</span><span class=\"token operator\">&amp;</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t  <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">compare</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"0x\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span>\n\t\t  <span class=\"token operator\">&amp;&amp;</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">2</span>\n\t\t  <span class=\"token operator\">&amp;&amp;</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">find_first_not_of</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0123456789abcdefABCDEF\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">::</span>npos<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">isANumber</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string <span class=\"token keyword\">const</span><span class=\"token operator\">&amp;</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t  <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">find_first_not_of</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"0123456789.-e\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">::</span>npos\n\t\t\t  <span class=\"token operator\">&amp;&amp;</span> std<span class=\"token operator\">::</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n\tType <span class=\"token function\">fromString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isHexNotation</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofHexToInt</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isANumber</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> ofFromString<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">throw</span> std<span class=\"token operator\">::</span><span class=\"token function\">exception</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n\tuint8_t <span class=\"token function\">fromString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">auto</span> ret <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isHexNotation</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tret <span class=\"token operator\">=</span> <span class=\"token function\">ofHexToInt</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isANumber</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tret <span class=\"token operator\">=</span> ofFromString<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">throw</span> std<span class=\"token operator\">::</span><span class=\"token function\">exception</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">return</span> std<span class=\"token operator\">::</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n\tint8_t <span class=\"token function\">fromString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">auto</span> ret <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isHexNotation</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tret <span class=\"token operator\">=</span> <span class=\"token function\">ofHexToInt</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isANumber</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tret <span class=\"token operator\">=</span> ofFromString<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">throw</span> std<span class=\"token operator\">::</span><span class=\"token function\">exception</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">return</span> std<span class=\"token operator\">::</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">127</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">127</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tofMesh <span class=\"token function\">rectangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofRectangle <span class=\"token operator\">&amp;</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofFloatColor <span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tofMesh mesh<span class=\"token punctuation\">;</span>\n\t\tmesh<span class=\"token punctuation\">.</span><span class=\"token function\">addVertex</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmesh<span class=\"token punctuation\">.</span><span class=\"token function\">addVertex</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> r<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmesh<span class=\"token punctuation\">.</span><span class=\"token function\">addVertex</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> r<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> r<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tmesh<span class=\"token punctuation\">.</span><span class=\"token function\">addVertex</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> r<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> r<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmesh<span class=\"token punctuation\">.</span><span class=\"token function\">addVertex</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> r<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmesh<span class=\"token punctuation\">.</span><span class=\"token function\">addVertex</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tmesh<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmesh<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmesh<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tmesh<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmesh<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmesh<span class=\"token punctuation\">.</span><span class=\"token function\">addColor</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">return</span> mesh<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\nofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">ofxInputField</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\nofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">ofxInputField</span><span class=\"token punctuation\">(</span>ofParameter<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span> _val<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>_val<span class=\"token punctuation\">,</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\nofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">*</span> ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>ofParameter<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span> _val<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tvalue<span class=\"token punctuation\">.</span><span class=\"token function\">makeReferenceTo</span><span class=\"token punctuation\">(</span>_val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tvisibleInput <span class=\"token operator\">=</span> input <span class=\"token operator\">=</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tb<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tb<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tb<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> width<span class=\"token punctuation\">;</span>\n\tb<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> height<span class=\"token punctuation\">;</span>\n\tbGuiActive <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setNeedsRedraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>insideSlider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">registerMouseEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tlisteners<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">newListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>ofxInputField<span class=\"token operator\">::</span>valueChanged<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tlisteners<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>charEvent<span class=\"token punctuation\">.</span><span class=\"token function\">newListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span>charPressed<span class=\"token punctuation\">,</span> OF_EVENT_ORDER_BEFORE_APP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tlisteners<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>keyPressed<span class=\"token punctuation\">.</span><span class=\"token function\">newListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span>keyPressed<span class=\"token punctuation\">,</span> OF_EVENT_ORDER_BEFORE_APP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\nofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">*</span> ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> _name<span class=\"token punctuation\">,</span> Type _val<span class=\"token punctuation\">,</span> Type _min<span class=\"token punctuation\">,</span> Type _max<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tvalue<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>_name<span class=\"token punctuation\">,</span>_val<span class=\"token punctuation\">,</span>_min<span class=\"token punctuation\">,</span>_max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\nofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">*</span> ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> _name<span class=\"token punctuation\">,</span> Type _val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tvalue<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>_name<span class=\"token punctuation\">,</span>_val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setMin</span><span class=\"token punctuation\">(</span>Type min<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    value<span class=\"token punctuation\">.</span><span class=\"token function\">setMin</span><span class=\"token punctuation\">(</span>min<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\nType ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">getMin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">getMin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setMax</span><span class=\"token punctuation\">(</span>Type max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    value<span class=\"token punctuation\">.</span><span class=\"token function\">setMax</span><span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\nType ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">getMax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">getMax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">calculateSelectionArea</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> selectIdx1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> selectIdx2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tselectStartPos <span class=\"token operator\">=</span> selectIdx1<span class=\"token punctuation\">;</span>\n\tselectEndPos <span class=\"token operator\">=</span> selectIdx2<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>selectEndPos<span class=\"token operator\">></span>visibleInputEnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tvisibleInputEnd <span class=\"token operator\">=</span> selectEndPos<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>selectEndPos<span class=\"token number\">-1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span>visibleInputStart<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tvisibleInputStart <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>selectEndPos<span class=\"token number\">-1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tvisibleInput <span class=\"token operator\">=</span> <span class=\"token function\">ofUTF8Substring</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> visibleInputStart<span class=\"token punctuation\">,</span> visibleInputEnd <span class=\"token operator\">-</span> visibleInputStart<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> substrWidth <span class=\"token operator\">=</span> <span class=\"token function\">getTextBoundingBox</span><span class=\"token punctuation\">(</span>visibleInput<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> totalTextWidth <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span>width <span class=\"token operator\">-</span> textPadding <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>substrWidth <span class=\"token operator\">></span> totalTextWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tsubstrWidth <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\tvisibleInput <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">auto</span> substrLen <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>substrWidth <span class=\"token operator\">&lt;</span> totalTextWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tsubstrLen <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\tvisibleInput <span class=\"token operator\">=</span> <span class=\"token function\">ofUTF8Substring</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> visibleInputStart<span class=\"token punctuation\">,</span> substrLen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tsubstrWidth <span class=\"token operator\">=</span> <span class=\"token function\">getTextBoundingBox</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofUTF8Substring</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> visibleInputStart<span class=\"token punctuation\">,</span> substrLen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tsubstrLen <span class=\"token operator\">-</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\tvisibleInput <span class=\"token operator\">=</span> <span class=\"token function\">ofUTF8Substring</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> visibleInputStart<span class=\"token punctuation\">,</span> substrLen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tsubstrWidth <span class=\"token operator\">=</span> <span class=\"token function\">getTextBoundingBox</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofUTF8Substring</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> visibleInputStart<span class=\"token punctuation\">,</span> substrLen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t\tvisibleInputEnd <span class=\"token operator\">=</span> visibleInputStart <span class=\"token operator\">+</span> substrLen<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>selectEndPos <span class=\"token operator\">></span> visibleInputEnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tsubstrWidth <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\tvisibleInput <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\t\t\tvisibleInputEnd <span class=\"token operator\">=</span> selectEndPos<span class=\"token punctuation\">;</span>\n\t\t\tvisibleInputStart <span class=\"token operator\">=</span> selectEndPos<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>substrWidth <span class=\"token operator\">&lt;</span> totalTextWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tvisibleInputStart <span class=\"token operator\">-</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t\tvisibleInput <span class=\"token operator\">=</span> <span class=\"token function\">ofUTF8Substring</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> visibleInputStart<span class=\"token punctuation\">,</span> visibleInputEnd <span class=\"token operator\">-</span> visibleInputStart<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tsubstrWidth <span class=\"token operator\">=</span> <span class=\"token function\">getTextBoundingBox</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofUTF8Substring</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> visibleInputStart<span class=\"token punctuation\">,</span> visibleInputEnd <span class=\"token operator\">-</span> visibleInputStart<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\tvisibleInputStart <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\tvisibleInput <span class=\"token operator\">=</span> <span class=\"token function\">ofUTF8Substring</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> visibleInputStart<span class=\"token punctuation\">,</span> visibleInputEnd <span class=\"token operator\">-</span> visibleInputStart<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tsubstrWidth <span class=\"token operator\">=</span> <span class=\"token function\">getTextBoundingBox</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofUTF8Substring</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> visibleInputStart<span class=\"token punctuation\">,</span> visibleInputEnd <span class=\"token operator\">-</span> visibleInputStart<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">auto</span> first <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>selectStartPos<span class=\"token punctuation\">,</span> selectEndPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> last <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>selectStartPos<span class=\"token punctuation\">,</span> selectEndPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> substrLength <span class=\"token operator\">=</span> <span class=\"token function\">ofUTF8Length</span><span class=\"token punctuation\">(</span>visibleInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> preSelectWidth <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> substrFirst <span class=\"token operator\">=</span> <span class=\"token function\">ofClamp</span><span class=\"token punctuation\">(</span>first<span class=\"token operator\">-</span>visibleInputStart<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> substrLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> substrLast <span class=\"token operator\">=</span> <span class=\"token function\">ofClamp</span><span class=\"token punctuation\">(</span>last<span class=\"token operator\">-</span>visibleInputStart<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> substrLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>first <span class=\"token operator\">></span> visibleInputStart<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tstd<span class=\"token operator\">::</span>string preSelectStr <span class=\"token operator\">=</span> <span class=\"token function\">ofUTF8Substring</span><span class=\"token punctuation\">(</span>visibleInput<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> substrFirst<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tpreSelectWidth <span class=\"token operator\">=</span> <span class=\"token function\">getTextBoundingBox</span><span class=\"token punctuation\">(</span>preSelectStr<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>showLabelWhileEditing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tselectStartX <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span><span class=\"token function\">getMaxX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> textPadding <span class=\"token operator\">-</span> substrWidth <span class=\"token operator\">+</span> preSelectWidth<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tselectStartX <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> textPadding <span class=\"token operator\">+</span> preSelectWidth<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">hasSelectedText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tstd<span class=\"token operator\">::</span>string selectStr <span class=\"token operator\">=</span> <span class=\"token function\">ofUTF8Substring</span><span class=\"token punctuation\">(</span>visibleInput<span class=\"token punctuation\">,</span> substrFirst<span class=\"token punctuation\">,</span> substrLast <span class=\"token operator\">-</span> substrFirst<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tselectionWidth <span class=\"token operator\">=</span> <span class=\"token function\">getTextBoundingBox</span><span class=\"token punctuation\">(</span>selectStr<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">setNeedsRedraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">moveCursor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> cursorPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> cursorPos <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tlastCursorMoveTime <span class=\"token operator\">=</span> <span class=\"token function\">ofGetElapsedTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tselectStartPos <span class=\"token operator\">=</span> selectEndPos <span class=\"token operator\">=</span> cursorPos<span class=\"token punctuation\">;</span>\n\tselectionWidth <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> visibleInputEnd <span class=\"token operator\">&lt;</span> <span class=\"token function\">ofUTF8Length</span><span class=\"token punctuation\">(</span> input <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// Attempt to extend visible input range. If a character was being entered </span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// somewhere inside the text, there might be enough space to the right to </span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// show the newly extended input.</span>\n\t\tvisibleInputEnd <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>cursorPos<span class=\"token operator\">></span>visibleInputEnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tvisibleInputEnd <span class=\"token operator\">=</span> cursorPos<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>cursorPos<span class=\"token operator\">&lt;</span>visibleInputStart<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tvisibleInputStart <span class=\"token operator\">=</span> cursorPos<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tvisibleInput <span class=\"token operator\">=</span> <span class=\"token function\">ofUTF8Substring</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> visibleInputStart<span class=\"token punctuation\">,</span> visibleInputEnd <span class=\"token operator\">-</span> visibleInputStart<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> substrWidth <span class=\"token operator\">=</span> <span class=\"token function\">getTextBoundingBox</span><span class=\"token punctuation\">(</span>visibleInput<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> totalTextWidth <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span>width <span class=\"token operator\">-</span> textPadding <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>substrWidth <span class=\"token operator\">></span> totalTextWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tsubstrWidth <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\tvisibleInput <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">auto</span> substrLen <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>substrWidth <span class=\"token operator\">&lt;</span> totalTextWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tsubstrLen <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\tvisibleInput <span class=\"token operator\">=</span> <span class=\"token function\">ofUTF8Substring</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> visibleInputStart<span class=\"token punctuation\">,</span> substrLen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tsubstrWidth <span class=\"token operator\">=</span> <span class=\"token function\">getTextBoundingBox</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofUTF8Substring</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> visibleInputStart<span class=\"token punctuation\">,</span> substrLen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tsubstrLen <span class=\"token operator\">-</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\tvisibleInput <span class=\"token operator\">=</span> <span class=\"token function\">ofUTF8Substring</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> visibleInputStart<span class=\"token punctuation\">,</span> substrLen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tsubstrWidth <span class=\"token operator\">=</span> <span class=\"token function\">getTextBoundingBox</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofUTF8Substring</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> visibleInputStart<span class=\"token punctuation\">,</span> substrLen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t\tvisibleInputEnd <span class=\"token operator\">=</span> visibleInputStart <span class=\"token operator\">+</span> substrLen<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>cursorPos <span class=\"token operator\">></span> visibleInputEnd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tsubstrWidth <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\tvisibleInput <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\t\t\tvisibleInputEnd <span class=\"token operator\">=</span> cursorPos<span class=\"token punctuation\">;</span>\n\t\t\tvisibleInputStart <span class=\"token operator\">=</span> cursorPos<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>substrWidth <span class=\"token operator\">&lt;</span> totalTextWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tvisibleInputStart <span class=\"token operator\">-</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t\tvisibleInput <span class=\"token operator\">=</span> <span class=\"token function\">ofUTF8Substring</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> visibleInputStart<span class=\"token punctuation\">,</span> visibleInputEnd <span class=\"token operator\">-</span> visibleInputStart<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tsubstrWidth <span class=\"token operator\">=</span> <span class=\"token function\">getTextBoundingBox</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofUTF8Substring</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> visibleInputStart<span class=\"token punctuation\">,</span> visibleInputEnd <span class=\"token operator\">-</span> visibleInputStart<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\tvisibleInputStart <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\tvisibleInput <span class=\"token operator\">=</span> <span class=\"token function\">ofUTF8Substring</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> visibleInputStart<span class=\"token punctuation\">,</span> visibleInputEnd <span class=\"token operator\">-</span> visibleInputStart<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tsubstrWidth <span class=\"token operator\">=</span> <span class=\"token function\">getTextBoundingBox</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofUTF8Substring</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> visibleInputStart<span class=\"token punctuation\">,</span> visibleInputEnd <span class=\"token operator\">-</span> visibleInputStart<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\n\t<span class=\"token keyword\">float</span> beforeCursorWidth <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>selectStartPos <span class=\"token operator\">></span> visibleInputStart<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">auto</span> beforeCursorStr <span class=\"token operator\">=</span> <span class=\"token function\">ofUTF8Substring</span><span class=\"token punctuation\">(</span>visibleInput<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> selectStartPos <span class=\"token operator\">-</span> visibleInputStart<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tbeforeCursorWidth <span class=\"token operator\">=</span> <span class=\"token function\">getTextBoundingBox</span><span class=\"token punctuation\">(</span>beforeCursorStr<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>showLabelWhileEditing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tselectStartX <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span><span class=\"token function\">getMaxX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> textPadding <span class=\"token operator\">-</span> substrWidth <span class=\"token operator\">+</span> beforeCursorWidth<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tselectStartX <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> textPadding <span class=\"token operator\">+</span> beforeCursorWidth<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">setNeedsRedraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">bool</span> ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">mouseMoved</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> mouse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">bool</span> mouseOver <span class=\"token operator\">=</span> b<span class=\"token punctuation\">.</span><span class=\"token function\">inside</span><span class=\"token punctuation\">(</span>mouse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mouseOver <span class=\"token operator\">!=</span> bMouseOver <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>bGuiActive <span class=\"token operator\">&amp;&amp;</span> overlappingLabel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setNeedsRedraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tbMouseOver <span class=\"token operator\">=</span> mouseOver<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isGuiDrawing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> insideSlider<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> bMouseOver<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">bool</span> ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">mousePressed</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> mouse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isGuiDrawing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>insideSlider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span><span class=\"token function\">inside</span><span class=\"token punctuation\">(</span>mouse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>insideSlider <span class=\"token operator\">||</span> mouse<span class=\"token punctuation\">.</span>button <span class=\"token operator\">==</span> OF_MOUSE_BUTTON_LEFT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tbMousePressed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bGuiActive<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">auto</span> inputWidth <span class=\"token operator\">=</span> <span class=\"token function\">getTextBoundingBox</span><span class=\"token punctuation\">(</span>visibleInput<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">float</span> cursorX<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>showLabelWhileEditing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\tcursorX <span class=\"token operator\">=</span> mouse<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> b<span class=\"token punctuation\">.</span>width <span class=\"token operator\">-</span> textPadding <span class=\"token operator\">-</span> inputWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\tcursorX <span class=\"token operator\">=</span> mouse<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> textPadding<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\tmousePressedPos <span class=\"token operator\">=</span>  <span class=\"token function\">round</span><span class=\"token punctuation\">(</span>visibleInputStart <span class=\"token operator\">+</span> <span class=\"token function\">ofMap</span><span class=\"token punctuation\">(</span>cursorX<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> inputWidth<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofUTF8Length</span><span class=\"token punctuation\">(</span>visibleInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">moveCursor</span><span class=\"token punctuation\">(</span>mousePressedPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">calculateSelectionArea</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofUTF8Length</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tbGuiActive <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t<span class=\"token function\">setNeedsRedraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bGuiActive<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">leaveFocus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">bool</span> ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">mouseDragged</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> mouse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isGuiDrawing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>insideSlider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bGuiActive<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>insideSlider <span class=\"token operator\">||</span> mouse<span class=\"token punctuation\">.</span>button <span class=\"token operator\">==</span> OF_MOUSE_BUTTON_LEFT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">auto</span> inputWidth <span class=\"token operator\">=</span> <span class=\"token function\">getTextBoundingBox</span><span class=\"token punctuation\">(</span>visibleInput<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span> cursorX<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>showLabelWhileEditing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tcursorX <span class=\"token operator\">=</span> mouse<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> b<span class=\"token punctuation\">.</span>width <span class=\"token operator\">-</span> textPadding <span class=\"token operator\">-</span> inputWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\tcursorX <span class=\"token operator\">=</span> mouse<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> textPadding<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">auto</span> cursorPos <span class=\"token operator\">=</span> <span class=\"token function\">round</span><span class=\"token punctuation\">(</span>visibleInputStart <span class=\"token operator\">+</span> <span class=\"token function\">ofMap</span><span class=\"token punctuation\">(</span>cursorX<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> inputWidth<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofUTF8Length</span><span class=\"token punctuation\">(</span>visibleInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tcursorPos <span class=\"token operator\">=</span> <span class=\"token function\">ofClamp</span><span class=\"token punctuation\">(</span>cursorPos<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofUTF8Length</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">calculateSelectionArea</span><span class=\"token punctuation\">(</span>mousePressedPos<span class=\"token punctuation\">,</span> cursorPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">setNeedsRedraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">bool</span> ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">mouseReleased</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbMousePressed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> bGuiActive<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">bool</span> ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">mouseScrolled</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> mouse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isGuiDrawing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> insideSlider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//when insideSlider it is the slider object who is in charge of handling the scrolling</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span><span class=\"token function\">inside</span><span class=\"token punctuation\">(</span>mouse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bGuiActive<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mouse<span class=\"token punctuation\">.</span>scrollY<span class=\"token operator\">></span><span class=\"token number\">0</span> <span class=\"token operator\">||</span> mouse<span class=\"token punctuation\">.</span>scrollY<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">double</span> range <span class=\"token operator\">=</span> <span class=\"token function\">getRange</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">getMin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">getMax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tType newValue <span class=\"token operator\">=</span> value <span class=\"token operator\">+</span> <span class=\"token function\">ofMap</span><span class=\"token punctuation\">(</span>mouse<span class=\"token punctuation\">.</span>scrollY<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>range<span class=\"token punctuation\">,</span> range<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tnewValue <span class=\"token operator\">=</span> <span class=\"token function\">ofClamp</span><span class=\"token punctuation\">(</span>newValue<span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">getMin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">getMax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tvalue <span class=\"token operator\">=</span> newValue<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">bool</span> ofxInputField<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">mouseScrolled</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> mouse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span><span class=\"token function\">inside</span><span class=\"token punctuation\">(</span>mouse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">bool</span> ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">charPressed</span><span class=\"token punctuation\">(</span>uint32_t <span class=\"token operator\">&amp;</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isGuiDrawing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>insideSlider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bGuiActive <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>bMousePressed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">>=</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">&amp;&amp;</span> key <span class=\"token operator\">&lt;=</span> <span class=\"token string\">'9'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">moveCursor</span><span class=\"token punctuation\">(</span><span class=\"token function\">insertKeystroke</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> <span class=\"token string\">'.'</span> <span class=\"token operator\">||</span> key <span class=\"token operator\">==</span> <span class=\"token string\">'-'</span> <span class=\"token operator\">||</span> key <span class=\"token operator\">==</span> <span class=\"token string\">'+'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">moveCursor</span><span class=\"token punctuation\">(</span><span class=\"token function\">insertKeystroke</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">moveCursor</span><span class=\"token punctuation\">(</span><span class=\"token function\">insertAlphabetic</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">bool</span> ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">keyPressed</span><span class=\"token punctuation\">(</span>ofKeyEventArgs <span class=\"token operator\">&amp;</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isGuiDrawing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bGuiActive <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>bMousePressed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">auto</span> key <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">auto</span> first <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>selectStartPos<span class=\"token punctuation\">,</span> selectEndPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">auto</span> last <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>selectStartPos<span class=\"token punctuation\">,</span> selectEndPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">auto</span> selectLen <span class=\"token operator\">=</span> last <span class=\"token operator\">-</span> first<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> OF_KEY_BACKSPACE <span class=\"token operator\">||</span> key <span class=\"token operator\">==</span> OF_KEY_DEL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">hasSelectedText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofUTF8Erase</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> first<span class=\"token punctuation\">,</span> selectLen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">moveCursor</span><span class=\"token punctuation\">(</span>selectStartPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">int</span> deleteIdx <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> OF_KEY_BACKSPACE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\tdeleteIdx <span class=\"token operator\">=</span> selectStartPos<span class=\"token number\">-1</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> OF_KEY_DEL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\tdeleteIdx <span class=\"token operator\">=</span> selectStartPos<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//erase char if valid deleteIdx</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>deleteIdx <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> deleteIdx <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token function\">ofUTF8Length</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token function\">ofUTF8Erase</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> deleteIdx<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">moveCursor</span><span class=\"token punctuation\">(</span>deleteIdx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> OF_KEY_LEFT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span><span class=\"token function\">hasModifier</span><span class=\"token punctuation\">(</span>OF_KEY_SHIFT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tselectEndPos <span class=\"token operator\">-</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t\tselectEndPos <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> selectEndPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">calculateSelectionArea</span><span class=\"token punctuation\">(</span>selectStartPos<span class=\"token punctuation\">,</span> selectEndPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">hasSelectedText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token function\">moveCursor</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token function\">moveCursor</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> selectEndPos <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> OF_KEY_RIGHT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span><span class=\"token function\">hasModifier</span><span class=\"token punctuation\">(</span>OF_KEY_SHIFT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">auto</span> inputSize <span class=\"token operator\">=</span> <span class=\"token function\">ofUTF8Length</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tselectEndPos <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t\tselectEndPos <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>selectEndPos<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span>inputSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">calculateSelectionArea</span><span class=\"token punctuation\">(</span>selectStartPos<span class=\"token punctuation\">,</span> selectEndPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">hasSelectedText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token function\">moveCursor</span><span class=\"token punctuation\">(</span>last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token keyword\">auto</span> inputSize <span class=\"token operator\">=</span> <span class=\"token function\">ofUTF8Length</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">moveCursor</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>selectEndPos <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span>inputSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> OF_KEY_RETURN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">leaveFocus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> OF_KEY_ESC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tinput <span class=\"token operator\">=</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">leaveFocus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> <span class=\"token string\">'a'</span> <span class=\"token operator\">&amp;&amp;</span> args<span class=\"token punctuation\">.</span><span class=\"token function\">hasModifier</span><span class=\"token punctuation\">(</span>OF_KEY_CONTROL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">calculateSelectionArea</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofUTF8Length</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> <span class=\"token string\">'c'</span> <span class=\"token operator\">&amp;&amp;</span> args<span class=\"token punctuation\">.</span><span class=\"token function\">hasModifier</span><span class=\"token punctuation\">(</span>OF_KEY_CONTROL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>selectLen<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">auto</span> selection <span class=\"token operator\">=</span> <span class=\"token function\">ofUTF8Substring</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> first<span class=\"token punctuation\">,</span> selectLen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">ofSetClipboardString</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> <span class=\"token string\">'v'</span> <span class=\"token operator\">&amp;&amp;</span> args<span class=\"token punctuation\">.</span><span class=\"token function\">hasModifier</span><span class=\"token punctuation\">(</span>OF_KEY_CONTROL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">auto</span> cursorPos <span class=\"token operator\">=</span> first<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>selectLen<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofUTF8Erase</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> cursorPos<span class=\"token punctuation\">,</span> selectLen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">auto</span> clipboard <span class=\"token operator\">=</span> <span class=\"token function\">ofGetClipboardString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> c<span class=\"token operator\">:</span> <span class=\"token function\">ofUTF8Iterator</span><span class=\"token punctuation\">(</span>clipboard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofUTF8Insert</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> cursorPos<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tcursorPos<span class=\"token operator\">+</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token function\">moveCursor</span><span class=\"token punctuation\">(</span>cursorPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> <span class=\"token string\">'x'</span> <span class=\"token operator\">&amp;&amp;</span> args<span class=\"token punctuation\">.</span><span class=\"token function\">hasModifier</span><span class=\"token punctuation\">(</span>OF_KEY_CONTROL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>selectLen<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">auto</span> selection <span class=\"token operator\">=</span> <span class=\"token function\">ofUTF8Substring</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> first<span class=\"token punctuation\">,</span> selectLen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">ofSetClipboardString</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">ofUTF8Erase</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> first<span class=\"token punctuation\">,</span> selectLen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">moveCursor</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> OF_KEY_END<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">auto</span> inputLength <span class=\"token operator\">=</span> <span class=\"token function\">ofUTF8Length</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span><span class=\"token function\">hasModifier</span><span class=\"token punctuation\">(</span>OF_KEY_SHIFT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">calculateSelectionArea</span><span class=\"token punctuation\">(</span>selectStartPos<span class=\"token punctuation\">,</span> inputLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">moveCursor</span><span class=\"token punctuation\">(</span>inputLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> OF_KEY_HOME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span><span class=\"token function\">hasModifier</span><span class=\"token punctuation\">(</span>OF_KEY_SHIFT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">calculateSelectionArea</span><span class=\"token punctuation\">(</span>selectStartPos<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">moveCursor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">int</span> ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">insertKeystroke</span><span class=\"token punctuation\">(</span>uint32_t character<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">auto</span> first <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>selectStartPos<span class=\"token punctuation\">,</span> selectEndPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> last <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>selectStartPos<span class=\"token punctuation\">,</span> selectEndPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> selectLen <span class=\"token operator\">=</span> last <span class=\"token operator\">-</span> first<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">hasSelectedText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofUTF8Erase</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> first<span class=\"token punctuation\">,</span> selectLen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">ofUTF8Insert</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> first<span class=\"token punctuation\">,</span> character<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> cursorPos <span class=\"token operator\">=</span> first <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">setNeedsRedraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> cursorPos<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">int</span> ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">insertAlphabetic</span><span class=\"token punctuation\">(</span>uint32_t character<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>character <span class=\"token operator\">==</span> <span class=\"token string\">'x'</span> <span class=\"token operator\">||</span> character <span class=\"token operator\">==</span> <span class=\"token string\">'a'</span> <span class=\"token operator\">||</span> character <span class=\"token operator\">==</span> <span class=\"token string\">'b'</span> <span class=\"token operator\">||</span> character<span class=\"token operator\">==</span><span class=\"token string\">'c'</span> <span class=\"token operator\">||</span> character<span class=\"token operator\">==</span><span class=\"token string\">'d'</span> <span class=\"token operator\">||</span> character<span class=\"token operator\">==</span><span class=\"token string\">'e'</span> <span class=\"token operator\">||</span> character<span class=\"token operator\">==</span><span class=\"token string\">'f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t   <span class=\"token keyword\">return</span> <span class=\"token function\">insertKeystroke</span><span class=\"token punctuation\">(</span>character<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//cursor or selection area stay the same</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">int</span> ofxInputField<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">insertAlphabetic</span><span class=\"token punctuation\">(</span>uint32_t character<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">insertKeystroke</span><span class=\"token punctuation\">(</span>character<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\nType ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>Type v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tvalue <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> v<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\nofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token keyword\">const</span> Type <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">bool</span> ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">hasSelectedText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> selectStartPos <span class=\"token operator\">!=</span> selectEndPos<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">generateDraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbg<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tbg<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">rectangle</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> thisBackgroundColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bGuiActive<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">hasSelectedText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tofRectangle <span class=\"token function\">selection</span><span class=\"token punctuation\">(</span>selectStartX<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span>y<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> selectionWidth<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span>height<span class=\"token number\">-2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tbg<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">rectangle</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">,</span> thisFillColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>blinkingCursor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tofRectangle <span class=\"token function\">cursor</span><span class=\"token punctuation\">(</span>selectStartX<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tbg<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">rectangle</span><span class=\"token punctuation\">(</span>cursor<span class=\"token punctuation\">,</span> thisTextColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">auto</span> input <span class=\"token operator\">=</span> visibleInput<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bGuiActive <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">containsValidValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tinput <span class=\"token operator\">=</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">auto</span> inputWidth <span class=\"token operator\">=</span> <span class=\"token function\">getTextBoundingBox</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> yPos <span class=\"token operator\">=</span> <span class=\"token function\">getTextVCenteredInRect</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> label <span class=\"token operator\">=</span> <span class=\"token function\">getTextBoundingBox</span><span class=\"token punctuation\">(</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> textPadding<span class=\"token punctuation\">,</span> yPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> value <span class=\"token operator\">=</span> <span class=\"token function\">getTextBoundingBox</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> b<span class=\"token punctuation\">.</span>width <span class=\"token operator\">-</span> textPadding <span class=\"token operator\">-</span> inputWidth<span class=\"token punctuation\">,</span> yPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\toverlappingLabel <span class=\"token operator\">=</span> label<span class=\"token punctuation\">.</span><span class=\"token function\">getMaxX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> value<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\n\ttextMesh<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bGuiActive <span class=\"token operator\">||</span> showLabelWhileEditing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>overlappingLabel <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bMouseOver <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>bGuiActive<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\ttextMesh<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">getTextMesh</span><span class=\"token punctuation\">(</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> textPadding<span class=\"token punctuation\">,</span> yPos<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bGuiActive <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>bMouseOver <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>overlappingLabel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> bGuiActive<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\ttextMesh<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">getTextMesh</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> b<span class=\"token punctuation\">.</span>width <span class=\"token operator\">-</span> textPadding <span class=\"token operator\">-</span> inputWidth<span class=\"token punctuation\">,</span> yPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\ttextMesh<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">getTextMesh</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> textPadding<span class=\"token punctuation\">,</span> yPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\ttextMesh<span class=\"token punctuation\">.</span><span class=\"token function\">getColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>textMesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> thisTextColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbg<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>insideSlider <span class=\"token operator\">&amp;&amp;</span> errorTime <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">containsValidValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">auto</span> now <span class=\"token operator\">=</span> <span class=\"token function\">ofGetElapsedTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">auto</span> pct <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>now <span class=\"token operator\">-</span> errorTime<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pct<span class=\"token operator\">&lt;</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>originalColors<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tbg<span class=\"token punctuation\">.</span><span class=\"token function\">getColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ofFloatColor<span class=\"token operator\">::</span>darkRed<span class=\"token punctuation\">.</span><span class=\"token function\">getLerped</span><span class=\"token punctuation\">(</span>originalColors<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> pct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\tbg<span class=\"token punctuation\">.</span><span class=\"token function\">getColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> originalColors<span class=\"token punctuation\">;</span>\n\t\t\terrorTime <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bGuiActive <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">hasSelectedText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> blinkingCursor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">drawCursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tofBlendMode blendMode <span class=\"token operator\">=</span> <span class=\"token function\">ofGetStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>blendingMode<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>blendMode<span class=\"token operator\">!=</span>OF_BLENDMODE_ALPHA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofEnableAlphaBlending</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">bindFontTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ttextMesh<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">unbindFontTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>blendMode<span class=\"token operator\">!=</span>OF_BLENDMODE_ALPHA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofEnableBlendMode</span><span class=\"token punctuation\">(</span>blendMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">drawCursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">auto</span> now <span class=\"token operator\">=</span> <span class=\"token function\">ofGetElapsedTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> timeSinceLastCursorMove <span class=\"token operator\">=</span> now <span class=\"token operator\">-</span> lastCursorMoveTime<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>blinkingCursor <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>now <span class=\"token operator\">%</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>timeSinceLastCursorMove <span class=\"token operator\">&lt;</span> <span class=\"token number\">500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofPushStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span>thisTextColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofDrawLine</span><span class=\"token punctuation\">(</span> selectStartX<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> selectStartX<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span>y<span class=\"token operator\">+</span>b<span class=\"token punctuation\">.</span>height <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofPopStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setBlinkingCursor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> blink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tblinkingCursor <span class=\"token operator\">=</span> blink<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setNeedsRedraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setShowLabelWhileEditing</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> show<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tshowLabelWhileEditing <span class=\"token operator\">=</span> show<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setNeedsRedraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">bool</span> ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> mx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> my<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bCheck<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\nofAbstractParameter <span class=\"token operator\">&amp;</span> ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">parseInput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">try</span><span class=\"token punctuation\">{</span>\n\t\tType tmpVal <span class=\"token operator\">=</span> fromString<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tmpVal <span class=\"token operator\">&lt;</span> <span class=\"token function\">getMin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\ttmpVal <span class=\"token operator\">=</span> <span class=\"token function\">getMin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tmpVal <span class=\"token operator\">></span> <span class=\"token function\">getMax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\ttmpVal <span class=\"token operator\">=</span> <span class=\"token function\">getMax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tvalue <span class=\"token operator\">=</span> tmpVal<span class=\"token punctuation\">;</span>\n\t\tvalidValue <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>insideSlider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\toriginalColors <span class=\"token operator\">=</span> bg<span class=\"token punctuation\">.</span><span class=\"token function\">getColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\terrorTime <span class=\"token operator\">=</span> <span class=\"token function\">ofGetElapsedTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tvalidValue <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofxInputField<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">parseInput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tvalue <span class=\"token operator\">=</span> input<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">valueChanged</span><span class=\"token punctuation\">(</span>Type <span class=\"token operator\">&amp;</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tvisibleInput <span class=\"token operator\">=</span> input <span class=\"token operator\">=</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bGuiActive<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">moveCursor</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofUTF8Length</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n    <span class=\"token function\">setNeedsRedraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">leaveFocus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbGuiActive <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">parseInput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setNeedsRedraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tleftFocus<span class=\"token punctuation\">.</span><span class=\"token function\">notify</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">bool</span> ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">containsValidValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> validValue<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxInputField</span><span class=\"token operator\">&lt;</span>int8_t<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxInputField</span><span class=\"token operator\">&lt;</span>uint8_t<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxInputField</span><span class=\"token operator\">&lt;</span>int16_t<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxInputField</span><span class=\"token operator\">&lt;</span>uint16_t<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxInputField</span><span class=\"token operator\">&lt;</span>int32_t<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxInputField</span><span class=\"token operator\">&lt;</span>uint32_t<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxInputField</span><span class=\"token operator\">&lt;</span>int64_t<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxInputField</span><span class=\"token operator\">&lt;</span>uint64_t<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxInputField</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxInputField</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxInputField</span><span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxInputField</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> std<span class=\"token operator\">::</span>conditional<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>is_same<span class=\"token operator\">&lt;</span>uint32_t<span class=\"token punctuation\">,</span> size_t<span class=\"token operator\">></span><span class=\"token operator\">::</span>value <span class=\"token operator\">||</span> std<span class=\"token operator\">::</span>is_same<span class=\"token operator\">&lt;</span>uint64_t<span class=\"token punctuation\">,</span> size_t<span class=\"token operator\">></span><span class=\"token operator\">::</span>value<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span><span class=\"token punctuation\">,</span> size_t<span class=\"token operator\">></span><span class=\"token operator\">::</span>type<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n","type":"source","static":true}}],"fetch":[]}