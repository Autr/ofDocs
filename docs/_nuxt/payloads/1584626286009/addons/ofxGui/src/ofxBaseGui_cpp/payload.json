{"data":[{"page":{"entry":{"name":"ofxBaseGui.cpp","filename":"ofxBaseGui.cpp","absolute":"/Users/gilbertsinnott/Code/openFrameworks/addons/ofxGui/src/ofxBaseGui.cpp","path":"/addons/ofxGui/src/ofxBaseGui_cpp","route":"/addons/ofxGui/src/ofxBaseGui.cpp","dir":"../addons/ofxGui/src","ext":"cpp","type":"source","id":88,"parent":86,"breadcrumbs":[86,87,36],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxBaseGui.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofImage.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofBitmapFont.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofXml.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofJson.h\"</span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofxGuiSetFont</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span> fontPath<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> fontsize<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> _bAntiAliased<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> _bFullCharacterSet<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> dpi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">loadFont</span><span class=\"token punctuation\">(</span>fontPath<span class=\"token punctuation\">,</span> fontsize<span class=\"token punctuation\">,</span> _bAntiAliased<span class=\"token punctuation\">,</span> _bFullCharacterSet<span class=\"token punctuation\">,</span> dpi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofxGuiSetFont</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofTrueTypeFontSettings <span class=\"token operator\">&amp;</span> fontSettings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">loadFont</span><span class=\"token punctuation\">(</span>fontSettings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofxGuiSetBitmapFont</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setUseTTF</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofxGuiSetHeaderColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setDefaultHeaderBackgroundColor</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofxGuiSetBackgroundColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setDefaultBackgroundColor</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofxGuiSetBorderColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setDefaultBorderColor</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofxGuiSetTextColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setDefaultTextColor</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofxGuiSetFillColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setDefaultFillColor</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofxGuiSetTextPadding</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> padding<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setDefaultTextPadding</span><span class=\"token punctuation\">(</span>padding<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofxGuiSetDefaultWidth</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setDefaultWidth</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofxGuiSetDefaultHeight</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setDefaultHeight</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofxGuiSetDefaultEventsPriority</span><span class=\"token punctuation\">(</span>ofEventOrder eventsPriority<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setDefaultEventsPriority</span><span class=\"token punctuation\">(</span>eventsPriority<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofxGuiEnableHiResDisplay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">enableHiDpi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofxGuiDisableHiResDisplay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">disableHiDpi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\nofColor\nofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">headerBackgroundColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\nofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">backgroundColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\nofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">borderColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\nofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">textColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\nofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">fillColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> ofxBaseGui<span class=\"token operator\">::</span>textPadding <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> ofxBaseGui<span class=\"token operator\">::</span>defaultWidth <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> ofxBaseGui<span class=\"token operator\">::</span>defaultHeight <span class=\"token operator\">=</span> <span class=\"token number\">18</span><span class=\"token punctuation\">;</span>\n\nofTrueTypeFont ofxBaseGui<span class=\"token operator\">::</span>font<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">bool</span> ofxBaseGui<span class=\"token operator\">::</span>fontLoaded <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">bool</span> ofxBaseGui<span class=\"token operator\">::</span>useTTF <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\nofBitmapFont ofxBaseGui<span class=\"token operator\">::</span>bitmapFont<span class=\"token punctuation\">;</span>\nofEventOrder ofxBaseGui<span class=\"token operator\">::</span>defaultEventsPriority <span class=\"token operator\">=</span> OF_EVENT_ORDER_BEFORE_APP<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">float</span> ofxBaseGui<span class=\"token operator\">::</span>hiDpiScale <span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\nofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">ofxBaseGui</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tparent <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\tcurrentFrame <span class=\"token operator\">=</span> <span class=\"token function\">ofGetFrameNum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tthisHeaderBackgroundColor <span class=\"token operator\">=</span> headerBackgroundColor<span class=\"token punctuation\">;</span>\n\tthisBackgroundColor <span class=\"token operator\">=</span> backgroundColor<span class=\"token punctuation\">;</span>\n\tthisBorderColor <span class=\"token operator\">=</span> borderColor<span class=\"token punctuation\">;</span>\n\tthisTextColor <span class=\"token operator\">=</span> textColor<span class=\"token punctuation\">;</span>\n\tthisFillColor <span class=\"token operator\">=</span> fillColor<span class=\"token punctuation\">;</span>\n\n\tbRegisteredForMouseEvents <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tneedsRedraw <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/*if(!fontLoaded){\n\t    loadFont(OF_TTF_MONO,10,true,true);\n\t    useTTF=false;\n\t}*/</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">loadFont</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> filename<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> fontsize<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> _bAntiAliased<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> _bFullCharacterSet<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> dpi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tfont<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> fontsize<span class=\"token punctuation\">,</span> _bAntiAliased<span class=\"token punctuation\">,</span> _bFullCharacterSet<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> dpi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tfontLoaded <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\tuseTTF <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">loadFont</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofTrueTypeFontSettings <span class=\"token operator\">&amp;</span> fontSettings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tfont<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>fontSettings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tfontLoaded <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\tuseTTF <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setUseTTF</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bUseTTF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bUseTTF <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>fontLoaded<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">loadFont</span><span class=\"token punctuation\">(</span>OF_TTF_MONO<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tuseTTF <span class=\"token operator\">=</span> bUseTTF<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofxBaseGui<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofxBaseGui</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">unregisterMouseEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">registerMouseEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bRegisteredForMouseEvents <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// already registered.</span>\n\t<span class=\"token punctuation\">}</span>\n\tbRegisteredForMouseEvents <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofRegisterMouseEvents</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> defaultEventsPriority<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">unregisterMouseEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bRegisteredForMouseEvents <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// not registered.</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">ofUnregisterMouseEvents</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> defaultEventsPriority<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbRegisteredForMouseEvents <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setEvents</span><span class=\"token punctuation\">(</span>ofCoreEvents <span class=\"token operator\">&amp;</span> _events<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>_events <span class=\"token operator\">!=</span> events<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">bool</span> wasMouseInputEnabled <span class=\"token operator\">=</span> bRegisteredForMouseEvents<span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">// || !events;</span>\n\t\t<span class=\"token function\">unregisterMouseEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tevents <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>_events<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>wasMouseInputEnabled<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// note: this will set bMouseInputEnabled to true as a side-effect.</span>\n\t\t\t<span class=\"token function\">registerMouseEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setEvents</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>needsRedraw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">generateDraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tneedsRedraw <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tcurrentFrame <span class=\"token operator\">=</span> <span class=\"token function\">ofGetFrameNum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">isGuiDrawing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetFrameNum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> currentFrame <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">bindFontTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>useTTF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tfont<span class=\"token punctuation\">.</span><span class=\"token function\">getFontTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tbitmapFont<span class=\"token punctuation\">.</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">unbindFontTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>useTTF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tfont<span class=\"token punctuation\">.</span><span class=\"token function\">getFontTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tbitmapFont<span class=\"token punctuation\">.</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\nofMesh ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">getTextMesh</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span> text<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>useTTF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> font<span class=\"token punctuation\">.</span><span class=\"token function\">getStringMesh</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">auto</span> m <span class=\"token operator\">=</span> bitmapFont<span class=\"token punctuation\">.</span><span class=\"token function\">getMesh</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isHiDpiEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">auto</span> bb <span class=\"token operator\">=</span> <span class=\"token function\">getTextBoundingBox</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tbb<span class=\"token punctuation\">.</span><span class=\"token function\">standardize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> v<span class=\"token operator\">:</span> m<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tv <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>v <span class=\"token operator\">-</span> bb<span class=\"token punctuation\">.</span><span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>hiDpiScale <span class=\"token operator\">+</span> bb<span class=\"token punctuation\">.</span><span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">return</span> m<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nofRectangle ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">getTextBoundingBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span> text<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>useTTF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> font<span class=\"token punctuation\">.</span><span class=\"token function\">getStringBoundingBox</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">auto</span> r <span class=\"token operator\">=</span> bitmapFont<span class=\"token punctuation\">.</span><span class=\"token function\">getBoundingBox</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isHiDpiEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tr<span class=\"token punctuation\">.</span>width <span class=\"token operator\">*</span><span class=\"token operator\">=</span> hiDpiScale<span class=\"token punctuation\">;</span>\n\t\t\tr<span class=\"token punctuation\">.</span>height <span class=\"token operator\">*</span><span class=\"token operator\">=</span> hiDpiScale<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">return</span> r<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">float</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">getTextVCenteredInRect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofRectangle<span class=\"token operator\">&amp;</span> container<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>useTTF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> container<span class=\"token punctuation\">.</span><span class=\"token function\">getCenter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>y  <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>font<span class=\"token punctuation\">.</span><span class=\"token function\">getAscenderHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">+</span> font<span class=\"token punctuation\">.</span><span class=\"token function\">getDescenderHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// The bitmap font does not provide a getAscenderHeight() method.</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// However,it can be found by calling `getTextBoundingBox(\" \",0,0)` </span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// which returns the ascender value in the rectangle's Y as a negative value. </span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// It does not matter which string is passed to it, the value will be always the same.</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// Fix. It centers the text properly with `getTextBoundingBox(\" \",0,0)` as it takes into account the screen pixel scaling.</span>\n\t\t<span class=\"token keyword\">auto</span> bb <span class=\"token operator\">=</span> <span class=\"token function\">getTextBoundingBox</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> container<span class=\"token punctuation\">.</span><span class=\"token function\">getCenter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> bb<span class=\"token punctuation\">.</span>height<span class=\"token operator\">*</span><span class=\"token number\">0.5</span> <span class=\"token operator\">-</span> bb<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">saveToFile</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">auto</span> extension <span class=\"token operator\">=</span> <span class=\"token function\">ofToLower</span><span class=\"token punctuation\">(</span>ofFilePath<span class=\"token operator\">::</span><span class=\"token function\">getFileExt</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>extension <span class=\"token operator\">==</span> <span class=\"token string\">\"xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tofXml xml<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofFile</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> ofFile<span class=\"token operator\">::</span>Reference<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\txml<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token function\">saveTo</span><span class=\"token punctuation\">(</span>xml<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\txml<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>extension <span class=\"token operator\">==</span> <span class=\"token string\">\"json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        ofJson json <span class=\"token operator\">=</span> <span class=\"token function\">ofLoadJson</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">saveTo</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">ofSavePrettyJson</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxGui\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> extension <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" not recognized, only .xml and .json supported by now\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">loadFromFile</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">auto</span> extension <span class=\"token operator\">=</span> <span class=\"token function\">ofToLower</span><span class=\"token punctuation\">(</span>ofFilePath<span class=\"token operator\">::</span><span class=\"token function\">getFileExt</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>extension <span class=\"token operator\">==</span> <span class=\"token string\">\"xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tofXml xml<span class=\"token punctuation\">;</span>\n\t\txml<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">loadFrom</span><span class=\"token punctuation\">(</span>xml<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>extension <span class=\"token operator\">==</span> <span class=\"token string\">\"json\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tofFile <span class=\"token function\">jsonFile</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tofJson json <span class=\"token operator\">=</span> <span class=\"token function\">ofLoadJson</span><span class=\"token punctuation\">(</span>jsonFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">loadFrom</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxGui\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> extension <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" not recognized, only .xml and .json supported by now\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nstring ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> _name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setName</span><span class=\"token punctuation\">(</span>_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setNeedsRedraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tb<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n\tb<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setNeedsRedraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setSize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tb<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> w<span class=\"token punctuation\">;</span>\n\tb<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> h<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">sizeChangedCB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setShape</span><span class=\"token punctuation\">(</span>ofRectangle r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tb <span class=\"token operator\">=</span> r<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">sizeChangedCB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setShape</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tb<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">sizeChangedCB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setShapeNoNotification</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofRectangle<span class=\"token operator\">&amp;</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tb <span class=\"token operator\">=</span> r<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setNeedsRedraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setShapeNoNotification</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tb<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setNeedsRedraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nglm<span class=\"token operator\">::</span>vec3 ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofRectangle ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">getShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> b<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> b<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofColor ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">getHeaderBackgroundColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> thisHeaderBackgroundColor<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofColor ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">getBackgroundColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> thisBackgroundColor<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofColor ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">getBorderColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> thisBorderColor<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofColor ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">getTextColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> thisTextColor<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofColor ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">getFillColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> thisFillColor<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setHeaderBackgroundColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setNeedsRedraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tthisHeaderBackgroundColor <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setBackgroundColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setNeedsRedraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tthisBackgroundColor <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setBorderColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setNeedsRedraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tthisBorderColor <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setTextColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setNeedsRedraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tthisTextColor <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setFillColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setNeedsRedraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tthisFillColor <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setDefaultHeaderBackgroundColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\theaderBackgroundColor <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setDefaultBackgroundColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbackgroundColor <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setDefaultBorderColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tborderColor <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setDefaultTextColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\ttextColor <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setDefaultFillColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tfillColor <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setDefaultTextPadding</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> padding<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\ttextPadding <span class=\"token operator\">=</span> padding<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setDefaultWidth</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tdefaultWidth <span class=\"token operator\">=</span> width<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setDefaultHeight</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tdefaultHeight <span class=\"token operator\">=</span> height<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setDefaultEventsPriority</span><span class=\"token punctuation\">(</span>ofEventOrder eventsPriority<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tdefaultEventsPriority <span class=\"token operator\">=</span> eventsPriority<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">sizeChangedCB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tparent<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">sizeChangedCB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">setNeedsRedraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setNeedsRedraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tneedsRedraw <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nstring ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">saveStencilToHex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofImage <span class=\"token operator\">&amp;</span> img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tstringstream strm<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> width <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> height <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> width <span class=\"token operator\">*</span> height<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> cur <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> shift <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tstrm <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"{\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i <span class=\"token operator\">*</span> <span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tcur <span class=\"token operator\">|</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> shift<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\ti<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">%</span> <span class=\"token number\">8</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tstrm <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"0x\"</span> <span class=\"token operator\">&lt;&lt;</span> hex <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>cur<span class=\"token punctuation\">;</span>\n\t\t\tcur <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\tshift <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tstrm <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\",\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\tshift<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\tstrm <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"}\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> strm<span class=\"token punctuation\">.</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">loadStencilFromHex</span><span class=\"token punctuation\">(</span>ofImage <span class=\"token operator\">&amp;</span> img<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> width <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> height <span class=\"token operator\">=</span> img<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tofColor <span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofColor <span class=\"token function\">off</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;</span> height<span class=\"token punctuation\">;</span> y<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> width<span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">int</span> shift <span class=\"token operator\">=</span> i <span class=\"token operator\">%</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">int</span> offset <span class=\"token operator\">=</span> i <span class=\"token operator\">/</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">bool</span> cur <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>offset<span class=\"token punctuation\">]</span> <span class=\"token operator\">>></span> shift<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\timg<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> cur <span class=\"token operator\">?</span> on <span class=\"token operator\">:</span> off<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\ti<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\timg<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setParent</span><span class=\"token punctuation\">(</span>ofxBaseGui <span class=\"token operator\">*</span> parent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>parent <span class=\"token operator\">=</span> parent<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofxBaseGui <span class=\"token operator\">*</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> parent<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">enableHiDpi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\n\tofxBaseGui<span class=\"token operator\">::</span>hiDpiScale <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\tofxBaseGui<span class=\"token operator\">::</span>textPadding <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\tofxBaseGui<span class=\"token operator\">::</span>defaultWidth <span class=\"token operator\">=</span> <span class=\"token number\">400</span><span class=\"token punctuation\">;</span>\n\tofxBaseGui<span class=\"token operator\">::</span>defaultHeight <span class=\"token operator\">=</span> <span class=\"token number\">36</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">void</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">disableHiDpi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofxBaseGui<span class=\"token operator\">::</span>hiDpiScale <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\tofxBaseGui<span class=\"token operator\">::</span>textPadding <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n\tofxBaseGui<span class=\"token operator\">::</span>defaultWidth <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>\n\tofxBaseGui<span class=\"token operator\">::</span>defaultHeight <span class=\"token operator\">=</span> <span class=\"token number\">18</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">bool</span> ofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">isHiDpiEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> hiDpiScale <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n","type":"source","static":true}}],"fetch":[]}