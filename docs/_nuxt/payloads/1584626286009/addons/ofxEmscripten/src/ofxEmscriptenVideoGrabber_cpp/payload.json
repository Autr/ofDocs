{"data":[{"page":{"entry":{"name":"ofxEmscriptenVideoGrabber.cpp","filename":"ofxEmscriptenVideoGrabber.cpp","absolute":"/Users/gilbertsinnott/Code/openFrameworks/addons/ofxEmscripten/src/ofxEmscriptenVideoGrabber.cpp","path":"/addons/ofxEmscripten/src/ofxEmscriptenVideoGrabber_cpp","route":"/addons/ofxEmscripten/src/ofxEmscriptenVideoGrabber.cpp","dir":"../addons/ofxEmscripten/src","ext":"cpp","type":"source","id":82,"parent":72,"breadcrumbs":[72,73,36],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">/*\n * ofEmscriptenGrabber.cpp\n *\n *  Created on: May 12, 2014\n *      Author: arturo\n */</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxEmscriptenVideoGrabber.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"html5video.h\"</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">enum</span> ReadyState<span class=\"token punctuation\">{</span>\n\tHAVE_NOTHING <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\tHAVE_METADATA<span class=\"token punctuation\">,</span>\n\tHAVE_CURRENT_DATA<span class=\"token punctuation\">,</span>\n\tHAVE_FUTURE_DATA<span class=\"token punctuation\">,</span>\n\tHAVE_ENOUGH_DATA\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nofxEmscriptenVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">ofxEmscriptenVideoGrabber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">:</span><span class=\"token function\">id</span><span class=\"token punctuation\">(</span><span class=\"token function\">html5video_grabber_create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">desiredFramerate</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">usePixels</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// TODO Auto-generated constructor stub</span>\n\n<span class=\"token punctuation\">}</span>\n\nofxEmscriptenVideoGrabber<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofxEmscriptenVideoGrabber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// TODO Auto-generated destructor stub</span>\n<span class=\"token punctuation\">}</span>\n\nvector<span class=\"token operator\">&lt;</span>ofVideoDevice<span class=\"token operator\">></span> ofxEmscriptenVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">listDevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> vector<span class=\"token operator\">&lt;</span>ofVideoDevice<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofxEmscriptenVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">!=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">html5video_grabber_init</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>desiredFramerate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGBA<span class=\"token operator\">:</span>\n\t\t\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB<span class=\"token operator\">:</span>\n\t\t\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_MONO<span class=\"token operator\">:</span>\n\t\t\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"unknown pixel format, can't allocating texture\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofxEmscriptenVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">isInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> texture<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxEmscriptenVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">html5video_grabber_update</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span>usePixels<span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\ttexture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> <span class=\"token function\">html5video_grabber_width</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\ttexture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token function\">html5video_grabber_height</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\ttexture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>tex_w <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t\ttexture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>tex_h <span class=\"token operator\">=</span> texture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>textureID<span class=\"token operator\">!=</span><span class=\"token function\">html5video_grabber_texture_id</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\ttexture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>bFlipTexture <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGBA<span class=\"token operator\">:</span>\n\t\t\t\ttexture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>glInternalFormat <span class=\"token operator\">=</span> GL_RGBA<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB<span class=\"token operator\">:</span>\n\t\t\t\ttexture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>glInternalFormat <span class=\"token operator\">=</span> GL_RGB<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> OF_PIXELS_MONO<span class=\"token operator\">:</span>\n\t\t\t\ttexture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>glInternalFormat <span class=\"token operator\">=</span> GL_LUMINANCE<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"unknown pixel format, can't allocating texture\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\ttexture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>tex_u <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\ttexture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>tex_t <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\ttexture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>textureTarget <span class=\"token operator\">=</span> GL_TEXTURE_2D<span class=\"token punctuation\">;</span>\n\t\t\ttexture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>bAllocated <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\ttexture<span class=\"token punctuation\">.</span><span class=\"token function\">setUseExternalTextureID</span><span class=\"token punctuation\">(</span><span class=\"token function\">html5video_grabber_texture_id</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofxEmscriptenVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">isFrameNew</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">html5video_grabber_ready_state</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token operator\">>=</span>HAVE_METADATA<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofPixels <span class=\"token operator\">&amp;</span> ofxEmscriptenVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> pixels<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> ofPixels <span class=\"token operator\">&amp;</span> ofxEmscriptenVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> pixels<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxEmscriptenVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> ofxEmscriptenVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> texture<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> ofxEmscriptenVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> texture<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofxEmscriptenVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">setPixelFormat</span><span class=\"token punctuation\">(</span>ofPixelFormat pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_RGBA<span class=\"token operator\">:</span>\n\t\t<span class=\"token function\">html5video_grabber_set_pixel_format</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span><span class=\"token string\">\"RGBA\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB<span class=\"token operator\">:</span>\n\t\t<span class=\"token function\">html5video_grabber_set_pixel_format</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span><span class=\"token string\">\"RGB\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_MONO<span class=\"token operator\">:</span>\n\t\t<span class=\"token function\">html5video_grabber_set_pixel_format</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span><span class=\"token string\">\"GRAY\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"can't set pixel format\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofPixelFormat ofxEmscriptenVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tstring format <span class=\"token operator\">=</span> <span class=\"token function\">html5video_grabber_pixel_format</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>format <span class=\"token operator\">==</span> <span class=\"token string\">\"RGB\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> OF_PIXELS_RGB<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>format <span class=\"token operator\">==</span> <span class=\"token string\">\"RGBA\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> OF_PIXELS_RGBA<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>format <span class=\"token operator\">==</span> <span class=\"token string\">\"GRAY\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> OF_PIXELS_MONO<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> OF_PIXELS_UNKNOWN<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nofTexture <span class=\"token operator\">*</span> ofxEmscriptenVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>texture<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//should implement!</span>\n<span class=\"token keyword\">void</span> ofxEmscriptenVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">setDeviceID</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> _deviceID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxEmscriptenVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">setDesiredFrameRate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> framerate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tdesiredFramerate <span class=\"token operator\">=</span> framerate<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxEmscriptenVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">videoSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxEmscriptenVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">setUsePixels</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> usePixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>usePixels <span class=\"token operator\">=</span> usePixels<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n","type":"source","static":true}}],"fetch":[]}