{"data":[{"page":{"entry":{"name":"ofxAppEmscriptenWindow.h","filename":"ofxAppEmscriptenWindow.h","absolute":"/Users/gilbertsinnott/Code/openFrameworks/addons/ofxEmscripten/src/ofxAppEmscriptenWindow.h","path":"/addons/ofxEmscripten/src/ofxAppEmscriptenWindow_h","route":"/addons/ofxEmscripten/src/ofxAppEmscriptenWindow.h","dir":"../addons/ofxEmscripten/src","ext":"h","type":"source","id":75,"parent":72,"breadcrumbs":[72,73,36],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">/*\n * ofAppEmscriptenWindow.h\n *\n *  Created on: May 8, 2014\n *      Author: arturo\n */</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> OFAPPEMSCRIPTENWINDOW_H_</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OFAPPEMSCRIPTENWINDOW_H_</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofAppBaseWindow.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofEvents.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"EGL/egl.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;emscripten/emscripten.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;emscripten/html5.h></span></span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxAppEmscriptenWindow</span><span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofAppBaseGLESWindow <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">ofxAppEmscriptenWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">~</span><span class=\"token function\">ofxAppEmscriptenWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">allowsMultiWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">doesLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">needsPolling</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">pollEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofGLESWindowSettings <span class=\"token operator\">&amp;</span> settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">hideCursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">showCursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span>\t<span class=\"token function\">setWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span>\t<span class=\"token function\">setWindowShape</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tglm<span class=\"token operator\">::</span>vec2\t<span class=\"token function\">getWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tglm<span class=\"token operator\">::</span>vec2\t<span class=\"token function\">getWindowSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tglm<span class=\"token operator\">::</span>vec2\t<span class=\"token function\">getScreenSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span>\t\t\t<span class=\"token function\">setOrientation</span><span class=\"token punctuation\">(</span>ofOrientation orientation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofOrientation\t<span class=\"token function\">getOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span>\t<span class=\"token function\">doesHWOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//this is used by ofGetWidth and now determines the window width based on orientation</span>\n\t<span class=\"token keyword\">int</span>\t\t<span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span>\t\t<span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span>\t<span class=\"token function\">setWindowTitle</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tofWindowMode \t<span class=\"token function\">getWindowMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span>\t<span class=\"token function\">setFullscreen</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> fullscreen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span>\t<span class=\"token function\">toggleFullscreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span>\t<span class=\"token function\">enableSetupScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span>\t<span class=\"token function\">disableSetupScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span>\t<span class=\"token function\">setVerticalSync</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> enabled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tEGLDisplay <span class=\"token function\">getEGLDisplay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tEGLContext <span class=\"token function\">getEGLContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tEGLSurface <span class=\"token function\">getEGLSurface</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tofCoreEvents <span class=\"token operator\">&amp;</span> <span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofBaseRenderer<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token function\">renderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">display_cb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">keydown_cb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> eventType<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> EmscriptenKeyboardEvent <span class=\"token operator\">*</span>keyEvent<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>userData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">keyup_cb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> eventType<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> EmscriptenKeyboardEvent <span class=\"token operator\">*</span>keyEvent<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>userData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">mousedown_cb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> eventType<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> EmscriptenMouseEvent <span class=\"token operator\">*</span>mouseEvent<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>userData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">mouseup_cb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> eventType<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> EmscriptenMouseEvent <span class=\"token operator\">*</span>mouseEvent<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>userData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">mousemoved_cb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> eventType<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> EmscriptenMouseEvent <span class=\"token operator\">*</span>mouseEvent<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>userData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">touch_cb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> eventType<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> EmscriptenTouchEvent <span class=\"token operator\">*</span>touchEvent<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>userData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tEGLDisplay display<span class=\"token punctuation\">;</span>\n\tEGLContext context<span class=\"token punctuation\">;</span>\n\tEGLSurface surface<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">static</span> ofxAppEmscriptenWindow <span class=\"token operator\">*</span> instance<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">bool</span> bEnableSetupScreen<span class=\"token punctuation\">;</span>\n    ofCoreEvents _events<span class=\"token punctuation\">;</span>\n    std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofBaseRenderer<span class=\"token operator\">></span> _renderer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span> </span><span class=\"token comment\" spellcheck=\"true\">/* OFAPPEMSCRIPTENWINDOW_H_ */</span>\n","type":"source","static":true}}],"fetch":[]}