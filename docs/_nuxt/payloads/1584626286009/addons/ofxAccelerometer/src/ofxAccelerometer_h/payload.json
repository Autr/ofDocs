{"data":[{"page":{"entry":{"name":"ofxAccelerometer.h","filename":"ofxAccelerometer.h","absolute":"/Users/gilbertsinnott/Code/openFrameworks/addons/ofxAccelerometer/src/ofxAccelerometer.h","path":"/addons/ofxAccelerometer/src/ofxAccelerometer_h","route":"/addons/ofxAccelerometer/src/ofxAccelerometer.h","dir":"../addons/ofxAccelerometer/src","ext":"h","type":"source","id":38,"parent":34,"breadcrumbs":[34,35,36],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">/***********************************************************************\n \n Copyright (c) 2008, 2009, Memo Akten, www.memo.tv\n *** The Mega Super Awesome Visuals Company ***\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n *     * Redistributions of source code must retain the above copyright\n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright\n *       notice, this list of conditions and the following disclaimer in the\n *       documentation and/or other materials provided with the distribution.\n *     * Neither the name of MSA Visuals nor the names of its contributors \n *       may be used to endorse or promote products derived from this software\n *       without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" \n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, \n * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS \n * OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE \n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\n * OF THE POSSIBILITY OF SUCH DAMAGE. \n *\n * ***********************************************************************/</span> \n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofTypes.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofPoint.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofEvents.h\"</span></span>\n\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>ofxAccelCB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>ofPoint<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\" spellcheck=\"true\">// typedef for accelerometer callback</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxAccelerometerHandler</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">ofxAccelerometerHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tcallback <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">setForceSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.1f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">// little bit of smoothing for force</span>\n\t\t<span class=\"token function\">setOrientationSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.9f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">// lots of smoothing for orientation / matrix</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// call this to set it all up</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// call this when you no longer need the accelerometer</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// returns current smoothed accelerometer data (value in number of g's (1g = gravity, 9.8m/s^2)</span>\n\tofPoint <span class=\"token operator\">&amp;</span><span class=\"token function\">getForce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> accelForce<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// returns current real accelerometer data (value in number of g's (1g = gravity, 9.8m/s^2)</span>\n\tofPoint <span class=\"token operator\">&amp;</span><span class=\"token function\">getRawAcceleration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> accelReal<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// returns current orientation in degrees (x: pitch, y: roll, z: not used)</span>\n\tofPoint <span class=\"token operator\">&amp;</span><span class=\"token function\">getOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">updateOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> orientation<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t\n\tGLfloat<span class=\"token operator\">*</span> <span class=\"token function\">getMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">updateMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>GLfloat<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>matrix<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// set amount of smoothing on data (0: no smooth, 1:very smooth)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setForceSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> forceSmoothing<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>forceSmoothing <span class=\"token operator\">=</span> forceSmoothing<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setOrientationSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> orientationSmoothing<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>orientationSmoothing <span class=\"token operator\">=</span> orientationSmoothing<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// if you have a callback which conforms to ofxAccelCB, pass it to this to have it called when motion is detected</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setCallback</span><span class=\"token punctuation\">(</span>ofxAccelCB new_callback<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tcallback <span class=\"token operator\">=</span> new_callback<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// platform specific accelerometer engine should call this when motion is detected</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\torientDirty <span class=\"token operator\">=</span> matrixDirty <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\taccelReal<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>forceSmoothing<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">float</span> lerpFactor <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> forceSmoothing<span class=\"token punctuation\">;</span>\t\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>lerpFactor<span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> lerpFactor <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>lerpFactor <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span> lerpFactor <span class=\"token operator\">=</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span>\n\t\t\t\n\t\t\taccelForce <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>accelReal <span class=\"token operator\">-</span> accelForce<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> lerpFactor<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\taccelForce<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>orientationSmoothing<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">float</span> lerpFactor <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> orientationSmoothing<span class=\"token punctuation\">;</span>\t\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>lerpFactor<span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> lerpFactor <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>lerpFactor <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span> lerpFactor <span class=\"token operator\">=</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">;</span>\n\t\t\t\n\t\t\taccelOrientation <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>accelReal <span class=\"token operator\">-</span> accelOrientation<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> lerpFactor<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\taccelOrientation<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>callback<span class=\"token punctuation\">)</span> <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>accelReal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span>accelChanged<span class=\"token punctuation\">,</span>accelReal<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tofEvent<span class=\"token operator\">&lt;</span>ofPoint<span class=\"token operator\">></span> accelChanged<span class=\"token punctuation\">;</span>\n\t\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\tofxAccelCB callback<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> forceSmoothing<span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\" spellcheck=\"true\">// amount to smooth incoming data by</span>\n\t<span class=\"token keyword\">float</span> orientationSmoothing<span class=\"token punctuation\">;</span>\t<span class=\"token comment\" spellcheck=\"true\">// amount to smooth orientation by</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//\tofPoint restAccel;\t\t\t// rest acceleration (for calibration)</span>\n\tofPoint accelReal<span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\" spellcheck=\"true\">// current acceleration</span>\n\tofPoint accelForce<span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\" spellcheck=\"true\">// smoothed for force</span>\n\tofPoint accelOrientation<span class=\"token punctuation\">;</span>\t<span class=\"token comment\" spellcheck=\"true\">// smoothed for acceleration</span>\n\tofPoint orientation<span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\" spellcheck=\"true\">// current orientation</span>\n\t<span class=\"token keyword\">bool</span> orientDirty<span class=\"token punctuation\">;</span>\n\n\tGLfloat matrix<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\" spellcheck=\"true\">// contains orientation matrix</span>\n\t<span class=\"token keyword\">bool</span> matrixDirty<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">updateOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>orientDirty<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\torientDirty <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\torientation<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token function\">atan2</span><span class=\"token punctuation\">(</span>accelOrientation<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>accelOrientation<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> RAD_TO_DEG<span class=\"token punctuation\">;</span> \n\t\torientation<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token function\">atan2</span><span class=\"token punctuation\">(</span>accelOrientation<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>accelOrientation<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> RAD_TO_DEG<span class=\"token punctuation\">;</span>\n\t\torientation<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">updateMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>matrixDirty<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\tmatrixDirty <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token keyword\">float</span> length<span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">//Make sure we have a big enough acceleration vector</span>\n\t\tlength <span class=\"token operator\">=</span> <span class=\"token function\">sqrtf</span><span class=\"token punctuation\">(</span>accelOrientation<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> accelOrientation<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> accelOrientation<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> accelOrientation<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> accelOrientation<span class=\"token punctuation\">.</span>z <span class=\"token operator\">*</span> accelOrientation<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>length <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">//Clear matrix to be used to rotate from the current referential to one based on the gravity vector</span>\n\t\t<span class=\"token function\">bzero</span><span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmatrix<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">//Setup first matrix column as gravity vector</span>\n\t\tmatrix<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> accelOrientation<span class=\"token punctuation\">.</span>x <span class=\"token operator\">/</span> length<span class=\"token punctuation\">;</span>\n\t\tmatrix<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> accelOrientation<span class=\"token punctuation\">.</span>y <span class=\"token operator\">/</span> length<span class=\"token punctuation\">;</span>\n\t\tmatrix<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> accelOrientation<span class=\"token punctuation\">.</span>z <span class=\"token operator\">/</span> length<span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">//Setup second matrix column as an arbitrary vector in the plane perpendicular to the gravity vector {Gx, Gy, Gz} defined by by the equation \"Gx * x + Gy * y + Gz * z = 0\" in which we arbitrarily set x=0 and y=1</span>\n\t\tmatrix<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n\t\tmatrix<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n\t\tmatrix<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>accelOrientation<span class=\"token punctuation\">.</span>y <span class=\"token operator\">/</span> accelOrientation<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span>\n\t\tlength <span class=\"token operator\">=</span> <span class=\"token function\">sqrtf</span><span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> matrix<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> matrix<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> matrix<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> matrix<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> matrix<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmatrix<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span><span class=\"token operator\">=</span> length<span class=\"token punctuation\">;</span>\n\t\tmatrix<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span><span class=\"token operator\">=</span> length<span class=\"token punctuation\">;</span>\n\t\tmatrix<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span><span class=\"token operator\">=</span> length<span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">//Setup third matrix column as the cross product of the first two</span>\n\t\tmatrix<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> matrix<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> matrix<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> matrix<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\tmatrix<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> matrix<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> matrix<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> matrix<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\tmatrix<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> matrix<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> matrix<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> matrix<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">extern</span> ofxAccelerometerHandler ofxAccelerometer<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">T</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofxRegisterAccelEvents</span><span class=\"token punctuation\">(</span>T <span class=\"token operator\">*</span> listener<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofAddListener</span><span class=\"token punctuation\">(</span>ofxAccelerometer<span class=\"token punctuation\">.</span>accelChanged<span class=\"token punctuation\">,</span>listener<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>T<span class=\"token operator\">::</span>accelerationChanged<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n","type":"source","static":true}}],"fetch":[]}