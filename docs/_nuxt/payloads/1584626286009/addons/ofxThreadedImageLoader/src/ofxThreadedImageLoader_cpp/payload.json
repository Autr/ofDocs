{"data":[{"page":{"entry":{"name":"ofxThreadedImageLoader.cpp","filename":"ofxThreadedImageLoader.cpp","absolute":"/Users/gilbertsinnott/Code/openFrameworks/addons/ofxThreadedImageLoader/src/ofxThreadedImageLoader.cpp","path":"/addons/ofxThreadedImageLoader/src/ofxThreadedImageLoader_cpp","route":"/addons/ofxThreadedImageLoader/src/ofxThreadedImageLoader.cpp","dir":"../addons/ofxThreadedImageLoader/src","ext":"cpp","type":"source","id":181,"parent":179,"breadcrumbs":[179,180,36],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxThreadedImageLoader.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sstream></span></span>\nofxThreadedImageLoader<span class=\"token operator\">::</span><span class=\"token function\">ofxThreadedImageLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tnextID <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">ofAddListener</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ofxThreadedImageLoader<span class=\"token operator\">::</span>update<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofAddListener</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofURLResponseEvent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>ofxThreadedImageLoader<span class=\"token operator\">::</span>urlResponse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token function\">startThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    lastUpdate <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofxThreadedImageLoader<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofxThreadedImageLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\timages_to_load_from_disk<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\timages_to_update<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">waitForThread</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">ofRemoveListener</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ofxThreadedImageLoader<span class=\"token operator\">::</span>update<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofRemoveListener</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofURLResponseEvent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>ofxThreadedImageLoader<span class=\"token operator\">::</span>urlResponse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// Load an image from disk.</span>\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxThreadedImageLoader<span class=\"token operator\">::</span><span class=\"token function\">loadFromDisk</span><span class=\"token punctuation\">(</span>ofImage<span class=\"token operator\">&amp;</span> image<span class=\"token punctuation\">,</span> string filename<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tnextID<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\tofImageLoaderEntry <span class=\"token function\">entry</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tentry<span class=\"token punctuation\">.</span>filename <span class=\"token operator\">=</span> filename<span class=\"token punctuation\">;</span>\n\tentry<span class=\"token punctuation\">.</span>image<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setUseTexture</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tentry<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> filename<span class=\"token punctuation\">;</span>\n    \n\timages_to_load_from_disk<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">// Load an url asynchronously from an url.</span>\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxThreadedImageLoader<span class=\"token operator\">::</span><span class=\"token function\">loadFromURL</span><span class=\"token punctuation\">(</span>ofImage<span class=\"token operator\">&amp;</span> image<span class=\"token punctuation\">,</span> string url<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tnextID<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\tofImageLoaderEntry <span class=\"token function\">entry</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tentry<span class=\"token punctuation\">.</span>url <span class=\"token operator\">=</span> url<span class=\"token punctuation\">;</span>\n\tentry<span class=\"token punctuation\">.</span>image<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setUseTexture</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\tentry<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"image\"</span> <span class=\"token operator\">+</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>nextID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\timages_async_loading<span class=\"token punctuation\">[</span>entry<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> entry<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofLoadURLAsync</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">,</span> entry<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">// Reads from the queue and loads new images.</span>\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxThreadedImageLoader<span class=\"token operator\">::</span><span class=\"token function\">threadedFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setThreadName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxThreadedImageLoader \"</span> <span class=\"token operator\">+</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>thread<span class=\"token punctuation\">.</span><span class=\"token function\">get_id</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofImageLoaderEntry entry<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span> images_to_load_from_disk<span class=\"token punctuation\">.</span><span class=\"token function\">receive</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span>image<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">.</span>filename<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">{</span>\n\t\t\timages_to_update<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxThreadedImageLoader\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"couldn't load file: \\\"\"</span> <span class=\"token operator\">&lt;&lt;</span> entry<span class=\"token punctuation\">.</span>filename <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxThreadedImageLoader\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"finishing thread on closed queue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">// When we receive an url response this method is called; </span>\n<span class=\"token comment\" spellcheck=\"true\">// The loaded image is removed from the async_queue and added to the</span>\n<span class=\"token comment\" spellcheck=\"true\">// update queue. The update queue is used to update the texture.</span>\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxThreadedImageLoader<span class=\"token operator\">::</span><span class=\"token function\">urlResponse</span><span class=\"token punctuation\">(</span>ofHttpResponse <span class=\"token operator\">&amp;</span> response<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// this happens in the update thread so no need to lock to access</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// images_async_loading</span>\n\tentry_iterator it <span class=\"token operator\">=</span> images_async_loading<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>it <span class=\"token operator\">!=</span> images_async_loading<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tit<span class=\"token operator\">-</span><span class=\"token operator\">></span>second<span class=\"token punctuation\">.</span>image<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\timages_to_update<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>it<span class=\"token operator\">-</span><span class=\"token operator\">></span>second<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// log error.</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxThreadedImageLoader\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"couldn't load url, response status: \"</span> <span class=\"token operator\">&lt;&lt;</span> response<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofRemoveURLRequest</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// remove the entry from the queue</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>it <span class=\"token operator\">!=</span> images_async_loading<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\timages_async_loading<span class=\"token punctuation\">.</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">// Check the update queue and update the texture</span>\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxThreadedImageLoader<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>ofEventArgs <span class=\"token operator\">&amp;</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// Load 1 image per update so we don't block the gl thread for too long</span>\n\tofImageLoaderEntry entry<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>images_to_update<span class=\"token punctuation\">.</span><span class=\"token function\">tryReceive</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tentry<span class=\"token punctuation\">.</span>image<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setUseTexture</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tentry<span class=\"token punctuation\">.</span>image<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n","type":"source","static":true}}],"fetch":[]}