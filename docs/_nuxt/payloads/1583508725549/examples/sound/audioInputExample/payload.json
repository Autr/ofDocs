{"data":[{"page":{"entry":{"name":"audioInputExample","filename":"audioInputExample","absolute":"/Users/Gilbert/Code/openFrameworks/examples/sound/audioInputExample","path":"/examples/sound/audioInputExample/","dir":"../examples/sound","route":"/examples/sound/audioInputExample/","ext":"","type":"folder","id":1558,"children":[1560,1561,1562],"parent":1559,"breadcrumbs":[1559,436],"siblings":[],"translations":{}},"intro":{"name":"readme","filename":"readme.md","absolute":"/Users/Gilbert/Code/openFrameworks/examples/sound/audioInputExample/readme.md","path":"/examples/sound/audioInputExample/readme","route":"/examples/sound/audioInputExample/readme.md","dir":"../examples/sound/audioInputExample","ext":"md","type":"page","id":1561,"parent":1558,"breadcrumbs":[1558,1559,436],"translations":{},"siblings":[]},"document":"<h2>#audioInputExample</h2>\n<p><img src=\"audioInputExample.gif\" alt=\"Screenshot of Example\"></p>\n<h3>Learning Objectives</h3>\n<p>This openFrameworks example is designed to demonstrate how to access, extract, and draw from your audio input's raw data.</p>\n<p>Studying the code behind this example will help you understand:</p>\n<ul>\n<li>How to list all available audio devices with <code>soundStream<span class=\"token punctuation\">.</span><span class=\"token function\">printDeviceList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code> and set a specific audio input device for OF app with <code>settings<span class=\"token punctuation\">.</span><span class=\"token function\">setInDevice</span><span class=\"token punctuation\">(</span>devices<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></li>\n<li>How audio functions work independent from draw and update loop by observe <code>bufferCounter</code> and <code>drawCounter</code></li>\n<li>How to roughly calculate volume by using RMS (root mean square) value in <code><span class=\"token keyword\">void</span> audioIn</code></li>\n<li>How to record data overtime with vector with <code>vector <span class=\"token operator\">&amp;</span>lt<span class=\"token punctuation\">;</span><span class=\"token keyword\">float</span><span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span> volHistory</code></li>\n</ul>\n<h3>Expected Behavior</h3>\n<p>When launching this app, you should see</p>\n<ul>\n<li>Fast moving curve lines on the left, and big circle on the right that reacts to live audio input</li>\n<li>Graph of recorded volume data overtime under the big circle</li>\n<li>Text that shows difference in draw vs buffer counter</li>\n</ul>\n<p>Instructions for use:</p>\n<ul>\n<li>make some noise or touch your microphone to see how sound manipulate the drawing.</li>\n<li>press <code>e</code> to stop live audio input, <code>s</code> to continue</li>\n</ul>\n<h3>Classes used in this example</h3>\n<p>This example uses the following classes:</p>\n<ul>\n<li><code>ofSoundStream</code></li>\n<li><code>ofSoundStreamSettings</code></li>\n</ul>\n","type":"folder"}}],"fetch":[]}