{"data":[{"page":{"entry":{"name":"ofApp.cpp","filename":"ofApp.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/examples/sound/soundBufferExample/src/ofApp.cpp","path":"/examples/sound/soundBufferExample/src/ofApp_cpp","route":"/examples/sound/soundBufferExample/src/ofApp.cpp","dir":"../examples/sound/soundBufferExample/src","ext":"cpp","type":"source","id":1575,"parent":1573,"breadcrumbs":[1573,1571,1559,436],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofApp.h\"</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofSetVerticalSync</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\twavePhase <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tpulsePhase <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// start the sound stream with a sample rate of 44100 Hz, and a buffer</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// size of 512 samples per audioOut() call</span>\n\tofSoundStreamSettings settings<span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span>numOutputChannels <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span>sampleRate <span class=\"token operator\">=</span> <span class=\"token number\">44100</span><span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span>bufferSize <span class=\"token operator\">=</span> <span class=\"token number\">512</span><span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span>numBuffers <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span><span class=\"token function\">setOutListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsoundStream<span class=\"token punctuation\">.</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// \"lastBuffer\" is shared between update() and audioOut(), which are called</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// on two different threads. This lock makes sure we don't use lastBuffer</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// from both threads simultaneously (see the corresponding lock in audioOut())</span>\n\tunique_lock<span class=\"token operator\">&lt;</span>mutex<span class=\"token operator\">></span> <span class=\"token function\">lock</span><span class=\"token punctuation\">(</span>audioMutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// this loop is building up a polyline representing the audio contained in</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// the left channel of the buffer</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// the x coordinates are evenly spaced on a grid from 0 to the window's width</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// the y coordinates map each audio sample's range (-1 to 1) to the height</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// of the window</span>\n\t\n\twaveform<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> lastBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">getNumFrames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">float</span> sample <span class=\"token operator\">=</span> lastBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">getSample</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span> x <span class=\"token operator\">=</span> <span class=\"token function\">ofMap</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> lastBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">getNumFrames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span> y <span class=\"token operator\">=</span> <span class=\"token function\">ofMap</span><span class=\"token punctuation\">(</span>sample<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\twaveform<span class=\"token punctuation\">.</span><span class=\"token function\">addVertex</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\trms <span class=\"token operator\">=</span> lastBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">getRMSAmplitude</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofBackground</span><span class=\"token punctuation\">(</span>ofColor<span class=\"token operator\">::</span>black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span>ofColor<span class=\"token operator\">::</span>white<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofSetLineWidth</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>rms <span class=\"token operator\">*</span> <span class=\"token number\">30</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\twaveform<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">audioOut</span><span class=\"token punctuation\">(</span>ofSoundBuffer <span class=\"token operator\">&amp;</span>outBuffer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// base frequency of the lowest sine wave in cycles per second (hertz)</span>\n\t<span class=\"token keyword\">float</span> frequency <span class=\"token operator\">=</span> <span class=\"token number\">172.5</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// mapping frequencies from Hz into full oscillations of sin() (two pi)</span>\n\t<span class=\"token keyword\">float</span> wavePhaseStep <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>frequency <span class=\"token operator\">/</span> outBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">getSampleRate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> TWO_PI<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> pulsePhaseStep <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span> <span class=\"token operator\">/</span> outBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">getSampleRate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> TWO_PI<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// this loop builds a buffer of audio containing 3 sine waves at different</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// frequencies, and pulses the volume of each sine wave individually. In</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// other words, 3 oscillators and 3 LFOs.</span>\n\t\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> outBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">getNumFrames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">// build up a chord out of sine waves at 3 different frequencies</span>\n\t\t<span class=\"token keyword\">float</span> sampleLow <span class=\"token operator\">=</span> <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>wavePhase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span> sampleMid <span class=\"token operator\">=</span> <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>wavePhase <span class=\"token operator\">*</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span> sampleHi <span class=\"token operator\">=</span> <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>wavePhase <span class=\"token operator\">*</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">// pulse each sample's volume</span>\n\t\tsampleLow <span class=\"token operator\">*</span><span class=\"token operator\">=</span> <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>pulsePhase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tsampleMid <span class=\"token operator\">*</span><span class=\"token operator\">=</span> <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>pulsePhase <span class=\"token operator\">*</span> <span class=\"token number\">1.04</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tsampleHi <span class=\"token operator\">*</span><span class=\"token operator\">=</span> <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>pulsePhase <span class=\"token operator\">*</span> <span class=\"token number\">1.09</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token keyword\">float</span> fullSample <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>sampleLow <span class=\"token operator\">+</span> sampleMid <span class=\"token operator\">+</span> sampleHi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">// reduce the full sample's volume so it doesn't exceed 1</span>\n\t\tfullSample <span class=\"token operator\">*</span><span class=\"token operator\">=</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">// write the computed sample to the left and right channels</span>\n\t\toutBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">getSample</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> fullSample<span class=\"token punctuation\">;</span>\n\t\toutBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">getSample</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> fullSample<span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">// get the two phase variables ready for the next sample</span>\n\t\twavePhase <span class=\"token operator\">+</span><span class=\"token operator\">=</span> wavePhaseStep<span class=\"token punctuation\">;</span>\n\t\tpulsePhase <span class=\"token operator\">+</span><span class=\"token operator\">=</span> pulsePhaseStep<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\tunique_lock<span class=\"token operator\">&lt;</span>mutex<span class=\"token operator\">></span> <span class=\"token function\">lock</span><span class=\"token punctuation\">(</span>audioMutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tlastBuffer <span class=\"token operator\">=</span> outBuffer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">keyPressed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">keyReleased</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseMoved</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseDragged</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mousePressed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseReleased</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseEntered</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseExited</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">windowResized</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">gotMessage</span><span class=\"token punctuation\">(</span>ofMessage msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">dragEvent</span><span class=\"token punctuation\">(</span>ofDragInfo dragInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> \n\n<span class=\"token punctuation\">}</span>\n","type":"source"}}],"fetch":[]}