{"data":[{"page":{"entry":{"name":"ofImage_functions","filename":"ofImage_functions.markdown","absolute":"/Users/Gilbert/Code/openFrameworks/ofSite/documentation/graphics/ofImage_functions.markdown","path":"/documentation/graphics/ofImage_functions","route":"/documentation/graphics/ofImage_functions.markdown","dir":"../ofSite/documentation/graphics","ext":"markdown","type":"page","id":2089,"parent":2075,"breadcrumbs":[2075,1718],"siblings":[],"translations":{}},"description":{},"methods":[null,{"syntax":"ofCloseFreeImage()","name":"ofCloseFreeImage","returns":"void","returns_description":null,"parameters":null,"version_started":null,"version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"False","advanced":"False","short":"<p>Deallocates FreeImage resources.</p>\n<p>Used internally during shutdown.</p>\n","desc":""},{"syntax":"ofImageFormatExtension(format)","name":"ofImageFormatExtension","returns":"string","returns_description":null,"parameters":"ofImageFormat format","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"ofLoadImage(&pix, &buffer, &settings)","name":"ofLoadImage","returns":"bool","returns_description":null,"parameters":"ofShortPixels <span class=\"token operator\">&amp;</span>pix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofBuffer <span class=\"token operator\">&amp;</span>buffer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofImageLoadSettings <span class=\"token operator\">&amp;</span>settings","version_started":null,"version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"ofLoadImage(&pix, &buffer, &settings)","name":"ofLoadImage","returns":"bool","returns_description":null,"parameters":"ofFloatPixels <span class=\"token operator\">&amp;</span>pix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofBuffer <span class=\"token operator\">&amp;</span>buffer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofImageLoadSettings <span class=\"token operator\">&amp;</span>settings","version_started":null,"version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"ofLoadImage(&pix, &buffer, &settings)","name":"ofLoadImage","returns":"bool","returns_description":null,"parameters":"ofPixels <span class=\"token operator\">&amp;</span>pix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofBuffer <span class=\"token operator\">&amp;</span>buffer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofImageLoadSettings <span class=\"token operator\">&amp;</span>settings","version_started":null,"version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"ofLoadImage(&pix, &path, &settings)","name":"ofLoadImage","returns":"bool","returns_description":null,"parameters":"ofShortPixels <span class=\"token operator\">&amp;</span>pix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> filesystem<span class=\"token operator\">::</span>path <span class=\"token operator\">&amp;</span>path<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofImageLoadSettings <span class=\"token operator\">&amp;</span>settings","version_started":null,"version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"ofLoadImage(&pix, &path, &settings)","name":"ofLoadImage","returns":"bool","returns_description":null,"parameters":"ofFloatPixels <span class=\"token operator\">&amp;</span>pix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> filesystem<span class=\"token operator\">::</span>path <span class=\"token operator\">&amp;</span>path<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofImageLoadSettings <span class=\"token operator\">&amp;</span>settings","version_started":null,"version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"ofLoadImage(&pix, &path, &settings)","name":"ofLoadImage","returns":"bool","returns_description":null,"parameters":"ofPixels <span class=\"token operator\">&amp;</span>pix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> filesystem<span class=\"token operator\">::</span>path <span class=\"token operator\">&amp;</span>path<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofImageLoadSettings <span class=\"token operator\">&amp;</span>settings","version_started":null,"version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>\\todo Needs documentation.</p>\n","desc":""},{"syntax":"ofLoadImage(&tex, &buffer, &settings)","name":"ofLoadImage","returns":"bool","returns_description":null,"parameters":"ofTexture <span class=\"token operator\">&amp;</span>tex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofBuffer <span class=\"token operator\">&amp;</span>buffer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofImageLoadSettings <span class=\"token operator\">&amp;</span>settings","version_started":null,"version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"ofLoadImage(&tex, &path, &settings)","name":"ofLoadImage","returns":"bool","returns_description":null,"parameters":"ofTexture <span class=\"token operator\">&amp;</span>tex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> filesystem<span class=\"token operator\">::</span>path <span class=\"token operator\">&amp;</span>path<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofImageLoadSettings <span class=\"token operator\">&amp;</span>settings","version_started":null,"version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>\\todo Needs documentation.</p>\n","desc":""},{"syntax":"ofSaveImage(&pix, &buffer, format = OF_IMAGE_FORMAT_PNG, qualityLevel = OF_IMAGE_QUALITY_BEST)","name":"ofSaveImage","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofShortPixels <span class=\"token operator\">&amp;</span>pix<span class=\"token punctuation\">,</span> ofBuffer <span class=\"token operator\">&amp;</span>buffer<span class=\"token punctuation\">,</span> ofImageFormat format<span class=\"token operator\">=</span>OF_IMAGE_FORMAT_PNG<span class=\"token punctuation\">,</span> ofImageQualityType qualityLevel<span class=\"token operator\">=</span>OF_IMAGE_QUALITY_BEST","version_started":null,"version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"ofSaveImage(&pix, &buffer, format = OF_IMAGE_FORMAT_PNG, qualityLevel = OF_IMAGE_QUALITY_BEST)","name":"ofSaveImage","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofFloatPixels <span class=\"token operator\">&amp;</span>pix<span class=\"token punctuation\">,</span> ofBuffer <span class=\"token operator\">&amp;</span>buffer<span class=\"token punctuation\">,</span> ofImageFormat format<span class=\"token operator\">=</span>OF_IMAGE_FORMAT_PNG<span class=\"token punctuation\">,</span> ofImageQualityType qualityLevel<span class=\"token operator\">=</span>OF_IMAGE_QUALITY_BEST","version_started":null,"version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"ofSaveImage(&pix, &buffer, format = OF_IMAGE_FORMAT_PNG, qualityLevel = OF_IMAGE_QUALITY_BEST)","name":"ofSaveImage","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofPixels <span class=\"token operator\">&amp;</span>pix<span class=\"token punctuation\">,</span> ofBuffer <span class=\"token operator\">&amp;</span>buffer<span class=\"token punctuation\">,</span> ofImageFormat format<span class=\"token operator\">=</span>OF_IMAGE_FORMAT_PNG<span class=\"token punctuation\">,</span> ofImageQualityType qualityLevel<span class=\"token operator\">=</span>OF_IMAGE_QUALITY_BEST","version_started":null,"version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"ofSaveImage(&pix, &path, qualityLevel = OF_IMAGE_QUALITY_BEST)","name":"ofSaveImage","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofShortPixels <span class=\"token operator\">&amp;</span>pix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> filesystem<span class=\"token operator\">::</span>path <span class=\"token operator\">&amp;</span>path<span class=\"token punctuation\">,</span> ofImageQualityType qualityLevel<span class=\"token operator\">=</span>OF_IMAGE_QUALITY_BEST","version_started":null,"version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>\\todo Needs documentation.</p>\n","desc":""},{"syntax":"ofSaveImage(&pix, &path, qualityLevel = OF_IMAGE_QUALITY_BEST)","name":"ofSaveImage","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofFloatPixels <span class=\"token operator\">&amp;</span>pix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> filesystem<span class=\"token operator\">::</span>path <span class=\"token operator\">&amp;</span>path<span class=\"token punctuation\">,</span> ofImageQualityType qualityLevel<span class=\"token operator\">=</span>OF_IMAGE_QUALITY_BEST","version_started":null,"version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>\\todo Needs documentation.</p>\n","desc":""},{"syntax":"ofSaveImage(&pix, &path, qualityLevel = OF_IMAGE_QUALITY_BEST)","name":"ofSaveImage","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofPixels <span class=\"token operator\">&amp;</span>pix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> filesystem<span class=\"token operator\">::</span>path <span class=\"token operator\">&amp;</span>path<span class=\"token punctuation\">,</span> ofImageQualityType qualityLevel<span class=\"token operator\">=</span>OF_IMAGE_QUALITY_BEST","version_started":null,"version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>\\todo Needs documentation.</p>\n","desc":""},{"syntax":"ofToString(&imgType)","name":"ofToString","returns":"string","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofImageType <span class=\"token operator\">&amp;</span>imgType","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"ofToString(&v)","name":"ofToString","returns":"string","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> T <span class=\"token operator\">&amp;</span>v","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>\\section String Conversion\nConvert a value to a string.</p>\n<p>ofToString does its best to convert any value to a string. If the data type\nimplements a stream &lt;&lt; operator, then it will be converted.</p>\n<p>Example:</p>\n<pre><code>\t\tstd<span class=\"token operator\">::</span>string str <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span>framerate is <span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n\t\tstr <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetFrameRate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span> fps<span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// The string now containes something like &amp;quot;framerate is 60 fps&amp;quot;.</span>\n</code></pre>\n<p>\\tparam T The data type of the value to convert to a string.</p>\n<p><strong>Parameters:</strong></p>\n<p>value The value to convert to a string.</p>\n<p><strong>Returns</strong>: A string representing the value or an empty string on failure.</p>\n","desc":""},{}],"document":"<p>#functions</p>\n<p>&lt;!--\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>##Description</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void ofCloseFreeImage()</p>\n<p>&lt;!--\n<em>syntax: ofCloseFreeImage()</em>\n<em>name: ofCloseFreeImage</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n_version_started: _\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Deallocates FreeImage resources.</p>\n<p>Used internally during shutdown.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###string ofImageFormatExtension(format)</p>\n<p>&lt;!--\n<em>syntax: ofImageFormatExtension(format)</em>\n<em>name: ofImageFormatExtension</em>\n<em>returns: string</em>\n_returns_description: _\n<em>parameters: ofImageFormat format</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool ofLoadImage(&amp;pix, &amp;buffer, &amp;settings)</p>\n<p>&lt;!--\n<em>syntax: ofLoadImage(&amp;pix, &amp;buffer, &amp;settings)</em>\n<em>name: ofLoadImage</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: ofShortPixels &amp;pix, const ofBuffer &amp;buffer, const ofImageLoadSettings &amp;settings</em>\n_version_started: _\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool ofLoadImage(&amp;pix, &amp;buffer, &amp;settings)</p>\n<p>&lt;!--\n<em>syntax: ofLoadImage(&amp;pix, &amp;buffer, &amp;settings)</em>\n<em>name: ofLoadImage</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: ofFloatPixels &amp;pix, const ofBuffer &amp;buffer, const ofImageLoadSettings &amp;settings</em>\n_version_started: _\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool ofLoadImage(&amp;pix, &amp;buffer, &amp;settings)</p>\n<p>&lt;!--\n<em>syntax: ofLoadImage(&amp;pix, &amp;buffer, &amp;settings)</em>\n<em>name: ofLoadImage</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: ofPixels &amp;pix, const ofBuffer &amp;buffer, const ofImageLoadSettings &amp;settings</em>\n_version_started: _\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool ofLoadImage(&amp;pix, &amp;path, &amp;settings)</p>\n<p>&lt;!--\n<em>syntax: ofLoadImage(&amp;pix, &amp;path, &amp;settings)</em>\n<em>name: ofLoadImage</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: ofShortPixels &amp;pix, const filesystem::path &amp;path, const ofImageLoadSettings &amp;settings</em>\n_version_started: _\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool ofLoadImage(&amp;pix, &amp;path, &amp;settings)</p>\n<p>&lt;!--\n<em>syntax: ofLoadImage(&amp;pix, &amp;path, &amp;settings)</em>\n<em>name: ofLoadImage</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: ofFloatPixels &amp;pix, const filesystem::path &amp;path, const ofImageLoadSettings &amp;settings</em>\n_version_started: _\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool ofLoadImage(&amp;pix, &amp;path, &amp;settings)</p>\n<p>&lt;!--\n<em>syntax: ofLoadImage(&amp;pix, &amp;path, &amp;settings)</em>\n<em>name: ofLoadImage</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: ofPixels &amp;pix, const filesystem::path &amp;path, const ofImageLoadSettings &amp;settings</em>\n_version_started: _\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>\\todo Needs documentation.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool ofLoadImage(&amp;tex, &amp;buffer, &amp;settings)</p>\n<p>&lt;!--\n<em>syntax: ofLoadImage(&amp;tex, &amp;buffer, &amp;settings)</em>\n<em>name: ofLoadImage</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: ofTexture &amp;tex, const ofBuffer &amp;buffer, const ofImageLoadSettings &amp;settings</em>\n_version_started: _\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool ofLoadImage(&amp;tex, &amp;path, &amp;settings)</p>\n<p>&lt;!--\n<em>syntax: ofLoadImage(&amp;tex, &amp;path, &amp;settings)</em>\n<em>name: ofLoadImage</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: ofTexture &amp;tex, const filesystem::path &amp;path, const ofImageLoadSettings &amp;settings</em>\n_version_started: _\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>\\todo Needs documentation.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool ofSaveImage(&amp;pix, &amp;buffer, format = OF_IMAGE_FORMAT_PNG, qualityLevel = OF_IMAGE_QUALITY_BEST)</p>\n<p>&lt;!--\n<em>syntax: ofSaveImage(&amp;pix, &amp;buffer, format = OF_IMAGE_FORMAT_PNG, qualityLevel = OF_IMAGE_QUALITY_BEST)</em>\n<em>name: ofSaveImage</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: const ofShortPixels &amp;pix, ofBuffer &amp;buffer, ofImageFormat format=OF_IMAGE_FORMAT_PNG, ofImageQualityType qualityLevel=OF_IMAGE_QUALITY_BEST</em>\n_version_started: _\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool ofSaveImage(&amp;pix, &amp;buffer, format = OF_IMAGE_FORMAT_PNG, qualityLevel = OF_IMAGE_QUALITY_BEST)</p>\n<p>&lt;!--\n<em>syntax: ofSaveImage(&amp;pix, &amp;buffer, format = OF_IMAGE_FORMAT_PNG, qualityLevel = OF_IMAGE_QUALITY_BEST)</em>\n<em>name: ofSaveImage</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: const ofFloatPixels &amp;pix, ofBuffer &amp;buffer, ofImageFormat format=OF_IMAGE_FORMAT_PNG, ofImageQualityType qualityLevel=OF_IMAGE_QUALITY_BEST</em>\n_version_started: _\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool ofSaveImage(&amp;pix, &amp;buffer, format = OF_IMAGE_FORMAT_PNG, qualityLevel = OF_IMAGE_QUALITY_BEST)</p>\n<p>&lt;!--\n<em>syntax: ofSaveImage(&amp;pix, &amp;buffer, format = OF_IMAGE_FORMAT_PNG, qualityLevel = OF_IMAGE_QUALITY_BEST)</em>\n<em>name: ofSaveImage</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: const ofPixels &amp;pix, ofBuffer &amp;buffer, ofImageFormat format=OF_IMAGE_FORMAT_PNG, ofImageQualityType qualityLevel=OF_IMAGE_QUALITY_BEST</em>\n_version_started: _\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool ofSaveImage(&amp;pix, &amp;path, qualityLevel = OF_IMAGE_QUALITY_BEST)</p>\n<p>&lt;!--\n<em>syntax: ofSaveImage(&amp;pix, &amp;path, qualityLevel = OF_IMAGE_QUALITY_BEST)</em>\n<em>name: ofSaveImage</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: const ofShortPixels &amp;pix, const filesystem::path &amp;path, ofImageQualityType qualityLevel=OF_IMAGE_QUALITY_BEST</em>\n_version_started: _\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>\\todo Needs documentation.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool ofSaveImage(&amp;pix, &amp;path, qualityLevel = OF_IMAGE_QUALITY_BEST)</p>\n<p>&lt;!--\n<em>syntax: ofSaveImage(&amp;pix, &amp;path, qualityLevel = OF_IMAGE_QUALITY_BEST)</em>\n<em>name: ofSaveImage</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: const ofFloatPixels &amp;pix, const filesystem::path &amp;path, ofImageQualityType qualityLevel=OF_IMAGE_QUALITY_BEST</em>\n_version_started: _\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>\\todo Needs documentation.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool ofSaveImage(&amp;pix, &amp;path, qualityLevel = OF_IMAGE_QUALITY_BEST)</p>\n<p>&lt;!--\n<em>syntax: ofSaveImage(&amp;pix, &amp;path, qualityLevel = OF_IMAGE_QUALITY_BEST)</em>\n<em>name: ofSaveImage</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: const ofPixels &amp;pix, const filesystem::path &amp;path, ofImageQualityType qualityLevel=OF_IMAGE_QUALITY_BEST</em>\n_version_started: _\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>\\todo Needs documentation.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###string ofToString(&amp;imgType)</p>\n<p>&lt;!--\n<em>syntax: ofToString(&amp;imgType)</em>\n<em>name: ofToString</em>\n<em>returns: string</em>\n_returns_description: _\n<em>parameters: const ofImageType &amp;imgType</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###string ofToString(&amp;v)</p>\n<p>&lt;!--\n<em>syntax: ofToString(&amp;v)</em>\n<em>name: ofToString</em>\n<em>returns: string</em>\n_returns_description: _\n<em>parameters: const T &amp;v</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>\\section String Conversion\nConvert a value to a string.</p>\n<p>ofToString does its best to convert any value to a string. If the data type\nimplements a stream &lt;&lt; operator, then it will be converted.</p>\n<p>Example:</p>\n<pre><code>\t\tstd<span class=\"token operator\">::</span>string str <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span>framerate is <span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n\t\tstr <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetFrameRate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span> fps<span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// The string now containes something like &amp;quot;framerate is 60 fps&amp;quot;.</span>\n</code></pre>\n<p>\\tparam T The data type of the value to convert to a string.</p>\n<p><strong>Parameters:</strong></p>\n<p>value The value to convert to a string.</p>\n<p><strong>Returns</strong>: A string representing the value or an empty string on failure.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n","raw":"#functions\n\n\n<!--\n_visible: True_\n_advanced: False_\n-->\n\n##Description\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void ofCloseFreeImage()\n\n<!--\n_syntax: ofCloseFreeImage()_\n_name: ofCloseFreeImage_\n_returns: void_\n_returns_description: _\n_parameters: _\n_version_started: _\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nDeallocates FreeImage resources.\n\nUsed internally during shutdown.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###string ofImageFormatExtension(format)\n\n<!--\n_syntax: ofImageFormatExtension(format)_\n_name: ofImageFormatExtension_\n_returns: string_\n_returns_description: _\n_parameters: ofImageFormat format_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool ofLoadImage(&pix, &buffer, &settings)\n\n<!--\n_syntax: ofLoadImage(&pix, &buffer, &settings)_\n_name: ofLoadImage_\n_returns: bool_\n_returns_description: _\n_parameters: ofShortPixels &pix, const ofBuffer &buffer, const ofImageLoadSettings &settings_\n_version_started: _\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool ofLoadImage(&pix, &buffer, &settings)\n\n<!--\n_syntax: ofLoadImage(&pix, &buffer, &settings)_\n_name: ofLoadImage_\n_returns: bool_\n_returns_description: _\n_parameters: ofFloatPixels &pix, const ofBuffer &buffer, const ofImageLoadSettings &settings_\n_version_started: _\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool ofLoadImage(&pix, &buffer, &settings)\n\n<!--\n_syntax: ofLoadImage(&pix, &buffer, &settings)_\n_name: ofLoadImage_\n_returns: bool_\n_returns_description: _\n_parameters: ofPixels &pix, const ofBuffer &buffer, const ofImageLoadSettings &settings_\n_version_started: _\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool ofLoadImage(&pix, &path, &settings)\n\n<!--\n_syntax: ofLoadImage(&pix, &path, &settings)_\n_name: ofLoadImage_\n_returns: bool_\n_returns_description: _\n_parameters: ofShortPixels &pix, const filesystem::path &path, const ofImageLoadSettings &settings_\n_version_started: _\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool ofLoadImage(&pix, &path, &settings)\n\n<!--\n_syntax: ofLoadImage(&pix, &path, &settings)_\n_name: ofLoadImage_\n_returns: bool_\n_returns_description: _\n_parameters: ofFloatPixels &pix, const filesystem::path &path, const ofImageLoadSettings &settings_\n_version_started: _\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool ofLoadImage(&pix, &path, &settings)\n\n<!--\n_syntax: ofLoadImage(&pix, &path, &settings)_\n_name: ofLoadImage_\n_returns: bool_\n_returns_description: _\n_parameters: ofPixels &pix, const filesystem::path &path, const ofImageLoadSettings &settings_\n_version_started: _\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\\todo Needs documentation.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool ofLoadImage(&tex, &buffer, &settings)\n\n<!--\n_syntax: ofLoadImage(&tex, &buffer, &settings)_\n_name: ofLoadImage_\n_returns: bool_\n_returns_description: _\n_parameters: ofTexture &tex, const ofBuffer &buffer, const ofImageLoadSettings &settings_\n_version_started: _\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool ofLoadImage(&tex, &path, &settings)\n\n<!--\n_syntax: ofLoadImage(&tex, &path, &settings)_\n_name: ofLoadImage_\n_returns: bool_\n_returns_description: _\n_parameters: ofTexture &tex, const filesystem::path &path, const ofImageLoadSettings &settings_\n_version_started: _\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\\todo Needs documentation.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool ofSaveImage(&pix, &buffer, format = OF_IMAGE_FORMAT_PNG, qualityLevel = OF_IMAGE_QUALITY_BEST)\n\n<!--\n_syntax: ofSaveImage(&pix, &buffer, format = OF_IMAGE_FORMAT_PNG, qualityLevel = OF_IMAGE_QUALITY_BEST)_\n_name: ofSaveImage_\n_returns: bool_\n_returns_description: _\n_parameters: const ofShortPixels &pix, ofBuffer &buffer, ofImageFormat format=OF_IMAGE_FORMAT_PNG, ofImageQualityType qualityLevel=OF_IMAGE_QUALITY_BEST_\n_version_started: _\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool ofSaveImage(&pix, &buffer, format = OF_IMAGE_FORMAT_PNG, qualityLevel = OF_IMAGE_QUALITY_BEST)\n\n<!--\n_syntax: ofSaveImage(&pix, &buffer, format = OF_IMAGE_FORMAT_PNG, qualityLevel = OF_IMAGE_QUALITY_BEST)_\n_name: ofSaveImage_\n_returns: bool_\n_returns_description: _\n_parameters: const ofFloatPixels &pix, ofBuffer &buffer, ofImageFormat format=OF_IMAGE_FORMAT_PNG, ofImageQualityType qualityLevel=OF_IMAGE_QUALITY_BEST_\n_version_started: _\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool ofSaveImage(&pix, &buffer, format = OF_IMAGE_FORMAT_PNG, qualityLevel = OF_IMAGE_QUALITY_BEST)\n\n<!--\n_syntax: ofSaveImage(&pix, &buffer, format = OF_IMAGE_FORMAT_PNG, qualityLevel = OF_IMAGE_QUALITY_BEST)_\n_name: ofSaveImage_\n_returns: bool_\n_returns_description: _\n_parameters: const ofPixels &pix, ofBuffer &buffer, ofImageFormat format=OF_IMAGE_FORMAT_PNG, ofImageQualityType qualityLevel=OF_IMAGE_QUALITY_BEST_\n_version_started: _\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool ofSaveImage(&pix, &path, qualityLevel = OF_IMAGE_QUALITY_BEST)\n\n<!--\n_syntax: ofSaveImage(&pix, &path, qualityLevel = OF_IMAGE_QUALITY_BEST)_\n_name: ofSaveImage_\n_returns: bool_\n_returns_description: _\n_parameters: const ofShortPixels &pix, const filesystem::path &path, ofImageQualityType qualityLevel=OF_IMAGE_QUALITY_BEST_\n_version_started: _\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\\todo Needs documentation.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool ofSaveImage(&pix, &path, qualityLevel = OF_IMAGE_QUALITY_BEST)\n\n<!--\n_syntax: ofSaveImage(&pix, &path, qualityLevel = OF_IMAGE_QUALITY_BEST)_\n_name: ofSaveImage_\n_returns: bool_\n_returns_description: _\n_parameters: const ofFloatPixels &pix, const filesystem::path &path, ofImageQualityType qualityLevel=OF_IMAGE_QUALITY_BEST_\n_version_started: _\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\\todo Needs documentation.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool ofSaveImage(&pix, &path, qualityLevel = OF_IMAGE_QUALITY_BEST)\n\n<!--\n_syntax: ofSaveImage(&pix, &path, qualityLevel = OF_IMAGE_QUALITY_BEST)_\n_name: ofSaveImage_\n_returns: bool_\n_returns_description: _\n_parameters: const ofPixels &pix, const filesystem::path &path, ofImageQualityType qualityLevel=OF_IMAGE_QUALITY_BEST_\n_version_started: _\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\\todo Needs documentation.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###string ofToString(&imgType)\n\n<!--\n_syntax: ofToString(&imgType)_\n_name: ofToString_\n_returns: string_\n_returns_description: _\n_parameters: const ofImageType &imgType_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###string ofToString(&v)\n\n<!--\n_syntax: ofToString(&v)_\n_name: ofToString_\n_returns: string_\n_returns_description: _\n_parameters: const T &v_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\\section String Conversion\nConvert a value to a string.\n\nofToString does its best to convert any value to a string. If the data type\nimplements a stream << operator, then it will be converted.\n\nExample:\n~~~~{.cpp}\n\t\tstd::string str = \"framerate is \";\n\t\tstr += ofToString(ofGetFrameRate()) + \" fps\";\n\t\t// The string now containes something like \"framerate is 60 fps\".\n~~~~\n\n\\tparam T The data type of the value to convert to a string.\n\n**Parameters:**\n\nvalue The value to convert to a string.\n\n**Returns**: A string representing the value or an empty string on failure.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page"}}],"fetch":[]}