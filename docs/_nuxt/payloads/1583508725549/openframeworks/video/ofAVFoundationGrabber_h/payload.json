{"data":[{"page":{"entry":{"name":"ofAVFoundationGrabber.h","filename":"ofAVFoundationGrabber.h","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/video/ofAVFoundationGrabber.h","path":"/openframeworks/video/ofAVFoundationGrabber_h","route":"/openframeworks/video/ofAVFoundationGrabber.h","dir":"../libs/openFrameworks/video","ext":"h","type":"source","id":355,"parent":354,"breadcrumbs":[354,195],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">/*\n *  AVFoundationVideoGrabber.h\n */</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_CAPTURE_AVF</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofVideoBaseTypes.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofPixels.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofTexture.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofThread.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;mutex></span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> __OBJC__</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">import</span> &lt;Foundation/Foundation.h></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">import</span> &lt;AVFoundation/AVFoundation.h></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">import</span> &lt;Accelerate/Accelerate.h></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">import</span> &lt;CoreMedia/CoreMedia.h></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">import</span> &lt;CoreVideo/CoreVideo.h></span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofAVFoundationGrabber</span><span class=\"token punctuation\">;</span>\n\n@interface OSXVideoGrabber <span class=\"token operator\">:</span> NSObject <span class=\"token operator\">&lt;</span>AVCaptureVideoDataOutputSampleBufferDelegate<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n\n\t@<span class=\"token keyword\">public</span>\n\tCGImageRef currentFrame<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span> width<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> height<span class=\"token punctuation\">;</span>\n\n\tBOOL bInitCalled<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> deviceID<span class=\"token punctuation\">;</span>\n\n\tAVCaptureDeviceInput\t\t<span class=\"token operator\">*</span>captureInput<span class=\"token punctuation\">;</span>\n\tAVCaptureVideoDataOutput    <span class=\"token operator\">*</span>captureOutput<span class=\"token punctuation\">;</span>\n\tAVCaptureDevice\t\t\t\t<span class=\"token operator\">*</span>device<span class=\"token punctuation\">;</span>\n\tAVCaptureSession\t\t\t<span class=\"token operator\">*</span>captureSession<span class=\"token punctuation\">;</span>\n\n\tofAVFoundationGrabber <span class=\"token operator\">*</span> grabberPtr<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>BOOL<span class=\"token punctuation\">)</span>initCapture<span class=\"token operator\">:</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>framerate capWidth<span class=\"token operator\">:</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>w capHeight<span class=\"token operator\">:</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>h<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>startCapture<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>stopCapture<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>lockExposureAndFocus<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>vector <span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>listDevices<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>setDevice<span class=\"token operator\">:</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>_device<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>eraseGrabberPtr<span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>CGImageRef<span class=\"token punctuation\">)</span>getCurrentFrame<span class=\"token punctuation\">;</span>\n\n@end\n\n<span class=\"token comment\" spellcheck=\"true\">//------</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofAVFoundationGrabber</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">public</span> ofBaseVideoGrabber<span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token function\">ofAVFoundationGrabber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token operator\">~</span><span class=\"token function\">ofAVFoundationGrabber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">setDeviceID</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> deviceID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">setDesiredFrameRate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> capRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span> <span class=\"token function\">setPixelFormat</span><span class=\"token punctuation\">(</span>ofPixelFormat PixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">bool</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span> <span class=\"token function\">isFrameNew</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tofPixels<span class=\"token operator\">&amp;</span>\t\t \t\t<span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> ofPixels<span class=\"token operator\">&amp;</span>\t\t    <span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">float</span> <span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> width<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">float</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> height<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">bool</span> <span class=\"token function\">isInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">updatePixelsCB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token operator\">::</span>vector <span class=\"token operator\">&lt;</span>ofVideoDevice<span class=\"token operator\">></span> <span class=\"token function\">listDevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\tofPixelFormat <span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">bool</span> newFrame <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span> bHavePixelsChanged <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">int</span> device <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">bool</span> bIsInit <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">int</span> fps  <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\tofTexture tex<span class=\"token punctuation\">;</span>\n\t\tofPixels pixels<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> __OBJC__</span>\n\t\t\tOSXVideoGrabber <span class=\"token operator\">*</span> grabber<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t\t<span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> grabber<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t\tofPixelFormat pixelFormat<span class=\"token punctuation\">;</span>\n\t\tofPixels pixelsTmp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span> bLock <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token operator\">::</span>mutex capMutex<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n","type":"source"}}],"fetch":[]}