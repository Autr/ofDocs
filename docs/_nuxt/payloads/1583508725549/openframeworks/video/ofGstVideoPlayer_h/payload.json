{"data":[{"page":{"entry":{"name":"ofGstVideoPlayer.h","filename":"ofGstVideoPlayer.h","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/video/ofGstVideoPlayer.h","path":"/openframeworks/video/ofGstVideoPlayer_h","route":"/openframeworks/video/ofGstVideoPlayer.h","dir":"../libs/openFrameworks/video","ext":"h","type":"source","id":367,"parent":354,"breadcrumbs":[354,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGstUtils.h\"</span></span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofGstVideoPlayer</span><span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofBaseVideoPlayer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">public</span> ofGstAppSink<span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\n\t<span class=\"token function\">ofGstVideoPlayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">~</span><span class=\"token function\">ofGstVideoPlayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// needs to be called before loadMovie</span>\n\t<span class=\"token keyword\">bool</span> \t<span class=\"token function\">setPixelFormat</span><span class=\"token punctuation\">(</span>ofPixelFormat pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofPixelFormat\t<span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">void</span>\t<span class=\"token function\">loadAsync</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> \t<span class=\"token function\">load</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string uri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> \t<span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span>\t\t<span class=\"token function\">getCurrentFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span>\t\t<span class=\"token function\">getTotalNumFrames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> \t<span class=\"token function\">firstFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> \t<span class=\"token function\">nextFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> \t<span class=\"token function\">previousFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> \t<span class=\"token function\">setFrame</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> frame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">// frame 0 = first frame...</span>\n\n\t<span class=\"token keyword\">bool</span>\t<span class=\"token function\">isStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> \t<span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> \t<span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> \t<span class=\"token function\">setPaused</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bPause<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> \t<span class=\"token function\">isPaused</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> \t<span class=\"token function\">isLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> \t<span class=\"token function\">isPlaying</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">float</span>\t<span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> \t<span class=\"token function\">getSpeed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> \t<span class=\"token function\">getDuration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span>  \t<span class=\"token function\">getIsMovieDone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> \t<span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> pct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> \t<span class=\"token function\">setVolume</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> volume<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> \t<span class=\"token function\">setLoopState</span><span class=\"token punctuation\">(</span>ofLoopType state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofLoopType \t<span class=\"token function\">getLoopState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> \t<span class=\"token function\">setSpeed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> \t<span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">bool</span> \t\t\t<span class=\"token function\">isFrameNew</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\tofPixels<span class=\"token operator\">&amp;</span>\t\t<span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> ofPixels<span class=\"token operator\">&amp;</span> <span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\tofTexture <span class=\"token operator\">*</span> <span class=\"token function\">getTexturePtr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">float</span> \t\t\t<span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> \t\t\t<span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setFrameByFrame</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> frameByFrame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setThreadAppSink</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> threaded<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">isThreadedAppSink</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">isFrameByFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\tofGstVideoUtils <span class=\"token operator\">*</span> <span class=\"token function\">getGstVideoUtils</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">createPipeline</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string uri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">on_stream_prepared</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// return true to set the message as attended so upstream doesn't try to process it</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">on_message</span><span class=\"token punctuation\">(</span>GstMessage<span class=\"token operator\">*</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\tofPixelFormat\t\tinternalPixelFormat<span class=\"token punctuation\">;</span>\n\tguint64\t\t\t\tnFrames<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> \t\t\t\tfps_n<span class=\"token punctuation\">,</span> fps_d<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span>\t\t\t\tbIsStream<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span>\t\t\t\tbIsAllocated<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span>\t\t\t\tbAsyncLoad<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span>\t\t\t\tthreadAppSink<span class=\"token punctuation\">;</span>\n\tofGstVideoUtils\t\tvideoUtils<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n","type":"source"}}],"fetch":[]}