{"data":[{"page":{"entry":{"name":"ofTexture.cpp","filename":"ofTexture.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/gl/ofTexture.cpp","path":"/openframeworks/gl/ofTexture_cpp","route":"/openframeworks/gl/ofTexture.cpp","dir":"../libs/openFrameworks/gl","ext":"cpp","type":"source","id":253,"parent":235,"breadcrumbs":[235,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofTexture.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGraphics.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofPixels.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGLUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGLBaseTypes.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofBufferObject.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofMesh.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;map></span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofAppAndroidWindow.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">// static</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> bTexHackEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span>\tbUsingArbTex\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> bUsingNormalizedTexCoords <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> bUseCustomMinMagFilters <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofEnableTextureEdgeHack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbTexHackEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDisableTextureEdgeHack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbTexHackEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofIsTextureEdgeHackEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> bTexHackEnabled<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofGetUsingNormalizedTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> bUsingNormalizedTexCoords<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofEnableNormalizedTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbUsingNormalizedTexCoords <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDisableNormalizedTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbUsingNormalizedTexCoords <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">//***** add global functions to override texture settings</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> bUseCustomTextureWrap <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetTextureWrap</span><span class=\"token punctuation\">(</span>GLfloat wrapS<span class=\"token punctuation\">,</span> GLfloat wrapT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbUseCustomTextureWrap <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\tGLenum textureTarget <span class=\"token operator\">=</span> GL_TEXTURE_2D<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ofGetUsingArbTex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> GL_ARB_texture_rectangle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\ttextureTarget <span class=\"token operator\">=</span> GL_TEXTURE_RECTANGLE_ARB<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token function\">glTexParameterf</span><span class=\"token punctuation\">(</span>textureTarget<span class=\"token punctuation\">,</span> GL_TEXTURE_WRAP_S<span class=\"token punctuation\">,</span> wrapS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glTexParameterf</span><span class=\"token punctuation\">(</span>textureTarget<span class=\"token punctuation\">,</span> GL_TEXTURE_WRAP_T<span class=\"token punctuation\">,</span> wrapT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofGetUsingCustomTextureWrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> bUseCustomTextureWrap<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofRestoreTextureWrap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbUseCustomTextureWrap <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetMinMagFilters</span><span class=\"token punctuation\">(</span>GLfloat minFilter<span class=\"token punctuation\">,</span> GLfloat magFilter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbUseCustomMinMagFilters <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\tGLenum textureTarget <span class=\"token operator\">=</span> GL_TEXTURE_2D<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ofGetUsingArbTex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> GL_ARB_texture_rectangle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\ttextureTarget <span class=\"token operator\">=</span> GL_TEXTURE_RECTANGLE_ARB<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token function\">glTexParameterf</span><span class=\"token punctuation\">(</span>textureTarget<span class=\"token punctuation\">,</span> GL_TEXTURE_MIN_FILTER<span class=\"token punctuation\">,</span> minFilter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glTexParameterf</span><span class=\"token punctuation\">(</span>textureTarget<span class=\"token punctuation\">,</span> GL_TEXTURE_MAG_FILTER<span class=\"token punctuation\">,</span> magFilter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofGetUsingCustomMinMagFilters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> bUseCustomMinMagFilters<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofRestoreMinMagFilters</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbUseCustomMinMagFilters <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//***** global functions to override texture settings</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofGetUsingArbTex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> bUsingArbTex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofEnableArbTex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbUsingArbTex <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDisableArbTex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbUsingArbTex <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">static</span> map<span class=\"token operator\">&lt;</span>GLuint<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token function\">getTexturesIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">static</span> map<span class=\"token operator\">&lt;</span>GLuint<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token operator\">*</span> textureReferences <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> map<span class=\"token operator\">&lt;</span>GLuint<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">*</span>textureReferences<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">retain</span><span class=\"token punctuation\">(</span>GLuint id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">getTexturesIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token function\">getTexturesIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">getTexturesIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">getTexturesIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">release</span><span class=\"token punctuation\">(</span>GLuint id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// try to free up the texture memory so we don't reallocate</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// http://www.opengl.org/documentation/specs/man_pages/hardcopy/GL/html/gl/deletetextures.html</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">getTexturesIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token function\">getTexturesIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">getTexturesIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">getTexturesIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>ofAppAndroidWindow<span class=\"token operator\">::</span><span class=\"token function\">isSurfaceDestroyed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t\t\t<span class=\"token function\">glDeleteTextures</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>GLuint <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\t<span class=\"token function\">getTexturesIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofTexture\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"release(): something's wrong here, releasing unknown texture id \"</span> <span class=\"token operator\">&lt;&lt;</span> id<span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>ofAppAndroidWindow<span class=\"token operator\">::</span><span class=\"token function\">isSurfaceDestroyed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t\t<span class=\"token function\">glDeleteTextures</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>GLuint <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n<span class=\"token keyword\">static</span> set<span class=\"token operator\">&lt;</span>ofTexture<span class=\"token operator\">*</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token function\">allTextures</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">static</span> set<span class=\"token operator\">&lt;</span>ofTexture<span class=\"token operator\">*</span><span class=\"token operator\">></span> <span class=\"token operator\">*</span> allTextures <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> set<span class=\"token operator\">&lt;</span>ofTexture<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">*</span>allTextures<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">registerTexture</span><span class=\"token punctuation\">(</span>ofTexture <span class=\"token operator\">*</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">allTextures</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">unregisterTexture</span><span class=\"token punctuation\">(</span>ofTexture <span class=\"token operator\">*</span> texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">allTextures</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofRegenerateAllTextures</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> tex<span class=\"token operator\">:</span> <span class=\"token function\">allTextures</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\ttex<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofTexture<span class=\"token operator\">::</span><span class=\"token function\">ofTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">resetAnchor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbWantsMipmap <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofTexture<span class=\"token operator\">::</span><span class=\"token function\">ofTexture</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofTexture <span class=\"token operator\">&amp;</span> mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tanchor <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>anchor<span class=\"token punctuation\">;</span>\n\tbAnchorIsPct <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>bAnchorIsPct<span class=\"token punctuation\">;</span>\n\ttexData <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">;</span>\n\tbWantsMipmap <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>bWantsMipmap<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">retain</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n\t<span class=\"token function\">registerTexture</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\nofTexture<span class=\"token operator\">::</span><span class=\"token function\">ofTexture</span><span class=\"token punctuation\">(</span>ofTexture <span class=\"token operator\">&amp;&amp;</span> mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    anchor <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>anchor<span class=\"token punctuation\">;</span>\n    bAnchorIsPct <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>bAnchorIsPct<span class=\"token punctuation\">;</span>\n    texData <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">;</span>\n    bWantsMipmap <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>bWantsMipmap<span class=\"token punctuation\">;</span>\n    mom<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>bAllocated <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    mom<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>textureID <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n    <span class=\"token function\">registerTexture</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofTexture<span class=\"token operator\">&amp;</span> ofTexture<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofTexture <span class=\"token operator\">&amp;</span> mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>texData<span class=\"token punctuation\">.</span>bUseExternalTextureID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">release</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tanchor <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>anchor<span class=\"token punctuation\">;</span>\n\tbAnchorIsPct <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>bAnchorIsPct<span class=\"token punctuation\">;</span>\n\ttexData <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">;</span>\n\tbWantsMipmap <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>bWantsMipmap<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">retain</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n\t<span class=\"token function\">unregisterTexture</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofTexture<span class=\"token operator\">&amp;</span> ofTexture<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ofTexture <span class=\"token operator\">&amp;&amp;</span> mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>texData<span class=\"token punctuation\">.</span>bUseExternalTextureID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">release</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    anchor <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>anchor<span class=\"token punctuation\">;</span>\n    bAnchorIsPct <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>bAnchorIsPct<span class=\"token punctuation\">;</span>\n    texData <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">;</span>\n    bWantsMipmap <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>bWantsMipmap<span class=\"token punctuation\">;</span>\n    mom<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>bAllocated <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    mom<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>textureID <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n    <span class=\"token function\">unregisterTexture</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">bAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> texData<span class=\"token punctuation\">.</span>bAllocated<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> texData<span class=\"token punctuation\">.</span>bAllocated<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofTextureData<span class=\"token operator\">&amp;</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">getTextureData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>texData<span class=\"token punctuation\">.</span>bAllocated<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofTexture\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getTextureData(): texture has not been allocated\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">return</span> texData<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> ofTextureData<span class=\"token operator\">&amp;</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">getTextureData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>texData<span class=\"token punctuation\">.</span>bAllocated<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofTexture\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getTextureData(): texture has not been allocated\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">return</span> texData<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofTexture<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>texData<span class=\"token punctuation\">.</span>bUseExternalTextureID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">release</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n\t<span class=\"token function\">unregisterTexture</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>texData<span class=\"token punctuation\">.</span>bUseExternalTextureID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">release</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\ttexData<span class=\"token punctuation\">.</span>bUseExternalTextureID <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\ttexData<span class=\"token punctuation\">.</span>textureID  <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\ttexData<span class=\"token punctuation\">.</span>bAllocated <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">setUseExternalTextureID</span><span class=\"token punctuation\">(</span>GLuint externTexID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ttexData<span class=\"token punctuation\">.</span>textureID <span class=\"token operator\">=</span> externTexID<span class=\"token punctuation\">;</span>\n\ttexData<span class=\"token punctuation\">.</span>bAllocated <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\ttexData<span class=\"token punctuation\">.</span>bUseExternalTextureID <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> glInternalFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> glInternalFormat<span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetUsingArbTex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLFormatFromInternal</span><span class=\"token punctuation\">(</span>glInternalFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLTypeFromInternal</span><span class=\"token punctuation\">(</span>glInternalFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> glInternalFormat<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bUseARBExtension<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> glInternalFormat<span class=\"token punctuation\">,</span> bUseARBExtension<span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLFormatFromInternal</span><span class=\"token punctuation\">(</span>glInternalFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLTypeFromInternal</span><span class=\"token punctuation\">(</span>glInternalFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> glInternalFormat<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> glFormat<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> pixelType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> glInternalFormat<span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetUsingArbTex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> glFormat<span class=\"token punctuation\">,</span> pixelType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPixels<span class=\"token operator\">&amp;</span> pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLInternalFormat</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetUsingArbTex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLFormat</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLType</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>OF_PIXELS_GRAY <span class=\"token operator\">||</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>OF_PIXELS_GRAY_ALPHA<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setRGToRGBASwizzles</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>bAllocated<span class=\"token punctuation\">)</span> <span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPixels<span class=\"token operator\">&amp;</span> pix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bUseARBExtention<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLInternalFormat</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> bUseARBExtention<span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLFormat</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLType</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>OF_PIXELS_GRAY <span class=\"token operator\">||</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>OF_PIXELS_GRAY_ALPHA<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setRGToRGBASwizzles</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>bAllocated<span class=\"token punctuation\">)</span> <span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofShortPixels<span class=\"token operator\">&amp;</span> pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLInternalFormat</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetUsingArbTex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLFormat</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLType</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>OF_PIXELS_GRAY <span class=\"token operator\">||</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>OF_PIXELS_GRAY_ALPHA<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setRGToRGBASwizzles</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>bAllocated<span class=\"token punctuation\">)</span> <span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofShortPixels<span class=\"token operator\">&amp;</span> pix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bUseARBExtention<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLInternalFormat</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> bUseARBExtention<span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLFormat</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLType</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>OF_PIXELS_GRAY <span class=\"token operator\">||</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>OF_PIXELS_GRAY_ALPHA<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setRGToRGBASwizzles</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>bAllocated<span class=\"token punctuation\">)</span> <span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFloatPixels<span class=\"token operator\">&amp;</span> pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLInternalFormat</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetUsingArbTex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLFormat</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLType</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>OF_PIXELS_GRAY <span class=\"token operator\">||</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>OF_PIXELS_GRAY_ALPHA<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setRGToRGBASwizzles</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>bAllocated<span class=\"token punctuation\">)</span> <span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFloatPixels<span class=\"token operator\">&amp;</span> pix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bUseARBExtention<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLInternalFormat</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> bUseARBExtention<span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLFormat</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLType</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>OF_PIXELS_GRAY <span class=\"token operator\">||</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>OF_PIXELS_GRAY_ALPHA<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setRGToRGBASwizzles</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>bAllocated<span class=\"token punctuation\">)</span> <span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">allocateAsBufferTexture</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofBufferObject <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> glInternalFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\ttexData<span class=\"token punctuation\">.</span>glInternalFormat <span class=\"token operator\">=</span> glInternalFormat<span class=\"token punctuation\">;</span>\n\ttexData<span class=\"token punctuation\">.</span>textureTarget <span class=\"token operator\">=</span> GL_TEXTURE_BUFFER<span class=\"token punctuation\">;</span>\n\ttexData<span class=\"token punctuation\">.</span>bufferId <span class=\"token operator\">=</span> buffer<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>GL_TEXTURE_BUFFER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> glInternalFormat<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bUseARBExtension<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> glFormat<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> pixelType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\ttexData<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> w<span class=\"token punctuation\">;</span>\n\ttexData<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> h<span class=\"token punctuation\">;</span>\n\ttexData<span class=\"token punctuation\">.</span>bFlipTexture <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\ttexData<span class=\"token punctuation\">.</span>glInternalFormat <span class=\"token operator\">=</span> glInternalFormat<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//our graphics card might not support arb so we have to see if it is supported.</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bUseARBExtension <span class=\"token operator\">&amp;&amp;</span> GL_ARB_texture_rectangle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\ttexData<span class=\"token punctuation\">.</span>textureTarget <span class=\"token operator\">=</span> GL_TEXTURE_RECTANGLE_ARB<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> \n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token punctuation\">{</span>\n\t\ttexData<span class=\"token punctuation\">.</span>textureTarget <span class=\"token operator\">=</span> GL_TEXTURE_2D<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">,</span>glFormat<span class=\"token punctuation\">,</span>pixelType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofTextureData <span class=\"token operator\">&amp;</span> textureData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>textureData<span class=\"token punctuation\">,</span><span class=\"token function\">ofGetGLFormatFromInternal</span><span class=\"token punctuation\">(</span>textureData<span class=\"token punctuation\">.</span>glInternalFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">ofGetGLTypeFromInternal</span><span class=\"token punctuation\">(</span>textureData<span class=\"token punctuation\">.</span>glInternalFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofTextureData <span class=\"token operator\">&amp;</span> textureData<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> glFormat<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> pixelType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget <span class=\"token operator\">==</span> GL_TEXTURE_2D <span class=\"token operator\">||</span> texData<span class=\"token punctuation\">.</span>textureTarget <span class=\"token operator\">==</span> GL_TEXTURE_RECTANGLE_ARB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget <span class=\"token operator\">==</span> GL_TEXTURE_2D<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> textureData<span class=\"token punctuation\">.</span>width <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0.0</span> <span class=\"token operator\">||</span> textureData<span class=\"token punctuation\">.</span>height <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0.0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofTexture\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"allocate(): ofTextureData has 0 width and/or height: \"</span> <span class=\"token operator\">&lt;&lt;</span> textureData<span class=\"token punctuation\">.</span>width <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"x\"</span> <span class=\"token operator\">&lt;&lt;</span> textureData<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\ttexData <span class=\"token operator\">=</span> textureData<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//our graphics card might not support arb so we have to see if it is supported.</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token operator\">==</span>GL_TEXTURE_RECTANGLE_ARB <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">ofGLSupportsNPOTTextures</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\ttexData<span class=\"token punctuation\">.</span>tex_w <span class=\"token operator\">=</span> texData<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t\ttexData<span class=\"token punctuation\">.</span>tex_h <span class=\"token operator\">=</span> texData<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\t\ttexData<span class=\"token punctuation\">.</span>tex_t <span class=\"token operator\">=</span> texData<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t\ttexData<span class=\"token punctuation\">.</span>tex_u <span class=\"token operator\">=</span> texData<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget <span class=\"token operator\">==</span> GL_TEXTURE_2D<span class=\"token punctuation\">)</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGLSupportsNPOTTextures</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\ttexData<span class=\"token punctuation\">.</span>tex_w <span class=\"token operator\">=</span> texData<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t\t\ttexData<span class=\"token punctuation\">.</span>tex_h <span class=\"token operator\">=</span> texData<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//otherwise we need to calculate the next power of 2 for the requested dimensions</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//ie (320x240) becomes (512x256)</span>\n\t\t\ttexData<span class=\"token punctuation\">.</span>tex_w <span class=\"token operator\">=</span> <span class=\"token function\">ofNextPow2</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\ttexData<span class=\"token punctuation\">.</span>tex_h <span class=\"token operator\">=</span> <span class=\"token function\">ofNextPow2</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\ttexData<span class=\"token punctuation\">.</span>tex_t <span class=\"token operator\">=</span> texData<span class=\"token punctuation\">.</span>width <span class=\"token operator\">/</span> texData<span class=\"token punctuation\">.</span>tex_w<span class=\"token punctuation\">;</span>\n\t\ttexData<span class=\"token punctuation\">.</span>tex_u <span class=\"token operator\">=</span> texData<span class=\"token punctuation\">.</span>height <span class=\"token operator\">/</span> texData<span class=\"token punctuation\">.</span>tex_h<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// attempt to free the previous bound texture, if we can:</span>\n\t<span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">glGenTextures</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>GLuint <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>texData<span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\" spellcheck=\"true\">// could be more then one, but for now, just one</span>\n\t<span class=\"token function\">retain</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget <span class=\"token operator\">==</span> GL_TEXTURE_2D <span class=\"token operator\">||</span> texData<span class=\"token punctuation\">.</span>textureTarget <span class=\"token operator\">==</span> GL_TEXTURE_RECTANGLE_ARB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget <span class=\"token operator\">==</span> GL_TEXTURE_2D<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span>texData<span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glTexImage2D</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> texData<span class=\"token punctuation\">.</span>glInternalFormat<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>GLint<span class=\"token punctuation\">)</span>texData<span class=\"token punctuation\">.</span>tex_w<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>GLint<span class=\"token punctuation\">)</span>texData<span class=\"token punctuation\">.</span>tex_h<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> glFormat<span class=\"token punctuation\">,</span> pixelType<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">// init to black...</span>\n\n\t\t<span class=\"token function\">glTexParameterf</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> GL_TEXTURE_MAG_FILTER<span class=\"token punctuation\">,</span> texData<span class=\"token punctuation\">.</span>magFilter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glTexParameterf</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> GL_TEXTURE_MIN_FILTER<span class=\"token punctuation\">,</span> texData<span class=\"token punctuation\">.</span>minFilter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glTexParameterf</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> GL_TEXTURE_WRAP_S<span class=\"token punctuation\">,</span> texData<span class=\"token punctuation\">.</span>wrapModeHorizontal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glTexParameterf</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> GL_TEXTURE_WRAP_T<span class=\"token punctuation\">,</span> texData<span class=\"token punctuation\">.</span>wrapModeVertical<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_PROGRAMMABLE_GL</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">glTexEnvf</span><span class=\"token punctuation\">(</span>GL_TEXTURE_ENV<span class=\"token punctuation\">,</span> GL_TEXTURE_ENV_MODE<span class=\"token punctuation\">,</span> GL_MODULATE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\ttexData<span class=\"token punctuation\">.</span>bAllocated <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n\t<span class=\"token function\">registerTexture</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">setRGToRGBASwizzles</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> rToRGBSwizzles<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span>texData<span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>rToRGBSwizzles<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>glInternalFormat<span class=\"token operator\">==</span>GL_R8 <span class=\"token operator\">||</span>\n\t\t\ttexData<span class=\"token punctuation\">.</span>glInternalFormat<span class=\"token operator\">==</span>GL_R16 <span class=\"token operator\">||</span>\n\t\t\ttexData<span class=\"token punctuation\">.</span>glInternalFormat<span class=\"token operator\">==</span>GL_R32F<span class=\"token operator\">||</span>\n\t\t\ttexData<span class=\"token punctuation\">.</span>glInternalFormat<span class=\"token operator\">==</span>GL_DEPTH_COMPONENT\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t<span class=\"token operator\">||</span>\n\t\t\ttexData<span class=\"token punctuation\">.</span>glInternalFormat<span class=\"token operator\">==</span>GL_DEPTH_COMPONENT16 <span class=\"token operator\">||</span>\n\t\t\ttexData<span class=\"token punctuation\">.</span>glInternalFormat<span class=\"token operator\">==</span>GL_DEPTH_COMPONENT24 <span class=\"token operator\">||</span>\n\t\t\ttexData<span class=\"token punctuation\">.</span>glInternalFormat<span class=\"token operator\">==</span>GL_DEPTH_COMPONENT32\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t   <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t <span class=\"token function\">glTexParameteri</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> GL_TEXTURE_SWIZZLE_R<span class=\"token punctuation\">,</span> GL_RED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token function\">glTexParameteri</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> GL_TEXTURE_SWIZZLE_G<span class=\"token punctuation\">,</span> GL_RED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token function\">glTexParameteri</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> GL_TEXTURE_SWIZZLE_B<span class=\"token punctuation\">,</span> GL_RED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>glInternalFormat<span class=\"token operator\">==</span>GL_RG8 <span class=\"token operator\">||</span>\n\t\t\t\ttexData<span class=\"token punctuation\">.</span>glInternalFormat<span class=\"token operator\">==</span>GL_RG16 <span class=\"token operator\">||</span>\n\t\t\t\ttexData<span class=\"token punctuation\">.</span>glInternalFormat<span class=\"token operator\">==</span>GL_RG32F<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t <span class=\"token function\">glTexParameteri</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> GL_TEXTURE_SWIZZLE_R<span class=\"token punctuation\">,</span> GL_RED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token function\">glTexParameteri</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> GL_TEXTURE_SWIZZLE_G<span class=\"token punctuation\">,</span> GL_RED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token function\">glTexParameteri</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> GL_TEXTURE_SWIZZLE_B<span class=\"token punctuation\">,</span> GL_RED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token function\">glTexParameteri</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> GL_TEXTURE_SWIZZLE_A<span class=\"token punctuation\">,</span> GL_GREEN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>glInternalFormat<span class=\"token operator\">==</span>GL_R8 <span class=\"token operator\">||</span>\n\t\t\t\ttexData<span class=\"token punctuation\">.</span>glInternalFormat<span class=\"token operator\">==</span>GL_R16 <span class=\"token operator\">||</span>\n\t\t\t\ttexData<span class=\"token punctuation\">.</span>glInternalFormat<span class=\"token operator\">==</span>GL_R32F<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t <span class=\"token function\">glTexParameteri</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> GL_TEXTURE_SWIZZLE_R<span class=\"token punctuation\">,</span> GL_RED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token function\">glTexParameteri</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> GL_TEXTURE_SWIZZLE_G<span class=\"token punctuation\">,</span> GL_GREEN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token function\">glTexParameteri</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> GL_TEXTURE_SWIZZLE_B<span class=\"token punctuation\">,</span> GL_BLUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>glInternalFormat<span class=\"token operator\">==</span>GL_RG8 <span class=\"token operator\">||</span>\n\t\t\t\ttexData<span class=\"token punctuation\">.</span>glInternalFormat<span class=\"token operator\">==</span>GL_RG16 <span class=\"token operator\">||</span>\n\t\t\t\ttexData<span class=\"token punctuation\">.</span>glInternalFormat<span class=\"token operator\">==</span>GL_RG32F<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t <span class=\"token function\">glTexParameteri</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> GL_TEXTURE_SWIZZLE_R<span class=\"token punctuation\">,</span> GL_RED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token function\">glTexParameteri</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> GL_TEXTURE_SWIZZLE_G<span class=\"token punctuation\">,</span> GL_GREEN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token function\">glTexParameteri</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> GL_TEXTURE_SWIZZLE_B<span class=\"token punctuation\">,</span> GL_BLUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token function\">glTexParameteri</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> GL_TEXTURE_SWIZZLE_A<span class=\"token punctuation\">,</span> GL_ALPHA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">setSwizzle</span><span class=\"token punctuation\">(</span>GLenum srcSwizzle<span class=\"token punctuation\">,</span> GLenum dstChannel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span>texData<span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glTexParameteri</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> srcSwizzle<span class=\"token punctuation\">,</span> dstChannel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> uint8_t <span class=\"token operator\">*</span> data<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> glFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofSetPixelStoreiAlignment</span><span class=\"token punctuation\">(</span>GL_UNPACK_ALIGNMENT<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token function\">ofGetNumChannelsFromGLFormat</span><span class=\"token punctuation\">(</span>glFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> glFormat<span class=\"token punctuation\">,</span> GL_UNSIGNED_BYTE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> uint16_t <span class=\"token operator\">*</span> data<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> glFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofSetPixelStoreiAlignment</span><span class=\"token punctuation\">(</span>GL_UNPACK_ALIGNMENT<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token function\">ofGetNumChannelsFromGLFormat</span><span class=\"token punctuation\">(</span>glFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> glFormat<span class=\"token punctuation\">,</span> GL_UNSIGNED_SHORT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> uint32_t <span class=\"token operator\">*</span> data<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> glFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofSetPixelStoreiAlignment</span><span class=\"token punctuation\">(</span>GL_UNPACK_ALIGNMENT<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token function\">ofGetNumChannelsFromGLFormat</span><span class=\"token punctuation\">(</span>glFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> glFormat<span class=\"token punctuation\">,</span> GL_UNSIGNED_INT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> int8_t <span class=\"token operator\">*</span> data<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> glFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofSetPixelStoreiAlignment</span><span class=\"token punctuation\">(</span>GL_UNPACK_ALIGNMENT<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token function\">ofGetNumChannelsFromGLFormat</span><span class=\"token punctuation\">(</span>glFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> glFormat<span class=\"token punctuation\">,</span> GL_BYTE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> int16_t <span class=\"token operator\">*</span> data<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> glFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofSetPixelStoreiAlignment</span><span class=\"token punctuation\">(</span>GL_UNPACK_ALIGNMENT<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token function\">ofGetNumChannelsFromGLFormat</span><span class=\"token punctuation\">(</span>glFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> glFormat<span class=\"token punctuation\">,</span> GL_SHORT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> int32_t <span class=\"token operator\">*</span> data<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> glFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofSetPixelStoreiAlignment</span><span class=\"token punctuation\">(</span>GL_UNPACK_ALIGNMENT<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token function\">ofGetNumChannelsFromGLFormat</span><span class=\"token punctuation\">(</span>glFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> glFormat<span class=\"token punctuation\">,</span> GL_INT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span> data<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> glFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofSetPixelStoreiAlignment</span><span class=\"token punctuation\">(</span>GL_UNPACK_ALIGNMENT<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token function\">ofGetNumChannelsFromGLFormat</span><span class=\"token punctuation\">(</span>glFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> glFormat<span class=\"token punctuation\">,</span> GL_FLOAT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPixels <span class=\"token operator\">&amp;</span> pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofSetPixelStoreiAlignment</span><span class=\"token punctuation\">(</span>GL_UNPACK_ALIGNMENT<span class=\"token punctuation\">,</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getBytesStride</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLFormat</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLType</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofShortPixels <span class=\"token operator\">&amp;</span> pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofSetPixelStoreiAlignment</span><span class=\"token punctuation\">(</span>GL_UNPACK_ALIGNMENT<span class=\"token punctuation\">,</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getBytesStride</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLFormat</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLType</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFloatPixels <span class=\"token operator\">&amp;</span> pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofSetPixelStoreiAlignment</span><span class=\"token punctuation\">(</span>GL_UNPACK_ALIGNMENT<span class=\"token punctuation\">,</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getBytesStride</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLFormat</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLType</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPixels <span class=\"token operator\">&amp;</span> pix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> glFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLInternalFormat</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetUsingArbTex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> glFormat<span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLType</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">ofSetPixelStoreiAlignment</span><span class=\"token punctuation\">(</span>GL_UNPACK_ALIGNMENT<span class=\"token punctuation\">,</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getBytesPerChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">ofGetNumChannelsFromGLFormat</span><span class=\"token punctuation\">(</span>glFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> glFormat<span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLType</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofShortPixels <span class=\"token operator\">&amp;</span> pix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> glFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLInternalFormat</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetUsingArbTex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> glFormat<span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLType</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">ofSetPixelStoreiAlignment</span><span class=\"token punctuation\">(</span>GL_UNPACK_ALIGNMENT<span class=\"token punctuation\">,</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getBytesPerChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">ofGetNumChannelsFromGLFormat</span><span class=\"token punctuation\">(</span>glFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> glFormat<span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLType</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFloatPixels <span class=\"token operator\">&amp;</span> pix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> glFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLInternalFormat</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetUsingArbTex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> glFormat<span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLType</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">ofSetPixelStoreiAlignment</span><span class=\"token punctuation\">(</span>GL_UNPACK_ALIGNMENT<span class=\"token punctuation\">,</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getBytesPerChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">ofGetNumChannelsFromGLFormat</span><span class=\"token punctuation\">(</span>glFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> glFormat<span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLType</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofBufferObject <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> glFormat<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> glType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>GL_PIXEL_UNPACK_BUFFER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>texData<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>texData<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span>glFormat<span class=\"token punctuation\">,</span>glType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span>GL_PIXEL_UNPACK_BUFFER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> data<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> glFormat<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> glType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>w <span class=\"token operator\">></span> texData<span class=\"token punctuation\">.</span>tex_w <span class=\"token operator\">||</span> h <span class=\"token operator\">></span> texData<span class=\"token punctuation\">.</span>tex_h<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> texData<span class=\"token punctuation\">.</span>glInternalFormat<span class=\"token punctuation\">,</span> glFormat<span class=\"token punctuation\">,</span> glType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// TODO: guess correct internal from glFormat</span>\n\t\t\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> glFormat<span class=\"token punctuation\">,</span> glFormat<span class=\"token punctuation\">,</span> glType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// compute new tex co-ords based on the ratio of data's w, h to texture w,h;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget <span class=\"token operator\">==</span> GL_TEXTURE_RECTANGLE_ARB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\ttexData<span class=\"token punctuation\">.</span>tex_t <span class=\"token operator\">=</span> w<span class=\"token punctuation\">;</span>\n\t\ttexData<span class=\"token punctuation\">.</span>tex_u <span class=\"token operator\">=</span> h<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> \n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token punctuation\">{</span>\n\t\ttexData<span class=\"token punctuation\">.</span>tex_t <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>texData<span class=\"token punctuation\">.</span>tex_w<span class=\"token punctuation\">;</span>\n\t\ttexData<span class=\"token punctuation\">.</span>tex_u <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>texData<span class=\"token punctuation\">.</span>tex_h<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// bind texture</span>\n\t<span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>GLuint<span class=\"token punctuation\">)</span> texData<span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//update the texture image:</span>\n\t<span class=\"token function\">glTexSubImage2D</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> glFormat<span class=\"token punctuation\">,</span> glType<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// unbind texture target by binding 0</span>\n\t<span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bWantsMipmap<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// auto-generate mipmap, since this ofTexture wants us to.</span>\n\t\t<span class=\"token function\">generateMipmap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">generateMipmap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// Generate mipmaps using hardware-accelerated core GL methods.</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// 1. Check whether the current OpenGL version supports mipmap generation:</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//    glGenerateMipmap() was introduced to OpenGL core in 3.0, and</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//    OpenGLES core in 2.0 but earlier versions may support it if they</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//\t  support extension GL_EXT_framebuffer_object</span>\n\n\t<span class=\"token keyword\">bool</span> isGlGenerateMipmapAvailable <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tisGlGenerateMipmapAvailable <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isGlGenerateMipmapAvailable <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">ofGLCheckExtension</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GL_EXT_framebuffer_object\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> versionWarningIssued <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>versionWarningIssued<span class=\"token punctuation\">)</span> <span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Your current OpenGL version does not support mipmap generation via glGenerateMipmap().\"</span><span class=\"token punctuation\">;</span>\n\t\tversionWarningIssued <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\ttexData<span class=\"token punctuation\">.</span>hasMipmap <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// 2. Check whether the texture's texture target supports mipmap generation.</span>\n\t\n\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">/// OpenGL ES only supports mipmap for the following two texture targets:</span>\n\t\t<span class=\"token keyword\">case</span> GL_TEXTURE_2D<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_TEXTURE_CUBE_MAP<span class=\"token operator\">:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">/// OpenGL supports mipmaps for additional texture targets:</span>\n\t\t<span class=\"token keyword\">case</span> GL_TEXTURE_1D<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_TEXTURE_3D<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_TEXTURE_1D_ARRAY<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_TEXTURE_2D_ARRAY<span class=\"token operator\">:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// All good, this particular texture target supports mipmaps.</span>\n\t\t\t\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// glEnable(texData.textureTarget);\t/// &lt; uncomment this hack if you are unlucky enough to run an older ATI card.</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// See also: https://www.opengl.org/wiki/Common_Mistakes#Automatic_mipmap_generation</span>\n\n\t\t\t<span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>GLuint<span class=\"token punctuation\">)</span> texData<span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">glGenerateMipmap</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\ttexData<span class=\"token punctuation\">.</span>hasMipmap <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// This particular texture target does not support mipmaps.</span>\n\t\t\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> warningIssuedAlready <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>warningIssuedAlready<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Mipmaps are not supported for textureTarget 0x\"</span> <span class=\"token operator\">&lt;&lt;</span> hex <span class=\"token operator\">&lt;&lt;</span> texData<span class=\"token punctuation\">.</span>textureTarget <span class=\"token operator\">&lt;&lt;</span> endl\n\t\t\t\t<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Most probably you are trying to create mipmaps from a GL_TEXTURE_RECTANGLE texture.\"</span> <span class=\"token operator\">&lt;&lt;</span> endl\n\t\t\t\t<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Try ofDisableArbTex() before loading this texture.\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\twarningIssuedAlready <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\ttexData<span class=\"token punctuation\">.</span>hasMipmap <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token comment\" spellcheck=\"true\">// end switch(texData.textureTarget)</span>\n\t\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">loadScreenData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// TODO: this should go into the renderers so it</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// doesn't depend on global calls</span>\n\t<span class=\"token keyword\">int</span> screenHeight <span class=\"token operator\">=</span> <span class=\"token function\">ofGetViewportHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ty <span class=\"token operator\">=</span> screenHeight <span class=\"token operator\">-</span> y<span class=\"token punctuation\">;</span>\n\ty <span class=\"token operator\">-</span><span class=\"token operator\">=</span> h<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// top, bottom issues</span>\n\ttexData<span class=\"token punctuation\">.</span>bFlipTexture <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> w <span class=\"token operator\">></span> texData<span class=\"token punctuation\">.</span>tex_w <span class=\"token operator\">||</span> h <span class=\"token operator\">></span> texData<span class=\"token punctuation\">.</span>tex_h<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofTexture\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"loadScreenData(): \"</span> <span class=\"token operator\">&lt;&lt;</span> w <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"x\"</span> <span class=\"token operator\">&lt;&lt;</span> h <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" image data too big for \"</span>\n\t\t<span class=\"token operator\">&lt;&lt;</span> texData<span class=\"token punctuation\">.</span>tex_w <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"x \"</span> <span class=\"token operator\">&lt;&lt;</span> texData<span class=\"token punctuation\">.</span>tex_h <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" allocated texture, not uploading\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//update our size with the new dimensions - this should be the same size or smaller than the allocated texture size</span>\n\ttexData<span class=\"token punctuation\">.</span>width \t<span class=\"token operator\">=</span> w<span class=\"token punctuation\">;</span>\n\ttexData<span class=\"token punctuation\">.</span>height \t<span class=\"token operator\">=</span> h<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//compute new tex co-ords based on the ratio of data's w, h to texture w,h;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES </span><span class=\"token comment\" spellcheck=\"true\">// DAMIAN</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget <span class=\"token operator\">==</span> GL_TEXTURE_RECTANGLE_ARB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\ttexData<span class=\"token punctuation\">.</span>tex_t <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\ttexData<span class=\"token punctuation\">.</span>tex_u <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> \n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token punctuation\">{</span>\n\t\ttexData<span class=\"token punctuation\">.</span>tex_t <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>texData<span class=\"token punctuation\">.</span>tex_w<span class=\"token punctuation\">;</span>\n\t\ttexData<span class=\"token punctuation\">.</span>tex_u <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>texData<span class=\"token punctuation\">.</span>tex_h<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t\n\t<span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span>texData<span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">glCopyTexSubImage2D</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bWantsMipmap<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">generateMipmap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//we could cap these values - but it might be more useful</span>\n<span class=\"token comment\" spellcheck=\"true\">//to be able to set anchor points outside the image</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">setAnchorPercent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> xPct<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> yPct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tanchor<span class=\"token punctuation\">.</span>x  <span class=\"token operator\">=</span> xPct<span class=\"token punctuation\">;</span>\n\tanchor<span class=\"token punctuation\">.</span>y  <span class=\"token operator\">=</span> yPct<span class=\"token punctuation\">;</span>\n\t\n\tbAnchorIsPct <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">setAnchorPoint</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tanchor<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n\tanchor<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n\t\n\tbAnchorIsPct <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">resetAnchor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tanchor <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\tbAnchorIsPct <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> textureLocation<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofGetGLRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>textureLocation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> textureLocation<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofGetGLRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>textureLocation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> !defined(TARGET_OPENGLES) &amp;&amp; defined(glBindImageTexture)</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">bindAsImage</span><span class=\"token punctuation\">(</span>GLuint unit<span class=\"token punctuation\">,</span> GLenum access<span class=\"token punctuation\">,</span> GLint level<span class=\"token punctuation\">,</span> GLboolean layered<span class=\"token punctuation\">,</span> GLint layer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glBindImageTexture</span><span class=\"token punctuation\">(</span>unit<span class=\"token punctuation\">,</span>texData<span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">,</span>level<span class=\"token punctuation\">,</span>layered<span class=\"token punctuation\">,</span>layer<span class=\"token punctuation\">,</span>access<span class=\"token punctuation\">,</span>texData<span class=\"token punctuation\">.</span>glInternalFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">setAlphaMask</span><span class=\"token punctuation\">(</span>ofTexture <span class=\"token operator\">&amp;</span> mask<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mask<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token operator\">!=</span><span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofTexture\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Cannot set alpha mask with different texture target\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\ttexData<span class=\"token punctuation\">.</span>alphaMask <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span>make_shared<span class=\"token operator\">&lt;</span>ofTexture<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>mask<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">const</span> ofTexture <span class=\"token operator\">*</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">getAlphaMask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> texData<span class=\"token punctuation\">.</span>alphaMask<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">disableAlphaMask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>alphaMask<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\ttexData<span class=\"token punctuation\">.</span>alphaMask<span class=\"token punctuation\">.</span><span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nglm<span class=\"token operator\">::</span>vec2 ofTexture<span class=\"token operator\">::</span><span class=\"token function\">getCoordFromPoint</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> xPos<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> yPos<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t\n\tglm<span class=\"token operator\">::</span>vec2 <span class=\"token function\">temp</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> temp<span class=\"token punctuation\">;</span>\n\t\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES\t</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget <span class=\"token operator\">==</span> GL_TEXTURE_RECTANGLE_ARB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\n\t\ttemp <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>xPos<span class=\"token punctuation\">,</span> yPos<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\t\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span>\t\t</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// non arb textures are 0 to 1, so we </span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// (a) convert to a pct: </span>\n\t\t\n\t\t<span class=\"token keyword\">float</span> pctx <span class=\"token operator\">=</span> xPos <span class=\"token operator\">/</span> texData<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span> pcty <span class=\"token operator\">=</span> yPos <span class=\"token operator\">/</span> texData<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">// (b) mult by our internal pct (since we might not be 0-1 internally)</span>\n\t\t\n\t\tpctx <span class=\"token operator\">*</span><span class=\"token operator\">=</span> texData<span class=\"token punctuation\">.</span>tex_t<span class=\"token punctuation\">;</span>\n\t\tpcty <span class=\"token operator\">*</span><span class=\"token operator\">=</span> texData<span class=\"token punctuation\">.</span>tex_u<span class=\"token punctuation\">;</span>\n\t\t\n\t\ttemp <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>pctx<span class=\"token punctuation\">,</span> pcty<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\t\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES\t</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span>\t\t</span>\n\t\n\t<span class=\"token keyword\">return</span> temp<span class=\"token punctuation\">;</span>\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Sets a texture matrix that will be uploaded whenever the texture is</span>\n<span class=\"token comment\" spellcheck=\"true\">/// binded.</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">setTextureMatrix</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\ttexData<span class=\"token punctuation\">.</span>textureMatrix <span class=\"token operator\">=</span> m<span class=\"token punctuation\">;</span>\n\ttexData<span class=\"token punctuation\">.</span>useTextureMatrix <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Disable the texture matrix.</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">disableTextureMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\ttexData<span class=\"token punctuation\">.</span>useTextureMatrix <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\ttexData<span class=\"token punctuation\">.</span>textureMatrix <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">mat4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">getTextureMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> texData<span class=\"token punctuation\">.</span>textureMatrix<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">isUsingTextureMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> texData<span class=\"token punctuation\">.</span>useTextureMatrix<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nglm<span class=\"token operator\">::</span>vec2 ofTexture<span class=\"token operator\">::</span><span class=\"token function\">getCoordFromPercent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> xPct<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> yPct<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t\n\tglm<span class=\"token operator\">::</span>vec2 <span class=\"token function\">temp</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> temp<span class=\"token punctuation\">;</span>\n\t\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES\t</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget <span class=\"token operator\">==</span> GL_TEXTURE_RECTANGLE_ARB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\n\t\ttemp <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>xPct <span class=\"token operator\">*</span> texData<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> yPct <span class=\"token operator\">*</span> texData<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\t\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span>\t</span>\n\t\txPct <span class=\"token operator\">*</span><span class=\"token operator\">=</span> texData<span class=\"token punctuation\">.</span>tex_t<span class=\"token punctuation\">;</span>\n\t\tyPct <span class=\"token operator\">*</span><span class=\"token operator\">=</span> texData<span class=\"token punctuation\">.</span>tex_u<span class=\"token punctuation\">;</span>\n\t\ttemp <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>xPct<span class=\"token punctuation\">,</span> yPct<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\t\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES\t</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span>\t</span>\n\t<span class=\"token keyword\">return</span> temp<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">setTextureWrap</span><span class=\"token punctuation\">(</span>GLint wrapModeHorizontal<span class=\"token punctuation\">,</span> GLint wrapModeVertical<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span>texData<span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glTexParameteri</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> GL_TEXTURE_WRAP_S<span class=\"token punctuation\">,</span> wrapModeHorizontal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glTexParameteri</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> GL_TEXTURE_WRAP_T<span class=\"token punctuation\">,</span> wrapModeVertical<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ttexData<span class=\"token punctuation\">.</span>wrapModeVertical <span class=\"token operator\">=</span> wrapModeVertical<span class=\"token punctuation\">;</span>\n\ttexData<span class=\"token punctuation\">.</span>wrapModeHorizontal <span class=\"token operator\">=</span> wrapModeHorizontal<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">setTextureMinMagFilter</span><span class=\"token punctuation\">(</span>GLint minFilter<span class=\"token punctuation\">,</span> GLint magFilter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// Issue warning if mipmaps not present for mipmap based min filter.</span>\n\t\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>minFilter <span class=\"token operator\">></span> GL_LINEAR<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> texData<span class=\"token punctuation\">.</span>hasMipmap <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> hasWarnedNoMipmapsForMinFilter <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>hasWarnedNoMipmapsForMinFilter<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Texture has no mipmaps - but minFilter 0x\"</span><span class=\"token operator\">&lt;&lt;</span> hex <span class=\"token operator\">&lt;&lt;</span> minFilter <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" requires mipmaps.\"</span>\n\t\t\t<span class=\"token operator\">&lt;&lt;</span> endl <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Call ofTexture::generateMipmaps() first.\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\thasWarnedNoMipmapsForMinFilter <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// Issue warning if invalid magFilter specified.</span>\n\t\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>magFilter <span class=\"token operator\">></span> GL_LINEAR <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> hasWarnedInvalidMagFilter <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>hasWarnedInvalidMagFilter<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"magFilter must be either GL_LINEAR or GL_NEAREST.\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\thasWarnedInvalidMagFilter <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span>texData<span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glTexParameteri</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> GL_TEXTURE_MAG_FILTER<span class=\"token punctuation\">,</span> magFilter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glTexParameteri</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> GL_TEXTURE_MIN_FILTER<span class=\"token punctuation\">,</span> minFilter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ttexData<span class=\"token punctuation\">.</span>magFilter <span class=\"token operator\">=</span> magFilter<span class=\"token punctuation\">;</span>\n\ttexData<span class=\"token punctuation\">.</span>minFilter <span class=\"token operator\">=</span> minFilter<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">setCompression</span><span class=\"token punctuation\">(</span>ofTexCompression compression<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\ttexData<span class=\"token punctuation\">.</span>compressionType <span class=\"token operator\">=</span> compression<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">enableMipmap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbWantsMipmap <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\ttexData<span class=\"token punctuation\">.</span>minFilter <span class=\"token operator\">=</span> GL_LINEAR_MIPMAP_LINEAR<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">disableMipmap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbWantsMipmap <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\ttexData<span class=\"token punctuation\">.</span>minFilter <span class=\"token operator\">=</span> GL_LINEAR<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">hasMipmap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> texData<span class=\"token punctuation\">.</span>hasMipmap<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">,</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> pos<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>pos<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>pos<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">,</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> pos<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>pos<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>pos<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">drawSubsection</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">drawSubsection</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">drawSubsection</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>sx<span class=\"token punctuation\">,</span>sy<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">drawSubsection</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> _sw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> _sh<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">drawSubsection</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>sx<span class=\"token punctuation\">,</span>sy<span class=\"token punctuation\">,</span>_sw<span class=\"token punctuation\">,</span>_sh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">drawSubsection</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofRectangle<span class=\"token operator\">&amp;</span> drawBounds<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofRectangle<span class=\"token operator\">&amp;</span> subsectionBounds<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">drawSubsection</span><span class=\"token punctuation\">(</span>drawBounds<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>drawBounds<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>drawBounds<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>drawBounds<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span>subsectionBounds<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>subsectionBounds<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>subsectionBounds<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>subsectionBounds<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">drawSubsection</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">drawSubsection</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>sx<span class=\"token punctuation\">,</span>sy<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">drawSubsection</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sh<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tshared_ptr<span class=\"token operator\">&lt;</span>ofBaseGLRenderer<span class=\"token operator\">></span> renderer <span class=\"token operator\">=</span> <span class=\"token function\">ofGetGLRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>renderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\trenderer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>sx<span class=\"token punctuation\">,</span>sy<span class=\"token punctuation\">,</span>sw<span class=\"token punctuation\">,</span>sh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------</span>\nofMesh ofTexture<span class=\"token operator\">::</span><span class=\"token function\">getMeshForSubsection</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sh<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> vflipped<span class=\"token punctuation\">,</span> ofRectMode rectMode<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tofMesh quad<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>texData<span class=\"token punctuation\">.</span>bAllocated<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> quad<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tGLfloat px0 <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\" spellcheck=\"true\">// up to you to get the aspect ratio right</span>\n\tGLfloat py0 <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n\tGLfloat px1 <span class=\"token operator\">=</span> w<span class=\"token operator\">+</span>x<span class=\"token punctuation\">;</span>\n\tGLfloat py1 <span class=\"token operator\">=</span> h<span class=\"token operator\">+</span>y<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>bFlipTexture <span class=\"token operator\">==</span> vflipped<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>py0<span class=\"token punctuation\">,</span>py1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// for rect mode center, let's do this:</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rectMode <span class=\"token operator\">==</span> OF_RECTMODE_CENTER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tpx0 <span class=\"token operator\">-</span><span class=\"token operator\">=</span> w<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t\tpy0 <span class=\"token operator\">-</span><span class=\"token operator\">=</span> h<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t\tpx1 <span class=\"token operator\">-</span><span class=\"token operator\">=</span> w<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t\tpy1 <span class=\"token operator\">-</span><span class=\"token operator\">=</span> h<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//we translate our drawing points by our anchor point.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//we still respect ofRectMode so if you have rect mode set to</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//OF_RECTMODE_CENTER your anchor will be relative to that.</span>\n\tGLfloat anchorX<span class=\"token punctuation\">;</span>\n\tGLfloat anchorY<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bAnchorIsPct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tanchorX <span class=\"token operator\">=</span> anchor<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> w<span class=\"token punctuation\">;</span>\n\t\tanchorY <span class=\"token operator\">=</span> anchor<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> h<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tanchorX <span class=\"token operator\">=</span> anchor<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\t\tanchorY <span class=\"token operator\">=</span> anchor<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tpx0 <span class=\"token operator\">-</span><span class=\"token operator\">=</span> anchorX<span class=\"token punctuation\">;</span>\n\tpy0 <span class=\"token operator\">-</span><span class=\"token operator\">=</span> anchorY<span class=\"token punctuation\">;</span>\n\tpx1 <span class=\"token operator\">-</span><span class=\"token operator\">=</span> anchorX<span class=\"token punctuation\">;</span>\n\tpy1 <span class=\"token operator\">-</span><span class=\"token operator\">=</span> anchorY<span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token comment\" spellcheck=\"true\">// -------------------------------------------------</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// complete hack to remove border artifacts.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// slightly, slightly alters an image, scaling...</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// to remove the border.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// we need a better solution for this, but</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// to constantly add a 2 pixel border on all uploaded images</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// is insane..</span>\n\n\tGLfloat offsetw <span class=\"token operator\">=</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">;</span>\n\tGLfloat offseth <span class=\"token operator\">=</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">ofGLSupportsNPOTTextures</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> bTexHackEnabled<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\toffsetw <span class=\"token operator\">=</span> <span class=\"token number\">1.0f</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>tex_w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\toffseth <span class=\"token operator\">=</span> <span class=\"token number\">1.0f</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>tex_h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// -------------------------------------------------</span>\n\n\t<span class=\"token keyword\">auto</span> topLeft <span class=\"token operator\">=</span> <span class=\"token function\">getCoordFromPoint</span><span class=\"token punctuation\">(</span>sx<span class=\"token punctuation\">,</span> sy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> bottomRight <span class=\"token operator\">=</span> <span class=\"token function\">getCoordFromPoint</span><span class=\"token punctuation\">(</span>sx <span class=\"token operator\">+</span> sw<span class=\"token punctuation\">,</span> sy <span class=\"token operator\">+</span> sh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tGLfloat tx0 <span class=\"token operator\">=</span> topLeft<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> offsetw<span class=\"token punctuation\">;</span>\n\tGLfloat ty0 <span class=\"token operator\">=</span> topLeft<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> offseth<span class=\"token punctuation\">;</span>\n\tGLfloat tx1 <span class=\"token operator\">=</span> bottomRight<span class=\"token punctuation\">.</span>x <span class=\"token operator\">-</span> offsetw<span class=\"token punctuation\">;</span>\n\tGLfloat ty1 <span class=\"token operator\">=</span> bottomRight<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> offseth<span class=\"token punctuation\">;</span>\n\n\tquad<span class=\"token punctuation\">.</span><span class=\"token function\">setMode</span><span class=\"token punctuation\">(</span>OF_PRIMITIVE_TRIANGLE_FAN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tquad<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tquad<span class=\"token punctuation\">.</span><span class=\"token function\">getTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tquad<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>px0<span class=\"token punctuation\">,</span>py0<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\tquad<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>px1<span class=\"token punctuation\">,</span>py0<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\tquad<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>px1<span class=\"token punctuation\">,</span>py1<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\tquad<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>px0<span class=\"token punctuation\">,</span>py1<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\tquad<span class=\"token punctuation\">.</span><span class=\"token function\">getTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>tx0<span class=\"token punctuation\">,</span>ty0<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\tquad<span class=\"token punctuation\">.</span><span class=\"token function\">getTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>tx1<span class=\"token punctuation\">,</span>ty0<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\tquad<span class=\"token punctuation\">.</span><span class=\"token function\">getTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>tx1<span class=\"token punctuation\">,</span>ty1<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\tquad<span class=\"token punctuation\">.</span><span class=\"token function\">getTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>tx0<span class=\"token punctuation\">,</span>ty1<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> quad<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// ROGER</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p4<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// make sure we are on unit 0 - we may change this when setting shader samplers</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// before glEnable or else the shader gets confused</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// ps: maybe if bUsingArbTex is enabled we should use glActiveTextureARB?</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//glActiveTexture(GL_TEXTURE0);</span>\n\tshared_ptr<span class=\"token operator\">&lt;</span>ofBaseGLRenderer<span class=\"token operator\">></span> renderer <span class=\"token operator\">=</span> <span class=\"token function\">ofGetGLRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>renderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\trenderer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token function\">getQuad</span><span class=\"token punctuation\">(</span>p1<span class=\"token punctuation\">,</span>p2<span class=\"token punctuation\">,</span>p3<span class=\"token punctuation\">,</span>p4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>OF_MESH_FILL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nofMesh ofTexture<span class=\"token operator\">::</span><span class=\"token function\">getQuad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p4<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// -------------------------------------------------</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// complete hack to remove border artifacts.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// slightly, slightly alters an image, scaling...</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// to remove the border.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// we need a better solution for this, but</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// to constantly add a 2 pixel border on all uploaded images</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// is insane..</span>\n\t\n\tGLfloat offsetw <span class=\"token operator\">=</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">;</span>\n\tGLfloat offseth <span class=\"token operator\">=</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget <span class=\"token operator\">==</span> GL_TEXTURE_2D <span class=\"token operator\">&amp;&amp;</span> bTexHackEnabled<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\toffsetw <span class=\"token operator\">=</span> <span class=\"token number\">1.0f</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>tex_w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\toffseth <span class=\"token operator\">=</span> <span class=\"token number\">1.0f</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>tex_h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// -------------------------------------------------</span>\n\t\n\tGLfloat tx0 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token operator\">+</span>offsetw<span class=\"token punctuation\">;</span>\n\tGLfloat ty0 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token operator\">+</span>offseth<span class=\"token punctuation\">;</span>\n\tGLfloat tx1 <span class=\"token operator\">=</span> texData<span class=\"token punctuation\">.</span>tex_t <span class=\"token operator\">-</span> offsetw<span class=\"token punctuation\">;</span>\n\tGLfloat ty1 <span class=\"token operator\">=</span> texData<span class=\"token punctuation\">.</span>tex_u <span class=\"token operator\">-</span> offseth<span class=\"token punctuation\">;</span>\n\n\tofMesh quad<span class=\"token punctuation\">;</span>\n\tquad<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tquad<span class=\"token punctuation\">.</span><span class=\"token function\">getTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tquad<span class=\"token punctuation\">.</span><span class=\"token function\">setMode</span><span class=\"token punctuation\">(</span>OF_PRIMITIVE_TRIANGLE_FAN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tquad<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>p1<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> p1<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> p1<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\tquad<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>p2<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> p2<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> p2<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\tquad<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>p3<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> p3<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> p3<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\tquad<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>p4<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> p4<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> p4<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\n\tquad<span class=\"token punctuation\">.</span><span class=\"token function\">getTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>tx0<span class=\"token punctuation\">,</span>ty0<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\tquad<span class=\"token punctuation\">.</span><span class=\"token function\">getTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>tx1<span class=\"token punctuation\">,</span>ty0<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\tquad<span class=\"token punctuation\">.</span><span class=\"token function\">getTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>tx1<span class=\"token punctuation\">,</span>ty1<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\tquad<span class=\"token punctuation\">.</span><span class=\"token function\">getTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>tx0<span class=\"token punctuation\">,</span>ty1<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> quad<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">readToPixels</span><span class=\"token punctuation\">(</span>ofPixels <span class=\"token operator\">&amp;</span> pixels<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>texData<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span><span class=\"token function\">ofGetImageTypeFromGLType</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>glInternalFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofSetPixelStoreiAlignment</span><span class=\"token punctuation\">(</span>GL_PACK_ALIGNMENT<span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getBytesPerChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getNumChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span>texData<span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glGetTexImage</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token function\">ofGetGLFormat</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>GL_UNSIGNED_BYTE<span class=\"token punctuation\">,</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">readToPixels</span><span class=\"token punctuation\">(</span>ofShortPixels <span class=\"token operator\">&amp;</span> pixels<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>texData<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span><span class=\"token function\">ofGetImageTypeFromGLType</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>glInternalFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofSetPixelStoreiAlignment</span><span class=\"token punctuation\">(</span>GL_PACK_ALIGNMENT<span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getBytesPerChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getNumChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span>texData<span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glGetTexImage</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token function\">ofGetGLFormat</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>GL_UNSIGNED_SHORT<span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">readToPixels</span><span class=\"token punctuation\">(</span>ofFloatPixels <span class=\"token operator\">&amp;</span> pixels<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>texData<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span><span class=\"token function\">ofGetImageTypeFromGLType</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>glInternalFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofSetPixelStoreiAlignment</span><span class=\"token punctuation\">(</span>GL_PACK_ALIGNMENT<span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getBytesPerChannel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getNumChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span>texData<span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glGetTexImage</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token function\">ofGetGLFormat</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>GL_FLOAT<span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">copyTo</span><span class=\"token punctuation\">(</span>ofBufferObject <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofSetPixelStoreiAlignment</span><span class=\"token punctuation\">(</span>GL_PACK_ALIGNMENT<span class=\"token punctuation\">,</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">ofGetBytesPerChannelFromGLType</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetGLTypeFromInternal</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>glInternalFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">ofGetNumChannelsFromGLFormat</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetGLFormatFromInternal</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>glInternalFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>GL_PIXEL_PACK_BUFFER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span>texData<span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glGetTexImage</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token function\">ofGetGLFormatFromInternal</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>glInternalFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">ofGetGLTypeFromInternal</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>glInternalFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span>GL_PIXEL_PACK_BUFFER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">float</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> texData<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">float</span> ofTexture<span class=\"token operator\">::</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> texData<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n","type":"source"}}],"fetch":[]}