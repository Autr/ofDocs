{"data":[{"page":{"entry":{"name":"ofAppEGLWindow.h","filename":"ofAppEGLWindow.h","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/app/ofAppEGLWindow.h","path":"/openframeworks/app/ofAppEGLWindow_h","route":"/openframeworks/app/ofAppEGLWindow.h","dir":"../libs/openFrameworks/app","ext":"h","type":"source","id":210,"parent":207,"breadcrumbs":[207,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofAppBaseWindow.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofThread.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofImage.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofEvents.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofRectangle.h\"</span></span>\n\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;queue></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;map></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;X11/Xlib.h></span></span>\n\n<span class=\"token keyword\">enum</span> ofAppEGLWindowType <span class=\"token punctuation\">{</span>\n\tOF_APP_WINDOW_AUTO<span class=\"token punctuation\">,</span>\n\tOF_APP_WINDOW_NATIVE<span class=\"token punctuation\">,</span>\n\tOF_APP_WINDOW_X11\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> _XIM <span class=\"token operator\">*</span> XIM<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> _XIC <span class=\"token operator\">*</span> XIC<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> Window<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">struct</span> _XDisplay<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> _XDisplay Display<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> EGLBoolean<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> int32_t EGLint<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>EGLDisplay<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>EGLConfig<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>EGLSurface<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>EGLContext<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">typedef</span> std<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span>EGLint<span class=\"token punctuation\">,</span>EGLint<span class=\"token operator\">></span> ofEGLAttributeList<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> std<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span>EGLint<span class=\"token punctuation\">,</span>EGLint<span class=\"token operator\">></span><span class=\"token operator\">::</span>iterator ofEGLAttributeListIterator<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">struct</span> ofAppEGLWindowSettings<span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofGLESWindowSettings <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\tofAppEGLWindowType eglWindowPreference<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">///&lt; what window type is preferred?</span>\n\tEGLint eglWindowOpacity<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">///&lt; 0-255 window alpha value</span>\n\n\tofEGLAttributeList frameBufferAttributes<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// surface creation</span>\n\tofEGLAttributeList windowSurfaceAttributes<span class=\"token punctuation\">;</span>\n\n\tofColor initialClearColor<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span> screenNum<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> layer<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">ofAppEGLWindowSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofAppEGLWindowSettings</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofGLESWindowSettings <span class=\"token operator\">&amp;</span> settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofAppEGLWindow</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofAppBaseGLESWindow<span class=\"token punctuation\">,</span> <span class=\"token keyword\">public</span> ofThread <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// ofAppEGLWindow::Settings is currently deprecated in favor of</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// the ofAppEGLWindowSettings struct</span>\n\t<span class=\"token keyword\">typedef</span> ofAppEGLWindowSettings Settings<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">ofAppEGLWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">ofAppEGLWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">doesLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">allowsMultiWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">needsPolling</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">pollEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">using</span> ofAppBaseGLESWindow<span class=\"token operator\">::</span>setup<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofAppEGLWindowSettings <span class=\"token operator\">&amp;</span> settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofGLESWindowSettings <span class=\"token operator\">&amp;</span> settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">makeCurrent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">swapBuffers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">startRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">finishRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tofCoreEvents <span class=\"token operator\">&amp;</span> <span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofBaseRenderer<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token function\">renderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setThreadTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> timeOut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> threadTimeout <span class=\"token operator\">=</span> timeOut<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">hideCursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">showCursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setWindowShape</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">virtual</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token function\">getWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token function\">getWindowSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token function\">getScreenSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setOrientation</span><span class=\"token punctuation\">(</span>ofOrientation orientation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> ofOrientation <span class=\"token function\">getOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">doesHWOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//this is used by ofGetWidth and now determines the window width based on orientation</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">int</span>\t<span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">int</span>\t<span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setWindowTitle</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// TODO const correct</span>\n\n\t<span class=\"token keyword\">virtual</span> ofWindowMode <span class=\"token function\">getWindowMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setFullscreen</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> fullscreen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">toggleFullscreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">enableSetupScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">disableSetupScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setVerticalSync</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> enabled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tEGLDisplay <span class=\"token function\">getEglDisplay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\tEGLSurface <span class=\"token function\">getEglSurface</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\tEGLContext <span class=\"token function\">getEglContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_RASPBERRY_PI_LEGACY</span>\n\tDisplay<span class=\"token operator\">*</span> <span class=\"token function\">getX11Display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tWindow <span class=\"token function\">getX11Window</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\tEGLConfig <span class=\"token function\">getEglConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\tEGLint <span class=\"token function\">getEglVersionMajor</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\tEGLint <span class=\"token function\">getEglVersionMinor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setWindowRect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofRectangle<span class=\"token operator\">&amp;</span> requestedWindowRect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//\tbool create</span>\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setupPeripherals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">virtual</span> ofRectangle <span class=\"token function\">getScreenRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">getWindowWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">getWindowHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tofWindowMode windowMode<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> bNewScreenMode<span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">///&lt; \\brief This indicates if a (new) window rectangle has to be adjusted.</span>\n\t<span class=\"token keyword\">int</span>\tbuttonInUse<span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">///&lt; \\brief Mouse button currently in use.</span>\n\t<span class=\"token keyword\">bool</span> bEnableSetupScreen<span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">///&lt; \\brief This indicates the need/intent to draw a setup screen.</span>\n\t<span class=\"token keyword\">bool</span> bShowCursor<span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">///&lt; \\brief Indicate the visibility of the (mouse) cursor.</span>\n\n\tstd<span class=\"token operator\">::</span>string eglDisplayString<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> nFramesSinceWindowResized<span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">///&lt; \\brief The number of frames passed/shown since the window got resized.</span>\n\tofOrientation orientation<span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">threadedFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>queue<span class=\"token operator\">&lt;</span>ofMouseEventArgs<span class=\"token operator\">></span> mouseEvents<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>queue<span class=\"token operator\">&lt;</span>ofKeyEventArgs<span class=\"token operator\">></span>   keyEvents<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">checkEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofImage mouseCursor<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// TODO: getters and setters?  OR automatically set based on</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// OS or screen size?  Should be changed when screen is resized?</span>\n\t<span class=\"token keyword\">float</span> mouseScaleX<span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">///&lt; \\brief Amount by which to mouse movements along the X axis.</span>\n\t<span class=\"token keyword\">float</span> mouseScaleY<span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">///&lt; \\brief Amount by which to mouse movements along the Y axis.</span>\n\n\n\t<span class=\"token comment\" spellcheck=\"true\">// float getMouseScaleX() const;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// void setMouseScaleX(float x);</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// float getMouseScaleY() const;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// void setMouseScaleY(float y);</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// For absolute input devices that send ABS_X and ABS_Y events, we want to store</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// information about the min and max axis values.</span>\n\t<span class=\"token keyword\">int</span> mouseAbsXMin<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> mouseAbsXMax<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> mouseAbsYMin<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> mouseAbsYMax<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">hasMouse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> mouseDetected<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">hasKeyboard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> keyboardDetected<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">// EGL</span>\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">createSurface</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">destroySurface</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// bool resizeSurface();</span>\n\n\tEGLDisplay eglDisplay<span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">// EGL display connection</span>\n\tEGLSurface eglSurface<span class=\"token punctuation\">;</span>\n\tEGLContext eglContext<span class=\"token punctuation\">;</span>\n\n\tEGLConfig eglConfig<span class=\"token punctuation\">;</span>\n\n\tEGLint eglVersionMajor<span class=\"token punctuation\">;</span>\n\tEGLint eglVersionMinor<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">// PLATFORM SPECIFIC WINDOWING</span>\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">// WINDOWING</span>\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// EGL window</span>\n\tofRectangle nonFullscreenWindowRect<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// the rectangle describing the non-fullscreen window</span>\n\tofRectangle currentWindowRect<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// the rectangle describing the current device</span>\n\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">createWindow</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofRectangle<span class=\"token operator\">&amp;</span> requestedWindowRect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">destroyWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">bool</span> isUsingX11<span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">///&lt; \\brief Indicate the use of the X Window System.</span>\n\n\t<span class=\"token keyword\">bool</span> isWindowInited<span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">///&lt; \\brief Indicate that the window is (properly) initialized.</span>\n\t<span class=\"token keyword\">bool</span> isSurfaceInited<span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">///&lt; \\brief Indicate that the surface is (properly) initialized.</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">initNative</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">exitNative</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tEGLNativeWindowType <span class=\"token function\">getNativeWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tEGLNativeDisplayType <span class=\"token function\">getNativeDisplay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_RASPBERRY_PI_LEGACY</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">initRPiNative</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">exitRPiNative</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tEGL_DISPMANX_WINDOW_T dispman_native_window<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// rpi</span>\n\n\tDISPMANX_UPDATE_HANDLE_T dispman_update<span class=\"token punctuation\">;</span>\n\tDISPMANX_ELEMENT_HANDLE_T dispman_element<span class=\"token punctuation\">;</span>\n\tDISPMANX_DISPLAY_HANDLE_T dispman_display<span class=\"token punctuation\">;</span>\n\n\tDISPMANX_CLAMP_T  dispman_clamp<span class=\"token punctuation\">;</span>\n\tDISPMANX_TRANSFORM_T dispman_transform<span class=\"token punctuation\">;</span>\n\tVC_DISPMANX_ALPHA_T\tdispman_alpha<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">createRPiNativeWindow</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofRectangle<span class=\"token operator\">&amp;</span> requestedWindowRect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">// if you are not raspberry pi, you will not be able to</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// create a window without using x11.</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\tDisplay<span class=\"token operator\">*</span> x11Display<span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">///&lt; \\brief Indicate which X11 display is in use (currently).</span>\n\tScreen<span class=\"token operator\">*</span> x11Screen<span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">///&lt; \\brief Indicate which X11 screen is in use (currently).</span>\n\tWindow x11Window<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">long</span> x11ScreenNum<span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">///&lt; \\brief The number of the X11 screen is in use (currently).</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">createX11NativeWindow</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofRectangle<span class=\"token operator\">&amp;</span> requestedWindowRect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">// EVENTS</span>\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setupNativeEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">destroyNativeEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setupNativeUDev</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">destroyNativeUDev</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setupNativeInput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">destroyNativeInput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">readNativeUDevEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">readNativeInputEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">processInput</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> fd<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">addInput</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> node<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> isMouse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">removeInput</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">printInput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">handleX11Event</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> XEvent<span class=\"token operator\">&amp;</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\tofAppEGLWindowSettings settings<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> glesVersion<span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">///&lt; \\brief Indicate the version of OpenGL for Embedded Systems.</span>\n\t<span class=\"token keyword\">bool</span> keyboardDetected<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> mouseDetected<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">long</span> threadTimeout<span class=\"token punctuation\">;</span>\n\tofCoreEvents coreEvents<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofBaseRenderer<span class=\"token operator\">></span> currentRenderer<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> ofAppEGLWindow <span class=\"token operator\">*</span> instance<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n","type":"source"}}],"fetch":[]}