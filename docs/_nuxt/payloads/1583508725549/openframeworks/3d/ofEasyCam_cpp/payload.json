{"data":[{"page":{"entry":{"name":"ofEasyCam.cpp","filename":"ofEasyCam.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/3d/ofEasyCam.cpp","path":"/openframeworks/3d/ofEasyCam_cpp","route":"/openframeworks/3d/ofEasyCam.cpp","dir":"../libs/openFrameworks/3d","ext":"cpp","type":"source","id":202,"parent":194,"breadcrumbs":[194,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofEasyCam.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofMath.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGraphicsBaseTypes.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;limits></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"glm/gtx/vector_angle.hpp\"</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// when an ofEasyCam is moving due to momentum, this keeps it</span>\n<span class=\"token comment\" spellcheck=\"true\">// from moving forever by assuming small values are zero.</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> minDifference <span class=\"token operator\">=</span> <span class=\"token number\">0.1e-5f</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// this is the default on windows os</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> doubleclickTime <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">ofEasyCam</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsensitivityTranslate <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\tsensitivityRot <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">addInteraction</span><span class=\"token punctuation\">(</span>TRANSFORM_TRANSLATE_XY<span class=\"token punctuation\">,</span> OF_MOUSE_BUTTON_LEFT<span class=\"token punctuation\">,</span>doTranslationKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">addInteraction</span><span class=\"token punctuation\">(</span>TRANSFORM_ROTATE<span class=\"token punctuation\">,</span> OF_MOUSE_BUTTON_LEFT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">addInteraction</span><span class=\"token punctuation\">(</span>TRANSFORM_TRANSLATE_Z<span class=\"token punctuation\">,</span> OF_MOUSE_BUTTON_RIGHT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">addInteraction</span><span class=\"token punctuation\">(</span>TRANSFORM_TRANSLATE_XY<span class=\"token punctuation\">,</span> OF_MOUSE_BUTTON_MIDDLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>ofEventArgs <span class=\"token operator\">&amp;</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>viewport<span class=\"token punctuation\">.</span><span class=\"token function\">isZero</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tviewport <span class=\"token operator\">=</span> <span class=\"token function\">getViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bDistanceSet <span class=\"token operator\">&amp;&amp;</span> bAutoDistance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setDistance</span><span class=\"token punctuation\">(</span><span class=\"token function\">getImagePlaneDistance</span><span class=\"token punctuation\">(</span>viewport<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bMouseInputEnabled <span class=\"token operator\">&amp;&amp;</span> events<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>events<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getMousePressed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">updateMouse</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">vec2</span><span class=\"token punctuation\">(</span>events<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getMouseX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>events<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getMouseY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentTransformType <span class=\"token operator\">==</span> TRANSFORM_ROTATE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">updateRotation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentTransformType <span class=\"token operator\">==</span> TRANSFORM_TRANSLATE_XY <span class=\"token operator\">||</span>\n\t\t\t\t  currentTransformType <span class=\"token operator\">==</span> TRANSFORM_TRANSLATE_Z  <span class=\"token operator\">||</span>\n\t\t\t\t  currentTransformType <span class=\"token operator\">==</span> TRANSFORM_SCALE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">updateTranslation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofRectangle <span class=\"token operator\">&amp;</span> _viewport<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bEventsSet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setEvents</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tviewport <span class=\"token operator\">=</span> _viewport<span class=\"token punctuation\">;</span>\n\tofCamera<span class=\"token operator\">::</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span>viewport<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\ttarget<span class=\"token punctuation\">.</span><span class=\"token function\">resetTransform</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\ttarget<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">resetTransform</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> lastDistance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\trot <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\ttranslate <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bAutoDistance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        bDistanceSet <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\tbApplyInertia <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tcurrentTransformType <span class=\"token operator\">=</span> TRANSFORM_NONE<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">setTarget</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> targetPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\ttarget<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>targetPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">setTarget</span><span class=\"token punctuation\">(</span>ofNode<span class=\"token operator\">&amp;</span> targetNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\ttarget <span class=\"token operator\">=</span> targetNode<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">const</span> ofNode<span class=\"token operator\">&amp;</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">getTarget</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> target<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">setDistance</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> distance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setDistance</span><span class=\"token punctuation\">(</span>distance<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">setDistance</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> distance<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> save<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token comment\" spellcheck=\"true\">//should this be the distance from the camera to the target?</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>distance <span class=\"token operator\">></span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>save<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>lastDistance <span class=\"token operator\">=</span> distance<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>distance <span class=\"token operator\">*</span> <span class=\"token function\">getZAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tbDistanceSet <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">getDistance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> glm<span class=\"token operator\">::</span><span class=\"token function\">distance</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">setAutoDistance</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bAutoDistance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>bAutoDistance <span class=\"token operator\">=</span> bAutoDistance<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bAutoDistance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tbDistanceSet <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">setDrag</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> drag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>drag <span class=\"token operator\">=</span> drag<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">getDrag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> drag<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">setTranslationKey</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tdoTranslationKey <span class=\"token operator\">=</span> key<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">char</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">getTranslationKey</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> doTranslationKey<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">enableMouseInput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bMouseInputEnabled <span class=\"token operator\">&amp;&amp;</span> events<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tlisteners<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>events<span class=\"token operator\">-</span><span class=\"token operator\">></span>update<span class=\"token punctuation\">.</span><span class=\"token function\">newListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ofEasyCam<span class=\"token operator\">::</span>update<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tlisteners<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>events<span class=\"token operator\">-</span><span class=\"token operator\">></span>mousePressed<span class=\"token punctuation\">.</span><span class=\"token function\">newListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ofEasyCam<span class=\"token operator\">::</span>mousePressed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tlisteners<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>events<span class=\"token operator\">-</span><span class=\"token operator\">></span>mouseReleased<span class=\"token punctuation\">.</span><span class=\"token function\">newListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ofEasyCam<span class=\"token operator\">::</span>mouseReleased<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tlisteners<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>events<span class=\"token operator\">-</span><span class=\"token operator\">></span>mouseScrolled<span class=\"token punctuation\">.</span><span class=\"token function\">newListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ofEasyCam<span class=\"token operator\">::</span>mouseScrolled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// if enableMouseInput was called within ofApp::setup()</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// `events` will still carry a null pointer, and bad things</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// will happen. Therefore we only update the flag. </span>\n\tbMouseInputEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// setEvents() is called upon first load, and will make sure </span>\n\t<span class=\"token comment\" spellcheck=\"true\">// to enable the mouse input once the camera is fully loaded.</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">disableMouseInput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bMouseInputEnabled <span class=\"token operator\">&amp;&amp;</span> events<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tlisteners<span class=\"token punctuation\">.</span><span class=\"token function\">unsubscribeAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// if disableMouseInput was called within ofApp::setup()</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// `events` will still carry a null pointer, and bad things</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// will happen. Therefore we only update the flag. </span>\n\tbMouseInputEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// setEvents() is called upon first load, and will make sure </span>\n\t<span class=\"token comment\" spellcheck=\"true\">// to enable the mouse input once the camera is fully loaded.</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">getMouseInputEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> bMouseInputEnabled<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">setEvents</span><span class=\"token punctuation\">(</span>ofCoreEvents <span class=\"token operator\">&amp;</span> _events<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// If en/disableMouseInput were called within ofApp::setup(),</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// bMouseInputEnabled will tell us about whether the camera</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// mouse input needs to be initialised as enabled or disabled.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// we will still set `events`, so that subsequent enabling</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// and disabling can work.</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// we need a temporary copy of bMouseInputEnabled, since it will </span>\n\t<span class=\"token comment\" spellcheck=\"true\">// get changed by disableMouseInput as a side-effect.</span>\n\t<span class=\"token keyword\">bool</span> wasMouseInputEnabled <span class=\"token operator\">=</span> bMouseInputEnabled<span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">// || !events;</span>\n\t<span class=\"token function\">disableMouseInput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tevents <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>_events<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>wasMouseInputEnabled<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// note: this will set bMouseInputEnabled to true as a side-effect.</span>\n\t\t<span class=\"token function\">enableMouseInput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tbEventsSet <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">setRotationSensitivity</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> sensitivity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tsensitivityRot <span class=\"token operator\">=</span> sensitivity<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">setRotationSensitivity</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setRotationSensitivity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">setTranslationSensitivity</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> sensitivity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tsensitivityTranslate <span class=\"token operator\">=</span> sensitivity<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">setTranslationSensitivity</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tsensitivityTranslate <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">enableMouseMiddleButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbEnableMouseMiddleButton <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">disableMouseMiddleButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbEnableMouseMiddleButton <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">getMouseMiddleButtonEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> bEnableMouseMiddleButton<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nglm<span class=\"token operator\">::</span>vec3 ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">up</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bRelativeYAxis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bApplyInertia<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">getYAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> lastPressAxisY<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> upAxis<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">setRelativeYAxis</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> relative<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbRelativeYAxis <span class=\"token operator\">=</span> relative<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">getRelativeYAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> bRelativeYAxis<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">setUpAxis</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> _up<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tupAxis <span class=\"token operator\">=</span> _up<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">getUpAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> upAxis<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">enableInertia</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tdoInertia <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">disableInertia</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tdoInertia <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">getInertiaEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> doInertia<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">updateTranslation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bApplyInertia<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\ttranslate <span class=\"token operator\">*</span><span class=\"token operator\">=</span> drag<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>translate<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> minDifference <span class=\"token operator\">&amp;&amp;</span> std<span class=\"token operator\">::</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>translate<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> minDifference <span class=\"token operator\">&amp;&amp;</span> std<span class=\"token operator\">::</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>translate<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> minDifference<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\ttranslate <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\t\tbApplyInertia <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\tcurrentTransformType <span class=\"token operator\">=</span> TRANSFORM_NONE<span class=\"token punctuation\">;</span>\n\n\t\t\tbIsScrolling <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">getXAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> translate<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getYAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> translate<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getZAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> translate<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentTransformType <span class=\"token operator\">==</span> TRANSFORM_TRANSLATE_XY <span class=\"token operator\">||</span>\n\t   currentTransformType <span class=\"token operator\">==</span> TRANSFORM_TRANSLATE_Z  <span class=\"token operator\">||</span>\n\t   currentTransformType <span class=\"token operator\">==</span> TRANSFORM_SCALE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">getOrtho</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//In ortho mode moving along the z axis has no effect besides clipping.</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// Instead, scale is applied to achieve the effect of getting near or far from the target.</span>\n\t\t\tglm<span class=\"token operator\">::</span>vec3 mousePre <span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">bool</span> bDoScale <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>currentTransformType <span class=\"token operator\">==</span> TRANSFORM_SCALE <span class=\"token operator\">||</span> currentTransformType <span class=\"token operator\">==</span> TRANSFORM_TRANSLATE_Z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bDoScale<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\tmousePre <span class=\"token operator\">=</span> <span class=\"token function\">screenToWorld</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>bIsScrolling<span class=\"token operator\">?</span>mouseAtScroll<span class=\"token operator\">:</span>lastPressMouse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token function\">move</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>lastPressAxisX <span class=\"token operator\">*</span> translate<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>lastPressAxisY <span class=\"token operator\">*</span> translate<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bDoScale<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span><span class=\"token function\">getScale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> translate<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">// this move call is to keep the scaling centered below the mouse.</span>\n\t\t\t\t<span class=\"token function\">move</span><span class=\"token punctuation\">(</span>mousePre <span class=\"token operator\">-</span> <span class=\"token function\">screenToWorld</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>bIsScrolling<span class=\"token operator\">?</span>mouseAtScroll<span class=\"token operator\">:</span>lastPressMouse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">move</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>lastPressAxisX <span class=\"token operator\">*</span> translate<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>lastPressAxisY <span class=\"token operator\">*</span> translate<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>lastPressAxisZ <span class=\"token operator\">*</span> translate<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bIsScrolling<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//this it to avoid the transformation to keep on after scrolling ended.</span>\n\t\tcurrentTransformType <span class=\"token operator\">=</span> TRANSFORM_NONE<span class=\"token punctuation\">;</span>\n\t\tbIsScrolling <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">updateRotation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bApplyInertia<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\trot <span class=\"token operator\">*</span><span class=\"token operator\">=</span>drag<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>rot<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> minDifference <span class=\"token operator\">&amp;&amp;</span> std<span class=\"token operator\">::</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>rot<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> minDifference <span class=\"token operator\">&amp;&amp;</span> std<span class=\"token operator\">::</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>rot<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> minDifference<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\trot <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\t\tbApplyInertia <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\tcurrentTransformType <span class=\"token operator\">=</span> TRANSFORM_NONE<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bApplyInertia<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tcurRot <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">angleAxis</span><span class=\"token punctuation\">(</span>rot<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">,</span> <span class=\"token function\">getZAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> glm<span class=\"token operator\">::</span><span class=\"token function\">angleAxis</span><span class=\"token punctuation\">(</span>rot<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token function\">up</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> glm<span class=\"token operator\">::</span><span class=\"token function\">angleAxis</span><span class=\"token punctuation\">(</span>rot<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token function\">getXAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">rotateAround</span><span class=\"token punctuation\">(</span>curRot<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">.</span><span class=\"token function\">getGlobalPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>curRot<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tcurRot <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">angleAxis</span><span class=\"token punctuation\">(</span>rot<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">,</span> lastPressAxisZ<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> glm<span class=\"token operator\">::</span><span class=\"token function\">angleAxis</span><span class=\"token punctuation\">(</span>rot<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token function\">up</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> glm<span class=\"token operator\">::</span><span class=\"token function\">angleAxis</span><span class=\"token punctuation\">(</span>rot<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> lastPressAxisX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">setOrientation</span><span class=\"token punctuation\">(</span>curRot <span class=\"token operator\">*</span> lastPressOrientation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>curRot <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>lastPressPosition<span class=\"token operator\">-</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">getGlobalPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> target<span class=\"token punctuation\">.</span><span class=\"token function\">getGlobalPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">setControlArea</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofRectangle <span class=\"token operator\">&amp;</span> _controlArea<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tcontrolArea <span class=\"token operator\">=</span> _controlArea<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">clearControlArea</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tcontrolArea <span class=\"token operator\">=</span> <span class=\"token function\">ofRectangle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofRectangle ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">getControlArea</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>controlArea<span class=\"token punctuation\">.</span><span class=\"token function\">isZero</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>viewport<span class=\"token punctuation\">.</span><span class=\"token function\">isZero</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">getRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getCurrentViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">return</span> viewport<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> controlArea<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">mousePressed</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> mouse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofRectangle area <span class=\"token operator\">=</span> <span class=\"token function\">getControlArea</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>area<span class=\"token punctuation\">.</span><span class=\"token function\">inside</span><span class=\"token punctuation\">(</span>mouse<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> mouse<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tlastPressMouse <span class=\"token operator\">=</span> mouse<span class=\"token punctuation\">;</span>\n\t\tprevMouse <span class=\"token operator\">=</span> mouse<span class=\"token punctuation\">;</span>\n\t\tlastPressAxisX <span class=\"token operator\">=</span> <span class=\"token function\">getXAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tlastPressAxisY <span class=\"token operator\">=</span> <span class=\"token function\">getYAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tlastPressAxisZ <span class=\"token operator\">=</span> <span class=\"token function\">getZAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tlastPressPosition <span class=\"token operator\">=</span> ofCamera<span class=\"token operator\">::</span><span class=\"token function\">getGlobalPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tlastPressOrientation <span class=\"token operator\">=</span> ofCamera<span class=\"token operator\">::</span><span class=\"token function\">getGlobalOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tcurrentTransformType <span class=\"token operator\">=</span> TRANSFORM_NONE<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>events<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> i<span class=\"token operator\">:</span> interactions<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>mouseButton <span class=\"token operator\">==</span> mouse<span class=\"token punctuation\">.</span>button <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> events<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getKeyPressed</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t\tcurrentTransformType <span class=\"token operator\">=</span> i<span class=\"token punctuation\">.</span>transformType<span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentTransformType <span class=\"token operator\">==</span> TRANSFORM_ROTATE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tbInsideArcball <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span>mouse <span class=\"token operator\">-</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec2</span><span class=\"token punctuation\">(</span>area<span class=\"token punctuation\">.</span><span class=\"token function\">getCenter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> std<span class=\"token operator\">::</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>area<span class=\"token punctuation\">.</span>width<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> area<span class=\"token punctuation\">.</span>height<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tbApplyInertia <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">mouseReleased</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> mouse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofRectangle area <span class=\"token operator\">=</span> <span class=\"token function\">getControlArea</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>area<span class=\"token punctuation\">.</span><span class=\"token function\">inside</span><span class=\"token punctuation\">(</span>mouse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// Check if it's double click</span>\n\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> curTap <span class=\"token operator\">=</span> <span class=\"token function\">ofGetElapsedTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>lastTap <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> curTap <span class=\"token operator\">-</span> lastTap <span class=\"token operator\">&lt;</span> doubleclickTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tlastTap <span class=\"token operator\">=</span> curTap<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>doInertia<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tbApplyInertia <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tcurrentTransformType <span class=\"token operator\">=</span> TRANSFORM_NONE<span class=\"token punctuation\">;</span>\n\t\trot <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\ttranslate <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">mouseScrolled</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> mouse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofRectangle area <span class=\"token operator\">=</span> <span class=\"token function\">getControlArea</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>area<span class=\"token punctuation\">.</span><span class=\"token function\">inside</span><span class=\"token punctuation\">(</span>mouse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tmouseVel <span class=\"token operator\">=</span> mouse  <span class=\"token operator\">-</span> prevMouse<span class=\"token punctuation\">;</span>\n\t\tprevMouse <span class=\"token operator\">=</span> mouse<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>doInertia<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tbApplyInertia <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tlastPressPosition <span class=\"token operator\">=</span> ofCamera<span class=\"token operator\">::</span><span class=\"token function\">getGlobalPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tlastPressAxisZ <span class=\"token operator\">=</span> <span class=\"token function\">getZAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getOrtho</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\ttranslate<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> sensitivityScroll <span class=\"token operator\">*</span> mouse<span class=\"token punctuation\">.</span>scrollY <span class=\"token operator\">/</span> viewport<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\t\t\tmouseAtScroll <span class=\"token operator\">=</span> mouse<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\ttranslate<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> mouse<span class=\"token punctuation\">.</span>scrollY <span class=\"token operator\">*</span> <span class=\"token number\">30</span> <span class=\"token operator\">*</span> sensitivityTranslate<span class=\"token punctuation\">.</span>z <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getDistance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> std<span class=\"token operator\">::</span>numeric_limits<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">epsilon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span> area<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tcurrentTransformType <span class=\"token operator\">=</span> TRANSFORM_SCALE<span class=\"token punctuation\">;</span>\n\t\tbIsScrolling <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">updateMouse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span> mouse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofRectangle area <span class=\"token operator\">=</span> <span class=\"token function\">getControlArea</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> vFlip <span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\trot <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\ttranslate <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>currentTransformType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t    <span class=\"token keyword\">case</span> TRANSFORM_ROTATE<span class=\"token operator\">:</span>\n\t\t\tmouseVel <span class=\"token operator\">=</span> mouse  <span class=\"token operator\">-</span> lastPressMouse<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bInsideArcball<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\trot<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> vFlip <span class=\"token operator\">*</span> <span class=\"token operator\">-</span>mouseVel<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> sensitivityRot<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> glm<span class=\"token operator\">::</span>pi<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> std<span class=\"token operator\">::</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>area<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> area<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\trot<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>mouseVel<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> sensitivityRot<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> glm<span class=\"token operator\">::</span>pi<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> std<span class=\"token operator\">::</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span>area<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> area<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\tglm<span class=\"token operator\">::</span>vec2 <span class=\"token function\">center</span><span class=\"token punctuation\">(</span>area<span class=\"token punctuation\">.</span><span class=\"token function\">getCenter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\trot<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> sensitivityRot<span class=\"token punctuation\">.</span>z <span class=\"token operator\">*</span> <span class=\"token operator\">-</span>vFlip <span class=\"token operator\">*</span> glm<span class=\"token operator\">::</span><span class=\"token function\">orientedAngle</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>mouse <span class=\"token operator\">-</span> center<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   glm<span class=\"token operator\">::</span><span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>lastPressMouse <span class=\"token operator\">-</span> center<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> TRANSFORM_TRANSLATE_XY<span class=\"token operator\">:</span>\n\t\t\tmouseVel <span class=\"token operator\">=</span> mouse  <span class=\"token operator\">-</span> prevMouse<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getOrtho</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\ttranslate<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>mouseVel<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> <span class=\"token function\">getScale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span>\n\t\t\t\ttranslate<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> vFlip <span class=\"token operator\">*</span> mouseVel<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> <span class=\"token function\">getScale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\ttranslate<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>mouseVel<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> sensitivityTranslate<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> <span class=\"token number\">0.5f</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getDistance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> std<span class=\"token operator\">::</span>numeric_limits<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">epsilon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span> area<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t\t\t\ttranslate<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> vFlip <span class=\"token operator\">*</span> mouseVel<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> sensitivityTranslate<span class=\"token punctuation\">.</span>y<span class=\"token operator\">*</span> <span class=\"token number\">0.5f</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getDistance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> std<span class=\"token operator\">::</span>numeric_limits<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">epsilon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span> area<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> TRANSFORM_TRANSLATE_Z<span class=\"token operator\">:</span>\n\t\t\tmouseVel <span class=\"token operator\">=</span> mouse  <span class=\"token operator\">-</span> prevMouse<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getOrtho</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\ttranslate<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> mouseVel<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> sensitivityScroll <span class=\"token operator\">/</span> area<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\ttranslate<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> mouseVel<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>sensitivityTranslate<span class=\"token punctuation\">.</span>z <span class=\"token operator\">*</span> <span class=\"token number\">0.7f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getDistance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> std<span class=\"token operator\">::</span>numeric_limits<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">epsilon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span> area<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tprevMouse <span class=\"token operator\">=</span> mouse<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">addInteraction</span><span class=\"token punctuation\">(</span>TransformType type<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> mouseButton<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">hasInteraction</span><span class=\"token punctuation\">(</span>mouseButton<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tinteractions<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token function\">interaction</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">,</span> mouseButton<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofEasyCam\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Can not add interaction. It already exists\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">removeInteraction</span><span class=\"token punctuation\">(</span>TransformType type<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> mouseButton<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofRemove</span><span class=\"token punctuation\">(</span>interactions<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>interaction <span class=\"token operator\">&amp;</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> i<span class=\"token punctuation\">.</span>transformType <span class=\"token operator\">==</span> type <span class=\"token operator\">&amp;&amp;</span> i<span class=\"token punctuation\">.</span>mouseButton <span class=\"token operator\">==</span> mouseButton <span class=\"token operator\">&amp;&amp;</span> i<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span>key<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofEasyCam<span class=\"token operator\">::</span> <span class=\"token function\">hasInteraction</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> mouseButton<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> i <span class=\"token operator\">:</span> interactions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>mouseButton <span class=\"token operator\">==</span> mouseButton <span class=\"token operator\">&amp;&amp;</span> i<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofEasyCam<span class=\"token operator\">::</span> <span class=\"token function\">hasInteraction</span><span class=\"token punctuation\">(</span>TransformType type<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> mouseButton<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> i <span class=\"token operator\">:</span> interactions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>transformType <span class=\"token operator\">==</span> type <span class=\"token operator\">&amp;&amp;</span> i<span class=\"token punctuation\">.</span>mouseButton <span class=\"token operator\">==</span> mouseButton <span class=\"token operator\">&amp;&amp;</span> i<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">removeAllInteractions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tinteractions<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofEasyCam<span class=\"token operator\">::</span><span class=\"token function\">onPositionChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bDistanceSet <span class=\"token operator\">&amp;&amp;</span> bAutoDistance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tbDistanceSet <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n","type":"source"}}],"fetch":[]}