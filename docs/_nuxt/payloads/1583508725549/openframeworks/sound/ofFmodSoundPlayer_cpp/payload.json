{"data":[{"page":{"entry":{"name":"ofFmodSoundPlayer.cpp","filename":"ofFmodSoundPlayer.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/sound/ofFmodSoundPlayer.cpp","path":"/openframeworks/sound/ofFmodSoundPlayer_cpp","route":"/openframeworks/sound/ofFmodSoundPlayer.cpp","dir":"../libs/openFrameworks/sound","ext":"cpp","type":"source","id":301,"parent":300,"breadcrumbs":[300,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofFmodSoundPlayer.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_SOUND_PLAYER_FMOD</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofMath.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofLog.h\"</span></span>\n\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> bFmodInitialized_ <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">float</span> fftValues_<span class=\"token punctuation\">[</span><span class=\"token number\">8192</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">float</span> fftInterpValues_<span class=\"token punctuation\">[</span><span class=\"token number\">8192</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">float</span> fftSpectrum_<span class=\"token punctuation\">[</span><span class=\"token number\">8192</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\" spellcheck=\"true\">// maximum #ofFmodSoundPlayer is 8192, in fmodex....</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> buffersize <span class=\"token operator\">=</span> <span class=\"token number\">1024</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">// ---------------------  static vars</span>\n<span class=\"token keyword\">static</span> FMOD_CHANNELGROUP <span class=\"token operator\">*</span> channelgroup<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> FMOD_SYSTEM       <span class=\"token operator\">*</span> sys<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// these are global functions, that affect every sound / channel:</span>\n<span class=\"token comment\" spellcheck=\"true\">// ------------------------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">// ------------------------------------------------------------</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofFmodSoundStopAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofFmodSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">initializeFmod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">FMOD_ChannelGroup_Stop</span><span class=\"token punctuation\">(</span>channelgroup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofFmodSoundSetVolume</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> vol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofFmodSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">initializeFmod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">FMOD_ChannelGroup_SetVolume</span><span class=\"token punctuation\">(</span>channelgroup<span class=\"token punctuation\">,</span> vol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofFmodSoundUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bFmodInitialized_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">FMOD_System_Update</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token operator\">*</span> <span class=\"token function\">ofFmodSoundGetSpectrum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> nBands<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\tofFmodSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">initializeFmod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token comment\" spellcheck=\"true\">// \tset to 0</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">8192</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tfftInterpValues_<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// \tcheck what the user wants vs. what we can do:</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nBands <span class=\"token operator\">></span> <span class=\"token number\">8192</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFmodSoundPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ofFmodGetSpectrum(): requested number of bands \"</span> <span class=\"token operator\">&lt;&lt;</span> nBands <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", using maximum of 8192\"</span><span class=\"token punctuation\">;</span>\n\t\tnBands <span class=\"token operator\">=</span> <span class=\"token number\">8192</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nBands <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFmodSoundPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ofFmodGetSpectrum(): requested number of bands \"</span> <span class=\"token operator\">&lt;&lt;</span> nBands <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", using minimum of 1\"</span><span class=\"token punctuation\">;</span>\n\t\tnBands <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> fftInterpValues_<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// \tFMOD needs pow2</span>\n\t<span class=\"token keyword\">int</span> nBandsToGet <span class=\"token operator\">=</span> <span class=\"token function\">ofNextPow2</span><span class=\"token punctuation\">(</span>nBands<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nBandsToGet <span class=\"token operator\">&lt;</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span> nBandsToGet <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">// can't seem to get fft of 32, etc from fmodex</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// \tget the fft</span>\n\t<span class=\"token function\">FMOD_System_GetSpectrum</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">,</span> fftSpectrum_<span class=\"token punctuation\">,</span> nBandsToGet<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> FMOD_DSP_FFT_WINDOW_HANNING<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// \tconvert to db scale</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nBandsToGet<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        fftValues_<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">10.0f</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token function\">log10</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> fftSpectrum_<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2.0f</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// \ttry to put all of the values (nBandsToGet) into (nBands)</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//  in a way which is accurate and preserves the data:</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nBandsToGet <span class=\"token operator\">==</span> nBands<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nBandsToGet<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tfftInterpValues_<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> fftValues_<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\n\t\t<span class=\"token keyword\">float</span> step \t\t<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>nBandsToGet <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>nBands<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//float pos \t\t= 0;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// so for example, if nBands = 33, nBandsToGet = 64, step = 1.93f;</span>\n\t\t<span class=\"token keyword\">int</span> currentBand <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nBandsToGet<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// if I am current band = 0, I care about (0+1) * step, my end pos</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// if i > endPos, then split i with me and my neighbor</span>\n\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">>=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>currentBand<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>step<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">// do some fractional thing here...</span>\n\t\t\t\t<span class=\"token keyword\">float</span> fraction <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>currentBand<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>step<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>i<span class=\"token number\">-1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">float</span> one_m_fraction <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> fraction<span class=\"token punctuation\">;</span>\n\t\t\t\tfftInterpValues_<span class=\"token punctuation\">[</span>currentBand<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span><span class=\"token operator\">=</span> fraction <span class=\"token operator\">*</span> fftValues_<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\tcurrentBand<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">// safety check:</span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentBand <span class=\"token operator\">>=</span> nBands<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFmodSoundPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ofFmodGetSpectrum(): currentBand >= nBands\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t\tfftInterpValues_<span class=\"token punctuation\">[</span>currentBand<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span><span class=\"token operator\">=</span> one_m_fraction <span class=\"token operator\">*</span> fftValues_<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">// do normal things</span>\n\t\t\t\tfftInterpValues_<span class=\"token punctuation\">[</span>currentBand<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span><span class=\"token operator\">=</span> fftValues_<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// because we added \"step\" amount per band, divide to get the mean:</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nBands<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tfftInterpValues_<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span><span class=\"token operator\">=</span> step<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fftInterpValues_<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>fftInterpValues_<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> \t<span class=\"token comment\" spellcheck=\"true\">// this seems \"wrong\"</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> fftInterpValues_<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofFmodSetBuffersize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> bs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbuffersize <span class=\"token operator\">=</span> bs<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// ------------------------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">// ------------------------------------------------------------</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">// now, the individual sound player:</span>\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\nofFmodSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">ofFmodSoundPlayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbLoop \t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tbLoadedOk \t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tpan \t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// range for oF is -1 to 1</span>\n\tvolume \t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">1.0f</span><span class=\"token punctuation\">;</span>\n\tinternalFreq \t<span class=\"token operator\">=</span> <span class=\"token number\">44100</span><span class=\"token punctuation\">;</span>\n\tspeed \t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\tbPaused \t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tisStreaming\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofFmodSoundPlayer<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofFmodSoundPlayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">unload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">// this should only be called once</span>\n<span class=\"token keyword\">void</span> ofFmodSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">initializeFmod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bFmodInitialized_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\n\t\t<span class=\"token function\">FMOD_System_Create</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>sys<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">// set buffersize, keep number of buffers</span>\n\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> bsTmp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> nbTmp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">FMOD_System_GetDSPBufferSize</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>bsTmp<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>nbTmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">FMOD_System_SetDSPBufferSize</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">,</span> buffersize<span class=\"token punctuation\">,</span> nbTmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_LINUX</span>\n\t\t\t<span class=\"token function\">FMOD_System_SetOutput</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">,</span>FMOD_OUTPUTTYPE_ALSA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token function\">FMOD_System_Init</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> FMOD_INIT_NORMAL<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">//do we want just 32 channels?</span>\n\t\t<span class=\"token function\">FMOD_System_GetMasterChannelGroup</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>channelgroup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tbFmodInitialized_ <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFmodSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">closeFmod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bFmodInitialized_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">FMOD_System_Close</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tbFmodInitialized_ <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofFmodSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path<span class=\"token operator\">&amp;</span> _fileName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">auto</span> fileName <span class=\"token operator\">=</span> <span class=\"token function\">ofToDataPath</span><span class=\"token punctuation\">(</span>_fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// fmod uses IO posix internally, might have trouble</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// with unicode paths...</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// says this code:</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// http://66.102.9.104/search?q=cache:LM47mq8hytwJ:www.cleeker.com/doxygen/audioengine__fmod_8cpp-source.html+FSOUND_Sample_Load+cpp&amp;hl=en&amp;ct=clnk&amp;cd=18&amp;client=firefox-a</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// for now we use FMODs way, but we could switch if</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// there are problems:</span>\n\n\tbMultiPlay <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// [1] init fmod, if necessary</span>\n\n\t<span class=\"token function\">initializeFmod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// [2] try to unload any previously loaded sounds</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// &amp; prevent user-created memory leaks</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// if they call \"loadSound\" repeatedly, for example</span>\n\n\t<span class=\"token function\">unload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// [3] load sound</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//choose if we want streaming</span>\n\t<span class=\"token keyword\">int</span> fmodFlags <span class=\"token operator\">=</span>  FMOD_SOFTWARE<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">)</span>fmodFlags <span class=\"token operator\">=</span>  FMOD_SOFTWARE <span class=\"token operator\">|</span> FMOD_CREATESTREAM<span class=\"token punctuation\">;</span>\n\n    result <span class=\"token operator\">=</span> <span class=\"token function\">FMOD_System_CreateSound</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">,</span> fileName<span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  fmodFlags<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>sound<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result <span class=\"token operator\">!=</span> FMOD_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tbLoadedOk <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFmodSoundPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"loadSound(): could not load \\\"\"</span> <span class=\"token operator\">&lt;&lt;</span> fileName <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\tbLoadedOk <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">FMOD_Sound_GetLength</span><span class=\"token punctuation\">(</span>sound<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>length<span class=\"token punctuation\">,</span> FMOD_TIMEUNIT_PCM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tisStreaming <span class=\"token operator\">=</span> stream<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> bLoadedOk<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFmodSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">unload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bLoadedOk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">// try to stop the sound</span>\n\t\t<span class=\"token function\">FMOD_Sound_Release</span><span class=\"token punctuation\">(</span>sound<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tbLoadedOk <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofFmodSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">isPlaying</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bLoadedOk<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span> playing <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">FMOD_Channel_IsPlaying</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>playing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>playing <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">float</span> ofFmodSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">getSpeed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> speed<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">float</span> ofFmodSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">getPan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> pan<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">float</span> ofFmodSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">getVolume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> volume<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofFmodSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">isLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> bLoadedOk<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFmodSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">setVolume</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> vol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isPlaying</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">FMOD_Channel_SetVolume</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">,</span> vol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tvolume <span class=\"token operator\">=</span> vol<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFmodSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> pct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isPlaying</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">int</span> sampleToBeAt <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>length <span class=\"token operator\">*</span> pct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">FMOD_Channel_SetPosition</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">,</span> sampleToBeAt<span class=\"token punctuation\">,</span> FMOD_TIMEUNIT_PCM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofFmodSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">setPositionMS</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> ms<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isPlaying</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">FMOD_Channel_SetPosition</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">,</span> ms<span class=\"token punctuation\">,</span> FMOD_TIMEUNIT_MS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">float</span> ofFmodSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isPlaying</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> sampleImAt<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">FMOD_Channel_GetPosition</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>sampleImAt<span class=\"token punctuation\">,</span> FMOD_TIMEUNIT_PCM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">float</span> pct <span class=\"token operator\">=</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tpct <span class=\"token operator\">=</span> sampleImAt <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>length<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">return</span> pct<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofFmodSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">getPositionMS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isPlaying</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> sampleImAt<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">FMOD_Channel_GetPosition</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>sampleImAt<span class=\"token punctuation\">,</span> FMOD_TIMEUNIT_MS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">return</span> sampleImAt<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFmodSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">setPan</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tpan <span class=\"token operator\">=</span> p<span class=\"token punctuation\">;</span>\n\tp <span class=\"token operator\">=</span> <span class=\"token function\">ofClamp</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isPlaying</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">FMOD_Channel_SetPan</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFmodSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">setPaused</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isPlaying</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">FMOD_Channel_SetPaused</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">,</span>bP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tbPaused <span class=\"token operator\">=</span> bP<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFmodSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">setSpeed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> spd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isPlaying</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">FMOD_Channel_SetFrequency</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">,</span> internalFreq <span class=\"token operator\">*</span> spd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tspeed <span class=\"token operator\">=</span> spd<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFmodSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">setLoop</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bLp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isPlaying</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">FMOD_Channel_SetMode</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">,</span>  <span class=\"token punctuation\">(</span>bLp <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> FMOD_LOOP_NORMAL <span class=\"token operator\">:</span> FMOD_LOOP_OFF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tbLoop <span class=\"token operator\">=</span> bLp<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// ----------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFmodSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">setMultiPlay</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bMp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbMultiPlay <span class=\"token operator\">=</span> bMp<span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\" spellcheck=\"true\">// be careful with this...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// ----------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFmodSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// if it's a looping sound, we should try to kill it, no?</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// or else people will have orphan channels that are looping</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bLoop <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">FMOD_Channel_Stop</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// if the sound is not set to multiplay, then stop the current,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// before we start another</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bMultiPlay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">FMOD_Channel_Stop</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">FMOD_System_PlaySound</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">,</span> FMOD_CHANNEL_FREE<span class=\"token punctuation\">,</span> sound<span class=\"token punctuation\">,</span> bPaused<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>channel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">FMOD_Channel_GetFrequency</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>internalFreq<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">FMOD_Channel_SetVolume</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">,</span>volume<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setPan</span><span class=\"token punctuation\">(</span>pan<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">FMOD_Channel_SetFrequency</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">,</span> internalFreq <span class=\"token operator\">*</span> speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">FMOD_Channel_SetMode</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">,</span>  <span class=\"token punctuation\">(</span>bLoop <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> FMOD_LOOP_NORMAL <span class=\"token operator\">:</span> FMOD_LOOP_OFF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//fmod update() should be called every frame - according to the docs.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//we have been using fmod without calling it at all which resulted in channels not being able</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//to be reused.  we should have some sort of global update function but putting it here</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//solves the channel bug</span>\n\t<span class=\"token function\">FMOD_System_Update</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// ----------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFmodSoundPlayer<span class=\"token operator\">::</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">FMOD_Channel_Stop</span><span class=\"token punctuation\">(</span>channel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span> </span><span class=\"token comment\" spellcheck=\"true\">//OF_SOUND_PLAYER_FMOD</span>","type":"source"}}],"fetch":[]}