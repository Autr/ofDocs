{"data":[{"page":{"entry":{"name":"ofRtAudioSoundStream.cpp","filename":"ofRtAudioSoundStream.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/sound/ofRtAudioSoundStream.cpp","path":"/openframeworks/sound/ofRtAudioSoundStream_cpp","route":"/openframeworks/sound/ofRtAudioSoundStream.cpp","dir":"../libs/openFrameworks/sound","ext":"cpp","type":"source","id":305,"parent":300,"breadcrumbs":[300,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofRtAudioSoundStream.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofMath.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofAppRunner.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofLog.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"RtAudio.h\"</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------------------</span>\nRtAudio<span class=\"token operator\">::</span>Api <span class=\"token function\">toRtAudio</span><span class=\"token punctuation\">(</span>ofSoundDevice<span class=\"token operator\">::</span>Api api<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>api<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> ofSoundDevice<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>ALSA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> RtAudio<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>LINUX_ALSA<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> ofSoundDevice<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>PULSE<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> RtAudio<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>LINUX_PULSE<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> ofSoundDevice<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>OSS<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> RtAudio<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>LINUX_OSS<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> ofSoundDevice<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>JACK<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> RtAudio<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>UNIX_JACK<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_LINUX</span>\n\t<span class=\"token keyword\">case</span> ofSoundDevice<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>OSX_CORE<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> RtAudio<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>MACOSX_CORE<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> ofSoundDevice<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>MS_WASAPI<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> RtAudio<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>WINDOWS_WASAPI<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> ofSoundDevice<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>MS_ASIO<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> RtAudio<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>WINDOWS_ASIO<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> ofSoundDevice<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>MS_DS<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> RtAudio<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>WINDOWS_DS<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> RtAudio<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>UNSPECIFIED<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------------------</span>\nofSoundDevice<span class=\"token operator\">::</span>Api <span class=\"token function\">toOf</span><span class=\"token punctuation\">(</span>RtAudio<span class=\"token operator\">::</span>Api api<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>api<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> RtAudio<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>LINUX_ALSA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> ofSoundDevice<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>ALSA<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> RtAudio<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>LINUX_PULSE<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> ofSoundDevice<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>PULSE<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> RtAudio<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>LINUX_OSS<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> ofSoundDevice<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>OSS<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> RtAudio<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>UNIX_JACK<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> ofSoundDevice<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>JACK<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_LINUX</span>\n\t<span class=\"token keyword\">case</span> RtAudio<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>MACOSX_CORE<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> ofSoundDevice<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>OSX_CORE<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> RtAudio<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>WINDOWS_WASAPI<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> ofSoundDevice<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>MS_WASAPI<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> RtAudio<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>WINDOWS_ASIO<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> ofSoundDevice<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>MS_ASIO<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> RtAudio<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>WINDOWS_DS<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> ofSoundDevice<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>MS_DS<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> ofSoundDevice<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>UNSPECIFIED<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------------------</span>\nofRtAudioSoundStream<span class=\"token operator\">::</span><span class=\"token function\">ofRtAudioSoundStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\ttickCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------------------</span>\nofRtAudioSoundStream<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofRtAudioSoundStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------------------</span>\nstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>ofSoundDevice<span class=\"token operator\">></span> ofRtAudioSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getDeviceList</span><span class=\"token punctuation\">(</span>ofSoundDevice<span class=\"token operator\">::</span>Api api<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tvector<span class=\"token operator\">&lt;</span>ofSoundDevice<span class=\"token operator\">></span> deviceList<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">auto</span> rtAudioApi <span class=\"token operator\">=</span> <span class=\"token function\">toRtAudio</span><span class=\"token punctuation\">(</span>api<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tRtAudio <span class=\"token function\">audioTemp</span><span class=\"token punctuation\">(</span><span class=\"token function\">toRtAudio</span><span class=\"token punctuation\">(</span>api<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\taudioTemp<span class=\"token punctuation\">.</span><span class=\"token function\">showWarnings</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>audioTemp<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentApi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span>rtAudioApi <span class=\"token operator\">&amp;&amp;</span> rtAudioApi<span class=\"token operator\">!=</span>RtAudio<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>UNSPECIFIED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> deviceList<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">auto</span> deviceCount <span class=\"token operator\">=</span> audioTemp<span class=\"token punctuation\">.</span><span class=\"token function\">getDeviceCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tRtAudio<span class=\"token operator\">::</span>DeviceInfo info<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> deviceCount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n\t\t\t\tinfo <span class=\"token operator\">=</span> audioTemp<span class=\"token punctuation\">.</span><span class=\"token function\">getDeviceInfo</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>exception <span class=\"token operator\">&amp;</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofRtAudioSoundStream\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Error retrieving info for device \"</span> <span class=\"token operator\">&lt;&lt;</span> i<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> error<span class=\"token punctuation\">.</span><span class=\"token function\">what</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\tofSoundDevice dev<span class=\"token punctuation\">;</span>\n\t\t\tdev<span class=\"token punctuation\">.</span>deviceID <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n\t\t\tdev<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> info<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n\t\t\tdev<span class=\"token punctuation\">.</span>outputChannels <span class=\"token operator\">=</span> info<span class=\"token punctuation\">.</span>outputChannels<span class=\"token punctuation\">;</span>\n\t\t\tdev<span class=\"token punctuation\">.</span>inputChannels <span class=\"token operator\">=</span> info<span class=\"token punctuation\">.</span>inputChannels<span class=\"token punctuation\">;</span>\n\t\t\tdev<span class=\"token punctuation\">.</span>sampleRates <span class=\"token operator\">=</span> info<span class=\"token punctuation\">.</span>sampleRates<span class=\"token punctuation\">;</span>\n\t\t\tdev<span class=\"token punctuation\">.</span>isDefaultInput <span class=\"token operator\">=</span> info<span class=\"token punctuation\">.</span>isDefaultInput<span class=\"token punctuation\">;</span>\n\t\t\tdev<span class=\"token punctuation\">.</span>isDefaultOutput <span class=\"token operator\">=</span> info<span class=\"token punctuation\">.</span>isDefaultOutput<span class=\"token punctuation\">;</span>\n\t\t\tdev<span class=\"token punctuation\">.</span>api <span class=\"token operator\">=</span> api<span class=\"token punctuation\">;</span>\n\t\t\tdeviceList<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>dev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>exception <span class=\"token operator\">&amp;</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> error<span class=\"token punctuation\">.</span><span class=\"token function\">what</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> deviceList<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofRtAudioSoundStream<span class=\"token operator\">::</span><span class=\"token function\">setInput</span><span class=\"token punctuation\">(</span>ofBaseSoundInput <span class=\"token operator\">*</span> soundInput<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tsettings<span class=\"token punctuation\">.</span><span class=\"token function\">setInListener</span><span class=\"token punctuation\">(</span>soundInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofRtAudioSoundStream<span class=\"token operator\">::</span><span class=\"token function\">setOutput</span><span class=\"token punctuation\">(</span>ofBaseSoundOutput <span class=\"token operator\">*</span> soundOutput<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tsettings<span class=\"token punctuation\">.</span><span class=\"token function\">setOutListener</span><span class=\"token punctuation\">(</span>soundOutput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofRtAudioSoundStream<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofSoundStreamSettings <span class=\"token operator\">&amp;</span> settings_<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>audio <span class=\"token operator\">!=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>settings <span class=\"token operator\">=</span> settings_<span class=\"token punctuation\">;</span>\n\n\ttickCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>settings<span class=\"token punctuation\">.</span>bufferSize <span class=\"token operator\">=</span> <span class=\"token function\">ofNextPow2</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>bufferSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\" spellcheck=\"true\">// must be pow2</span>\n\n\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span><span class=\"token function\">getApi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> ofSoundDevice<span class=\"token operator\">::</span>Api<span class=\"token operator\">::</span>UNSPECIFIED<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\taudio <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span>make_shared<span class=\"token operator\">&lt;</span>RtAudio<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token function\">toRtAudio</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span><span class=\"token function\">getApi</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\taudio <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span>make_shared<span class=\"token operator\">&lt;</span>RtAudio<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>exception <span class=\"token operator\">&amp;</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> error<span class=\"token punctuation\">.</span><span class=\"token function\">what</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tRtAudio<span class=\"token operator\">::</span>StreamParameters outputParameters<span class=\"token punctuation\">;</span>\n\tRtAudio<span class=\"token operator\">::</span>StreamParameters inputParameters<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>numInputChannels <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>settings<span class=\"token punctuation\">.</span><span class=\"token function\">getInDevice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tofSoundDevice device<span class=\"token punctuation\">;</span>\n\t\t\tdevice<span class=\"token punctuation\">.</span>deviceID <span class=\"token operator\">=</span> audio<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getDefaultInputDevice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tsettings<span class=\"token punctuation\">.</span><span class=\"token function\">setInDevice</span><span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tinputParameters<span class=\"token punctuation\">.</span>deviceId <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span><span class=\"token function\">getInDevice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>deviceID<span class=\"token punctuation\">;</span>\n\t\tinputParameters<span class=\"token punctuation\">.</span>nChannels <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>numInputChannels<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>numOutputChannels <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>settings<span class=\"token punctuation\">.</span><span class=\"token function\">getOutDevice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tofSoundDevice device<span class=\"token punctuation\">;</span>\n\t\t\tdevice<span class=\"token punctuation\">.</span>deviceID <span class=\"token operator\">=</span> audio<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getDefaultOutputDevice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tsettings<span class=\"token punctuation\">.</span><span class=\"token function\">setOutDevice</span><span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\toutputParameters<span class=\"token punctuation\">.</span>deviceId <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span><span class=\"token function\">getOutDevice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>deviceID<span class=\"token punctuation\">;</span>\n\t\toutputParameters<span class=\"token punctuation\">.</span>nChannels <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>numOutputChannels<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tRtAudio<span class=\"token operator\">::</span>StreamOptions options<span class=\"token punctuation\">;</span>\n\toptions<span class=\"token punctuation\">.</span>flags <span class=\"token operator\">=</span> RTAUDIO_SCHEDULE_REALTIME<span class=\"token punctuation\">;</span>\n\toptions<span class=\"token punctuation\">.</span>numberOfBuffers <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>numBuffers<span class=\"token punctuation\">;</span>\n\toptions<span class=\"token punctuation\">.</span>priority <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\toutputBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">setDeviceID</span><span class=\"token punctuation\">(</span>outputParameters<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tinputBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">setDeviceID</span><span class=\"token punctuation\">(</span>inputParameters<span class=\"token punctuation\">.</span>deviceId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\toutputBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">setSampleRate</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>sampleRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tinputBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">setSampleRate</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>sampleRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> bufferSize <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>bufferSize<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n\t\taudio<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">openStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>numOutputChannels <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token operator\">&amp;</span>outputParameters <span class=\"token operator\">:</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>numInputChannels <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token operator\">&amp;</span>inputParameters <span class=\"token operator\">:</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> RTAUDIO_FLOAT32<span class=\"token punctuation\">,</span>\n\t\t\tsettings<span class=\"token punctuation\">.</span>sampleRate<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>bufferSize<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>rtAudioCallback<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\taudio<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">startStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>exception <span class=\"token operator\">&amp;</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> error<span class=\"token punctuation\">.</span><span class=\"token function\">what</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofRtAudioSoundStream<span class=\"token operator\">::</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>audio <span class=\"token operator\">==</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n\t\taudio<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">startStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>exception <span class=\"token operator\">&amp;</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> error<span class=\"token punctuation\">.</span><span class=\"token function\">what</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofRtAudioSoundStream<span class=\"token operator\">::</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>audio <span class=\"token operator\">==</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>audio<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">isStreamRunning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\taudio<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">stopStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>exception <span class=\"token operator\">&amp;</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> error<span class=\"token punctuation\">.</span><span class=\"token function\">what</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofRtAudioSoundStream<span class=\"token operator\">::</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>audio <span class=\"token operator\">==</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>audio<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">isStreamOpen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\taudio<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">closeStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>exception <span class=\"token operator\">&amp;</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> error<span class=\"token punctuation\">.</span><span class=\"token function\">what</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tsettings<span class=\"token punctuation\">.</span>outCallback <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span>inCallback <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\taudio<span class=\"token punctuation\">.</span><span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\" spellcheck=\"true\">// delete</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------------------</span>\nuint64_t ofRtAudioSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getTickCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> tickCount<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofRtAudioSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getNumInputChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> settings<span class=\"token punctuation\">.</span>numInputChannels<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofRtAudioSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getNumOutputChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span>  settings<span class=\"token punctuation\">.</span>numOutputChannels<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofRtAudioSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getSampleRate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> settings<span class=\"token punctuation\">.</span>sampleRate<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofRtAudioSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getBufferSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> settings<span class=\"token punctuation\">.</span>bufferSize<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofSoundDevice ofRtAudioSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getInDevice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">*</span>settings<span class=\"token punctuation\">.</span><span class=\"token function\">getInDevice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofSoundDevice ofRtAudioSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getOutDevice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">*</span>settings<span class=\"token punctuation\">.</span><span class=\"token function\">getOutDevice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofRtAudioSoundStream<span class=\"token operator\">::</span><span class=\"token function\">rtAudioCallback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>outputBuffer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>inputBuffer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> nFramesPerBuffer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> streamTime<span class=\"token punctuation\">,</span> RtAudioStreamStatus status<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tofRtAudioSoundStream <span class=\"token operator\">*</span> rtStreamPtr <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ofRtAudioSoundStream <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>data<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofRtAudioSoundStream\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"stream over/underflow detected\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// \trtAudio uses a system by which the audio</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// \tcan be of different formats</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// \tchar, float, etc.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// \twe choose float</span>\n\t<span class=\"token keyword\">float</span> <span class=\"token operator\">*</span> fPtrOut <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>outputBuffer<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> <span class=\"token operator\">*</span> fPtrIn <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>inputBuffer<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// [zach] memset output to zero before output call</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// this is because of how rtAudio works: duplex w/ one callback</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// you need to cut in the middle. if the simpleApp</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// doesn't produce audio, we pass silence instead of duplex...</span>\n\n\tsize_t nInputChannels  <span class=\"token operator\">=</span> rtStreamPtr<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getNumInputChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsize_t nOutputChannels <span class=\"token operator\">=</span> rtStreamPtr<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getNumOutputChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nInputChannels <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rtStreamPtr<span class=\"token operator\">-</span><span class=\"token operator\">></span>settings<span class=\"token punctuation\">.</span>inCallback<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\trtStreamPtr<span class=\"token operator\">-</span><span class=\"token operator\">></span>inputBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">copyFrom</span><span class=\"token punctuation\">(</span>fPtrIn<span class=\"token punctuation\">,</span> nFramesPerBuffer<span class=\"token punctuation\">,</span> nInputChannels<span class=\"token punctuation\">,</span> rtStreamPtr<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getSampleRate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\trtStreamPtr<span class=\"token operator\">-</span><span class=\"token operator\">></span>inputBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">setTickCount</span><span class=\"token punctuation\">(</span>rtStreamPtr<span class=\"token operator\">-</span><span class=\"token operator\">></span>tickCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\trtStreamPtr<span class=\"token operator\">-</span><span class=\"token operator\">></span>settings<span class=\"token punctuation\">.</span><span class=\"token function\">inCallback</span><span class=\"token punctuation\">(</span>rtStreamPtr<span class=\"token operator\">-</span><span class=\"token operator\">></span>inputBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// [damian] not sure what this is for? assuming it's for underruns? or for when the sound system becomes broken?</span>\n\t\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>fPtrIn<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> nFramesPerBuffer <span class=\"token operator\">*</span> nInputChannels <span class=\"token operator\">*</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nOutputChannels <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rtStreamPtr<span class=\"token operator\">-</span><span class=\"token operator\">></span>settings<span class=\"token punctuation\">.</span>outCallback<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rtStreamPtr<span class=\"token operator\">-</span><span class=\"token operator\">></span>outputBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> nFramesPerBuffer<span class=\"token operator\">*</span>nOutputChannels <span class=\"token operator\">||</span> rtStreamPtr<span class=\"token operator\">-</span><span class=\"token operator\">></span>outputBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">getNumChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> nOutputChannels<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\trtStreamPtr<span class=\"token operator\">-</span><span class=\"token operator\">></span>outputBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">setNumChannels</span><span class=\"token punctuation\">(</span>nOutputChannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\trtStreamPtr<span class=\"token operator\">-</span><span class=\"token operator\">></span>outputBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span>nFramesPerBuffer<span class=\"token operator\">*</span>nOutputChannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\trtStreamPtr<span class=\"token operator\">-</span><span class=\"token operator\">></span>outputBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">setTickCount</span><span class=\"token punctuation\">(</span>rtStreamPtr<span class=\"token operator\">-</span><span class=\"token operator\">></span>tickCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\trtStreamPtr<span class=\"token operator\">-</span><span class=\"token operator\">></span>settings<span class=\"token punctuation\">.</span><span class=\"token function\">outCallback</span><span class=\"token punctuation\">(</span>rtStreamPtr<span class=\"token operator\">-</span><span class=\"token operator\">></span>outputBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\trtStreamPtr<span class=\"token operator\">-</span><span class=\"token operator\">></span>outputBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">copyTo</span><span class=\"token punctuation\">(</span>fPtrOut<span class=\"token punctuation\">,</span> nFramesPerBuffer<span class=\"token punctuation\">,</span> nOutputChannels<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\trtStreamPtr<span class=\"token operator\">-</span><span class=\"token operator\">></span>outputBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// increment tick count</span>\n\trtStreamPtr<span class=\"token operator\">-</span><span class=\"token operator\">></span>tickCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n","type":"source"}}],"fetch":[]}