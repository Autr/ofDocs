{"data":[{"page":{"entry":{"name":"ofxCvImage.h","filename":"ofxCvImage.h","absolute":"/Users/Gilbert/Code/openFrameworks/addons/ofxOpenCv/src/ofxCvImage.h","path":"/addons/ofxOpenCv/src/ofxCvImage_h","route":"/addons/ofxOpenCv/src/ofxCvImage.h","dir":"../addons/ofxOpenCv/src","ext":"h","type":"source","id":153,"parent":138,"breadcrumbs":[138,139,36],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">/*\n* ofxCvImage.h\n* by stefanix\n*\n* This is the common abstract base class of all the different\n* image types used in this addon. Methods with \"= 0\" at the end\n* are pure virtual and need to be implemented by the inheriting\n* image class.\n*\n*/</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxCvConstants.h\"</span></span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxCvGrayscaleImage</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxCvColorImage</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxCvFloatImage</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxCvShortImage</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxCvBlob</span><span class=\"token punctuation\">;</span>\n\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxCvImage</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofBaseImage <span class=\"token punctuation\">{</span>\n    \n  <span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\n    <span class=\"token keyword\">int</span> width<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> height<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> bAllocated<span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">ofxCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span>  <span class=\"token operator\">~</span><span class=\"token function\">ofxCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">float</span> <span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>        <span class=\"token comment\" spellcheck=\"true\">// get width of this image or its ROI width</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">float</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\" spellcheck=\"true\">// get height of this image or its ROI height</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">setUseTexture</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">bool</span> bUse <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">isUsingTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> ofTexture<span class=\"token operator\">&amp;</span>  <span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">const</span> ofTexture <span class=\"token operator\">&amp;</span> <span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use getTexture\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">virtual</span> ofTexture<span class=\"token operator\">&amp;</span>  <span class=\"token function\">getTextureReference</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use getTexture\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">virtual</span> <span class=\"token keyword\">const</span> ofTexture <span class=\"token operator\">&amp;</span> <span class=\"token function\">getTextureReference</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">//mostly used internally</span>\n\n    \n    <span class=\"token comment\" spellcheck=\"true\">// ROI - region of interest</span>\n    <span class=\"token comment\" spellcheck=\"true\">//</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">setROI</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">setROI</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofRectangle<span class=\"token operator\">&amp;</span> rect <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> ofRectangle  <span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">resetROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> ofRectangle  <span class=\"token function\">getIntersectionROI</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofRectangle<span class=\"token operator\">&amp;</span> rec1<span class=\"token punctuation\">,</span>\n                                             <span class=\"token keyword\">const</span> ofRectangle<span class=\"token operator\">&amp;</span> rec2 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    \n    <span class=\"token comment\" spellcheck=\"true\">// Set Pixel Data</span>\n    <span class=\"token comment\" spellcheck=\"true\">//</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">set</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> value <span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token keyword\">operator</span> <span class=\"token operator\">-</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> value <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token keyword\">operator</span> <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> value <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">setFromPixels</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> _pixels<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h <span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">setFromPixels</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofPixels <span class=\"token operator\">&amp;</span> pixels <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">setRoiFromPixels</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> _pixels<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h <span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">setRoiFromPixels</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofPixels <span class=\"token operator\">&amp;</span> pixels <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token keyword\">operator</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofxCvGrayscaleImage<span class=\"token operator\">&amp;</span> mom <span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token keyword\">operator</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofxCvColorImage<span class=\"token operator\">&amp;</span> mom <span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token keyword\">operator</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofxCvFloatImage<span class=\"token operator\">&amp;</span> mom <span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token keyword\">operator</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofxCvShortImage<span class=\"token operator\">&amp;</span> mom <span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token keyword\">operator</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> IplImage<span class=\"token operator\">*</span> mom <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token keyword\">operator</span> <span class=\"token operator\">-</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> ofxCvImage<span class=\"token operator\">&amp;</span> mom <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token keyword\">operator</span> <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> ofxCvImage<span class=\"token operator\">&amp;</span> mom <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token keyword\">operator</span> <span class=\"token operator\">*</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> ofxCvImage<span class=\"token operator\">&amp;</span> mom <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token keyword\">operator</span> <span class=\"token operator\">&amp;</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> ofxCvImage<span class=\"token operator\">&amp;</span> mom <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">drawBlobIntoMe</span><span class=\"token punctuation\">(</span> ofxCvBlob<span class=\"token operator\">&amp;</span> blob<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> color <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n\n    <span class=\"token comment\" spellcheck=\"true\">// Get Pixel Data</span>\n    <span class=\"token comment\" spellcheck=\"true\">//</span>\n    <span class=\"token keyword\">virtual</span> ofPixels<span class=\"token operator\">&amp;</span>\t\t<span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> ofPixels<span class=\"token operator\">&amp;</span>\t\t<span class=\"token function\">getRoiPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> IplImage<span class=\"token operator\">*</span>  <span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> cvImage<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">const</span> ofPixels<span class=\"token operator\">&amp;</span>\t\t<span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">const</span> ofPixels<span class=\"token operator\">&amp;</span>\t\t<span class=\"token function\">getRoiPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">const</span> IplImage<span class=\"token operator\">*</span>  <span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> cvImage<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token comment\" spellcheck=\"true\">// Draw Image</span>\n    <span class=\"token comment\" spellcheck=\"true\">//</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">updateTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y <span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h <span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPoint <span class=\"token operator\">&amp;</span> point<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofRectangle <span class=\"token operator\">&amp;</span> rect<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawROI</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y <span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawROI</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h <span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setAnchorPercent</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> xPct<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> yPct <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setAnchorPoint</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">resetAnchor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    \n    <span class=\"token comment\" spellcheck=\"true\">// Image Filter Operations</span>\n    <span class=\"token comment\" spellcheck=\"true\">//</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">erode</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                     <span class=\"token comment\" spellcheck=\"true\">// based on 3x3 shape</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">dilate</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>                    <span class=\"token comment\" spellcheck=\"true\">// based on 3x3 shape</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">blur</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> value<span class=\"token operator\">=</span><span class=\"token number\">3</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\" spellcheck=\"true\">// value = x*2+1, where x is an integer</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">blurGaussian</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> value<span class=\"token operator\">=</span><span class=\"token number\">3</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">// value = x*2+1, where x is an integer</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">invert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">contrastStretch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">convertToRange</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> min<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> max<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token comment\" spellcheck=\"true\">// Image Transformation Operations</span>\n    <span class=\"token comment\" spellcheck=\"true\">//</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">resize</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h <span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">scaleIntoMe</span><span class=\"token punctuation\">(</span> ofxCvImage<span class=\"token operator\">&amp;</span> mom<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> interpolationMethod <span class=\"token operator\">=</span> CV_INTER_NN <span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">mirror</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">bool</span> bFlipVertically<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bFlipHorizontally <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">translate</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> angle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> centerX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> centerY <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">scale</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> scaleX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sclaeY <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">transform</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> angle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> centerX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> centerY<span class=\"token punctuation\">,</span>\n                             <span class=\"token keyword\">float</span> scaleX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> scaleY<span class=\"token punctuation\">,</span>\n                             <span class=\"token keyword\">float</span> moveX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> moveY <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">/**\n    * undistort Usage Example:\n    * undistort( 0, 1, 0, 0, 200, 200, cwidth/2, cheight/2 );\n    * creates kind of an old TV monitor distortion.\n    */</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">undistort</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> radialDistX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radialDistY<span class=\"token punctuation\">,</span>\n                             <span class=\"token keyword\">float</span> tangentDistX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> tangentDistY<span class=\"token punctuation\">,</span>\n                             <span class=\"token keyword\">float</span> focalX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> focalY<span class=\"token punctuation\">,</span>\n                             <span class=\"token keyword\">float</span> centerX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> centerY <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">remap</span><span class=\"token punctuation\">(</span> IplImage<span class=\"token operator\">*</span> mapX<span class=\"token punctuation\">,</span> IplImage<span class=\"token operator\">*</span> mapY <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">warpPerspective</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofPoint<span class=\"token operator\">&amp;</span> A<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofPoint<span class=\"token operator\">&amp;</span> B<span class=\"token punctuation\">,</span>\n                                   <span class=\"token keyword\">const</span> ofPoint<span class=\"token operator\">&amp;</span> C<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofPoint<span class=\"token operator\">&amp;</span> D <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">warpIntoMe</span><span class=\"token punctuation\">(</span> ofxCvImage<span class=\"token operator\">&amp;</span> mom<span class=\"token punctuation\">,</span>\n                              <span class=\"token keyword\">const</span> ofPoint src<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofPoint dst<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\n    <span class=\"token comment\" spellcheck=\"true\">// Other Image Operations</span>\n    <span class=\"token comment\" spellcheck=\"true\">//</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">int</span>  <span class=\"token function\">countNonZeroInRegion</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\n\n  <span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">allocateTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">allocatePixels</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">bool</span> <span class=\"token function\">matchingROI</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofRectangle<span class=\"token operator\">&amp;</span> rec1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofRectangle<span class=\"token operator\">&amp;</span> rec2 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">setImageROI</span><span class=\"token punctuation\">(</span> IplImage<span class=\"token operator\">*</span> img<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofRectangle<span class=\"token operator\">&amp;</span> rect <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">resetImageROI</span><span class=\"token punctuation\">(</span> IplImage<span class=\"token operator\">*</span> img <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">rangeMap</span><span class=\"token punctuation\">(</span> IplImage<span class=\"token operator\">*</span> img<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> min1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> max1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> min2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> max2 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">rangeMap</span><span class=\"token punctuation\">(</span> IplImage<span class=\"token operator\">*</span> mom<span class=\"token punctuation\">,</span> IplImage<span class=\"token operator\">*</span> kid<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> min1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> max1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> min2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> max2 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                                     \n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">swapTemp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">// swap cvImageTemp back</span>\n                              <span class=\"token comment\" spellcheck=\"true\">// to cvImage after an image operation</span>\n    <span class=\"token keyword\">virtual</span> IplImage<span class=\"token operator\">*</span>  <span class=\"token function\">getCv8BitsImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> cvImage<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">virtual</span> IplImage<span class=\"token operator\">*</span>  <span class=\"token function\">getCv8BitsRoiImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> cvImage<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n                          \n    IplImage<span class=\"token operator\">*</span>  cvImage<span class=\"token punctuation\">;</span>\n    IplImage<span class=\"token operator\">*</span>  cvImageTemp<span class=\"token punctuation\">;</span>   <span class=\"token comment\" spellcheck=\"true\">// this is typically swapped back into cvImage</span>\n                              <span class=\"token comment\" spellcheck=\"true\">// after an image operation with swapImage()</span>\n                              \n    <span class=\"token keyword\">int</span> ipldepth<span class=\"token punctuation\">;</span>             <span class=\"token comment\" spellcheck=\"true\">// IPL_DEPTH_8U, IPL_DEPTH_16U, IPL_DEPTH_32F, ...</span>\n    <span class=\"token keyword\">int</span> iplchannels<span class=\"token punctuation\">;</span>          <span class=\"token comment\" spellcheck=\"true\">// 1, 3, 4, ...</span>\n    \n    ofPixels pixels<span class=\"token punctuation\">;</span>\t  <span class=\"token comment\" spellcheck=\"true\">// not width stepped for getPixels(), allocated on demand</span>\n    ofPixels roiPixels<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">bool</span> bPixelsDirty<span class=\"token punctuation\">;</span>        <span class=\"token comment\" spellcheck=\"true\">// pixels need to be reloaded</span>\n    <span class=\"token keyword\">bool</span> bRoiPixelsDirty<span class=\"token punctuation\">;</span>        <span class=\"token comment\" spellcheck=\"true\">// pixels need to be reloaded</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">// the texture in this class is usually only update in draw</span>\n    <span class=\"token comment\" spellcheck=\"true\">// to allow draw to be const we mark the texture as mutable</span>\n    <span class=\"token keyword\">mutable</span> ofTexture  tex<span class=\"token punctuation\">;</span>\t\t      <span class=\"token comment\" spellcheck=\"true\">// internal tex</span>\n    <span class=\"token keyword\">mutable</span> <span class=\"token keyword\">bool</span> bTextureDirty<span class=\"token punctuation\">;</span>       <span class=\"token comment\" spellcheck=\"true\">// texture needs to be reloaded before drawing</span>\n    <span class=\"token keyword\">bool</span> bUseTexture<span class=\"token punctuation\">;</span>\n    \n    ofPoint  anchor<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">bool</span>  bAnchorIsPct<span class=\"token punctuation\">;</span>    \n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n","type":"source"}}],"fetch":[]}