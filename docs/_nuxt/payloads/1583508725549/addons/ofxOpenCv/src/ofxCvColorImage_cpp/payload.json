{"data":[{"page":{"entry":{"name":"ofxCvColorImage.cpp","filename":"ofxCvColorImage.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/addons/ofxOpenCv/src/ofxCvColorImage.cpp","path":"/addons/ofxOpenCv/src/ofxCvColorImage_cpp","route":"/addons/ofxOpenCv/src/ofxCvColorImage.cpp","dir":"../addons/ofxOpenCv/src","ext":"cpp","type":"source","id":141,"parent":138,"breadcrumbs":[138,139,36],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxCvGrayscaleImage.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxCvColorImage.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxCvFloatImage.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxCvShortImage.h\"</span></span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\nofxCvColorImage<span class=\"token operator\">::</span><span class=\"token function\">ofxCvColorImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\nofxCvColorImage<span class=\"token operator\">::</span><span class=\"token function\">ofxCvColorImage</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofxCvColorImage<span class=\"token operator\">&amp;</span> _mom <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> _mom<span class=\"token punctuation\">.</span>bAllocated <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\" spellcheck=\"true\">// cast non-const,  to get read access to the mon::cvImage</span>\n        ofxCvColorImage<span class=\"token operator\">&amp;</span> mom <span class=\"token operator\">=</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofxCvColorImage<span class=\"token operator\">&amp;</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>_mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>mom<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>mom<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">cvCopy</span><span class=\"token punctuation\">(</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cvImage<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"copy constructor: source image not allocated\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvColorImage<span class=\"token operator\">::</span><span class=\"token function\">allocateTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\ttex<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvColorImage<span class=\"token operator\">::</span><span class=\"token function\">allocatePixels</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>OF_PIXELS_RGB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvColorImage<span class=\"token operator\">::</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ipldepth <span class=\"token operator\">=</span> IPL_DEPTH_8U<span class=\"token punctuation\">;</span>\n    iplchannels <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n    cvGrayscaleImage <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvColorImage<span class=\"token operator\">::</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bAllocated <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">&amp;&amp;</span> cvGrayscaleImage <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">cvReleaseImage</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>cvGrayscaleImage <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\" spellcheck=\"true\">//call clear in base class</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">// Set Pixel Data</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvColorImage<span class=\"token operator\">::</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> value <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"set(): image not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">cvSet</span><span class=\"token punctuation\">(</span>cvImage<span class=\"token punctuation\">,</span> <span class=\"token function\">cvScalar</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvColorImage<span class=\"token operator\">::</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> valueR<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> valueG<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> valueB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"set(): image not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\t\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">cvSet</span><span class=\"token punctuation\">(</span>cvImage<span class=\"token punctuation\">,</span> <span class=\"token function\">cvScalar</span><span class=\"token punctuation\">(</span>valueR<span class=\"token punctuation\">,</span> valueG<span class=\"token punctuation\">,</span> valueB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvColorImage<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token operator\">-</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> value <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"set(): image not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\t\n    <span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">cvSubS</span><span class=\"token punctuation\">(</span> cvImage<span class=\"token punctuation\">,</span> <span class=\"token function\">cvScalar</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cvImageTemp <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">swapTemp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvColorImage<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> value <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"set(): image not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\t\n    <span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">cvAddS</span><span class=\"token punctuation\">(</span> cvImage<span class=\"token punctuation\">,</span> <span class=\"token function\">cvScalar</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cvImageTemp <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">swapTemp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvColorImage<span class=\"token operator\">::</span><span class=\"token function\">setFromPixels</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> _pixels<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// copy pixels ignoring any ROI</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> w <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> h <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setFromPixels(): width and height are zero\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token operator\">||</span> w <span class=\"token operator\">!=</span> width <span class=\"token operator\">||</span> h <span class=\"token operator\">!=</span> height <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setFromPixels(): allocating to match dimensions: \"</span>\n\t\t\t\t<span class=\"token operator\">&lt;&lt;</span> width <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> height<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setFromPixels(): reallocating to match dimensions: \"</span>\n\t\t\t\t<span class=\"token operator\">&lt;&lt;</span> width <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> height<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> cvImage<span class=\"token operator\">-</span><span class=\"token operator\">></span>width<span class=\"token operator\">*</span>cvImage<span class=\"token operator\">-</span><span class=\"token operator\">></span>nChannels <span class=\"token operator\">==</span> cvImage<span class=\"token operator\">-</span><span class=\"token operator\">></span>widthStep <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span> cvImage<span class=\"token operator\">-</span><span class=\"token operator\">></span>imageData<span class=\"token punctuation\">,</span>  _pixels<span class=\"token punctuation\">,</span> w<span class=\"token operator\">*</span>h<span class=\"token operator\">*</span>iplchannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\t\t\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> height<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span> cvImage<span class=\"token operator\">-</span><span class=\"token operator\">></span>imageData <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">*</span>cvImage<span class=\"token operator\">-</span><span class=\"token operator\">></span>widthStep<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> _pixels <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">*</span>w<span class=\"token operator\">*</span>iplchannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>width<span class=\"token operator\">*</span>iplchannels <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvColorImage<span class=\"token operator\">::</span><span class=\"token function\">setRoiFromPixels</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> _pixels<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   \t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> w <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> h <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setRoiFromPixels(): width and height are zero\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n   \t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bAllocated<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setRoiFromPixels(): image not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\t \n\tofRectangle roi <span class=\"token operator\">=</span> <span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ofRectangle inputROI <span class=\"token operator\">=</span> <span class=\"token function\">ofRectangle</span><span class=\"token punctuation\">(</span> roi<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> roi<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ofRectangle iRoi <span class=\"token operator\">=</span> <span class=\"token function\">getIntersectionROI</span><span class=\"token punctuation\">(</span> roi<span class=\"token punctuation\">,</span> inputROI <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> iRoi<span class=\"token punctuation\">.</span>width <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> iRoi<span class=\"token punctuation\">.</span>height <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\" spellcheck=\"true\">// copy pixels from _pixels, however many we have or will fit in cvImage</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> iRoi<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span> cvImage<span class=\"token operator\">-</span><span class=\"token operator\">></span>imageData <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>iRoi<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>cvImage<span class=\"token operator\">-</span><span class=\"token operator\">></span>widthStep<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>iRoi<span class=\"token punctuation\">.</span>x<span class=\"token operator\">*</span>iplchannels<span class=\"token punctuation\">,</span>\n                    _pixels <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">*</span>w<span class=\"token operator\">*</span>iplchannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>iRoi<span class=\"token punctuation\">.</span>width<span class=\"token operator\">*</span>iplchannels<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setRoiFromPixels(): region of interest width and/or height are zero: \"</span>\n\t\t\t<span class=\"token operator\">&lt;&lt;</span> iRoi<span class=\"token punctuation\">.</span>width <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> iRoi<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvColorImage<span class=\"token operator\">::</span><span class=\"token function\">setFromGrayscalePlanarImages</span><span class=\"token punctuation\">(</span> ofxCvGrayscaleImage<span class=\"token operator\">&amp;</span> red<span class=\"token punctuation\">,</span> ofxCvGrayscaleImage<span class=\"token operator\">&amp;</span> green<span class=\"token punctuation\">,</span> ofxCvGrayscaleImage<span class=\"token operator\">&amp;</span> blue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofRectangle roi <span class=\"token operator\">=</span> <span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ofRectangle redRoi <span class=\"token operator\">=</span> red<span class=\"token punctuation\">.</span><span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ofRectangle greenRoi <span class=\"token operator\">=</span> green<span class=\"token punctuation\">.</span><span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ofRectangle blueRoi <span class=\"token operator\">=</span> blue<span class=\"token punctuation\">.</span><span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setFromGrayscalePlanarImages(): allocating to match dimensions\"</span><span class=\"token punctuation\">;</span>\t\t\n\t\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>red<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> red<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> redRoi<span class=\"token punctuation\">.</span>width <span class=\"token operator\">==</span> roi<span class=\"token punctuation\">.</span>width <span class=\"token operator\">&amp;&amp;</span> redRoi<span class=\"token punctuation\">.</span>height <span class=\"token operator\">==</span> roi<span class=\"token punctuation\">.</span>height <span class=\"token operator\">&amp;&amp;</span>\n        greenRoi<span class=\"token punctuation\">.</span>width <span class=\"token operator\">==</span> roi<span class=\"token punctuation\">.</span>width <span class=\"token operator\">&amp;&amp;</span> greenRoi<span class=\"token punctuation\">.</span>height <span class=\"token operator\">==</span> roi<span class=\"token punctuation\">.</span>height <span class=\"token operator\">&amp;&amp;</span>\n        blueRoi<span class=\"token punctuation\">.</span>width <span class=\"token operator\">==</span> roi<span class=\"token punctuation\">.</span>width <span class=\"token operator\">&amp;&amp;</span> blueRoi<span class=\"token punctuation\">.</span>height <span class=\"token operator\">==</span> roi<span class=\"token punctuation\">.</span>height <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n         <span class=\"token function\">cvMerge</span><span class=\"token punctuation\">(</span>red<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> green<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> blue<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> cvImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setFromGrayscalePlanarImages(): image size or region of interest mismatch\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvColorImage<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofPixels <span class=\"token operator\">&amp;</span> _pixels <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setFromPixels</span><span class=\"token punctuation\">(</span> _pixels <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvColorImage<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofxCvGrayscaleImage<span class=\"token operator\">&amp;</span> _mom <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// cast non-const,  no worries, we will reverse any chages</span>\n    ofxCvGrayscaleImage<span class=\"token operator\">&amp;</span> mom <span class=\"token operator\">=</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofxCvGrayscaleImage<span class=\"token operator\">&amp;</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>_mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator=: source width and/or height are zero: \"</span>\n\t\t\t<span class=\"token operator\">&lt;&lt;</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator=: allocating to match dimensions: \"</span>\n\t\t\t<span class=\"token operator\">&lt;&lt;</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\t\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token function\">matchingROI</span><span class=\"token punctuation\">(</span><span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">cvCvtColor</span><span class=\"token punctuation\">(</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cvImage<span class=\"token punctuation\">,</span> CV_GRAY2RGB <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator=: region of interest mismatch\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvColorImage<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofxCvColorImage<span class=\"token operator\">&amp;</span> _mom <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">!=</span> <span class=\"token operator\">&amp;</span>_mom<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  <span class=\"token comment\" spellcheck=\"true\">//check for self-assignment</span>\n        <span class=\"token comment\" spellcheck=\"true\">// cast non-const,  no worries, we will reverse any changes</span>\n        ofxCvColorImage<span class=\"token operator\">&amp;</span> mom <span class=\"token operator\">=</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofxCvColorImage<span class=\"token operator\">&amp;</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>_mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator=: source width and/or height are zero:\"</span>\n\t\t\t\t<span class=\"token operator\">&lt;&lt;</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator=: allocating to match dimensions: \"</span>\n\t\t\t\t<span class=\"token operator\">&lt;&lt;</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\n\t\t\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\t\t\n\t\t\t\t\t\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token function\">matchingROI</span><span class=\"token punctuation\">(</span><span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">cvCopy</span><span class=\"token punctuation\">(</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cvImage<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator=: region of interest mismatch\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator=: assigning image to itself, not copying\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvColorImage<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofxCvFloatImage<span class=\"token operator\">&amp;</span> _mom <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// cast non-const,  no worries, we will reverse any chages</span>\n    ofxCvFloatImage<span class=\"token operator\">&amp;</span> mom <span class=\"token operator\">=</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofxCvFloatImage<span class=\"token operator\">&amp;</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>_mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator=: source width and/or height are zero:\"</span>\n\t\t\t<span class=\"token operator\">&lt;&lt;</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator=: allocating to match dimensions: \"</span>\n\t\t\t<span class=\"token operator\">&lt;&lt;</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\t\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\t\n\t\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token function\">matchingROI</span><span class=\"token punctuation\">(</span><span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> cvGrayscaleImage <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            cvGrayscaleImage <span class=\"token operator\">=</span> <span class=\"token function\">cvCreateImage</span><span class=\"token punctuation\">(</span> <span class=\"token function\">cvSize</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> IPL_DEPTH_8U<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        ofRectangle roi <span class=\"token operator\">=</span> <span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">setImageROI</span><span class=\"token punctuation\">(</span>cvGrayscaleImage<span class=\"token punctuation\">,</span> roi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">rangeMap</span><span class=\"token punctuation\">(</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cvGrayscaleImage<span class=\"token punctuation\">,</span>\n                  mom<span class=\"token punctuation\">.</span><span class=\"token function\">getNativeScaleMin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getNativeScaleMax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255.0f</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">cvCvtColor</span><span class=\"token punctuation\">(</span> cvGrayscaleImage<span class=\"token punctuation\">,</span> cvImage<span class=\"token punctuation\">,</span> CV_GRAY2RGB <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator=: region of interest mismatch\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvColorImage<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofxCvShortImage<span class=\"token operator\">&amp;</span> _mom <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// cast non-const,  no worries, we will reverse any chages</span>\n    ofxCvShortImage<span class=\"token operator\">&amp;</span> mom <span class=\"token operator\">=</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofxCvShortImage<span class=\"token operator\">&amp;</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>_mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator=: source width and/or height are zero:\"</span>\n\t\t\t<span class=\"token operator\">&lt;&lt;</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator=: allocating to match dimensions: \"</span>\n\t\t\t<span class=\"token operator\">&lt;&lt;</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\n\t\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\t\n\t\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token function\">matchingROI</span><span class=\"token punctuation\">(</span><span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> cvGrayscaleImage <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            cvGrayscaleImage <span class=\"token operator\">=</span> <span class=\"token function\">cvCreateImage</span><span class=\"token punctuation\">(</span> <span class=\"token function\">cvSize</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> IPL_DEPTH_8U<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        ofRectangle roi <span class=\"token operator\">=</span> <span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">setImageROI</span><span class=\"token punctuation\">(</span>cvGrayscaleImage<span class=\"token punctuation\">,</span> roi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">rangeMap</span><span class=\"token punctuation\">(</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cvGrayscaleImage<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">65535.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255.0f</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">cvCvtColor</span><span class=\"token punctuation\">(</span> cvGrayscaleImage<span class=\"token punctuation\">,</span> cvImage<span class=\"token punctuation\">,</span> CV_GRAY2RGB <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator=: region of interest mismatch\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvColorImage<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> IplImage<span class=\"token operator\">*</span> _mom <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ofxCvImage<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>_mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">// Get Pixel Data</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvColorImage<span class=\"token operator\">::</span><span class=\"token function\">convertToGrayscalePlanarImages</span><span class=\"token punctuation\">(</span>ofxCvGrayscaleImage<span class=\"token operator\">&amp;</span> red<span class=\"token punctuation\">,</span> ofxCvGrayscaleImage<span class=\"token operator\">&amp;</span> green<span class=\"token punctuation\">,</span> ofxCvGrayscaleImage<span class=\"token operator\">&amp;</span> blue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"convertToGrayscalePlanarImages(): image not allocated\"</span><span class=\"token punctuation\">;</span>\t\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\n\t<span class=\"token punctuation\">}</span>\n\t\n    ofRectangle roi <span class=\"token operator\">=</span> <span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ofRectangle redRoi <span class=\"token operator\">=</span> red<span class=\"token punctuation\">.</span><span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ofRectangle greenRoi <span class=\"token operator\">=</span> green<span class=\"token punctuation\">.</span><span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ofRectangle blueRoi <span class=\"token operator\">=</span> blue<span class=\"token punctuation\">.</span><span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>red<span class=\"token punctuation\">.</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tred<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> \n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>green<span class=\"token punctuation\">.</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tgreen<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> \n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>blue<span class=\"token punctuation\">.</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tblue<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> \n\t\t\t\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> redRoi<span class=\"token punctuation\">.</span>width <span class=\"token operator\">==</span> roi<span class=\"token punctuation\">.</span>width <span class=\"token operator\">&amp;&amp;</span> redRoi<span class=\"token punctuation\">.</span>height <span class=\"token operator\">==</span> roi<span class=\"token punctuation\">.</span>height <span class=\"token operator\">&amp;&amp;</span>\n        greenRoi<span class=\"token punctuation\">.</span>width <span class=\"token operator\">==</span> roi<span class=\"token punctuation\">.</span>width <span class=\"token operator\">&amp;&amp;</span> greenRoi<span class=\"token punctuation\">.</span>height <span class=\"token operator\">==</span> roi<span class=\"token punctuation\">.</span>height <span class=\"token operator\">&amp;&amp;</span>\n        blueRoi<span class=\"token punctuation\">.</span>width <span class=\"token operator\">==</span> roi<span class=\"token punctuation\">.</span>width <span class=\"token operator\">&amp;&amp;</span> blueRoi<span class=\"token punctuation\">.</span>height <span class=\"token operator\">==</span> roi<span class=\"token punctuation\">.</span>height <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">cvSplit</span><span class=\"token punctuation\">(</span>cvImage<span class=\"token punctuation\">,</span> red<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> green<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> blue<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        red<span class=\"token punctuation\">.</span><span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        green<span class=\"token punctuation\">.</span><span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        blue<span class=\"token punctuation\">.</span><span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"convertToGrayscalePlanarImages(): image size or region of interest mismatch\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvColorImage<span class=\"token operator\">::</span><span class=\"token function\">convertToGrayscalePlanarImage</span> <span class=\"token punctuation\">(</span>ofxCvGrayscaleImage<span class=\"token operator\">&amp;</span> grayImage<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> whichPlane<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"convertToGrayscalePlanarImage(): image not allocated\"</span><span class=\"token punctuation\">;</span>\t\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>grayImage<span class=\"token punctuation\">.</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tgrayImage<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> \n\t\t\n\tofRectangle roi <span class=\"token operator\">=</span> <span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ofRectangle grayRoi <span class=\"token operator\">=</span> grayImage<span class=\"token punctuation\">.</span><span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   \n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> grayRoi<span class=\"token punctuation\">.</span>width <span class=\"token operator\">==</span> roi<span class=\"token punctuation\">.</span>width <span class=\"token operator\">&amp;&amp;</span> grayRoi<span class=\"token punctuation\">.</span>height <span class=\"token operator\">==</span> roi<span class=\"token punctuation\">.</span>height <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>whichPlane<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>\n\t\t\t\t<span class=\"token function\">cvSplit</span><span class=\"token punctuation\">(</span>cvImage<span class=\"token punctuation\">,</span> grayImage<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tgrayImage<span class=\"token punctuation\">.</span><span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>\n\t\t\t\t<span class=\"token function\">cvSplit</span><span class=\"token punctuation\">(</span>cvImage<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> grayImage<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tgrayImage<span class=\"token punctuation\">.</span><span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n\t\t\t\t<span class=\"token function\">cvSplit</span><span class=\"token punctuation\">(</span>cvImage<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> grayImage<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tgrayImage<span class=\"token punctuation\">.</span><span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"convertToGrayscalePlanarImages(): image size or region of interest mismatch\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">// Draw Image</span>\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">// Image Filter Operations</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvColorImage<span class=\"token operator\">::</span><span class=\"token function\">contrastStretch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"contrastStretch(): not implemented\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvColorImage<span class=\"token operator\">::</span><span class=\"token function\">convertToRange</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> min<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> max <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"convertToRange(): image not allocated\"</span><span class=\"token punctuation\">;</span>\t\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\n\t<span class=\"token punctuation\">}</span>\n    <span class=\"token function\">rangeMap</span><span class=\"token punctuation\">(</span> cvImage<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> min<span class=\"token punctuation\">,</span>max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">// Image Transformation Operations</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvColorImage<span class=\"token operator\">::</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"resize(): image not allocated\"</span><span class=\"token punctuation\">;</span>\t\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\n\t<span class=\"token punctuation\">}</span>\n    <span class=\"token comment\" spellcheck=\"true\">// note, one image copy operation could be ommitted by</span>\n    <span class=\"token comment\" spellcheck=\"true\">// reusing the temporal image storage</span>\n\n    IplImage<span class=\"token operator\">*</span> temp <span class=\"token operator\">=</span> <span class=\"token function\">cvCreateImage</span><span class=\"token punctuation\">(</span> <span class=\"token function\">cvSize</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> IPL_DEPTH_8U<span class=\"token punctuation\">,</span> iplchannels <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">cvResize</span><span class=\"token punctuation\">(</span> cvImage<span class=\"token punctuation\">,</span> temp <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span> w<span class=\"token punctuation\">,</span> h <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">cvCopy</span><span class=\"token punctuation\">(</span> temp<span class=\"token punctuation\">,</span> cvImage <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">cvReleaseImage</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>temp <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvColorImage<span class=\"token operator\">::</span><span class=\"token function\">scaleIntoMe</span><span class=\"token punctuation\">(</span> ofxCvImage<span class=\"token operator\">&amp;</span> mom<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> interpolationMethod <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"resize(): image not allocated\"</span><span class=\"token punctuation\">;</span>\t\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>mom<span class=\"token punctuation\">.</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"resize(): source image not allocated\"</span><span class=\"token punctuation\">;</span>\t\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\n\t<span class=\"token punctuation\">}</span>\n\t\t\n    <span class=\"token comment\" spellcheck=\"true\">//for interpolation you can pass in:</span>\n    <span class=\"token comment\" spellcheck=\"true\">//CV_INTER_NN - nearest-neigbor interpolation,</span>\n    <span class=\"token comment\" spellcheck=\"true\">//CV_INTER_LINEAR - bilinear interpolation (used by default)</span>\n    <span class=\"token comment\" spellcheck=\"true\">//CV_INTER_AREA - resampling using pixel area relation. It is preferred method</span>\n    <span class=\"token comment\" spellcheck=\"true\">//                for image decimation that gives moire-free results. In case of</span>\n    <span class=\"token comment\" spellcheck=\"true\">//                zooming it is similar to CV_INTER_NN method.</span>\n    <span class=\"token comment\" spellcheck=\"true\">//CV_INTER_CUBIC - bicubic interpolation.</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>nChannels <span class=\"token operator\">==</span> cvImage<span class=\"token operator\">-</span><span class=\"token operator\">></span>nChannels <span class=\"token operator\">&amp;&amp;</span>\n        mom<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>depth <span class=\"token operator\">==</span> cvImage<span class=\"token operator\">-</span><span class=\"token operator\">></span>depth <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>interpolationMethod <span class=\"token operator\">!=</span> CV_INTER_NN<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n            <span class=\"token punctuation\">(</span>interpolationMethod <span class=\"token operator\">!=</span> CV_INTER_LINEAR<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n            <span class=\"token punctuation\">(</span>interpolationMethod <span class=\"token operator\">!=</span> CV_INTER_AREA<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n            <span class=\"token punctuation\">(</span>interpolationMethod <span class=\"token operator\">!=</span> CV_INTER_CUBIC<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"scaleIntoMe(): setting interpolationMethod to CV_INTER_NN\"</span><span class=\"token punctuation\">;</span>\n    \t\tinterpolationMethod <span class=\"token operator\">=</span> CV_INTER_NN<span class=\"token punctuation\">;</span>\n    \t<span class=\"token punctuation\">}</span>\n        <span class=\"token function\">cvResize</span><span class=\"token punctuation\">(</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cvImage<span class=\"token punctuation\">,</span> interpolationMethod <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"scaleIntoMe(): type mismatch with source image\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvColorImage<span class=\"token operator\">::</span><span class=\"token function\">convertRgbToHsv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"convertRgbToHsv(): image not allocated\"</span><span class=\"token punctuation\">;</span>\t\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\n\t<span class=\"token punctuation\">}</span>\n    <span class=\"token function\">cvCvtColor</span><span class=\"token punctuation\">(</span> cvImage<span class=\"token punctuation\">,</span> cvImageTemp<span class=\"token punctuation\">,</span> CV_RGB2HSV<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">swapTemp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvColorImage<span class=\"token operator\">::</span><span class=\"token function\">convertHsvToRgb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvColorImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"convertHsvToRgb(): image not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\n\t<span class=\"token punctuation\">}</span>\n    <span class=\"token function\">cvCvtColor</span><span class=\"token punctuation\">(</span> cvImage<span class=\"token punctuation\">,</span> cvImageTemp<span class=\"token punctuation\">,</span> CV_HSV2RGB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">swapTemp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n","type":"source"}}],"fetch":[]}