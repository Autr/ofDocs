{"data":[{"page":{"entry":{"name":"ofxEmscriptenURLFileLoader.cpp","filename":"ofxEmscriptenURLFileLoader.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/addons/ofxEmscripten/src/ofxEmscriptenURLFileLoader.cpp","path":"/addons/ofxEmscripten/src/ofxEmscriptenURLFileLoader_cpp","route":"/addons/ofxEmscripten/src/ofxEmscriptenURLFileLoader.cpp","dir":"../addons/ofxEmscripten/src","ext":"cpp","type":"source","id":80,"parent":72,"breadcrumbs":[72,73,36],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">/*\n * ofxEmscriptenURLFileLoader.cpp\n *\n *  Created on: May 30, 2014\n *      Author: arturo\n */</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxEmscriptenURLFileLoader.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofLog.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;emscripten/emscripten.h></span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\nofxEmscriptenURLFileLoader<span class=\"token operator\">::</span><span class=\"token function\">ofxEmscriptenURLFileLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n\nofxEmscriptenURLFileLoader<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofxEmscriptenURLFileLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n\nofHttpResponse ofxEmscriptenURLFileLoader<span class=\"token operator\">::</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span> url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">getAsync</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofHttpResponse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxEmscriptenURLFileLoader<span class=\"token operator\">::</span><span class=\"token function\">getAsync</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>  url<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>  name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofHttpRequest <span class=\"token operator\">*</span> req <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">ofHttpRequest</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> __EMSCRIPTEN_major__>1 || (__EMSCRIPTEN_major__==1 &amp;&amp; __EMSCRIPTEN_minor__>22)</span>\n\t<span class=\"token function\">emscripten_async_wget2_data</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>onload_cb<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>onerror_cb<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token keyword\">return</span> req<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofHttpResponse ofxEmscriptenURLFileLoader<span class=\"token operator\">::</span><span class=\"token function\">saveTo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>  url<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path <span class=\"token operator\">&amp;</span>  path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">saveAsync</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofHttpResponse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxEmscriptenURLFileLoader<span class=\"token operator\">::</span><span class=\"token function\">saveAsync</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>  url<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path <span class=\"token operator\">&amp;</span>  path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofHttpRequest <span class=\"token operator\">*</span> req <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">ofHttpRequest</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>url<span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> __EMSCRIPTEN_major__>1 || (__EMSCRIPTEN_major__==1 &amp;&amp; __EMSCRIPTEN_minor__>22)</span>\n\t<span class=\"token function\">emscripten_async_wget2</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>onload_file_cb<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>onerror_file_cb<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofHttpResponse ofxEmscriptenURLFileLoader<span class=\"token operator\">::</span><span class=\"token function\">handleRequest</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofHttpRequest <span class=\"token operator\">&amp;</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"handleRequest is still not implemented on emscripten\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofHttpResponse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxEmscriptenURLFileLoader<span class=\"token operator\">::</span><span class=\"token function\">handleRequestAsync</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofHttpRequest <span class=\"token operator\">&amp;</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"handleRequest is still not implemented on emscripten\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxEmscriptenURLFileLoader<span class=\"token operator\">::</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxEmscriptenURLFileLoader<span class=\"token operator\">::</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxEmscriptenURLFileLoader<span class=\"token operator\">::</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxEmscriptenURLFileLoader<span class=\"token operator\">::</span><span class=\"token function\">onload_cb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> request<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> data<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofHttpResponse response<span class=\"token punctuation\">;</span>\n\tresponse<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>data<span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tresponse<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>\n\tresponse<span class=\"token punctuation\">.</span>request <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>ofHttpRequest<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>request<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofURLResponseEvent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">delete</span> <span class=\"token punctuation\">(</span>ofHttpRequest<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>request<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxEmscriptenURLFileLoader<span class=\"token operator\">::</span><span class=\"token function\">onerror_cb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> request<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> status<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofHttpResponse response<span class=\"token punctuation\">;</span>\n\tresponse<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> status<span class=\"token punctuation\">;</span>\n\tresponse<span class=\"token punctuation\">.</span>error <span class=\"token operator\">=</span> message<span class=\"token punctuation\">;</span>\n\tresponse<span class=\"token punctuation\">.</span>request <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>ofHttpRequest<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>request<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofURLResponseEvent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">delete</span> <span class=\"token punctuation\">(</span>ofHttpRequest<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>request<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxEmscriptenURLFileLoader<span class=\"token operator\">::</span><span class=\"token function\">onload_file_cb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> request<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofHttpResponse response<span class=\"token punctuation\">;</span>\n\tresponse<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>\n\tresponse<span class=\"token punctuation\">.</span>request <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>ofHttpRequest<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>request<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofURLResponseEvent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">delete</span> <span class=\"token punctuation\">(</span>ofHttpRequest<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>request<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxEmscriptenURLFileLoader<span class=\"token operator\">::</span><span class=\"token function\">onerror_file_cb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> request<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofHttpResponse response<span class=\"token punctuation\">;</span>\n\tresponse<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> status<span class=\"token punctuation\">;</span>\n\tresponse<span class=\"token punctuation\">.</span>request <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>ofHttpRequest<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>request<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofURLResponseEvent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">delete</span> <span class=\"token punctuation\">(</span>ofHttpRequest<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>request<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n","type":"source"}}],"fetch":[]}