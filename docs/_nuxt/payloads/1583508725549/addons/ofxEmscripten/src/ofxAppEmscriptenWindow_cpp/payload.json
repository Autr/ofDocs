{"data":[{"page":{"entry":{"name":"ofxAppEmscriptenWindow.cpp","filename":"ofxAppEmscriptenWindow.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/addons/ofxEmscripten/src/ofxAppEmscriptenWindow.cpp","path":"/addons/ofxEmscripten/src/ofxAppEmscriptenWindow_cpp","route":"/addons/ofxEmscripten/src/ofxAppEmscriptenWindow.cpp","dir":"../addons/ofxEmscripten/src","ext":"cpp","type":"source","id":74,"parent":72,"breadcrumbs":[72,73,36],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">/*\n * ofAppEmscriptenWindow.cpp\n *\n *  Created on: May 8, 2014\n *      Author: arturo\n */</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxAppEmscriptenWindow.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofLog.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofEvents.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGLProgrammableRenderer.h\"</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\nofxAppEmscriptenWindow <span class=\"token operator\">*</span> ofxAppEmscriptenWindow<span class=\"token operator\">::</span>instance <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// from http://cantuna.googlecode.com/svn-history/r16/trunk/src/screen.cpp</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> CASE_STR(x,y) case x: str = y; break</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> <span class=\"token function\">eglErrorString</span><span class=\"token punctuation\">(</span>EGLint err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    string str<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">CASE_STR</span><span class=\"token punctuation\">(</span>EGL_SUCCESS<span class=\"token punctuation\">,</span> <span class=\"token string\">\"no error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">CASE_STR</span><span class=\"token punctuation\">(</span>EGL_NOT_INITIALIZED<span class=\"token punctuation\">,</span> <span class=\"token string\">\"EGL not, or could not be, initialized\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">CASE_STR</span><span class=\"token punctuation\">(</span>EGL_BAD_ACCESS<span class=\"token punctuation\">,</span> <span class=\"token string\">\"access violation\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">CASE_STR</span><span class=\"token punctuation\">(</span>EGL_BAD_ALLOC<span class=\"token punctuation\">,</span> <span class=\"token string\">\"could not allocate resources\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">CASE_STR</span><span class=\"token punctuation\">(</span>EGL_BAD_ATTRIBUTE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"invalid attribute\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">CASE_STR</span><span class=\"token punctuation\">(</span>EGL_BAD_CONTEXT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"invalid context specified\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">CASE_STR</span><span class=\"token punctuation\">(</span>EGL_BAD_CONFIG<span class=\"token punctuation\">,</span> <span class=\"token string\">\"invald frame buffer configuration specified\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">CASE_STR</span><span class=\"token punctuation\">(</span>EGL_BAD_CURRENT_SURFACE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"current window, pbuffer or pixmap surface is no longer valid\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">CASE_STR</span><span class=\"token punctuation\">(</span>EGL_BAD_DISPLAY<span class=\"token punctuation\">,</span> <span class=\"token string\">\"invalid display specified\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">CASE_STR</span><span class=\"token punctuation\">(</span>EGL_BAD_SURFACE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"invalid surface specified\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">CASE_STR</span><span class=\"token punctuation\">(</span>EGL_BAD_MATCH<span class=\"token punctuation\">,</span> <span class=\"token string\">\"bad argument match\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">CASE_STR</span><span class=\"token punctuation\">(</span>EGL_BAD_PARAMETER<span class=\"token punctuation\">,</span> <span class=\"token string\">\"invalid paramater\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">CASE_STR</span><span class=\"token punctuation\">(</span>EGL_BAD_NATIVE_PIXMAP<span class=\"token punctuation\">,</span> <span class=\"token string\">\"invalid NativePixmap\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">CASE_STR</span><span class=\"token punctuation\">(</span>EGL_BAD_NATIVE_WINDOW<span class=\"token punctuation\">,</span> <span class=\"token string\">\"invalid NativeWindow\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">CASE_STR</span><span class=\"token punctuation\">(</span>EGL_CONTEXT_LOST<span class=\"token punctuation\">,</span> <span class=\"token string\">\"APM event caused context loss\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"unknown error \"</span> <span class=\"token operator\">+</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">ofxAppEmscriptenWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">:</span><span class=\"token function\">display</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">context</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">surface</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">bEnableSetupScreen</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tinstance <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\nofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofxAppEmscriptenWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// TODO Auto-generated destructor stub</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofGLESWindowSettings <span class=\"token operator\">&amp;</span> settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tEGLint numConfigs<span class=\"token punctuation\">;</span>\n\tEGLint majorVersion<span class=\"token punctuation\">;</span>\n\tEGLint minorVersion<span class=\"token punctuation\">;</span>\n\tEGLConfig config<span class=\"token punctuation\">;</span>\n\tEGLint contextAttribs<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> EGL_CONTEXT_CLIENT_VERSION<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> EGL_NONE<span class=\"token punctuation\">,</span> EGL_NONE <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>vector <span class=\"token operator\">&lt;</span>EGLint<span class=\"token operator\">></span> attribList <span class=\"token operator\">=</span>\n\t   <span class=\"token punctuation\">{</span>\n\t\t   EGL_RED_SIZE<span class=\"token punctuation\">,</span> EGL_DONT_CARE<span class=\"token punctuation\">,</span>\n\t\t   EGL_GREEN_SIZE<span class=\"token punctuation\">,</span> EGL_DONT_CARE<span class=\"token punctuation\">,</span>\n\t\t   EGL_BLUE_SIZE<span class=\"token punctuation\">,</span> EGL_DONT_CARE<span class=\"token punctuation\">,</span>\n\t\t   EGL_ALPHA_SIZE<span class=\"token punctuation\">,</span> EGL_DONT_CARE<span class=\"token punctuation\">,</span>\n\t\t   EGL_DEPTH_SIZE<span class=\"token punctuation\">,</span> EGL_DONT_CARE<span class=\"token punctuation\">,</span>\n\t\t   EGL_STENCIL_SIZE<span class=\"token punctuation\">,</span> EGL_DONT_CARE<span class=\"token punctuation\">,</span>\n\t\t   EGL_SAMPLE_BUFFERS<span class=\"token punctuation\">,</span> EGL_DONT_CARE<span class=\"token punctuation\">,</span>\n\t\t   EGL_NONE\n\t   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">// We'll try these depth sizes in order ending with EGL_DONT_CARE if we don't get anything higher.</span>\n    std<span class=\"token operator\">::</span>vector <span class=\"token operator\">&lt;</span>EGLint<span class=\"token operator\">></span> depthPreference <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> EGL_DONT_CARE<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// Find the index for the value EGL_DEPTH_SIZE uses, so we can try a few different values till we get a successful config.</span>\n    <span class=\"token keyword\">int</span> attribListDepthIndex <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> attribList<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> attribList<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> EGL_DEPTH_SIZE <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            attribListDepthIndex <span class=\"token operator\">=</span> i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// Get Display</span>\n\tdisplay <span class=\"token operator\">=</span> <span class=\"token function\">eglGetDisplay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>EGLNativeDisplayType<span class=\"token punctuation\">)</span>EGL_DEFAULT_DISPLAY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> display <span class=\"token operator\">==</span> EGL_NO_DISPLAY <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"coudln't get display\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// Initialize EGL</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">eglInitialize</span><span class=\"token punctuation\">(</span>display<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>majorVersion<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>minorVersion<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"couldn't initialize display\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// Get configs</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">eglGetConfigs</span><span class=\"token punctuation\">(</span>display<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>numConfigs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"couldn't get configs\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">// Choose the config based on our attribute list</span>\n    <span class=\"token comment\" spellcheck=\"true\">// Try higher EGL_DEPTH_SIZE first</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> depthPreference<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\" spellcheck=\"true\">// Set EGL_DEPTH_SIZE</span>\n        attribList<span class=\"token punctuation\">[</span>attribListDepthIndex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> depthPreference<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\" spellcheck=\"true\">// Try out that depth value</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">eglChooseConfig</span><span class=\"token punctuation\">(</span>display<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>attribList<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>config<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>numConfigs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n            <span class=\"token comment\" spellcheck=\"true\">// Finally fail like we did before if no preference works </span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> depthPreference<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> EGL_DONT_CARE <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"couldn't choose display\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n            <span class=\"token comment\" spellcheck=\"true\">// Got a good configuration. Stop searching. </span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// Create a surface</span>\n\tsurface <span class=\"token operator\">=</span> <span class=\"token function\">eglCreateWindowSurface</span><span class=\"token punctuation\">(</span>display<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> surface <span class=\"token operator\">==</span> EGL_NO_SURFACE <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"couldn't create surface\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// Create a GL context</span>\n\tcontext <span class=\"token operator\">=</span> <span class=\"token function\">eglCreateContext</span><span class=\"token punctuation\">(</span>display<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">,</span> EGL_NO_CONTEXT<span class=\"token punctuation\">,</span> contextAttribs <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> context <span class=\"token operator\">==</span> EGL_NO_CONTEXT <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"couldn't create context\"</span><span class=\"token punctuation\">;</span>\n\t    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// Make the context current</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">eglMakeCurrent</span><span class=\"token punctuation\">(</span>display<span class=\"token punctuation\">,</span> surface<span class=\"token punctuation\">,</span> surface<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"couldn't make current display\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">setWindowShape</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>settings<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t_renderer <span class=\"token operator\">=</span> make_shared<span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>_renderer<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">emscripten_set_keydown_callback</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>keydown_cb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">emscripten_set_keyup_callback</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>keyup_cb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">emscripten_set_mousedown_callback</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>mousedown_cb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">emscripten_set_mouseup_callback</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>mouseup_cb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">emscripten_set_mousemove_callback</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>mousemoved_cb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">emscripten_set_touchstart_callback</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>touch_cb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">emscripten_set_touchend_callback</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>touch_cb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">emscripten_set_touchmove_callback</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>touch_cb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">emscripten_set_touchcancel_callback</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>touch_cb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">notifySetup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token comment\" spellcheck=\"true\">// Emulate loop via callbacks</span>\n\t<span class=\"token function\">emscripten_set_main_loop</span><span class=\"token punctuation\">(</span> display_cb<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">notifyUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///////////////////////////////////////////////////////////////////////////////////////</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// set viewport, clear the screen</span>\n\t<span class=\"token function\">renderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">startRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> bEnableSetupScreen <span class=\"token punctuation\">)</span> <span class=\"token function\">renderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setupScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">notifyDraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">renderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">finishRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\tEGLBoolean success <span class=\"token operator\">=</span> <span class=\"token function\">eglSwapBuffers</span><span class=\"token punctuation\">(</span> display<span class=\"token punctuation\">,</span> surface <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>success <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tEGLint error <span class=\"token operator\">=</span> <span class=\"token function\">eglGetError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"of::emscripten::EGLPage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"display(): eglSwapBuffers failed: \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">eglErrorString</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">display_cb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">keydown_cb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> eventType<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> EmscriptenKeyboardEvent <span class=\"token operator\">*</span>keyEvent<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>userData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> key <span class=\"token operator\">=</span> keyEvent<span class=\"token operator\">-</span><span class=\"token operator\">></span>key<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tkey <span class=\"token operator\">=</span> keyEvent<span class=\"token operator\">-</span><span class=\"token operator\">></span>which <span class=\"token operator\">+</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">notifyKeyPressed</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">keyup_cb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> eventType<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> EmscriptenKeyboardEvent <span class=\"token operator\">*</span>keyEvent<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>userData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> key <span class=\"token operator\">=</span> keyEvent<span class=\"token operator\">-</span><span class=\"token operator\">></span>key<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tkey <span class=\"token operator\">=</span> keyEvent<span class=\"token operator\">-</span><span class=\"token operator\">></span>which <span class=\"token operator\">+</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">notifyKeyReleased</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">mousedown_cb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> eventType<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> EmscriptenMouseEvent <span class=\"token operator\">*</span>mouseEvent<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>userData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">notifyMousePressed</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetMouseX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">ofGetMouseY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mouseEvent<span class=\"token operator\">-</span><span class=\"token operator\">></span>button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">mouseup_cb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> eventType<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> EmscriptenMouseEvent <span class=\"token operator\">*</span>mouseEvent<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>userData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">notifyMouseReleased</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetMouseX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">ofGetMouseY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mouseEvent<span class=\"token operator\">-</span><span class=\"token operator\">></span>button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">mousemoved_cb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> eventType<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> EmscriptenMouseEvent <span class=\"token operator\">*</span>mouseEvent<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>userData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetMousePressed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">notifyMouseDragged</span><span class=\"token punctuation\">(</span>mouseEvent<span class=\"token operator\">-</span><span class=\"token operator\">></span>canvasX<span class=\"token punctuation\">,</span>mouseEvent<span class=\"token operator\">-</span><span class=\"token operator\">></span>canvasY<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tinstance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">notifyMouseMoved</span><span class=\"token punctuation\">(</span>mouseEvent<span class=\"token operator\">-</span><span class=\"token operator\">></span>canvasX<span class=\"token punctuation\">,</span>mouseEvent<span class=\"token operator\">-</span><span class=\"token operator\">></span>canvasY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">touch_cb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> eventType<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> EmscriptenTouchEvent<span class=\"token operator\">*</span> e<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span><span class=\"token operator\">*</span> userData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        ofTouchEventArgs<span class=\"token operator\">::</span>Type touchArgsType<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>eventType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">case</span> EMSCRIPTEN_EVENT_TOUCHSTART<span class=\"token operator\">:</span>\n                        touchArgsType <span class=\"token operator\">=</span> ofTouchEventArgs<span class=\"token operator\">::</span>down<span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">case</span> EMSCRIPTEN_EVENT_TOUCHEND<span class=\"token operator\">:</span>\n                        touchArgsType <span class=\"token operator\">=</span> ofTouchEventArgs<span class=\"token operator\">::</span>up<span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">case</span> EMSCRIPTEN_EVENT_TOUCHMOVE<span class=\"token operator\">:</span>\n                        touchArgsType <span class=\"token operator\">=</span> ofTouchEventArgs<span class=\"token operator\">::</span>move<span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">case</span> EMSCRIPTEN_EVENT_TOUCHCANCEL<span class=\"token operator\">:</span>\n                        touchArgsType <span class=\"token operator\">=</span> ofTouchEventArgs<span class=\"token operator\">::</span>cancel<span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n                        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">int</span> numTouches <span class=\"token operator\">=</span> e<span class=\"token operator\">-</span><span class=\"token operator\">></span>numTouches<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> numTouches<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                ofTouchEventArgs touchArgs<span class=\"token punctuation\">;</span>\n                touchArgs<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> touchArgsType<span class=\"token punctuation\">;</span>\n                touchArgs<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n                touchArgs<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span>  e<span class=\"token operator\">-</span><span class=\"token operator\">></span>touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>canvasX<span class=\"token punctuation\">;</span>\n                touchArgs<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span>  e<span class=\"token operator\">-</span><span class=\"token operator\">></span>touches<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>canvasY<span class=\"token punctuation\">;</span>\n                instance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">notifyTouchEvent</span><span class=\"token punctuation\">(</span>touchArgs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n           <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">hideCursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">emscripten_hide_mouse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">void</span> ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">showCursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">setWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">setWindowShape</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">emscripten_set_canvas_element_size</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n\nglm<span class=\"token operator\">::</span>vec2 ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">getWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\nglm<span class=\"token operator\">::</span>vec2 ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">getWindowSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> width<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> height<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">emscripten_get_canvas_element_size</span><span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>width<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec2</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nglm<span class=\"token operator\">::</span>vec2 ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">getScreenSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getWindowSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">setOrientation</span><span class=\"token punctuation\">(</span>ofOrientation orientation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\nofOrientation ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">getOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> OF_ORIENTATION_DEFAULT<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">doesHWOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//this is used by ofGetWidth and now determines the window width based on orientation</span>\n<span class=\"token keyword\">int</span>\tofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getWindowSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span>\tofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getWindowSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">setWindowTitle</span><span class=\"token punctuation\">(</span>string title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\nofWindowMode ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">getWindowMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> OF_WINDOW<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">setFullscreen</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> fullscreen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>fullscreen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">emscripten_request_fullscreen</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">emscripten_exit_fullscreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">toggleFullscreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tEmscriptenFullscreenChangeEvent fullscreenStatus<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">emscripten_get_fullscreen_status</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>fullscreenStatus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>fullscreenStatus<span class=\"token punctuation\">.</span>isFullscreen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setFullscreen</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>fullscreenStatus<span class=\"token punctuation\">.</span>fullscreenEnabled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setFullscreen</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">enableSetupScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbEnableSetupScreen <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">void</span> ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">disableSetupScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbEnableSetupScreen <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">setVerticalSync</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> enabled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">eglSwapInterval</span><span class=\"token punctuation\">(</span>display<span class=\"token punctuation\">,</span> enabled <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nEGLDisplay ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">getEGLDisplay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> display<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\nEGLContext ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">getEGLContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> context<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nEGLSurface ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">getEGLSurface</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> surface<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofCoreEvents <span class=\"token operator\">&amp;</span> ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> _events<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nshared_ptr<span class=\"token operator\">&lt;</span>ofBaseRenderer<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ofxAppEmscriptenWindow<span class=\"token operator\">::</span><span class=\"token function\">renderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> _renderer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n","type":"source"}}],"fetch":[]}