{"data":[{"page":{"entry":{"name":"ofxOscArg.h","filename":"ofxOscArg.h","absolute":"/Users/Gilbert/Code/openFrameworks/addons/ofxOsc/src/ofxOscArg.h","path":"/addons/ofxOsc/src/ofxOscArg_h","route":"/addons/ofxOsc/src/ofxOscArg.h","dir":"../addons/ofxOsc/src","ext":"h","type":"source","id":160,"parent":157,"breadcrumbs":[157,158,36],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">// copyright (c) openFrameworks team 2010-2017</span>\n<span class=\"token comment\" spellcheck=\"true\">// copyright (c) Damian Stewart 2007-2009</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofFileUtils.h\"</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// OSC argument type enum values</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// OSC 1.0 required types:</span>\n<span class=\"token comment\" spellcheck=\"true\">///   i - 32-bit integer</span>\n<span class=\"token comment\" spellcheck=\"true\">///   f - 32-bit floating point number</span>\n<span class=\"token comment\" spellcheck=\"true\">///   s - string</span>\n<span class=\"token comment\" spellcheck=\"true\">///   b - blob, aka byte array</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// OSC 1.1 required types:</span>\n<span class=\"token comment\" spellcheck=\"true\">///   T - TRUE (no value required)</span>\n<span class=\"token comment\" spellcheck=\"true\">///   F - FALSE (no value required)</span>\n<span class=\"token comment\" spellcheck=\"true\">///   N - NIL (no value required)</span>\n<span class=\"token comment\" spellcheck=\"true\">///   I - impulse TRIGGER (no value required), aka IMPULSE &amp; INFINITUM</span>\n<span class=\"token comment\" spellcheck=\"true\">///   t - TIMETAG, an OSC timetag in NTP format, encoded in the data section</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// optional extended types (may or may not be supported by other software):</span>\n<span class=\"token comment\" spellcheck=\"true\">///   h - 64-bit integer</span>\n<span class=\"token comment\" spellcheck=\"true\">///   d - 64-bit (double) floating point number</span>\n<span class=\"token comment\" spellcheck=\"true\">///   S - symbol</span>\n<span class=\"token comment\" spellcheck=\"true\">///   c - char</span>\n<span class=\"token comment\" spellcheck=\"true\">///   m - 4 byte midi packet (8 digits hexadecimal)</span>\n<span class=\"token comment\" spellcheck=\"true\">///   r - 32-bit RGBA color</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">enum</span> _ofxOscArgType<span class=\"token punctuation\">{</span>\n\tOFXOSC_TYPE_INT32            <span class=\"token operator\">=</span> <span class=\"token string\">'i'</span><span class=\"token punctuation\">,</span>\n\tOFXOSC_TYPE_INT64            <span class=\"token operator\">=</span> <span class=\"token string\">'h'</span><span class=\"token punctuation\">,</span>\n\tOFXOSC_TYPE_FLOAT            <span class=\"token operator\">=</span> <span class=\"token string\">'f'</span><span class=\"token punctuation\">,</span>\n\tOFXOSC_TYPE_DOUBLE           <span class=\"token operator\">=</span> <span class=\"token string\">'d'</span><span class=\"token punctuation\">,</span>\n\tOFXOSC_TYPE_STRING           <span class=\"token operator\">=</span> <span class=\"token string\">'s'</span><span class=\"token punctuation\">,</span>\n\tOFXOSC_TYPE_SYMBOL           <span class=\"token operator\">=</span> <span class=\"token string\">'S'</span><span class=\"token punctuation\">,</span>\n\tOFXOSC_TYPE_CHAR             <span class=\"token operator\">=</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span>\n\tOFXOSC_TYPE_MIDI_MESSAGE     <span class=\"token operator\">=</span> <span class=\"token string\">'m'</span><span class=\"token punctuation\">,</span>\n\tOFXOSC_TYPE_TRUE             <span class=\"token operator\">=</span> <span class=\"token string\">'T'</span><span class=\"token punctuation\">,</span>\n\tOFXOSC_TYPE_FALSE            <span class=\"token operator\">=</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">,</span>\n\tOFXOSC_TYPE_NONE             <span class=\"token operator\">=</span> <span class=\"token string\">'N'</span><span class=\"token punctuation\">,</span>\n\tOFXOSC_TYPE_TRIGGER          <span class=\"token operator\">=</span> <span class=\"token string\">'I'</span><span class=\"token punctuation\">,</span>\n\tOFXOSC_TYPE_TIMETAG          <span class=\"token operator\">=</span> <span class=\"token string\">'t'</span><span class=\"token punctuation\">,</span>\n\tOFXOSC_TYPE_BLOB             <span class=\"token operator\">=</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span>\n\tOFXOSC_TYPE_RGBA_COLOR       <span class=\"token operator\">=</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span>\n\tOFXOSC_TYPE_INDEXOUTOFBOUNDS <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token comment\" spellcheck=\"true\">///&lt; bad index value</span>\n<span class=\"token punctuation\">}</span> ofxOscArgType<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\class ofxOscArg</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief base class for arguments</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxOscArg</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">ofxOscArg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return argument type</span>\n\t<span class=\"token keyword\">virtual</span> ofxOscArgType <span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> OFXOSC_TYPE_NONE<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return type character as a string</span>\n\t<span class=\"token keyword\">virtual</span> std<span class=\"token operator\">::</span>string <span class=\"token function\">getTypeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token string\">\"N\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\class ofxOscArgInt32</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief a 32-bit integer argument, type name \"i\"</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxOscArgInt32</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofxOscArg<span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">ofxOscArgInt32</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>int32_t value<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">value</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return argument type</span>\n\tofxOscArgType <span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> OFXOSC_TYPE_INT32<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return argument type character as a string</span>\n\tstd<span class=\"token operator\">::</span>string <span class=\"token function\">getTypeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token string\">\"i\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return value</span>\n\tstd<span class=\"token operator\">::</span>int32_t <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// set value</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>int32_t value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\tstd<span class=\"token operator\">::</span>int32_t value<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\class ofxOscArgInt</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief a 32-bit integer argument, type name \"i\"</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxOscArgInt</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofxOscArgInt32<span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">ofxOscArgInt</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>int32_t value<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">ofxOscArgInt32</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\class ofxOscArgInt64</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief a 64-bit integer argument, type name \"h\"</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxOscArgInt64</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofxOscArg<span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">ofxOscArgInt64</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>int64_t value<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">value</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return argument type</span>\n\tofxOscArgType <span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> OFXOSC_TYPE_INT64<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return argument type character as a string</span>\n\tstd<span class=\"token operator\">::</span>string <span class=\"token function\">getTypeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token string\">\"h\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return value</span>\n\tstd<span class=\"token operator\">::</span>int64_t <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// set value</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>int64_t value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\tstd<span class=\"token operator\">::</span>int64_t value<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\class ofxOscArgFloat</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief a 32-bit float argument, type name \"f\"</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxOscArgFloat</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofxOscArg<span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">ofxOscArgFloat</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> value<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">value</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return argument type</span>\n\tofxOscArgType <span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> OFXOSC_TYPE_FLOAT<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return argument type character as a string</span>\n\tstd<span class=\"token operator\">::</span>string <span class=\"token function\">getTypeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token string\">\"f\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return value</span>\n\t<span class=\"token keyword\">float</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// set value</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">float</span> value<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\class ofxOscArgDouble</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief a 64-bit double argument, type name \"d\"</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxOscArgDouble</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofxOscArg<span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">ofxOscArgDouble</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> value<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">value</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return argument type</span>\n\tofxOscArgType <span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> OFXOSC_TYPE_DOUBLE<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return argument type character as a string</span>\n\tstd<span class=\"token operator\">::</span>string <span class=\"token function\">getTypeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token string\">\"d\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return value</span>\n\t<span class=\"token keyword\">double</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// set value</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">double</span> value<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\class ofxOscArgString</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief a null-terminated string argument, type name \"s\"</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxOscArgString</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofxOscArg<span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">ofxOscArgString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span>value <span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">value</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return argument type</span>\n\tofxOscArgType <span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> OFXOSC_TYPE_STRING<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return argument type character as a string</span>\n\tstd<span class=\"token operator\">::</span>string <span class=\"token function\">getTypeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token string\">\"s\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return value</span>\n\t<span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// set value using C string</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// set value using string</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\tstd<span class=\"token operator\">::</span>string value<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\class ofxOscArgSymbol</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief a null-terminated symbol (string) argument, type name \"S\"</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxOscArgSymbol</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofxOscArgString<span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">ofxOscArgSymbol</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span>value<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">ofxOscArgString</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return argument type</span>\n\tofxOscArgType <span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> OFXOSC_TYPE_SYMBOL<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return argument type character as a string</span>\n\tstd<span class=\"token operator\">::</span>string <span class=\"token function\">getTypeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token string\">\"S\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\class ofxOscArgChar</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief a null-terminated char argument, type name \"c\"</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxOscArgChar</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofxOscArg<span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">ofxOscArgChar</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> value<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">value</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return argument type</span>\n\tofxOscArgType <span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> OFXOSC_TYPE_CHAR<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return argument type character as a string</span>\n\tstd<span class=\"token operator\">::</span>string <span class=\"token function\">getTypeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// return value</span>\n\t<span class=\"token keyword\">char</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// set value</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">char</span> value<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\class ofxOscArgMidiMessage</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief a 4-byte MIDI message argument, type name \"m\"</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxOscArgMidiMessage</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofxOscArg<span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">ofxOscArgMidiMessage</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>uint32_t value<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">value</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return argument type</span>\n\tofxOscArgType <span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> OFXOSC_TYPE_MIDI_MESSAGE<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return argument type character as a string</span>\n\tstd<span class=\"token operator\">::</span>string <span class=\"token function\">getTypeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token string\">\"m\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">/// return value</span>\n\tstd<span class=\"token operator\">::</span>uint32_t <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// set value</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>uint32_t value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\tstd<span class=\"token operator\">::</span>uint32_t value<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\class ofxOscArgBool</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief a boolean argument, either type name \"T\" or \"F\" based on value</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxOscArgBool</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofxOscArg<span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">ofxOscArgBool</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> value<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">value</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return argument type</span>\n\tofxOscArgType <span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> value <span class=\"token operator\">?</span> OFXOSC_TYPE_TRUE <span class=\"token operator\">:</span> OFXOSC_TYPE_FALSE<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return argument type character as a string</span>\n\tstd<span class=\"token operator\">::</span>string <span class=\"token function\">getTypeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> value <span class=\"token operator\">?</span> <span class=\"token string\">\"T\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"F\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// return value</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// set value</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">bool</span> value<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\class ofxOscArgNone</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief a none/nil (has no value), type name \"N\"</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxOscArgNone</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofxOscArgBool<span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">ofxOscArgNone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">ofxOscArgBool</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return argument type</span>\n\tofxOscArgType <span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> OFXOSC_TYPE_NONE<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return argument type character as a string</span>\n\tstd<span class=\"token operator\">::</span>string <span class=\"token function\">getTypeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token string\">\"N\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\class ofxOscArgTrigger</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief a trigger impulse (has no value), type name \"I\"</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxOscArgTrigger</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofxOscArgBool<span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">ofxOscArgTrigger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">ofxOscArgBool</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// return the type of this argument</span>\n\tofxOscArgType <span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> OFXOSC_TYPE_TRIGGER<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return argument type character as a string</span>\n\tstd<span class=\"token operator\">::</span>string <span class=\"token function\">getTypeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token string\">\"I\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\class ofxOscArgTimetag</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief a 64-bit NTP time tag argument, type name \"t\"</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxOscArgTimetag</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofxOscArg<span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">ofxOscArgTimetag</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>uint64_t value<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">value</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return argument type</span>\n\tofxOscArgType <span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> OFXOSC_TYPE_TIMETAG<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return argument type character as a string</span>\n\tstd<span class=\"token operator\">::</span>string <span class=\"token function\">getTypeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token string\">\"t\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// return value</span>\n\tstd<span class=\"token operator\">::</span>uint64_t <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// set value</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>uint64_t value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\tstd<span class=\"token operator\">::</span>uint64_t value<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\class ofxOscArgBlob</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief a binary blob argument, type name \"b\"</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxOscArgBlob</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofxOscArg<span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">ofxOscArgBlob</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofBuffer <span class=\"token operator\">&amp;</span>value<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">value</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return argument type</span>\n\tofxOscArgType <span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> OFXOSC_TYPE_BLOB<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return argument type character as a string</span>\n\tstd<span class=\"token operator\">::</span>string <span class=\"token function\">getTypeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// return value</span>\n\t<span class=\"token keyword\">const</span> ofBuffer <span class=\"token operator\">&amp;</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// set value</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>value<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>value<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\tofBuffer value<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\class ofxOscArgRgbaColor</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief a 32-bit RGBA color argument, type name \"r\"</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxOscArgRgbaColor</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofxOscArgMidiMessage<span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">ofxOscArgRgbaColor</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>uint32_t value<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">ofxOscArgMidiMessage</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return argument type</span>\n\tofxOscArgType <span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> OFXOSC_TYPE_RGBA_COLOR<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return argument type character as a string</span>\n\tstd<span class=\"token operator\">::</span>string <span class=\"token function\">getTypeName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n","type":"source"}}],"fetch":[]}