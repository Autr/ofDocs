{"data":[{"page":{"entry":{"name":"ofxAndroidSoundStream.cpp","filename":"ofxAndroidSoundStream.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/addons/ofxAndroid/src/ofxAndroidSoundStream.cpp","path":"/addons/ofxAndroid/src/ofxAndroidSoundStream_cpp","route":"/addons/ofxAndroid/src/ofxAndroidSoundStream.cpp","dir":"../addons/ofxAndroid/src","ext":"cpp","type":"source","id":51,"parent":39,"breadcrumbs":[39,40,36],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">/*\n * ofxAndroidSoundStream.cpp\n *\n *  Created on: 04/07/2010\n *      Author: arturo\n */</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofBaseApp.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxAndroidSoundStream.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofSoundStream.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxAndroidUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofAppRunner.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofLog.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;deque></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;set></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;jni.h></span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// Global pointer used to implement the singletomn pattern for ofxAndroidSoundStream class</span>\n<span class=\"token keyword\">static</span> ofxAndroidSoundStream<span class=\"token operator\">*</span> instance <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> headphonesConnected <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\nofxAndroidSoundStream<span class=\"token operator\">::</span><span class=\"token function\">ofxAndroidSoundStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tout_buffer <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\tin_buffer <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\n\tisPaused <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\ttotalOutRequestedBufferSize <span class=\"token operator\">=</span> totalInRequestedBufferSize <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\ttickCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\theadphonesConnected <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">ofAddListener</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofxAndroidEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>pause<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>ofxAndroidSoundStream<span class=\"token operator\">::</span>pause<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofAddListener</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofxAndroidEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>resume<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>ofxAndroidSoundStream<span class=\"token operator\">::</span>resume<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofxAndroidSoundStream<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofxAndroidSoundStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>instance<span class=\"token operator\">==</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tinstance <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">ofRemoveListener</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofxAndroidEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>pause<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>ofxAndroidSoundStream<span class=\"token operator\">::</span>pause<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofRemoveListener</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofxAndroidEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>resume<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>ofxAndroidSoundStream<span class=\"token operator\">::</span>resume<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>ofSoundDevice<span class=\"token operator\">></span> ofxAndroidSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getDeviceList</span><span class=\"token punctuation\">(</span>ofSoundDevice<span class=\"token operator\">::</span>Api api<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidSoundStream\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getDeviceList() isn't implemented on android\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> vector<span class=\"token operator\">&lt;</span>ofSoundDevice<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAndroidSoundStream<span class=\"token operator\">::</span><span class=\"token function\">setDeviceID</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> deviceID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAndroidSoundStream<span class=\"token operator\">::</span><span class=\"token function\">setInput</span><span class=\"token punctuation\">(</span>ofBaseSoundInput <span class=\"token operator\">*</span> _soundInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tsettings<span class=\"token punctuation\">.</span><span class=\"token function\">setInListener</span><span class=\"token punctuation\">(</span>_soundInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAndroidSoundStream<span class=\"token operator\">::</span><span class=\"token function\">setOutput</span><span class=\"token punctuation\">(</span>ofBaseSoundOutput <span class=\"token operator\">*</span> _soundOutput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    settings<span class=\"token punctuation\">.</span><span class=\"token function\">setOutListener</span><span class=\"token punctuation\">(</span>_soundOutput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofxAndroidSoundStream<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofSoundStreamSettings <span class=\"token operator\">&amp;</span> settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>instance<span class=\"token operator\">!=</span><span class=\"token constant\">NULL</span> <span class=\"token operator\">&amp;&amp;</span> instance<span class=\"token operator\">!=</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidSoundStream\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setup(): multiple instances detected, only one instance allowed\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// Find the minimum input buffer size allowed by the Android device</span>\n\t<span class=\"token keyword\">int</span> input_buffer_size <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>numInputChannels<span class=\"token operator\">*</span><span class=\"token function\">getMinInBufferSize</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>sampleRate<span class=\"token punctuation\">,</span>settings<span class=\"token punctuation\">.</span>numInputChannels<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// setup size of input circular-buffer</span>\n\tinput_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>input_buffer_size<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// deallocate and reallocate if setup() is called more than once</span>\n\tin_float_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>bufferSize<span class=\"token punctuation\">,</span>settings<span class=\"token punctuation\">.</span>numInputChannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tin_float_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">setSampleRate</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>sampleRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tout_float_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>bufferSize<span class=\"token punctuation\">,</span>settings<span class=\"token punctuation\">.</span>numOutputChannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tout_float_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">setSampleRate</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>sampleRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\ttickCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\ttotalOutRequestedBufferSize <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>bufferSize<span class=\"token operator\">*</span>settings<span class=\"token punctuation\">.</span>numOutputChannels<span class=\"token punctuation\">;</span>\n\ttotalInRequestedBufferSize <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>bufferSize<span class=\"token operator\">*</span>settings<span class=\"token punctuation\">.</span>numInputChannels<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>settings <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// JNI: Try to find and call OFAndroidSoundStream.getInstance().setup(outChannels,inChannels,sampleRate,bufferSize,nBuffers)</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">ofGetJavaVMPtr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidSoundStream\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setup(): couldn't find java virtual machine\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tJNIEnv <span class=\"token operator\">*</span>env <span class=\"token operator\">=</span> <span class=\"token function\">ofGetJNIEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>env<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidSoundStream\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setup(): couldn't get environment using GetEnv()\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tjclass <span class=\"token class-name\">javaClass</span> <span class=\"token operator\">=</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">FindClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cc/openframeworks/OFAndroidSoundStream\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>javaClass<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidSoundStream\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setup(): couldn't find OFAndroidSoundStream java class\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tjmethodID soundStreamSingleton <span class=\"token operator\">=</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">GetStaticMethodID</span><span class=\"token punctuation\">(</span>javaClass<span class=\"token punctuation\">,</span><span class=\"token string\">\"getInstance\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"()Lcc/openframeworks/OFAndroidSoundStream;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>soundStreamSingleton<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidSoundStream\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setup(): couldn't find OFAndroidSoundStream singleton method\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tjobject javaObject <span class=\"token operator\">=</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">CallStaticObjectMethod</span><span class=\"token punctuation\">(</span>javaClass<span class=\"token punctuation\">,</span>soundStreamSingleton<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tjmethodID javaSetup <span class=\"token operator\">=</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">GetMethodID</span><span class=\"token punctuation\">(</span>javaClass<span class=\"token punctuation\">,</span><span class=\"token string\">\"setup\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"(IIIII)V\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// call setup()</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>javaObject <span class=\"token operator\">&amp;&amp;</span> javaSetup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tenv<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">CallVoidMethod</span><span class=\"token punctuation\">(</span>javaObject<span class=\"token punctuation\">,</span>javaSetup<span class=\"token punctuation\">,</span>settings<span class=\"token punctuation\">.</span>numOutputChannels<span class=\"token punctuation\">,</span>settings<span class=\"token punctuation\">.</span>numInputChannels<span class=\"token punctuation\">,</span>settings<span class=\"token punctuation\">.</span>sampleRate<span class=\"token punctuation\">,</span>settings<span class=\"token punctuation\">.</span>bufferSize<span class=\"token punctuation\">,</span>settings<span class=\"token punctuation\">.</span>numBuffers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidSoundStream\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setup(): couldn't get OFAndroidSoundStream instance or setup method\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// Store instance pointer to ofxAndroidSoundStream (singleton pattern)</span>\n\tinstance <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\tisPaused <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAndroidSoundStream<span class=\"token operator\">::</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>isPaused<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAndroidSoundStream<span class=\"token operator\">::</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">pause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAndroidSoundStream<span class=\"token operator\">::</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">pause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// JNI: Try to find and call OFAndroidSoundStream.getInstance().stop()</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">ofGetJavaVMPtr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidSoundStream\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"close(): couldn't find java virtual machine\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tJNIEnv <span class=\"token operator\">*</span>env <span class=\"token operator\">=</span> <span class=\"token function\">ofGetJNIEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>env<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidSoundStream\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"close(): couldn't get environment using GetEnv()\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tjclass <span class=\"token class-name\">javaClass</span> <span class=\"token operator\">=</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">FindClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cc/openframeworks/OFAndroidSoundStream\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>javaClass<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidSoundStream\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"close(): couldn't find OFAndroidSoundStream java class\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tjmethodID soundStreamSingleton <span class=\"token operator\">=</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">GetStaticMethodID</span><span class=\"token punctuation\">(</span>javaClass<span class=\"token punctuation\">,</span><span class=\"token string\">\"getInstance\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"()Lcc/openframeworks/OFAndroidSoundStream;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>soundStreamSingleton<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidSoundStream\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"close(): couldn't find OFAndroidSoundStream singleton method\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tjobject javaObject <span class=\"token operator\">=</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">CallStaticObjectMethod</span><span class=\"token punctuation\">(</span>javaClass<span class=\"token punctuation\">,</span>soundStreamSingleton<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tjmethodID javaStop <span class=\"token operator\">=</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">GetMethodID</span><span class=\"token punctuation\">(</span>javaClass<span class=\"token punctuation\">,</span><span class=\"token string\">\"stop\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"()V\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// call stop()</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>javaObject <span class=\"token operator\">&amp;&amp;</span> javaStop<span class=\"token punctuation\">)</span>\n\t\tenv<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">CallVoidMethod</span><span class=\"token punctuation\">(</span>javaObject<span class=\"token punctuation\">,</span>javaStop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">else</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidSoundStream\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"close(): couldn't get OFAndroidSoundStream instance or stop method\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nuint64_t ofxAndroidSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getTickCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> tickCount<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxAndroidSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getNumInputChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> in_float_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">getNumChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxAndroidSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getNumOutputChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> out_float_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">getNumChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxAndroidSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getSampleRate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> out_float_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">getSampleRate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxAndroidSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getBufferSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> out_float_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">getNumFrames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAndroidSoundStream<span class=\"token operator\">::</span><span class=\"token function\">pause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tisPaused <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAndroidSoundStream<span class=\"token operator\">::</span><span class=\"token function\">resume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tisPaused <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> conv_factor <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">32767.5f</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> ofxAndroidSoundStream<span class=\"token operator\">::</span><span class=\"token function\">androidInputAudioCallback</span><span class=\"token punctuation\">(</span>JNIEnv<span class=\"token operator\">*</span>  env<span class=\"token punctuation\">,</span> jobject  thiz<span class=\"token punctuation\">,</span>jshortArray array<span class=\"token punctuation\">,</span> jint numChannels<span class=\"token punctuation\">,</span> jint bufferSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>settings<span class=\"token punctuation\">.</span>inCallback <span class=\"token operator\">||</span> isPaused<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// </span><span class=\"token comment\" spellcheck=\"true\">/* comment this below out ?\n\t// --- Handle INPUT buffer size changes ---\n\t// if our 'out_float_buffer' (used by the OF audio output callback) is not allocated\n\t// OR the number of output channels has changed\n\t// OR the output buffer size has changed\n\t// then: free/reallocate 'out_float_buffer' accordingly\n\tif(in_float_buffer.size() != numChannels * bufferSize){\n\t\tin_float_buffer.allocate(bufferSize,numChannels);\n\t\tofLogNotice(\"ofxAndroidSoundStream\") &lt;&lt; \"setting input buffers frames to: \" &lt;&lt; bufferSize;\t\t\n\t} // */</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// IMPORTANT: Critical buffers must be Acquired / Released ASAP:</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// http://download.oracle.com/javase/1.3/docs/guide/jni/jni-12.html#GetPrimitiveArrayCritical</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// 1) Get critical JNI buffer access</span>\n\tin_buffer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">short</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">GetPrimitiveArrayCritical</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>in_buffer <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// this would imply 'Out of memory' exception</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// 2) Perform input buffer copy (write into OpenFrameworks circular buffer)</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>out_float_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">getNumChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>bufferSize<span class=\"token operator\">*</span>numChannels<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tinput_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">(</span>in_buffer<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> conv_factor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tin_float_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">copyFrom</span><span class=\"token punctuation\">(</span>in_buffer<span class=\"token punctuation\">,</span>bufferSize<span class=\"token punctuation\">,</span>numChannels<span class=\"token punctuation\">,</span>in_float_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">getSampleRate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tin_float_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">setTickCount</span><span class=\"token punctuation\">(</span>tickCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        settings<span class=\"token punctuation\">.</span><span class=\"token function\">inCallback</span><span class=\"token punctuation\">(</span>in_float_buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// 3) Release critical JNI</span>\n\tenv<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">ReleasePrimitiveArrayCritical</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> in_buffer<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// all ok</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxAndroidSoundStream<span class=\"token operator\">::</span><span class=\"token function\">androidOutputAudioCallback</span><span class=\"token punctuation\">(</span>JNIEnv<span class=\"token operator\">*</span>  env<span class=\"token punctuation\">,</span> jobject  thiz<span class=\"token punctuation\">,</span>jshortArray array<span class=\"token punctuation\">,</span> jint numChannels<span class=\"token punctuation\">,</span> jint bufferSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>settings<span class=\"token punctuation\">.</span>outCallback <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>settings<span class=\"token punctuation\">.</span>inCallback<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> isPaused<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// --- Handle OUTPUT buffer size changes ---</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// if our 'out_float_buffer' (used by the OF audio output callback) is not allocated</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// OR the number of output channels has changed</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// OR the output buffer size has changed</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// then: free/reallocate 'out_float_buffer' accordingly</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>out_float_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span>bufferSize<span class=\"token operator\">*</span>numChannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tout_float_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>bufferSize<span class=\"token punctuation\">,</span>numChannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidSoundStream\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setting out buffers frames to: \"</span> <span class=\"token operator\">&lt;&lt;</span> bufferSize<span class=\"token punctuation\">;</span>\t\t\n\t<span class=\"token punctuation\">}</span>\n\n   \t<span class=\"token comment\" spellcheck=\"true\">// First, the \"sound input\" circular buffer is handled into our \"sound output\" function.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//  (minimizing latency in full-duplex, see: http://www.portaudio.com/docs/v19-doxydocs/pa__process_8h.html )</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>inCallback <span class=\"token operator\">&amp;&amp;</span> in_float_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">getNumChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>in_float_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tin_float_buffer<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> input_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tin_float_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">setTickCount</span><span class=\"token punctuation\">(</span>tickCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        settings<span class=\"token punctuation\">.</span><span class=\"token function\">inCallback</span><span class=\"token punctuation\">(</span>in_float_buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// 1) Get critical JNI buffer access</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>outCallback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tout_buffer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">short</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">GetPrimitiveArrayCritical</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>out_buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// Call the ofApp soundOutput() Callback so that 'out_float_buffer' gets filled</span>\n\t\tout_float_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tout_float_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">setTickCount</span><span class=\"token punctuation\">(</span>tickCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        settings<span class=\"token punctuation\">.</span><span class=\"token function\">outCallback</span><span class=\"token punctuation\">(</span>out_float_buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tout_float_buffer<span class=\"token punctuation\">.</span><span class=\"token function\">toShortPCM</span><span class=\"token punctuation\">(</span>out_buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// 3) Release critical JNI: now that the JNI output buffer has been populated, release it ASAP</span>\n\t\tenv<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">ReleasePrimitiveArrayCritical</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span>out_buffer<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\ttickCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxAndroidSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getMinOutBufferSize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> samplerate<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nchannels<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tjclass <span class=\"token class-name\">javaClass</span> <span class=\"token operator\">=</span> <span class=\"token function\">ofGetJNIEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">FindClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cc/openframeworks/OFAndroidSoundStream\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>javaClass<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidSoundStream\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getMinOutBufferSize(): couldn't find OFAndroidSoundStream java class\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tjmethodID getMinBuffSize <span class=\"token operator\">=</span> <span class=\"token function\">ofGetJNIEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">GetStaticMethodID</span><span class=\"token punctuation\">(</span>javaClass<span class=\"token punctuation\">,</span><span class=\"token string\">\"getMinOutBufferSize\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"(II)I\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>getMinBuffSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidSoundStream\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getMinOutBufferSize(): couldn't find getMinOutBufferSize method\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">int</span> minBuff <span class=\"token operator\">=</span> <span class=\"token function\">ofGetJNIEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">CallStaticIntMethod</span><span class=\"token punctuation\">(</span>javaClass<span class=\"token punctuation\">,</span>getMinBuffSize<span class=\"token punctuation\">,</span>samplerate<span class=\"token punctuation\">,</span>nchannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> minBuff<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxAndroidSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getMinInBufferSize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> samplerate<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nchannels<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tjclass <span class=\"token class-name\">javaClass</span> <span class=\"token operator\">=</span> <span class=\"token function\">ofGetJNIEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">FindClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cc/openframeworks/OFAndroidSoundStream\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>javaClass<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidSoundStream\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getMinInBufferSize(): couldn't find OFAndroidSoundStream java class\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tjmethodID getMinBuffSize <span class=\"token operator\">=</span> <span class=\"token function\">ofGetJNIEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">GetStaticMethodID</span><span class=\"token punctuation\">(</span>javaClass<span class=\"token punctuation\">,</span><span class=\"token string\">\"getMinInBufferSize\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"(II)I\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>getMinBuffSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidSoundStream\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getMinInBufferSize(): couldn't find getMinInBufferSize method\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofGetJNIEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">CallStaticIntMethod</span><span class=\"token punctuation\">(</span>javaClass<span class=\"token punctuation\">,</span>getMinBuffSize<span class=\"token punctuation\">,</span>samplerate<span class=\"token punctuation\">,</span>nchannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofxAndroidSoundStream<span class=\"token operator\">::</span><span class=\"token function\">isHeadPhonesConnected</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> headphonesConnected<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">extern</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">{</span>\n\njint\n<span class=\"token function\">Java_cc_openframeworks_OFAndroidSoundStream_audioOut</span><span class=\"token punctuation\">(</span>JNIEnv<span class=\"token operator\">*</span>  env<span class=\"token punctuation\">,</span> jobject  thiz<span class=\"token punctuation\">,</span> jshortArray array<span class=\"token punctuation\">,</span> jint numChannels<span class=\"token punctuation\">,</span> jint bufferSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> instance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">androidOutputAudioCallback</span><span class=\"token punctuation\">(</span>env<span class=\"token punctuation\">,</span>thiz<span class=\"token punctuation\">,</span>array<span class=\"token punctuation\">,</span>numChannels<span class=\"token punctuation\">,</span>bufferSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Java_cc_openframeworks_OFAndroidSoundStream_audioOut\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"No instance\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\njint\n<span class=\"token function\">Java_cc_openframeworks_OFAndroidSoundStream_audioIn</span><span class=\"token punctuation\">(</span>JNIEnv<span class=\"token operator\">*</span>  env<span class=\"token punctuation\">,</span> jobject  thiz<span class=\"token punctuation\">,</span> jshortArray array<span class=\"token punctuation\">,</span> jint numChannels<span class=\"token punctuation\">,</span> jint bufferSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> instance<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">androidInputAudioCallback</span><span class=\"token punctuation\">(</span>env<span class=\"token punctuation\">,</span>thiz<span class=\"token punctuation\">,</span>array<span class=\"token punctuation\">,</span>numChannels<span class=\"token punctuation\">,</span>bufferSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Java_cc_openframeworks_OFAndroidSoundStream_audioIn\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"No instance\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">Java_cc_openframeworks_OFAndroidSoundStream_headphonesConnected</span><span class=\"token punctuation\">(</span>JNIEnv<span class=\"token operator\">*</span>  env<span class=\"token punctuation\">,</span> jobject  thiz<span class=\"token punctuation\">,</span> jboolean connected<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\theadphonesConnected <span class=\"token operator\">=</span> connected<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">)</span> <span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span>instance<span class=\"token operator\">-</span><span class=\"token operator\">></span>headphonesConnectedE<span class=\"token punctuation\">,</span>headphonesConnected<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n","type":"source"}}],"fetch":[]}