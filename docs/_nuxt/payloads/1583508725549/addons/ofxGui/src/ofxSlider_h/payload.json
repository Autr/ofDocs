{"data":[{"page":{"entry":{"name":"ofxSlider.h","filename":"ofxSlider.h","absolute":"/Users/Gilbert/Code/openFrameworks/addons/ofxGui/src/ofxSlider.h","path":"/addons/ofxGui/src/ofxSlider_h","route":"/addons/ofxGui/src/ofxSlider.h","dir":"../addons/ofxGui/src","ext":"h","type":"source","id":105,"parent":86,"breadcrumbs":[86,87,36],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxBaseGui.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofParameter.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxInputField.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxGuiUtils.h\"</span></span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxSlider</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofxBaseGui<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">friend</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofPanel</span><span class=\"token punctuation\">;</span>\n\t\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\t<span class=\"token function\">ofxSlider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">~</span><span class=\"token function\">ofxSlider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofxSlider</span><span class=\"token punctuation\">(</span>ofParameter<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span> _val<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width <span class=\"token operator\">=</span> defaultWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height <span class=\"token operator\">=</span> defaultHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofxSlider<span class=\"token operator\">*</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>ofParameter<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span> _val<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width <span class=\"token operator\">=</span> defaultWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height <span class=\"token operator\">=</span> defaultHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofxSlider<span class=\"token operator\">*</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> sliderName<span class=\"token punctuation\">,</span> Type _val<span class=\"token punctuation\">,</span> Type _min<span class=\"token punctuation\">,</span> Type _max<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width <span class=\"token operator\">=</span> defaultWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height <span class=\"token operator\">=</span> defaultHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setMin</span><span class=\"token punctuation\">(</span>Type min<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tType <span class=\"token function\">getMin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setMax</span><span class=\"token punctuation\">(</span>Type max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tType <span class=\"token function\">getMax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">mouseMoved</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">mousePressed</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">mouseDragged</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">mouseReleased</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">mouseScrolled</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setUpdateOnReleaseOnly</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bUpdateOnReleaseOnly<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">ListenerClass</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> ListenerMethod<span class=\"token operator\">></span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>ListenerClass <span class=\"token operator\">*</span> listener<span class=\"token punctuation\">,</span> ListenerMethod method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tvalue<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>listener<span class=\"token punctuation\">,</span>method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">ListenerClass</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> ListenerMethod<span class=\"token operator\">></span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">removeListener</span><span class=\"token punctuation\">(</span>ListenerClass <span class=\"token operator\">*</span> listener<span class=\"token punctuation\">,</span> ListenerMethod method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tvalue<span class=\"token punctuation\">.</span><span class=\"token function\">removeListener</span><span class=\"token punctuation\">(</span>listener<span class=\"token punctuation\">,</span>method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\n\n\t<span class=\"token keyword\">double</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>Type v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">operator</span> <span class=\"token keyword\">const</span> Type <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setSize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setShape</span><span class=\"token punctuation\">(</span>ofRectangle r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setShape</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\tofAbstractParameter <span class=\"token operator\">&amp;</span> <span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\n\tofxGuiRectMesh bg<span class=\"token punctuation\">,</span> bar<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofParameter<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span> value<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> bUpdateOnReleaseOnly<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> bGuiActive<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> mouseInside<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> overlappingLabel<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> mx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> my<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bCheck<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">generateDraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">generateText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">valueChanged</span><span class=\"token punctuation\">(</span>Type <span class=\"token operator\">&amp;</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tofVboMesh textMesh<span class=\"token punctuation\">;</span>\n\tofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span> input<span class=\"token punctuation\">{</span>ofxInputField<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span>InsideSlider<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">enum</span> State<span class=\"token punctuation\">{</span>\n\t\tSlider<span class=\"token punctuation\">,</span>\n\t\tInput<span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span> state <span class=\"token operator\">=</span> Slider<span class=\"token punctuation\">;</span>\n\tofEventListener listener<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> errorTime <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">typedef</span> ofxSlider<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span> ofxFloatSlider<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> ofxSlider<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> ofxIntSlider<span class=\"token punctuation\">;</span>\n","type":"source"}}],"fetch":[]}