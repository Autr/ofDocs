{"data":[{"page":{"entry":{"name":"ofxAssimpModelLoader.cpp","filename":"ofxAssimpModelLoader.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/addons/ofxAssimpModelLoader/src/ofxAssimpModelLoader.cpp","path":"/addons/ofxAssimpModelLoader/src/ofxAssimpModelLoader_cpp","route":"/addons/ofxAssimpModelLoader/src/ofxAssimpModelLoader.cpp","dir":"../addons/ofxAssimpModelLoader/src","ext":"cpp","type":"source","id":67,"parent":61,"breadcrumbs":[61,62,36],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxAssimpModelLoader.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxAssimpUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofLight.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofImage.h\"</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;assimp/cimport.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;assimp/scene.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;assimp/postprocess.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;assimp/config.h></span></span>\n\nofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">ofxAssimpModelLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofxAssimpModelLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">loadModel</span><span class=\"token punctuation\">(</span>string modelName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> optimize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    \n    file<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>modelName<span class=\"token punctuation\">,</span> ofFile<span class=\"token operator\">::</span>ReadOnly<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// Since it may be a binary file we should read it in binary -Ed</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAssimpModelLoader\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"loadModel(): model does not exist: \\\"\"</span> <span class=\"token operator\">&lt;&lt;</span> modelName <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAssimpModelLoader\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"loadModel(): loading \\\"\"</span> <span class=\"token operator\">&lt;&lt;</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getFileName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\" from \\\"\"</span> <span class=\"token operator\">&lt;&lt;</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getEnclosingDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"\"</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>scene<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// we reset the shared_ptr explicitly here, to force the old </span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// aiScene to be deleted **before** a new aiScene is created.</span>\n\t\tscene<span class=\"token punctuation\">.</span><span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">// sets various properties &amp; flags to a default preference</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> flags <span class=\"token operator\">=</span> <span class=\"token function\">initImportProperties</span><span class=\"token punctuation\">(</span>optimize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">// loads scene from file</span>\n\tstd<span class=\"token operator\">::</span>string path <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getAbsolutePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tscene <span class=\"token operator\">=</span> shared_ptr<span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span> aiScene<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token function\">aiImportFileExWithProperties</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> flags<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> aiReleaseImport<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">bool</span> bOk <span class=\"token operator\">=</span> <span class=\"token function\">processScene</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> bOk<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">bool</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">loadModel</span><span class=\"token punctuation\">(</span>ofBuffer <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> optimize<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> extension<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    \n    <span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAssimpModelLoader\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"loadModel(): loading from memory buffer \\\".\"</span> <span class=\"token operator\">&lt;&lt;</span> extension <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"\"</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>scene<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// we reset the shared_ptr explicitly here, to force the old </span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// aiScene to be deleted **before** a new aiScene is created.</span>\n\t\tscene<span class=\"token punctuation\">.</span><span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">// sets various properties &amp; flags to a default preference</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> flags <span class=\"token operator\">=</span> <span class=\"token function\">initImportProperties</span><span class=\"token punctuation\">(</span>optimize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">// loads scene from memory buffer - note this will not work for multipart files (obj, md3, etc)</span>\n    scene <span class=\"token operator\">=</span> shared_ptr<span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span> aiScene<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token function\">aiImportFileFromMemoryWithProperties</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> flags<span class=\"token punctuation\">,</span> extension<span class=\"token punctuation\">,</span> store<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> aiReleaseImport<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">bool</span> bOk <span class=\"token operator\">=</span> <span class=\"token function\">processScene</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> bOk<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">initImportProperties</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> optimize<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>    \n    store<span class=\"token punctuation\">.</span><span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token function\">aiCreatePropertyStore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> aiReleasePropertyStore<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">// only ever give us triangles.</span>\n    <span class=\"token function\">aiSetImportPropertyInteger</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> AI_CONFIG_PP_SBP_REMOVE<span class=\"token punctuation\">,</span> aiPrimitiveType_LINE <span class=\"token operator\">|</span> aiPrimitiveType_POINT <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">aiSetImportPropertyInteger</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> AI_CONFIG_PP_PTV_NORMALIZE<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">// aiProcess_FlipUVs is for VAR code. Not needed otherwise. Not sure why.</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> flags <span class=\"token operator\">=</span> aiProcessPreset_TargetRealtime_MaxQuality <span class=\"token operator\">|</span> aiProcess_Triangulate <span class=\"token operator\">|</span> aiProcess_FlipUVs<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>optimize<span class=\"token punctuation\">)</span> flags <span class=\"token operator\">|</span><span class=\"token operator\">=</span>  aiProcess_ImproveCacheLocality <span class=\"token operator\">|</span> aiProcess_OptimizeGraph <span class=\"token operator\">|</span>\n        aiProcess_OptimizeMeshes <span class=\"token operator\">|</span> aiProcess_JoinIdenticalVertices <span class=\"token operator\">|</span>\n        aiProcess_RemoveRedundantMaterials<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">return</span> flags<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">processScene</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    \n    normalizeFactor <span class=\"token operator\">=</span> <span class=\"token function\">ofGetWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>scene<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">loadGLResources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">calculateDimensions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">getAnimationCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAssimpModelLoader\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"loadModel(): scene has \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">getAnimationCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"animations\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAssimpModelLoader\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"loadMode(): no animations\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>       \n        \n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAssimpModelLoader\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"loadModel(): \"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span> <span class=\"token function\">aiGetErrorString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">createEmptyModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>scene<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tscene<span class=\"token punctuation\">.</span><span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">setNormalizationFactor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> factor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tnormalizeFactor <span class=\"token operator\">=</span> factor<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">calculateDimensions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>scene<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAssimpModelLoader\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"calculateDimensions(): inited scene with \"</span>\n\t\t<span class=\"token operator\">&lt;&lt;</span> scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumMeshes <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" meshes &amp; \"</span> <span class=\"token operator\">&lt;&lt;</span> scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumAnimations <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" animations\"</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">getBoundingBoxWithMinVector</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>scene_min<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>scene_max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tscene_center<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>scene_min<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> scene_max<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2.0f</span><span class=\"token punctuation\">;</span>\n\tscene_center<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>scene_min<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> scene_max<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2.0f</span><span class=\"token punctuation\">;</span>\n\tscene_center<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>scene_min<span class=\"token punctuation\">.</span>z <span class=\"token operator\">+</span> scene_max<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2.0f</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// optional normalized scaling</span>\n\tnormalizedScale <span class=\"token operator\">=</span> scene_max<span class=\"token punctuation\">.</span>x<span class=\"token operator\">-</span>scene_min<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\tnormalizedScale <span class=\"token operator\">=</span> <span class=\"token function\">MAX</span><span class=\"token punctuation\">(</span>scene_max<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> scene_min<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>normalizedScale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tnormalizedScale <span class=\"token operator\">=</span> <span class=\"token function\">MAX</span><span class=\"token punctuation\">(</span>scene_max<span class=\"token punctuation\">.</span>z <span class=\"token operator\">-</span> scene_min<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">,</span>normalizedScale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>normalizedScale<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> std<span class=\"token operator\">::</span>numeric_limits<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">epsilon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAssimpModelLoader\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Error calculating normalized scale of scene\"</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n        normalizedScale <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        normalizedScale <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span>f <span class=\"token operator\">/</span> normalizedScale<span class=\"token punctuation\">;</span>\n        normalizedScale <span class=\"token operator\">*</span><span class=\"token operator\">=</span> normalizeFactor<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token function\">updateModelMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">createLightsFromAiModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tlights<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tlights<span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span>scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumLights<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumLights<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tlights<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mLights<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>mType<span class=\"token operator\">==</span>aiLightSource_DIRECTIONAL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tlights<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">setDirectional</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tlights<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">setOrientation</span><span class=\"token punctuation\">(</span><span class=\"token function\">aiVecToOfVec</span><span class=\"token punctuation\">(</span>scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mLights<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>mDirection<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mLights<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>mType<span class=\"token operator\">!=</span>aiLightSource_POINT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tlights<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">setSpotlight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tlights<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token function\">aiVecToOfVec</span><span class=\"token punctuation\">(</span>scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mLights<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>mPosition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tlights<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAmbientColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">aiColorToOfColor</span><span class=\"token punctuation\">(</span>scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mLights<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>mColorAmbient<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tlights<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">setDiffuseColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">aiColorToOfColor</span><span class=\"token punctuation\">(</span>scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mLights<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>mColorDiffuse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tlights<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">setSpecularColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">aiColorToOfColor</span><span class=\"token punctuation\">(</span>scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mLights<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>mColorSpecular<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">optimizeScene</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">aiApplyPostProcessing</span><span class=\"token punctuation\">(</span>scene<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>aiProcess_ImproveCacheLocality <span class=\"token operator\">|</span> aiProcess_OptimizeGraph <span class=\"token operator\">|</span>\n\t\t\taiProcess_OptimizeMeshes <span class=\"token operator\">|</span> aiProcess_JoinIdenticalVertices <span class=\"token operator\">|</span>\n\t\t\taiProcess_RemoveRedundantMaterials<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">loadGLResources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAssimpModelLoader\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"loadGLResources(): starting\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// create new mesh helpers for each mesh, will populate their data later.</span>\n    modelMeshes<span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span>scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumMeshes<span class=\"token punctuation\">,</span><span class=\"token function\">ofxAssimpMeshHelper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// create OpenGL buffers and populate them based on each meshes pertinant info.</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumMeshes<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAssimpModelLoader\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"loadGLResources(): loading mesh \"</span> <span class=\"token operator\">&lt;&lt;</span> i<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\" spellcheck=\"true\">// current mesh we are introspecting</span>\n        aiMesh<span class=\"token operator\">*</span> mesh <span class=\"token operator\">=</span> scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">// the current meshHelper we will be populating data into.</span>\n        ofxAssimpMeshHelper <span class=\"token operator\">&amp;</span> meshHelper <span class=\"token operator\">=</span> modelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\" spellcheck=\"true\">//ofxAssimpMeshHelper meshHelper;</span>\n\t\t\n        <span class=\"token comment\" spellcheck=\"true\">//meshHelper.texture = NULL;</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">// Handle material info</span>\n        aiMaterial<span class=\"token operator\">*</span> mtl <span class=\"token operator\">=</span> scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mMaterials<span class=\"token punctuation\">[</span>mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span>mMaterialIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        aiColor4D dcolor<span class=\"token punctuation\">,</span> scolor<span class=\"token punctuation\">,</span> acolor<span class=\"token punctuation\">,</span> ecolor<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>AI_SUCCESS <span class=\"token operator\">==</span> <span class=\"token function\">aiGetMaterialColor</span><span class=\"token punctuation\">(</span>mtl<span class=\"token punctuation\">,</span> AI_MATKEY_COLOR_DIFFUSE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dcolor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            meshHelper<span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span><span class=\"token function\">setDiffuseColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">aiColorToOfColor</span><span class=\"token punctuation\">(</span>dcolor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>AI_SUCCESS <span class=\"token operator\">==</span> <span class=\"token function\">aiGetMaterialColor</span><span class=\"token punctuation\">(</span>mtl<span class=\"token punctuation\">,</span> AI_MATKEY_COLOR_SPECULAR<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>scolor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        \tmeshHelper<span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span><span class=\"token function\">setSpecularColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">aiColorToOfColor</span><span class=\"token punctuation\">(</span>scolor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>AI_SUCCESS <span class=\"token operator\">==</span> <span class=\"token function\">aiGetMaterialColor</span><span class=\"token punctuation\">(</span>mtl<span class=\"token punctuation\">,</span> AI_MATKEY_COLOR_AMBIENT<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>acolor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        \tmeshHelper<span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span><span class=\"token function\">setAmbientColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">aiColorToOfColor</span><span class=\"token punctuation\">(</span>acolor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>AI_SUCCESS <span class=\"token operator\">==</span> <span class=\"token function\">aiGetMaterialColor</span><span class=\"token punctuation\">(</span>mtl<span class=\"token punctuation\">,</span> AI_MATKEY_COLOR_EMISSIVE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ecolor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        \tmeshHelper<span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span><span class=\"token function\">setEmissiveColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">aiColorToOfColor</span><span class=\"token punctuation\">(</span>ecolor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">float</span> shininess<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>AI_SUCCESS <span class=\"token operator\">==</span> <span class=\"token function\">aiGetMaterialFloat</span><span class=\"token punctuation\">(</span>mtl<span class=\"token punctuation\">,</span> AI_MATKEY_SHININESS<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>shininess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tmeshHelper<span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span><span class=\"token function\">setShininess</span><span class=\"token punctuation\">(</span>shininess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">int</span> blendMode<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>AI_SUCCESS <span class=\"token operator\">==</span> <span class=\"token function\">aiGetMaterialInteger</span><span class=\"token punctuation\">(</span>mtl<span class=\"token punctuation\">,</span> AI_MATKEY_BLEND_FUNC<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>blendMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>blendMode<span class=\"token operator\">==</span>aiBlendMode_Default<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tmeshHelper<span class=\"token punctuation\">.</span>blendMode<span class=\"token operator\">=</span>OF_BLENDMODE_ALPHA<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\tmeshHelper<span class=\"token punctuation\">.</span>blendMode<span class=\"token operator\">=</span>OF_BLENDMODE_ADD<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">// Culling</span>\n        <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> max <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> two_sided<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>AI_SUCCESS <span class=\"token operator\">==</span> <span class=\"token function\">aiGetMaterialIntegerArray</span><span class=\"token punctuation\">(</span>mtl<span class=\"token punctuation\">,</span> AI_MATKEY_TWOSIDED<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>two_sided<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> two_sided<span class=\"token punctuation\">)</span>\n            meshHelper<span class=\"token punctuation\">.</span>twoSided <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span>\n            meshHelper<span class=\"token punctuation\">.</span>twoSided <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">// Load Textures</span>\n        <span class=\"token keyword\">int</span> texIndex <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        aiString texPath<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">// TODO: handle other aiTextureTypes</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>AI_SUCCESS <span class=\"token operator\">==</span> mtl<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">GetTexture</span><span class=\"token punctuation\">(</span>aiTextureType_DIFFUSE<span class=\"token punctuation\">,</span> texIndex<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>texPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAssimpModelLoader\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"loadGLResource(): loading image from \\\"\"</span> <span class=\"token operator\">&lt;&lt;</span> texPath<span class=\"token punctuation\">.</span>data <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"\"</span><span class=\"token punctuation\">;</span>\n            string modelFolder <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getEnclosingDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            string relTexPath <span class=\"token operator\">=</span> ofFilePath<span class=\"token operator\">::</span><span class=\"token function\">getEnclosingDirectory</span><span class=\"token punctuation\">(</span>texPath<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            string texFile <span class=\"token operator\">=</span> ofFilePath<span class=\"token operator\">::</span><span class=\"token function\">getFileName</span><span class=\"token punctuation\">(</span>texPath<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            string realPath <span class=\"token operator\">=</span> ofFilePath<span class=\"token operator\">::</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>ofFilePath<span class=\"token operator\">::</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>modelFolder<span class=\"token punctuation\">,</span> relTexPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> texFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            \n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>ofFile<span class=\"token operator\">::</span><span class=\"token function\">doesFileExist</span><span class=\"token punctuation\">(</span>realPath<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAssimpModelLoader\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"loadGLResource(): texture doesn't exist: \\\"\"</span>\n\t\t\t\t\t<span class=\"token operator\">&lt;&lt;</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getFileName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\\" in \\\"\"</span> <span class=\"token operator\">&lt;&lt;</span> realPath <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            \n            ofxAssimpTexture assimpTexture<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">bool</span> bTextureAlreadyExists <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> textures<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                assimpTexture <span class=\"token operator\">=</span> textures<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>assimpTexture<span class=\"token punctuation\">.</span><span class=\"token function\">getTexturePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> realPath<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    bTextureAlreadyExists <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bTextureAlreadyExists<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                meshHelper<span class=\"token punctuation\">.</span>assimpTexture <span class=\"token operator\">=</span> assimpTexture<span class=\"token punctuation\">;</span>\n                <span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAssimpModelLoader\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"loadGLResource(): texture already loaded: \\\"\"</span>\n\t\t\t\t\t<span class=\"token operator\">&lt;&lt;</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getFileName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\\" from \\\"\"</span> <span class=\"token operator\">&lt;&lt;</span> realPath <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                ofTexture texture<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">bool</span> bTextureLoadedOk <span class=\"token operator\">=</span> <span class=\"token function\">ofLoadImage</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">,</span> realPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bTextureLoadedOk<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    textures<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofxAssimpTexture</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">,</span> realPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    assimpTexture <span class=\"token operator\">=</span> textures<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    meshHelper<span class=\"token punctuation\">.</span>assimpTexture <span class=\"token operator\">=</span> assimpTexture<span class=\"token punctuation\">;</span>\n                    <span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAssimpModelLoader\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"loadGLResource(): texture loaded, dimensions: \"</span>\n\t\t\t\t\t\t<span class=\"token operator\">&lt;&lt;</span> texture<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"x\"</span> <span class=\"token operator\">&lt;&lt;</span> texture<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAssimpModelLoader\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"loadGLResource(): couldn't load texture: \\\"\"</span>\n\t\t\t\t\t\t<span class=\"token operator\">&lt;&lt;</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">getFileName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\\" from \\\"\"</span> <span class=\"token operator\">&lt;&lt;</span> realPath <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        meshHelper<span class=\"token punctuation\">.</span>mesh <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">aiMeshToOfMesh</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">,</span> meshHelper<span class=\"token punctuation\">.</span>cachedMesh<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>meshHelper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        meshHelper<span class=\"token punctuation\">.</span>cachedMesh<span class=\"token punctuation\">.</span><span class=\"token function\">setMode</span><span class=\"token punctuation\">(</span>OF_PRIMITIVE_TRIANGLES<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        meshHelper<span class=\"token punctuation\">.</span>validCache <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        meshHelper<span class=\"token punctuation\">.</span>hasChanged <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">int</span> numOfAnimations <span class=\"token operator\">=</span> scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumAnimations<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>numOfAnimations<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\taiAnimation <span class=\"token operator\">*</span> animation <span class=\"token operator\">=</span> scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mAnimations<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tanimations<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofxAssimpAnimation</span><span class=\"token punctuation\">(</span>scene<span class=\"token punctuation\">,</span> animation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">hasAnimations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tmeshHelper<span class=\"token punctuation\">.</span>animatedPos<span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span>mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumVertices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">HasNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tmeshHelper<span class=\"token punctuation\">.</span>animatedNorm<span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span>mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumVertices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n\n        <span class=\"token keyword\">int</span> usage<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">getAnimationCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n        \t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        \t\tusage <span class=\"token operator\">=</span> GL_STATIC_DRAW<span class=\"token punctuation\">;</span>\n        \t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n        \t\tusage <span class=\"token operator\">=</span> GL_STREAM_DRAW<span class=\"token punctuation\">;</span>\n        \t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n        \tusage <span class=\"token operator\">=</span> GL_DYNAMIC_DRAW<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n        \tusage <span class=\"token operator\">=</span> GL_STATIC_DRAW<span class=\"token punctuation\">;</span>\n\n        <span class=\"token punctuation\">}</span>\n\n        meshHelper<span class=\"token punctuation\">.</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">setVertexData</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span>mVertices<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumVertices<span class=\"token punctuation\">,</span>usage<span class=\"token punctuation\">,</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>aiVector3D<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">HasVertexColors</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        \tmeshHelper<span class=\"token punctuation\">.</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">setColorData</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span>mColors<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">,</span>mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumVertices<span class=\"token punctuation\">,</span>GL_STATIC_DRAW<span class=\"token punctuation\">,</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>aiColor4D<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">HasNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        \tmeshHelper<span class=\"token punctuation\">.</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">setNormalData</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNormals<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumVertices<span class=\"token punctuation\">,</span>usage<span class=\"token punctuation\">,</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>aiVector3D<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>meshHelper<span class=\"token punctuation\">.</span>cachedMesh<span class=\"token punctuation\">.</span><span class=\"token function\">hasTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\t\t\t\n\t\t\tmeshHelper<span class=\"token punctuation\">.</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">setTexCoordData</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>meshHelper<span class=\"token punctuation\">.</span>cachedMesh<span class=\"token punctuation\">.</span><span class=\"token function\">getTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumVertices<span class=\"token punctuation\">,</span>GL_STATIC_DRAW<span class=\"token punctuation\">,</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ofVec2f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        meshHelper<span class=\"token punctuation\">.</span>indices<span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span>mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumFaces <span class=\"token operator\">*</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumFaces<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> a <span class=\"token operator\">&lt;</span> mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span>mFaces<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mNumIndices<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tmeshHelper<span class=\"token punctuation\">.</span>indices<span class=\"token punctuation\">[</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span>mFaces<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mIndices<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n        meshHelper<span class=\"token punctuation\">.</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">setIndexData</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>meshHelper<span class=\"token punctuation\">.</span>indices<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>meshHelper<span class=\"token punctuation\">.</span>indices<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>GL_STATIC_DRAW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">//modelMeshes.push_back(meshHelper);</span>\n    <span class=\"token punctuation\">}</span>\n    \n\n\n    <span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAssimpModelLoader\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"loadGLResource(): finished\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAssimpModelLoader\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"clear(): deleting GL resources\"</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// clear out everything.</span>\n    modelMeshes<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    animations<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    pos<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    scale<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    rotAngle<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    rotAxis<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    lights<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    scale <span class=\"token operator\">=</span> <span class=\"token function\">ofPoint</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    normalizeScale <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    bUsingMaterials <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    bUsingNormals <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    bUsingTextures <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    bUsingColors <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n    currentAnimation <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n    textures<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">updateModelMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------- update.</span>\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>scene<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">updateAnimations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">updateMeshes</span><span class=\"token punctuation\">(</span>scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mRootNode<span class=\"token punctuation\">,</span> <span class=\"token function\">ofMatrix4x4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">hasAnimations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">updateBones</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">updateGLResources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">updateAnimations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> animations<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        animations<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">updateMeshes</span><span class=\"token punctuation\">(</span>aiNode <span class=\"token operator\">*</span> node<span class=\"token punctuation\">,</span> ofMatrix4x4 parentMatrix<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    \n    aiMatrix4x4 m <span class=\"token operator\">=</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span>mTransformation<span class=\"token punctuation\">;</span>\n    m<span class=\"token punctuation\">.</span><span class=\"token function\">Transpose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofMatrix4x4 <span class=\"token function\">matrix</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>a1<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>a2<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>a3<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>a4<span class=\"token punctuation\">,</span>\n                       m<span class=\"token punctuation\">.</span>b1<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>b2<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>b3<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>b4<span class=\"token punctuation\">,</span>\n                       m<span class=\"token punctuation\">.</span>c1<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>c2<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>c3<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>c4<span class=\"token punctuation\">,</span>\n                       m<span class=\"token punctuation\">.</span>d1<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>d2<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>d3<span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>d4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    matrix <span class=\"token operator\">*</span><span class=\"token operator\">=</span> parentMatrix<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumMeshes<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> meshIndex <span class=\"token operator\">=</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span>mMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        ofxAssimpMeshHelper <span class=\"token operator\">&amp;</span> mesh <span class=\"token operator\">=</span> modelMeshes<span class=\"token punctuation\">[</span>meshIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        mesh<span class=\"token punctuation\">.</span>matrix <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> node<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumChildren<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">updateMeshes</span><span class=\"token punctuation\">(</span>node<span class=\"token operator\">-</span><span class=\"token operator\">></span>mChildren<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> matrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">updateBones</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">hasAnimations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\" spellcheck=\"true\">// update mesh position for the animation</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> modelMeshes<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// current mesh we are introspecting</span>\n\t\t<span class=\"token keyword\">const</span> aiMesh<span class=\"token operator\">*</span> mesh <span class=\"token operator\">=</span> modelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mesh<span class=\"token punctuation\">;</span>\n        \n\t\t<span class=\"token comment\" spellcheck=\"true\">// calculate bone matrices</span>\n\t\tvector<span class=\"token operator\">&lt;</span>aiMatrix4x4<span class=\"token operator\">></span> <span class=\"token function\">boneMatrices</span><span class=\"token punctuation\">(</span>mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumBones<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> a <span class=\"token operator\">&lt;</span> mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumBones<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>a<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">const</span> aiBone<span class=\"token operator\">*</span> bone <span class=\"token operator\">=</span> mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span>mBones<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            \n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// find the corresponding node by again looking recursively through the node hierarchy for the same name</span>\n\t\t\taiNode<span class=\"token operator\">*</span> node <span class=\"token operator\">=</span> scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mRootNode<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">FindNode</span><span class=\"token punctuation\">(</span>bone<span class=\"token operator\">-</span><span class=\"token operator\">></span>mName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            \n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// start with the mesh-to-bone matrix</span>\n\t\t\tboneMatrices<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> bone<span class=\"token operator\">-</span><span class=\"token operator\">></span>mOffsetMatrix<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// and now append all node transformations down the parent chain until we're back at mesh coordinates again</span>\n\t\t\t<span class=\"token keyword\">const</span> aiNode<span class=\"token operator\">*</span> tempNode <span class=\"token operator\">=</span> node<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>tempNode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">// check your matrix multiplication order here!!!</span>\n\t\t\t\tboneMatrices<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tempNode<span class=\"token operator\">-</span><span class=\"token operator\">></span>mTransformation <span class=\"token operator\">*</span> boneMatrices<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">// boneMatrices[a] = boneMatrices[a] * tempNode->mTransformation;</span>\n\t\t\t\ttempNode <span class=\"token operator\">=</span> tempNode<span class=\"token operator\">-</span><span class=\"token operator\">></span>mParent<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\tmodelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>hasChanged <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\tmodelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validCache <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n        \n\t\tmodelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>animatedPos<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>modelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>animatedPos<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">aiVector3D</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">HasNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tmodelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>animatedNorm<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>modelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>animatedNorm<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">aiVector3D</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// loop through all vertex weights of all bones</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> a <span class=\"token operator\">&lt;</span> mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumBones<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>a<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">const</span> aiBone<span class=\"token operator\">*</span> bone <span class=\"token operator\">=</span> mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span>mBones<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">const</span> aiMatrix4x4<span class=\"token operator\">&amp;</span> posTrafo <span class=\"token operator\">=</span> boneMatrices<span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            \n\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> b <span class=\"token operator\">&lt;</span> bone<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumWeights<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">const</span> aiVertexWeight<span class=\"token operator\">&amp;</span> weight <span class=\"token operator\">=</span> bone<span class=\"token operator\">-</span><span class=\"token operator\">></span>mWeights<span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                \n\t\t\t\tsize_t vertexId <span class=\"token operator\">=</span> weight<span class=\"token punctuation\">.</span>mVertexId<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">const</span> aiVector3D<span class=\"token operator\">&amp;</span> srcPos <span class=\"token operator\">=</span> mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span>mVertices<span class=\"token punctuation\">[</span>vertexId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                \n\t\t\t\tmodelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>animatedPos<span class=\"token punctuation\">[</span>vertexId<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span><span class=\"token operator\">=</span> weight<span class=\"token punctuation\">.</span>mWeight <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>posTrafo <span class=\"token operator\">*</span> srcPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">HasNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">// 3x3 matrix, contains the bone matrix without the translation, only with rotation and possibly scaling</span>\n\t\t\t\taiMatrix3x3 normTrafo <span class=\"token operator\">=</span> <span class=\"token function\">aiMatrix3x3</span><span class=\"token punctuation\">(</span> posTrafo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> b <span class=\"token operator\">&lt;</span> bone<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumWeights<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token keyword\">const</span> aiVertexWeight<span class=\"token operator\">&amp;</span> weight <span class=\"token operator\">=</span> bone<span class=\"token operator\">-</span><span class=\"token operator\">></span>mWeights<span class=\"token punctuation\">[</span>b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tsize_t vertexId <span class=\"token operator\">=</span> weight<span class=\"token punctuation\">.</span>mVertexId<span class=\"token punctuation\">;</span>\n                    \n\t\t\t\t\t<span class=\"token keyword\">const</span> aiVector3D<span class=\"token operator\">&amp;</span> srcNorm <span class=\"token operator\">=</span> mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNormals<span class=\"token punctuation\">[</span>vertexId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tmodelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>animatedNorm<span class=\"token punctuation\">[</span>vertexId<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span><span class=\"token operator\">=</span> weight<span class=\"token punctuation\">.</span>mWeight <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>normTrafo <span class=\"token operator\">*</span> srcNorm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">updateGLResources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// now upload the result position and normal along with the other vertex attributes into a dynamic vertex buffer, VBO or whatever</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> modelMeshes<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    \t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>modelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>hasChanged<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">const</span> aiMesh<span class=\"token operator\">*</span> mesh <span class=\"token operator\">=</span> modelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mesh<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">hasAnimations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tmodelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">updateVertexData</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>modelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>animatedPos<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumVertices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">HasNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\tmodelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">updateNormalData</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>modelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>animatedNorm<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumVertices<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\tmodelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>hasChanged <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">updateModelMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    modelMatrix<span class=\"token punctuation\">.</span><span class=\"token function\">makeIdentityMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    modelMatrix<span class=\"token punctuation\">.</span><span class=\"token function\">glTranslate</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    modelMatrix<span class=\"token punctuation\">.</span><span class=\"token function\">glRotate</span><span class=\"token punctuation\">(</span><span class=\"token number\">180</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>normalizeScale<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        modelMatrix<span class=\"token punctuation\">.</span><span class=\"token function\">glScale</span><span class=\"token punctuation\">(</span>normalizedScale <span class=\"token punctuation\">,</span> normalizedScale<span class=\"token punctuation\">,</span> normalizedScale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> rotAngle<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token comment\" spellcheck=\"true\">// @julapy - not sure why rotAngle isn't a ofVec4f.</span>\n        modelMatrix<span class=\"token punctuation\">.</span><span class=\"token function\">glRotate</span><span class=\"token punctuation\">(</span>rotAngle<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> rotAxis<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> rotAxis<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> rotAxis<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    modelMatrix<span class=\"token punctuation\">.</span><span class=\"token function\">glScale</span><span class=\"token punctuation\">(</span>scale<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> scale<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> scale<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------- animations.</span>\n<span class=\"token keyword\">bool</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">hasAnimations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> animations<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">getAnimationCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> animations<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofxAssimpAnimation <span class=\"token operator\">&amp;</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">getAnimation</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> animationIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    animationIndex <span class=\"token operator\">=</span> <span class=\"token function\">ofClamp</span><span class=\"token punctuation\">(</span>animationIndex<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> animations<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> animations<span class=\"token punctuation\">[</span>animationIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">playAllAnimations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> animations<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        animations<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">stopAllAnimations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> animations<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        animations<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">resetAllAnimations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> animations<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        animations<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">setPausedForAllAnimations</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> pause<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> animations<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        animations<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">setPaused</span><span class=\"token punctuation\">(</span>pause<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">setLoopStateForAllAnimations</span><span class=\"token punctuation\">(</span>ofLoopType state<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> animations<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        animations<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">setLoopState</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">setPositionForAllAnimations</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> position<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> animations<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        animations<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// DEPRECATED.</span>\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">setAnimation</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> animationIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">hasAnimations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    currentAnimation <span class=\"token operator\">=</span> <span class=\"token function\">ofClamp</span><span class=\"token punctuation\">(</span>animationIndex<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getAnimationCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// DEPRECATED.</span>\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">setNormalizedTime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> time<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">hasAnimations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tcurrentAnimation <span class=\"token operator\">=</span> <span class=\"token function\">ofClamp</span><span class=\"token punctuation\">(</span>currentAnimation<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getAnimationCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ofxAssimpAnimation <span class=\"token operator\">&amp;</span> animation <span class=\"token operator\">=</span> animations<span class=\"token punctuation\">[</span>currentAnimation<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> realT <span class=\"token operator\">=</span> <span class=\"token function\">ofMap</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> animation<span class=\"token punctuation\">.</span><span class=\"token function\">getDurationInSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tanimation<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>realT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// DEPRECATED.</span>\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">setTime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> time<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">hasAnimations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tcurrentAnimation <span class=\"token operator\">=</span> <span class=\"token function\">ofClamp</span><span class=\"token punctuation\">(</span>currentAnimation<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getAnimationCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ofxAssimpAnimation <span class=\"token operator\">&amp;</span> animation <span class=\"token operator\">=</span> animations<span class=\"token punctuation\">[</span>currentAnimation<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    animation<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// DEPRECATED.</span>\n<span class=\"token keyword\">float</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">getDuration</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> animationIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">hasAnimations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    animationIndex <span class=\"token operator\">=</span> <span class=\"token function\">ofClamp</span><span class=\"token punctuation\">(</span>animationIndex<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getAnimationCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> duration <span class=\"token operator\">=</span> animations<span class=\"token punctuation\">[</span>animationIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getDurationInSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> duration<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------- meshes.</span>\n<span class=\"token keyword\">bool</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">hasMeshes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> modelMeshes<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">getMeshCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> modelMeshes<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofxAssimpMeshHelper <span class=\"token operator\">&amp;</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">getMeshHelper</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> meshIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    meshIndex <span class=\"token operator\">=</span> <span class=\"token function\">ofClamp</span><span class=\"token punctuation\">(</span>meshIndex<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> modelMeshes<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> modelMeshes<span class=\"token punctuation\">[</span>meshIndex<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">getBoundingBoxWithMinVector</span><span class=\"token punctuation\">(</span> aiVector3D<span class=\"token operator\">*</span> min<span class=\"token punctuation\">,</span> aiVector3D<span class=\"token operator\">*</span> max <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    aiMatrix4x4 trafo<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">aiIdentityMatrix4</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>trafo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tmin<span class=\"token operator\">-</span><span class=\"token operator\">></span>x <span class=\"token operator\">=</span> min<span class=\"token operator\">-</span><span class=\"token operator\">></span>y <span class=\"token operator\">=</span> min<span class=\"token operator\">-</span><span class=\"token operator\">></span>z <span class=\"token operator\">=</span>  <span class=\"token number\">1e10f</span><span class=\"token punctuation\">;</span>\n\tmax<span class=\"token operator\">-</span><span class=\"token operator\">></span>x <span class=\"token operator\">=</span> max<span class=\"token operator\">-</span><span class=\"token operator\">></span>y <span class=\"token operator\">=</span> max<span class=\"token operator\">-</span><span class=\"token operator\">></span>z <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1e10f</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> <span class=\"token operator\">&amp;</span> mesh<span class=\"token operator\">:</span> modelMeshes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getBoundingBoxForNode</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">,</span> min<span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">getBoundingBoxForNode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofxAssimpMeshHelper <span class=\"token operator\">&amp;</span> mesh<span class=\"token punctuation\">,</span> aiVector3D<span class=\"token operator\">*</span> min<span class=\"token punctuation\">,</span> aiVector3D<span class=\"token operator\">*</span> max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">hasAnimations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> mesh<span class=\"token punctuation\">.</span>mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumVertices<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">auto</span> vertex <span class=\"token operator\">=</span> mesh<span class=\"token punctuation\">.</span>mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span>mVertices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">auto</span> tmp <span class=\"token operator\">=</span> <span class=\"token function\">ofVec3f</span><span class=\"token punctuation\">(</span>vertex<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>vertex<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>vertex<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> mesh<span class=\"token punctuation\">.</span>matrix<span class=\"token punctuation\">;</span>\n            \n            min<span class=\"token operator\">-</span><span class=\"token operator\">></span>x <span class=\"token operator\">=</span> <span class=\"token function\">MIN</span><span class=\"token punctuation\">(</span>min<span class=\"token operator\">-</span><span class=\"token operator\">></span>x<span class=\"token punctuation\">,</span>tmp<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            min<span class=\"token operator\">-</span><span class=\"token operator\">></span>y <span class=\"token operator\">=</span> <span class=\"token function\">MIN</span><span class=\"token punctuation\">(</span>min<span class=\"token operator\">-</span><span class=\"token operator\">></span>y<span class=\"token punctuation\">,</span>tmp<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            min<span class=\"token operator\">-</span><span class=\"token operator\">></span>z <span class=\"token operator\">=</span> <span class=\"token function\">MIN</span><span class=\"token punctuation\">(</span>min<span class=\"token operator\">-</span><span class=\"token operator\">></span>z<span class=\"token punctuation\">,</span>tmp<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            \n            max<span class=\"token operator\">-</span><span class=\"token operator\">></span>x <span class=\"token operator\">=</span> <span class=\"token function\">MAX</span><span class=\"token punctuation\">(</span>max<span class=\"token operator\">-</span><span class=\"token operator\">></span>x<span class=\"token punctuation\">,</span>tmp<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            max<span class=\"token operator\">-</span><span class=\"token operator\">></span>y <span class=\"token operator\">=</span> <span class=\"token function\">MAX</span><span class=\"token punctuation\">(</span>max<span class=\"token operator\">-</span><span class=\"token operator\">></span>y<span class=\"token punctuation\">,</span>tmp<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            max<span class=\"token operator\">-</span><span class=\"token operator\">></span>z <span class=\"token operator\">=</span> <span class=\"token function\">MAX</span><span class=\"token punctuation\">(</span>max<span class=\"token operator\">-</span><span class=\"token operator\">></span>z<span class=\"token punctuation\">,</span>tmp<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> <span class=\"token operator\">&amp;</span> animPos<span class=\"token operator\">:</span> mesh<span class=\"token punctuation\">.</span>animatedPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">auto</span> tmp <span class=\"token operator\">=</span> <span class=\"token function\">ofVec3f</span><span class=\"token punctuation\">(</span>animPos<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>animPos<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>animPos<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> mesh<span class=\"token punctuation\">.</span>matrix<span class=\"token punctuation\">;</span>\n            \n            min<span class=\"token operator\">-</span><span class=\"token operator\">></span>x <span class=\"token operator\">=</span> <span class=\"token function\">MIN</span><span class=\"token punctuation\">(</span>min<span class=\"token operator\">-</span><span class=\"token operator\">></span>x<span class=\"token punctuation\">,</span>tmp<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            min<span class=\"token operator\">-</span><span class=\"token operator\">></span>y <span class=\"token operator\">=</span> <span class=\"token function\">MIN</span><span class=\"token punctuation\">(</span>min<span class=\"token operator\">-</span><span class=\"token operator\">></span>y<span class=\"token punctuation\">,</span>tmp<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            min<span class=\"token operator\">-</span><span class=\"token operator\">></span>z <span class=\"token operator\">=</span> <span class=\"token function\">MIN</span><span class=\"token punctuation\">(</span>min<span class=\"token operator\">-</span><span class=\"token operator\">></span>z<span class=\"token punctuation\">,</span>tmp<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            max<span class=\"token operator\">-</span><span class=\"token operator\">></span>x <span class=\"token operator\">=</span> <span class=\"token function\">MAX</span><span class=\"token punctuation\">(</span>max<span class=\"token operator\">-</span><span class=\"token operator\">></span>x<span class=\"token punctuation\">,</span>tmp<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            max<span class=\"token operator\">-</span><span class=\"token operator\">></span>y <span class=\"token operator\">=</span> <span class=\"token function\">MAX</span><span class=\"token punctuation\">(</span>max<span class=\"token operator\">-</span><span class=\"token operator\">></span>y<span class=\"token punctuation\">,</span>tmp<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            max<span class=\"token operator\">-</span><span class=\"token operator\">></span>z <span class=\"token operator\">=</span> <span class=\"token function\">MAX</span><span class=\"token punctuation\">(</span>max<span class=\"token operator\">-</span><span class=\"token operator\">></span>z<span class=\"token punctuation\">,</span>tmp<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    pos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n    pos<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n    pos<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> z<span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">updateModelMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    scale<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n    scale<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n    scale<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> z<span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">updateModelMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">setScaleNormalization</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> normalize<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    normalizeScale <span class=\"token operator\">=</span> normalize<span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">updateModelMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> which<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> angle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> rot_x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> rot_y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> rot_z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>which <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>rotAngle<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> diff <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>which <span class=\"token operator\">-</span> rotAngle<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> diff<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            rotAngle<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            rotAxis<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofPoint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    rotAngle<span class=\"token punctuation\">[</span>which<span class=\"token punctuation\">]</span>  <span class=\"token operator\">=</span> angle<span class=\"token punctuation\">;</span>\n    rotAxis<span class=\"token punctuation\">[</span>which<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> rot_x<span class=\"token punctuation\">;</span>\n    rotAxis<span class=\"token punctuation\">[</span>which<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> rot_y<span class=\"token punctuation\">;</span>\n    rotAxis<span class=\"token punctuation\">[</span>which<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> rot_z<span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">updateModelMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">drawWireframe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>OF_MESH_WIREFRAME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">drawFaces</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>OF_MESH_FILL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">drawVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>OF_MESH_POINTS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>ofPolyRenderMode renderType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>scene <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token function\">ofPushStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token function\">ofPushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">ofMultMatrix</span><span class=\"token punctuation\">(</span>modelMatrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n        <span class=\"token function\">glPolygonMode</span><span class=\"token punctuation\">(</span>GL_FRONT_AND_BACK<span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLPolyMode</span><span class=\"token punctuation\">(</span>renderType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n    \n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> modelMeshes<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        ofxAssimpMeshHelper <span class=\"token operator\">&amp;</span> mesh <span class=\"token operator\">=</span> modelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token function\">ofPushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">ofMultMatrix</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span>matrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bUsingTextures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">hasTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getTextureRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        \n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bUsingMaterials<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            mesh<span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span>twoSided<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_CULL_FACE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">glDisable</span><span class=\"token punctuation\">(</span>GL_CULL_FACE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n        <span class=\"token function\">ofEnableBlendMode</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span>blendMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n        mesh<span class=\"token punctuation\">.</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">drawElements</span><span class=\"token punctuation\">(</span>GL_TRIANGLES<span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span>indices<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n        <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>renderType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t    <span class=\"token keyword\">case</span> OF_MESH_FILL<span class=\"token operator\">:</span>\n\t\t    \tmesh<span class=\"token punctuation\">.</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">drawElements</span><span class=\"token punctuation\">(</span>GL_TRIANGLES<span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span>indices<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t    \t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">case</span> OF_MESH_WIREFRAME<span class=\"token operator\">:</span>\n                <span class=\"token comment\" spellcheck=\"true\">//note this won't look the same as on non ES renderers.</span>\n                <span class=\"token comment\" spellcheck=\"true\">//there is no easy way to convert GL_TRIANGLES to outlines for each triangle</span>\n\t\t    \tmesh<span class=\"token punctuation\">.</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">drawElements</span><span class=\"token punctuation\">(</span>GL_LINES<span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span>indices<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t    \t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t    <span class=\"token keyword\">case</span> OF_MESH_POINTS<span class=\"token operator\">:</span>\n\t\t    \tmesh<span class=\"token punctuation\">.</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">drawElements</span><span class=\"token punctuation\">(</span>GL_POINTS<span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span>indices<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t    \t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n        \n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bUsingTextures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">hasTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            \t mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getTextureRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        \n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bUsingMaterials<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            mesh<span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n        <span class=\"token function\">ofPopMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n        <span class=\"token comment\" spellcheck=\"true\">//set the drawing mode back to FILL if its drawn the model with a different mode.</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> renderType <span class=\"token operator\">!=</span> OF_MESH_FILL <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token function\">glPolygonMode</span><span class=\"token punctuation\">(</span>GL_FRONT_AND_BACK<span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLPolyMode</span><span class=\"token punctuation\">(</span>OF_MESH_FILL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n    <span class=\"token function\">ofPopMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">ofPopStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\nvector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">getMeshNames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tvector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> <span class=\"token function\">names</span><span class=\"token punctuation\">(</span>scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumMeshes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span> scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumMeshes<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tnames<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>mName<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> names<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\n<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">getNumMeshes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumMeshes<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\nofMesh ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">getMesh</span><span class=\"token punctuation\">(</span>string name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofMesh ofm<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// default to triangle mode</span>\n\tofm<span class=\"token punctuation\">.</span><span class=\"token function\">setMode</span><span class=\"token punctuation\">(</span>OF_PRIMITIVE_TRIANGLES<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\taiMesh <span class=\"token operator\">*</span> aim <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumMeshes<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span>scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>mName<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\taim <span class=\"token operator\">=</span> scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>aim<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAssimpModelLoader\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"getMesh(): couldn't find mesh: \\\"\"</span> <span class=\"token operator\">&lt;&lt;</span> name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> ofm<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">aiMeshToOfMesh</span><span class=\"token punctuation\">(</span>aim<span class=\"token punctuation\">,</span>ofm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> ofm<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\nofMesh ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">getMesh</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofMesh ofm<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumMeshes <span class=\"token operator\">&lt;=</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAssimpModelLoader\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getMesh(): mesh id \"</span> <span class=\"token operator\">&lt;&lt;</span> num\n\t\t<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" out of range for total num meshes: \"</span> <span class=\"token operator\">&lt;&lt;</span> scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumMeshes<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> ofm<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">aiMeshToOfMesh</span><span class=\"token punctuation\">(</span>scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mMeshes<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>ofm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> ofm<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\nofMesh ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">getCurrentAnimatedMesh</span><span class=\"token punctuation\">(</span>string name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> modelMeshes<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span>modelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span>mName<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>modelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validCache<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tmodelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>cachedMesh<span class=\"token punctuation\">.</span><span class=\"token function\">clearVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tmodelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>cachedMesh<span class=\"token punctuation\">.</span><span class=\"token function\">clearNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">hasAnimations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\tmodelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>cachedMesh<span class=\"token punctuation\">.</span><span class=\"token function\">addVertices</span><span class=\"token punctuation\">(</span><span class=\"token function\">aiVecVecToOfVecVec</span><span class=\"token punctuation\">(</span>modelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>animatedPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tmodelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>cachedMesh<span class=\"token punctuation\">.</span><span class=\"token function\">addNormals</span><span class=\"token punctuation\">(</span><span class=\"token function\">aiVecVecToOfVecVec</span><span class=\"token punctuation\">(</span>modelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>animatedNorm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\tmodelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validCache <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">return</span> modelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>cachedMesh<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAssimpModelLoader\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getCurrentAnimatedMesh(): couldn't find mesh: \\\"\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofMesh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\nofMesh ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">getCurrentAnimatedMesh</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>modelMeshes<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAssimpModelLoader\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getCurrentAnimatedMesh(): mesh id: \"</span> <span class=\"token operator\">&lt;&lt;</span> num\n\t\t\t<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"out of range for total num meshes: \"</span> <span class=\"token operator\">&lt;&lt;</span> scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumMeshes<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofMesh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>modelMeshes<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validCache<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tmodelMeshes<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>cachedMesh<span class=\"token punctuation\">.</span><span class=\"token function\">clearVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmodelMeshes<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>cachedMesh<span class=\"token punctuation\">.</span><span class=\"token function\">clearNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmodelMeshes<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>cachedMesh<span class=\"token punctuation\">.</span><span class=\"token function\">addVertices</span><span class=\"token punctuation\">(</span><span class=\"token function\">aiVecVecToOfVecVec</span><span class=\"token punctuation\">(</span>modelMeshes<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>animatedPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmodelMeshes<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>cachedMesh<span class=\"token punctuation\">.</span><span class=\"token function\">addNormals</span><span class=\"token punctuation\">(</span><span class=\"token function\">aiVecVecToOfVecVec</span><span class=\"token punctuation\">(</span>modelMeshes<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>animatedNorm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmodelMeshes<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>validCache <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> modelMeshes<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>cachedMesh<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\nofMaterial ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">getMaterialForMesh</span><span class=\"token punctuation\">(</span>string name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> modelMeshes<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span>modelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span>mName<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> modelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAssimpModelLoader\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getMaterialForMesh(): couldn't find mesh: \\\"\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofMaterial</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\nofMaterial ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">getMaterialForMesh</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>modelMeshes<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAssimpModelLoader\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getMaterialForMesh(): mesh id: \"</span> <span class=\"token operator\">&lt;&lt;</span> num\n\t\t\t<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"out of range for total num meshes: \"</span> <span class=\"token operator\">&lt;&lt;</span> scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumMeshes<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofMaterial</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> modelMeshes<span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>material<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\nofTexture ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">getTextureForMesh</span><span class=\"token punctuation\">(</span>string name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> modelMeshes<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span>modelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mesh<span class=\"token operator\">-</span><span class=\"token operator\">></span>mName<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>modelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> modelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTextureRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAssimpModelLoader\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getTextureForMesh(): couldn't find mesh: \\\"\"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\nofTexture ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">getTextureForMesh</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> modelMeshes<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>modelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        \t<span class=\"token keyword\">return</span> modelMeshes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTextureRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n    <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAssimpModelLoader\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getTextureForMesh(): mesh id: \"</span> <span class=\"token operator\">&lt;&lt;</span> i\n\t\t\t<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"out of range for total num meshes: \"</span> <span class=\"token operator\">&lt;&lt;</span> scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumMeshes<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">ofTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\nofPoint ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> pos<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\nofPoint ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">getSceneCenter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">aiVecToOfVec</span><span class=\"token punctuation\">(</span>scene_center<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\n<span class=\"token keyword\">float</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">getNormalizedScale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> normalizedScale<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\nofPoint ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">getScale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> scale<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\nofMatrix4x4 ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">getModelMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> modelMatrix<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\nofPoint ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">getSceneMin</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bScaled <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofPoint <span class=\"token function\">sceneMin</span><span class=\"token punctuation\">(</span>scene_min<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> scene_min<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> scene_min<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> bScaled <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> sceneMin <span class=\"token operator\">*</span> scale<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> sceneMin<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\nofPoint\tofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">getSceneMax</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bScaled <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofPoint <span class=\"token function\">sceneMax</span><span class=\"token punctuation\">(</span>scene_max<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> scene_max<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> scene_max<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> bScaled <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> sceneMax <span class=\"token operator\">*</span> scale<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> sceneMax<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">getNumRotations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> rotAngle<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\nofPoint ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">getRotationAxis</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> which<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>rotAxis<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> which<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> rotAxis<span class=\"token punctuation\">[</span>which<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofPoint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\n<span class=\"token keyword\">float</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">getRotationAngle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> which<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>rotAngle<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> which<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> rotAngle<span class=\"token punctuation\">[</span>which<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------</span>\n<span class=\"token keyword\">const</span> aiScene<span class=\"token operator\">*</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">getAssimpScene</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> scene<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">enableTextures</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbUsingTextures <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">enableNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbUsingNormals <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">enableColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbUsingColors <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">enableMaterials</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbUsingMaterials <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">disableTextures</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbUsingTextures <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">disableNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbUsingNormals <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">disableColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbUsingColors <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxAssimpModelLoader<span class=\"token operator\">::</span><span class=\"token function\">disableMaterials</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbUsingMaterials <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n","type":"source"}}],"fetch":[]}