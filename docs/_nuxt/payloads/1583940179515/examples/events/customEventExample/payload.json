{"data":[{"page":{"entry":{"name":"customEventExample","filename":"customEventExample","absolute":"/Users/Gilbert/Code/openFrameworks/examples/events/customEventExample","path":"/examples/events/customEventExample/","dir":"../examples/events","route":"/examples/events/customEventExample/","ext":"","type":"folder","id":755,"children":[756,757,758],"parent":740,"breadcrumbs":[740,436],"siblings":[],"translations":{}},"intro":{"name":"README","filename":"README.md","absolute":"/Users/Gilbert/Code/openFrameworks/examples/events/customEventExample/README.md","path":"/examples/events/customEventExample/README","route":"/examples/events/customEventExample/README.md","dir":"../examples/events/customEventExample","ext":"md","type":"page","id":757,"parent":755,"breadcrumbs":[755,740,436],"translations":{},"siblings":[]},"document":"<h1>About customEventExample</h1>\n<p><img src=\"customEventExample.png\" alt=\"Screenshot of customEventExample\"></p>\n<h3>Learning Objectives</h3>\n<p>This example demonstrates a simple game. A GameEvent class is\nused to store the bullet and bug that just collided.</p>\n<p>After studying this example, you'll understand how to create an object to generate custom events using a class based on <code>ofEventArgs</code></p>\n<p>In the code, pay attention to:</p>\n<ul>\n<li>OF classes and functions to create custom events:</li>\n<li><code>ofEventArgs</code>, base class for events that don't send any arguments like draw or update</li>\n<li><code>ofAddListener</code> to add a listener method to GameEvent</li>\n<li><code><span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code> to notify the GameEvent</li>\n</ul>\n<h3>Expected Behavior</h3>\n<p>When launching this app, you should see a screen with</p>\n<ul>\n<li>nine small randomly positioned black circles. Bugs crawl out of the circles and move around the stage.</li>\n<li>a canon pointing upwards at the bottom center of the window rotating on it's bottom vertical axis, its angle mapped to the horizontal mouse position.</li>\n<li>when pressing on the spacebar, the canon shoots a pink bullet. If a bullet hits a bug, the bug disappears.</li>\n<li>a text overlay at the top left corner displays the number of bullets shot and bugs killed.</li>\n<li>A message in the console: &quot;Game Event: BUG HIT&quot; when bullet and bug collide.</li>\n</ul>\n<p>Instructions for use:</p>\n<ul>\n<li>Move the mouse on it's horizontal axis to aim canon. Press spacebar to shoot bullets at bugs.</li>\n</ul>\n<h3>Other classes used in this file</h3>\n<ul>\n<li><code>GameEvent</code></li>\n<li><code>Bullet</code></li>\n<li><code>Bug</code></li>\n</ul>\n","raw":"# About customEventExample\n\n![Screenshot of customEventExample](customEventExample.png)\n\n\n### Learning Objectives\n\n This example demonstrates a simple game. A GameEvent class is\n used to store the bullet and bug that just collided.\n\nAfter studying this example, you'll understand how to create an object to generate custom events using a class based on ```ofEventArgs```\n\n\nIn the code, pay attention to:\n\n* OF classes and functions to create custom events:\n* ```ofEventArgs```, base class for events that don't send any arguments like draw or update\n* ```ofAddListener``` to add a listener method to GameEvent\n* ```ofNotifyEvent()``` to notify the GameEvent\n\n\n### Expected Behavior\n\n\nWhen launching this app, you should see a screen with\n\n* nine small randomly positioned black circles. Bugs crawl out of the circles and move around the stage.\n* a canon pointing upwards at the bottom center of the window rotating on it's bottom vertical axis, its angle mapped to the horizontal mouse position.\n* when pressing on the spacebar, the canon shoots a pink bullet. If a bullet hits a bug, the bug disappears.\n* a text overlay at the top left corner displays the number of bullets shot and bugs killed.\n* A message in the console: \"Game Event: BUG HIT\" when bullet and bug collide.\n\n\nInstructions for use:\n\n* Move the mouse on it's horizontal axis to aim canon. Press spacebar to shoot bullets at bugs.\n\n\n### Other classes used in this file\n\n* ```GameEvent```\n* ```Bullet```\n* ```Bug```\n","type":"folder","static":true}}],"fetch":[]}