{"data":[{"page":{"entry":{"name":"ofApp.cpp","filename":"ofApp.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/examples/gl/glInfoExample/src/ofApp.cpp","path":"/examples/gl/glInfoExample/src/ofApp_cpp","route":"/examples/gl/glInfoExample/src/ofApp.cpp","dir":"../examples/gl/glInfoExample/src","ext":"cpp","type":"source","id":846,"parent":842,"breadcrumbs":[842,839,783,436],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofApp.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"glewOutput.h\"</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span>\n\n\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">// this example uses code from glew and from Brian Paul</span>\n<span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token comment\" spellcheck=\"true\">/*\n * Copyright (C) 1999-2002  Brian Paul   All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * BRIAN PAUL BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN\n * AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */</span>\n\n\n<span class=\"token keyword\">struct</span> token_name <span class=\"token punctuation\">{</span>\n    GLuint count<span class=\"token punctuation\">;</span>\n    GLenum token<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>name<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">void</span>\n<span class=\"token function\">print_extension_list</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>ext<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>indentString <span class=\"token operator\">=</span> <span class=\"token string\">\"    \"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> indent <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> max <span class=\"token operator\">=</span> <span class=\"token number\">79</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> width<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>ext <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>ext<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n    width <span class=\"token operator\">=</span> indent<span class=\"token punctuation\">;</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> indentString<span class=\"token punctuation\">;</span>\n    i <span class=\"token operator\">=</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ext<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">' '</span> <span class=\"token operator\">||</span> ext<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\" spellcheck=\"true\">/* found end of an extension name */</span>\n            <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> len <span class=\"token operator\">=</span> j <span class=\"token operator\">-</span> i<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>width <span class=\"token operator\">+</span> len <span class=\"token operator\">></span> max<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token comment\" spellcheck=\"true\">/* start a new line */</span>\n                cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n                width <span class=\"token operator\">=</span> indent<span class=\"token punctuation\">;</span>\n                cout <span class=\"token operator\">&lt;&lt;</span> indentString<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token comment\" spellcheck=\"true\">/* print the extension name between ext[i] and ext[j] */</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                cout <span class=\"token operator\">&lt;&lt;</span> ext<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token comment\" spellcheck=\"true\">/* either we're all done, or we'll continue with next extension */</span>\n            width <span class=\"token operator\">+</span><span class=\"token operator\">=</span> len <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ext<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                i<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                j<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ext<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span><span class=\"token punctuation\">;</span>\n                width <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        j<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span>\n<span class=\"token function\">print_limits</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">struct</span> token_name openglLimits<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> GL_MAX_ATTRIB_STACK_DEPTH<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_MAX_ATTRIB_STACK_DEPTH\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> GL_MAX_CLIENT_ATTRIB_STACK_DEPTH<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_MAX_CLIENT_ATTRIB_STACK_DEPTH\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> GL_MAX_CLIP_PLANES<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_MAX_CLIP_PLANES\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> GL_MAX_COLOR_MATRIX_STACK_DEPTH<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_MAX_COLOR_MATRIX_STACK_DEPTH\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> GL_MAX_ELEMENTS_VERTICES<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_MAX_ELEMENTS_VERTICES\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> GL_MAX_ELEMENTS_INDICES<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_MAX_ELEMENTS_INDICES\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> GL_MAX_EVAL_ORDER<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_MAX_EVAL_ORDER\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> GL_MAX_LIGHTS<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_MAX_LIGHTS\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> GL_MAX_LIST_NESTING<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_MAX_LIST_NESTING\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> GL_MAX_MODELVIEW_STACK_DEPTH<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_MAX_MODELVIEW_STACK_DEPTH\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> GL_MAX_NAME_STACK_DEPTH<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_MAX_NAME_STACK_DEPTH\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> GL_MAX_PIXEL_MAP_TABLE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_MAX_PIXEL_MAP_TABLE\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> GL_MAX_PROJECTION_STACK_DEPTH<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_MAX_PROJECTION_STACK_DEPTH\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> GL_MAX_TEXTURE_STACK_DEPTH<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_MAX_TEXTURE_STACK_DEPTH\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> GL_MAX_TEXTURE_SIZE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_MAX_TEXTURE_SIZE\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> GL_MAX_3D_TEXTURE_SIZE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_MAX_3D_TEXTURE_SIZE\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> GL_MAX_RECTANGLE_TEXTURE_SIZE_NV<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_MAX_RECTANGLE_TEXTURE_SIZE_NV\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> GL_MAX_TEXTURE_UNITS_ARB<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_MAX_TEXTURE_UNITS_ARB\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> GL_MAX_TEXTURE_LOD_BIAS_EXT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_MAX_TEXTURE_LOD_BIAS_EXT\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> GL_MAX_VIEWPORT_DIMS<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_MAX_VIEWPORT_DIMS\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> GL_ALIASED_LINE_WIDTH_RANGE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_ALIASED_LINE_WIDTH_RANGE\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> GL_SMOOTH_LINE_WIDTH_RANGE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_SMOOTH_LINE_WIDTH_RANGE\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> GL_ALIASED_POINT_SIZE_RANGE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_ALIASED_POINT_SIZE_RANGE\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> GL_SMOOTH_POINT_SIZE_RANGE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_SMOOTH_POINT_SIZE_RANGE\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>GLenum<span class=\"token punctuation\">)</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    GLint i<span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"OpenGL limits:\\n\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> openglLimits<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">glGetIntegerv</span><span class=\"token punctuation\">(</span>openglLimits<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">glGetError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> GL_NONE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>openglLimits<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>count <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n                cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"    \"</span> <span class=\"token operator\">&lt;&lt;</span> openglLimits<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" = \"</span> <span class=\"token operator\">&lt;&lt;</span> max<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token comment\" spellcheck=\"true\">/* XXX fix if we ever query something with more than 2 values */</span>\n                cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"    \"</span> <span class=\"token operator\">&lt;&lt;</span> openglLimits<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" = \"</span> <span class=\"token operator\">&lt;&lt;</span> max<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">&lt;&lt;</span> max<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">printShaderLimits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">struct</span> token_name lll<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> GL_MAX_VERTEX_ATTRIBS<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_MAX_VERTEX_ATTRIBS\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> GL_MAX_VERTEX_UNIFORM_COMPONENTS<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_MAX_VERTEX_UNIFORM_COMPONENTS\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> GL_MAX_VARYING_FLOATS<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_MAX_VARYING_FLOATS\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> GL_MAX_TEXTURE_IMAGE_UNITS<span class=\"token punctuation\">,</span> <span class=\"token string\">\"GL_MAX_TEXTURE_IMAGE_UNITS\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>GLenum<span class=\"token punctuation\">)</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    GLint i<span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Shader limits:\\n\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> lll<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">glGetIntegerv</span><span class=\"token punctuation\">(</span>lll<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>token<span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">glGetError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> GL_NONE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lll<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>count <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n                cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"    \"</span> <span class=\"token operator\">&lt;&lt;</span> lll<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" = \"</span> <span class=\"token operator\">&lt;&lt;</span> max<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">else</span> <span class=\"token comment\" spellcheck=\"true\">/* XXX fix if we ever query something with more than 2 values */</span>\n                cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"    \"</span> <span class=\"token operator\">&lt;&lt;</span> lll<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" = \"</span> <span class=\"token operator\">&lt;&lt;</span> max<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">&lt;&lt;</span> max<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">printGLInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>version <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>vendor <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>renderer <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\" spellcheck=\"true\">//    char *extensions = NULL;</span>\n<span class=\"token comment\" spellcheck=\"true\">//    int   glutVersion;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">//glutVersion = glutGet(0x01FC);</span>\n    version <span class=\"token operator\">=</span>     <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">glGetString</span><span class=\"token punctuation\">(</span>GL_VERSION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    vendor <span class=\"token operator\">=</span>      <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">glGetString</span><span class=\"token punctuation\">(</span>GL_VENDOR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    renderer <span class=\"token operator\">=</span>    <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">glGetString</span><span class=\"token punctuation\">(</span>GL_RENDERER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"version=\"</span> <span class=\"token operator\">&lt;&lt;</span> version <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\nvendor=\"</span> <span class=\"token operator\">&lt;&lt;</span> vendor <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\nrenderer=\"</span> <span class=\"token operator\">&lt;&lt;</span> renderer <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\n    info<span class=\"token punctuation\">.</span>version <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">glGetString</span><span class=\"token punctuation\">(</span>GL_VERSION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    info<span class=\"token punctuation\">.</span>vendor <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">glGetString</span><span class=\"token punctuation\">(</span>GL_VENDOR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    info<span class=\"token punctuation\">.</span>renderer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">glGetString</span><span class=\"token punctuation\">(</span>GL_RENDERER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    info<span class=\"token punctuation\">.</span>bVboSupported <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    info<span class=\"token punctuation\">.</span>bShadersSupported <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    info<span class=\"token punctuation\">.</span>bPointSpritesSupported <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">glewIsSupported</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GL_VERSION_1_4  GL_ARB_point_sprite\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        info<span class=\"token punctuation\">.</span>bPointSpritesSupported <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">glewIsSupported</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GL_ARB_vertex_buffer_object\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        info<span class=\"token punctuation\">.</span>bVboSupported <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">glewIsSupported</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GL_ARB_vertex_shader\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        info<span class=\"token punctuation\">.</span>bShadersSupported <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">glGetIntegerv</span><span class=\"token punctuation\">(</span>GL_MAX_TEXTURE_SIZE<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>info<span class=\"token punctuation\">.</span>maxTextureSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">glGetIntegerv</span><span class=\"token punctuation\">(</span>GL_MAX_VIEWPORT_DIMS<span class=\"token punctuation\">,</span> info<span class=\"token punctuation\">.</span>maxDimensions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">glGetIntegerv</span><span class=\"token punctuation\">(</span>GL_MAX_LIGHTS<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>info<span class=\"token punctuation\">.</span>maxLights<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    string output <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\n    string pointSprites <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span>bPointSpritesSupported <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"yes\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"no\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    string shaders <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span>bShadersSupported <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"yes\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"no\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    string vbo <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span>bVboSupported <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"yes\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"no\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    output <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token string\">\"opengl version: \"</span> <span class=\"token operator\">+</span> info<span class=\"token punctuation\">.</span>version <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n    output <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token string\">\"vendor: \"</span> <span class=\"token operator\">+</span> info<span class=\"token punctuation\">.</span>vendor <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n    output <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token string\">\"renderer: \"</span> <span class=\"token operator\">+</span> info<span class=\"token punctuation\">.</span>renderer <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n    output <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n    output <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token string\">\"point sprites support: \"</span> <span class=\"token operator\">+</span> pointSprites <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n    output <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token string\">\"shader support: \"</span> <span class=\"token operator\">+</span> shaders <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n    output <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token string\">\"vbo support: \"</span> <span class=\"token operator\">+</span> vbo <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n    output <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n    output <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token string\">\"max texture size: \"</span> <span class=\"token operator\">+</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span>maxTextureSize<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n    output <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token string\">\"max viewport dimensions: \"</span> <span class=\"token operator\">+</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span>maxDimensions<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\",\"</span> <span class=\"token operator\">+</span>  <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span>maxDimensions<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n    output <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token string\">\"max lights: \"</span> <span class=\"token operator\">+</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span>maxLights<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">;</span>\n\n\n\n    <span class=\"token function\">ofDrawBitmapStringHighlight</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">ofDrawBitmapStringHighlight</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"press ' ' to load full report\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">220</span><span class=\"token punctuation\">,</span> ofColor<span class=\"token operator\">::</span>magenta<span class=\"token punctuation\">,</span> ofColor<span class=\"token operator\">::</span>white<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">keyPressed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">// todo: rewrite this with ofLog:</span>\n\n        FILE <span class=\"token operator\">*</span>fp<span class=\"token punctuation\">;</span>\n\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>fp<span class=\"token operator\">=</span><span class=\"token function\">freopen</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofToDataPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"openglReport.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span> <span class=\"token punctuation\">,</span><span class=\"token constant\">stdout</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Cannot open file.\\n\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-------------------------------------------------\\n\"</span><span class=\"token punctuation\">;</span>\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"opengl info\\n\"</span><span class=\"token punctuation\">;</span>\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-------------------------------------------------\\n\"</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">printGLInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-------------------------------------------------\\n\"</span><span class=\"token punctuation\">;</span>\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"opengl limits\\n\"</span><span class=\"token punctuation\">;</span>\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-------------------------------------------------\\n\"</span><span class=\"token punctuation\">;</span>\n\n\n        <span class=\"token function\">print_limits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-------------------------------------------------\\n\"</span><span class=\"token punctuation\">;</span>\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"shader limits\\n\"</span><span class=\"token punctuation\">;</span>\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-------------------------------------------------\\n\"</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">printShaderLimits</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-------------------------------------------------\\n\"</span><span class=\"token punctuation\">;</span>\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"available extensions\\n\"</span><span class=\"token punctuation\">;</span>\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-------------------------------------------------\\n\"</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">const</span> GLubyte <span class=\"token operator\">*</span> strExt<span class=\"token punctuation\">;</span>\n        strExt <span class=\"token operator\">=</span> <span class=\"token function\">glGetString</span> <span class=\"token punctuation\">(</span>GL_EXTENSIONS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">//cout &lt;&lt; \"extensions: \" &lt;&lt; strExt &lt;&lt; endl;</span>\n        <span class=\"token function\">print_extension_list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>strExt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n        <span class=\"token comment\" spellcheck=\"true\">//isShade = gluCheckExtension ((const GLubyte*)\"GL_ARB_shading_language_100\", strExt);</span>\n\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-------------------------------------------------\\n\"</span><span class=\"token punctuation\">;</span>\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"opengl calls available\\n\"</span><span class=\"token punctuation\">;</span>\n        cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-------------------------------------------------\\n\"</span><span class=\"token punctuation\">;</span>\n\n\n        <span class=\"token function\">printGlewInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span>fp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_WIN32</span>\n        string command <span class=\"token operator\">=</span> <span class=\"token string\">\"start \"</span> <span class=\"token operator\">+</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofToDataPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"openglReport.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(TARGET_LINUX)</span>\n        string command <span class=\"token operator\">=</span> <span class=\"token string\">\"xdg-open \"</span> <span class=\"token operator\">+</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofToDataPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"openglReport.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n        string command <span class=\"token operator\">=</span> <span class=\"token string\">\"open \"</span> <span class=\"token operator\">+</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofToDataPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"openglReport.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span> <span class=\"token operator\">!=</span> <span class=\"token function\">system</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Command \"</span> <span class=\"token operator\">&lt;&lt;</span> command<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" did not return 0. Something may have gone wrong.\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">keyReleased</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseMoved</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseDragged</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mousePressed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseReleased</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseEntered</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseExited</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">windowResized</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">gotMessage</span><span class=\"token punctuation\">(</span>ofMessage msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">dragEvent</span><span class=\"token punctuation\">(</span>ofDragInfo dragInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n","type":"source","static":true}}],"fetch":[]}