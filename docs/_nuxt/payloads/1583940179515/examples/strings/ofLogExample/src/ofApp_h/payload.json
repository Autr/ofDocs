{"data":[{"page":{"entry":{"name":"ofApp.h","filename":"ofApp.h","absolute":"/Users/Gilbert/Code/openFrameworks/examples/strings/ofLogExample/src/ofApp.h","path":"/examples/strings/ofLogExample/src/ofApp_h","route":"/examples/strings/ofLogExample/src/ofApp.h","dir":"../examples/strings/ofLogExample/src","ext":"h","type":"source","id":1604,"parent":1601,"breadcrumbs":[1601,1598,1592,436],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">/* Refer to the README.md in the example's root folder for more information on usage */</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofMain.h\"</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">// OF logging example</span>\n<span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token comment\" spellcheck=\"true\">// This logging example shows you how to use OF's built-in logging</span>\n<span class=\"token comment\" spellcheck=\"true\">// functions to generate logging output. It demonstrates the most</span>\n<span class=\"token comment\" spellcheck=\"true\">// important features of ofLog.</span>\n<span class=\"token comment\" spellcheck=\"true\">// Please note that the different logging levels are for demonstration</span>\n<span class=\"token comment\" spellcheck=\"true\">// purposes, so don't be alarmed if you see fatal errors in your console ;-)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofApp</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofBaseApp <span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">keyPressed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">keyReleased</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">mouseMoved</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">mouseDragged</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">mousePressed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">mouseReleased</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">mouseEntered</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">mouseExited</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">windowResized</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">dragEvent</span><span class=\"token punctuation\">(</span>ofDragInfo dragInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">gotMessage</span><span class=\"token punctuation\">(</span>ofMessage msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// Variables for logging</span>\n\t\t<span class=\"token keyword\">int</span> startTime<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> elapsedTime<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> triggerOne<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> triggerTwo<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">bool</span> verboseLevel<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span> logToFile<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span> currentVerboseLevel<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span> currentLogToFile<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n","type":"source","static":true}}],"fetch":[]}