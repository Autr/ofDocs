{"data":[{"page":{"entry":{"name":"README","filename":"README.md","absolute":"/Users/Gilbert/Code/openFrameworks/examples/math/trigonometryExample/README.md","path":"/examples/math/trigonometryExample/README","route":"/examples/math/trigonometryExample/README.md","dir":"../examples/math/trigonometryExample","ext":"md","type":"page","id":1491,"parent":1490,"breadcrumbs":[1490,1442,436],"translations":{},"siblings":[]},"description":{},"document":"<h2>#level1_trigonometryExample</h2>\n<p><img src=\"trigonometryExample.png\" alt=\"Screenshot of Example, stored in the Level1_ExampleName/readme_assets/ folder\"></p>\n<h3>Learning Objectives</h3>\n<p>This openFrameworks Example is designed to demonstrate how to move a point around a circle using sin and cosine and demonstrate angles and radians.</p>\n<p>In this example, pay attention to the following code:</p>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Trigonometric_functions\">Trig functions</a> that use angles and return values between -1 and 1,  <code><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>angle<span class=\"token punctuation\">)</span></code>, <code><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>angle<span class=\"token punctuation\">)</span></code>, <code><span class=\"token function\">tan</span><span class=\"token punctuation\">(</span>angle<span class=\"token punctuation\">)</span></code></li>\n<li>Trig functions are based on the unit circle that has a radius of one; therefore, the circumference is 2 * radius * PI = 2 * 1 * PI = 2 * PI. openFrameworks has a variable for 2 * PI, <code>TWO_PI</code></li>\n<li><code>ofPoint point</code> is used to store the center point of the blue ball; the x and y value of point is changed using <code><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>angle<span class=\"token punctuation\">)</span></code> &amp;  <code><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>angle<span class=\"token punctuation\">)</span></code></li>\n</ul>\n<h3>Expected Behavior</h3>\n<p>When launching this app, you should see:</p>\n<ul>\n<li>a yellow circle with a small blue circle moving around the circumference of the yellow circle,</li>\n<li>a horiztonal and vertical line attached to the center of the blue ball visualizing sine and cosine angle respectively</li>\n</ul>\n<p>Instructions for use:</p>\n<ul>\n<li>Press and release the mouse clicker inside of the yellow circle, and the blue ball will restart its rotation around the yellow ball at this position</li>\n<li>Hold down the mouse clicker and drag your mouse inside of the yellow circle to control the rotation of the blue circle</li>\n</ul>\n<h3>Other classes used in this file</h3>\n<p>This Example uses no additional classes.</p>\n","raw":"#level1_trigonometryExample\n--\n![Screenshot of Example, stored in the Level1_ExampleName/readme_assets/ folder](trigonometryExample.png)\n\n### Learning Objectives\n\nThis openFrameworks Example is designed to demonstrate how to move a point around a circle using sin and cosine and demonstrate angles and radians.\n\nIn this example, pay attention to the following code: \n\n* [Trig functions](https://en.wikipedia.org/wiki/Trigonometric_functions) that use angles and return values between -1 and 1,  ```cos(angle)```, ```sin(angle)```, ```tan(angle)```\n* Trig functions are based on the unit circle that has a radius of one; therefore, the circumference is 2 * radius * PI = 2 * 1 * PI = 2 * PI. openFrameworks has a variable for 2 * PI, ```TWO_PI```\n* ```ofPoint point``` is used to store the center point of the blue ball; the x and y value of point is changed using ```cos(angle)``` &  ```sin(angle)``` \n\n\n### Expected Behavior\n\nWhen launching this app, you should see:\n\n* a yellow circle with a small blue circle moving around the circumference of the yellow circle, \n* a horiztonal and vertical line attached to the center of the blue ball visualizing sine and cosine angle respectively\n\nInstructions for use:\n\n* Press and release the mouse clicker inside of the yellow circle, and the blue ball will restart its rotation around the yellow ball at this position\n* Hold down the mouse clicker and drag your mouse inside of the yellow circle to control the rotation of the blue circle\n\n### Other classes used in this file\n\nThis Example uses no additional classes.\n\n\n\n","type":"page","static":true}}],"fetch":[]}