{"data":[{"page":{"entry":{"name":"ofApp.cpp","filename":"ofApp.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/examples/communication/serialExample/src/ofApp.cpp","path":"/examples/communication/serialExample/src/ofApp_cpp","route":"/examples/communication/serialExample/src/ofApp.cpp","dir":"../examples/communication/serialExample/src","ext":"cpp","type":"source","id":719,"parent":717,"breadcrumbs":[717,714,672,436],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofApp.h\"</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofSetVerticalSync</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\tbSendSerialMessage <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofBackground</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n<span class=\"token comment\" spellcheck=\"true\">//    ofSetLogLevel(OF_LOG_VERBOSE);</span>\n\t\n\tfont<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DIN.otf\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    ofLog<span class=\"token operator\">::</span><span class=\"token function\">setAutoSpace</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\tserial<span class=\"token punctuation\">.</span><span class=\"token function\">listDevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tvector <span class=\"token operator\">&lt;</span>ofSerialDeviceInfo<span class=\"token operator\">></span> deviceList <span class=\"token operator\">=</span> serial<span class=\"token punctuation\">.</span><span class=\"token function\">getDeviceList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// this should be set to whatever com port your serial device is connected to.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// (ie, COM4 on a pc, /dev/tty.... on linux, /dev/tty... on a mac)</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// arduino users check in arduino app....</span>\n\t<span class=\"token keyword\">int</span> baud <span class=\"token operator\">=</span> <span class=\"token number\">9600</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\" spellcheck=\"true\">//    serial.setup(0, baud); //open the first device</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//serial.setup(\"COM4\", baud); // windows example</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//serial.setup(\"/dev/ttyUSB0\", baud); //linux example</span>\n\t\n\tnTimesRead <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tnBytesRead <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\treadTime <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>bytesReadString<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    timestamp <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> <span class=\"token operator\">&amp;</span> d <span class=\"token operator\">:</span> deviceList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Device:\"</span> <span class=\"token operator\">&lt;&lt;</span> d<span class=\"token punctuation\">.</span><span class=\"token function\">getDevicePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> d<span class=\"token punctuation\">.</span><span class=\"token function\">getDeviceName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> d<span class=\"token punctuation\">.</span><span class=\"token function\">getDeviceName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tty.usbmodem\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">getDeviceName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tty.usbmodem\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">::</span>npos  <span class=\"token operator\">||</span> d<span class=\"token punctuation\">.</span><span class=\"token function\">getDeviceName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tty.usbserial\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">::</span>npos <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            \n            serial<span class=\"token punctuation\">.</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">.</span><span class=\"token function\">getDevicePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> baud<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// mac osx example</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    \n    <span class=\"token keyword\">float</span> t <span class=\"token operator\">=</span> <span class=\"token function\">ofGetElapsedTimef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">></span> timestamp <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        \n        alt <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>alt<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// (1) write the letter \"a\" to serial:</span>\n        <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"VCP:204\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> b<span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"VCP:200\"</span><span class=\"token punctuation\">;</span>\n        serial<span class=\"token punctuation\">.</span><span class=\"token function\">writeByte</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>alt<span class=\"token punctuation\">)</span> serial<span class=\"token punctuation\">.</span><span class=\"token function\">writeBytes</span><span class=\"token punctuation\">(</span> a <span class=\"token punctuation\">,</span> <span class=\"token number\">8</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>alt<span class=\"token punctuation\">)</span> serial<span class=\"token punctuation\">.</span><span class=\"token function\">writeBytes</span><span class=\"token punctuation\">(</span> b <span class=\"token punctuation\">,</span> <span class=\"token number\">8</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">ofLog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> alt<span class=\"token punctuation\">;</span>\n        serial<span class=\"token punctuation\">.</span><span class=\"token function\">writeByte</span><span class=\"token punctuation\">(</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        timestamp <span class=\"token operator\">=</span> t<span class=\"token punctuation\">;</span>\n<span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token comment\" spellcheck=\"true\">////         (2) read</span>\n<span class=\"token comment\" spellcheck=\"true\">////         now we try to read 3 bytes</span>\n<span class=\"token comment\" spellcheck=\"true\">////         since we might not get them all the time 3 - but sometimes 0, 6, or something else,</span>\n<span class=\"token comment\" spellcheck=\"true\">////         we will try to read three bytes, as much as we can</span>\n<span class=\"token comment\" spellcheck=\"true\">////         otherwise, we may have a \"lag\" if we don't read fast enough</span>\n<span class=\"token comment\" spellcheck=\"true\">////         or just read three every time. now, we will be sure to</span>\n<span class=\"token comment\" spellcheck=\"true\">////         read as much as we can in groups of three...</span>\n<span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token comment\" spellcheck=\"true\">//        nTimesRead = 0;</span>\n<span class=\"token comment\" spellcheck=\"true\">//        nBytesRead = 0;</span>\n<span class=\"token comment\" spellcheck=\"true\">//        int nRead  = 0;  // a temp variable to keep count per read</span>\n<span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token comment\" spellcheck=\"true\">//        unsigned char bytesReturned[3];</span>\n<span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token comment\" spellcheck=\"true\">//        memset(bytesReadString, 0, 4);</span>\n<span class=\"token comment\" spellcheck=\"true\">//        memset(bytesReturned, 0, 3);</span>\n<span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token comment\" spellcheck=\"true\">//        while( (nRead = serial.readBytes( bytesReturned, 3)) > 0){</span>\n<span class=\"token comment\" spellcheck=\"true\">//            nTimesRead++;</span>\n<span class=\"token comment\" spellcheck=\"true\">//            nBytesRead = nRead;</span>\n<span class=\"token comment\" spellcheck=\"true\">//        };</span>\n<span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token comment\" spellcheck=\"true\">//        memcpy(bytesReadString, bytesReturned, 3);</span>\n<span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token comment\" spellcheck=\"true\">//        ofLog() &lt;&lt; bytesReadString;</span>\n<span class=\"token comment\" spellcheck=\"true\">//        bSendSerialMessage = false;</span>\n<span class=\"token comment\" spellcheck=\"true\">//        readTime = ofGetElapsedTimef();</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token comment\" spellcheck=\"true\">//    if (nBytesRead > 0 &amp;&amp; ((ofGetElapsedTimef() - readTime) &lt; 0.5f)){</span>\n<span class=\"token comment\" spellcheck=\"true\">//        ofSetColor(0);</span>\n<span class=\"token comment\" spellcheck=\"true\">//    } else {</span>\n<span class=\"token comment\" spellcheck=\"true\">//        ofSetColor(220);</span>\n<span class=\"token comment\" spellcheck=\"true\">//    }</span>\n<span class=\"token comment\" spellcheck=\"true\">//    string msg;</span>\n<span class=\"token comment\" spellcheck=\"true\">//    msg += \"click to test serial:\\n\";</span>\n<span class=\"token comment\" spellcheck=\"true\">//    msg += \"nBytes read \" + ofToString(nBytesRead) + \"\\n\";</span>\n<span class=\"token comment\" spellcheck=\"true\">//    msg += \"nTimes read \" + ofToString(nTimesRead) + \"\\n\";</span>\n<span class=\"token comment\" spellcheck=\"true\">//    msg += \"read: \" + ofToString(bytesReadString) + \"\\n\";</span>\n<span class=\"token comment\" spellcheck=\"true\">//    msg += \"(at time \" + ofToString(readTime, 3) + \")\";</span>\n<span class=\"token comment\" spellcheck=\"true\">//    font.drawString(msg, 50, 100);</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">keyPressed</span>  <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> \n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">keyReleased</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> \n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseMoved</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseDragged</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mousePressed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbSendSerialMessage <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseReleased</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseEntered</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseExited</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">windowResized</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">gotMessage</span><span class=\"token punctuation\">(</span>ofMessage msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">dragEvent</span><span class=\"token punctuation\">(</span>ofDragInfo dragInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> \n\t\n<span class=\"token punctuation\">}</span>\n\n","type":"source","static":true}}],"fetch":[]}