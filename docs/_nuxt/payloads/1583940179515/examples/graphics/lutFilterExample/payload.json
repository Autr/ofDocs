{"data":[{"page":{"entry":{"name":"lutFilterExample","filename":"lutFilterExample","absolute":"/Users/Gilbert/Code/openFrameworks/examples/graphics/lutFilterExample","path":"/examples/graphics/lutFilterExample/","dir":"../examples/graphics","route":"/examples/graphics/lutFilterExample/","ext":"","type":"folder","id":995,"children":[996,997,998],"parent":943,"breadcrumbs":[943,436],"siblings":[],"translations":{}},"intro":{"name":"README","filename":"README.md","absolute":"/Users/Gilbert/Code/openFrameworks/examples/graphics/lutFilterExample/README.md","path":"/examples/graphics/lutFilterExample/README","route":"/examples/graphics/lutFilterExample/README.md","dir":"../examples/graphics/lutFilterExample","ext":"md","type":"page","id":997,"parent":995,"breadcrumbs":[995,943,436],"translations":{},"siblings":[]},"document":"<h2>#Level2_lutFilterExample</h2>\n<p><img src=\"lutFilterExample.png\" alt=\"Screenshot of Example\"></p>\n<h3>Learning Objectives</h3>\n<p>This openFrameworks Example is designed to demonstrate how to create LUT filters. LUT stands for &quot;Look Up Table&quot;. Final Image = Source Image + LUT where LUT is the difference bewtween your desired outcome and your source.</p>\n<p>In this example, pay attention to the following code:</p>\n<ul>\n<li><code><span class=\"token keyword\">void</span> <span class=\"token function\">loadLUT</span><span class=\"token punctuation\">(</span>string path<span class=\"token punctuation\">)</span></code></li>\n<li><code><span class=\"token keyword\">void</span> <span class=\"token function\">applyLUT</span><span class=\"token punctuation\">(</span>ofPixelsRef pix<span class=\"token punctuation\">)</span></code> uses <code>glm<span class=\"token operator\">::</span>vec3</code> and <code>imgageName<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">)</span></code> to alter the color of every pixel of the image</li>\n</ul>\n<h3>Expected Behavior</h3>\n<p>When launching this app, you should see:</p>\n<ul>\n<li>a large image in the center of the screen and a small small image located at the uper left hand corner of this rectangle; both images will have your camera feed showing. The larger image will showcase a filter</li>\n<li>text showcasing what filter is being overlayed is at the bottom of the screen</li>\n</ul>\n<p>Instructions for use:</p>\n<ul>\n<li>Use the up and down keys to filter through the list</li>\n</ul>\n<h3>Other classes used in this file</h3>\n<p>This Example does not use any other classes.</p>\n","raw":"#Level2_lutFilterExample\n--\n![Screenshot of Example](lutFilterExample.png)\n\n### Learning Objectives\n\nThis openFrameworks Example is designed to demonstrate how to create LUT filters. LUT stands for \"Look Up Table\". Final Image = Source Image + LUT where LUT is the difference bewtween your desired outcome and your source. \n\nIn this example, pay attention to the following code:\n\n* ```void loadLUT(string path)``` \n* ```void applyLUT(ofPixelsRef pix)``` uses ```glm::vec3``` and ```imgageName.setColor(x, y, color)``` to alter the color of every pixel of the image\n\n\n### Expected Behavior\n\nWhen launching this app, you should see:\n\n* a large image in the center of the screen and a small small image located at the uper left hand corner of this rectangle; both images will have your camera feed showing. The larger image will showcase a filter\n* text showcasing what filter is being overlayed is at the bottom of the screen\n\nInstructions for use:\n\n* Use the up and down keys to filter through the list\n\n\n### Other classes used in this file\n\nThis Example does not use any other classes. \n","type":"folder","static":true}}],"fetch":[]}