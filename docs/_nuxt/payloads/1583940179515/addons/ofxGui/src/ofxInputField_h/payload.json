{"data":[{"page":{"entry":{"name":"ofxInputField.h","filename":"ofxInputField.h","absolute":"/Users/Gilbert/Code/openFrameworks/addons/ofxGui/src/ofxInputField.h","path":"/addons/ofxGui/src/ofxInputField_h","route":"/addons/ofxGui/src/ofxInputField.h","dir":"../addons/ofxGui/src","ext":"h","type":"source","id":99,"parent":86,"breadcrumbs":[86,87,36],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token comment\" spellcheck=\"true\">//  ofxInputField.cpp</span>\n<span class=\"token comment\" spellcheck=\"true\">//  ofxInputField</span>\n<span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token comment\" spellcheck=\"true\">//  Based on ofxInputField by Felix Lange</span>\n<span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token comment\" spellcheck=\"true\">//</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxBaseGui.h\"</span></span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxInputField</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofxBaseGui<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\n\t<span class=\"token keyword\">friend</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxSlider</span><span class=\"token punctuation\">;</span>\n\n\t\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\t\n\t<span class=\"token function\">ofxInputField</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofxInputField</span><span class=\"token punctuation\">(</span>ofParameter<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span> _val<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width <span class=\"token operator\">=</span> defaultWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height <span class=\"token operator\">=</span> defaultHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofxInputField<span class=\"token operator\">*</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>ofParameter<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span> _val<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width <span class=\"token operator\">=</span> defaultWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height <span class=\"token operator\">=</span> defaultHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofxInputField<span class=\"token operator\">*</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> _name<span class=\"token punctuation\">,</span> Type _val<span class=\"token punctuation\">,</span> Type _min<span class=\"token punctuation\">,</span> Type _max<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width <span class=\"token operator\">=</span> defaultWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height <span class=\"token operator\">=</span> defaultHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofxInputField<span class=\"token operator\">*</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> _name<span class=\"token punctuation\">,</span> Type _val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setMin</span><span class=\"token punctuation\">(</span>Type min<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tType <span class=\"token function\">getMin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setMax</span><span class=\"token punctuation\">(</span>Type max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tType <span class=\"token function\">getMax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setBlinkingCursor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> blink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setShowLabelWhileEditing</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> show<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">mouseMoved</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">mousePressed</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">mouseDragged</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">mouseReleased</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">mouseScrolled</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">keyPressed</span><span class=\"token punctuation\">(</span>ofKeyEventArgs <span class=\"token operator\">&amp;</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">charPressed</span><span class=\"token punctuation\">(</span>uint32_t <span class=\"token operator\">&amp;</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">containsValidValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">ListenerClass</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> ListenerMethod<span class=\"token operator\">></span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>ListenerClass <span class=\"token operator\">*</span> listener<span class=\"token punctuation\">,</span> ListenerMethod method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tvalue<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>listener<span class=\"token punctuation\">,</span>method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">ListenerClass</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> ListenerMethod<span class=\"token operator\">></span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">removeListener</span><span class=\"token punctuation\">(</span>ListenerClass <span class=\"token operator\">*</span> listener<span class=\"token punctuation\">,</span> ListenerMethod method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tvalue<span class=\"token punctuation\">.</span><span class=\"token function\">removeListener</span><span class=\"token punctuation\">(</span>listener<span class=\"token punctuation\">,</span>method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tType <span class=\"token keyword\">operator</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>Type v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">operator</span> <span class=\"token keyword\">const</span> Type <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tofAbstractParameter <span class=\"token operator\">&amp;</span> <span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">enum</span> Inside<span class=\"token punctuation\">{</span>\n\t\tInsideSlider<span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">ofxSlider</span><span class=\"token punctuation\">(</span>Inside<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tinsideSlider <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofParameter<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span> value<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> bGuiActive<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> bMousePressed<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> bMouseOver<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> mx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> my<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bCheck<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">generateDraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">valueChanged</span><span class=\"token punctuation\">(</span>Type <span class=\"token operator\">&amp;</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofVboMesh bg<span class=\"token punctuation\">;</span>\n\tofVboMesh textMesh<span class=\"token punctuation\">;</span>\n\n\tstd<span class=\"token operator\">::</span>string input<span class=\"token punctuation\">;</span>        <span class=\"token comment\" spellcheck=\"true\">// input text</span>\n\tstd<span class=\"token operator\">::</span>string visibleInput<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// input text currently visible, i.e. not obscured by gui</span>\n\t<span class=\"token keyword\">int</span> visibleInputStart <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> visibleInputEnd <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// boundaries for visible input text</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">parseInput</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">insertKeystroke</span><span class=\"token punctuation\">(</span>uint32_t character<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">insertAlphabetic</span><span class=\"token punctuation\">(</span>uint32_t character<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">hasSelectedText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span> mousePressedPos <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//set by mouse interaction</span>\n\t<span class=\"token keyword\">float</span> selectStartX <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> selectionWidth <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//calculated from select indices</span>\n\t<span class=\"token keyword\">int</span> selectStartPos <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> selectEndPos <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">calculateSelectionArea</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> selectIdx1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> selectIdx2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">moveCursor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> cursorPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">drawCursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">bool</span> insideSlider <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> blinkingCursor <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> validValue <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> showLabelWhileEditing <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> overlappingLabel <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tuint64_t errorTime <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">// time last input error occured, used for animations</span>\n\tuint64_t lastCursorMoveTime <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// last time cursor was moved, used to calculate whether to blink</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">leaveFocus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>ofFloatColor<span class=\"token operator\">></span> originalColors<span class=\"token punctuation\">;</span>\n\n\tofEvent<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span> leftFocus<span class=\"token punctuation\">;</span>\n\tofEventListeners listeners<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">typedef</span> ofxInputField<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span> ofxFloatField<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> ofxInputField<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> ofxIntField<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> ofxInputField<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token operator\">></span> ofxTextField<span class=\"token punctuation\">;</span>\n","type":"source","static":true}}],"fetch":[]}