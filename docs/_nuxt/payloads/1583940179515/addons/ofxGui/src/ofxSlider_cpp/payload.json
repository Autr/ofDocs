{"data":[{"page":{"entry":{"name":"ofxSlider.cpp","filename":"ofxSlider.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/addons/ofxGui/src/ofxSlider.cpp","path":"/addons/ofxGui/src/ofxSlider_cpp","route":"/addons/ofxGui/src/ofxSlider.cpp","dir":"../addons/ofxGui/src","ext":"cpp","type":"source","id":104,"parent":86,"breadcrumbs":[86,87,36],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxSlider.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGraphics.h\"</span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">namespace</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n\tstd<span class=\"token operator\">::</span>string <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>Type t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n\tstd<span class=\"token operator\">::</span>string <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>uint8_t t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n\tstd<span class=\"token operator\">::</span>string <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>int8_t t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\nofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">ofxSlider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbUpdateOnReleaseOnly <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tbGuiActive <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tmouseInside <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\nofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofxSlider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tvalue<span class=\"token punctuation\">.</span><span class=\"token function\">removeListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>ofxSlider<span class=\"token operator\">::</span>valueChanged<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\nofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">ofxSlider</span><span class=\"token punctuation\">(</span>ofParameter<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span> _val<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>_val<span class=\"token punctuation\">,</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\nofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">*</span> ofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>ofParameter<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span> _val<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tlistener <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span>leftFocus<span class=\"token punctuation\">.</span><span class=\"token function\">newListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span>\n\t\tstate <span class=\"token operator\">=</span> Slider<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>input<span class=\"token punctuation\">.</span><span class=\"token function\">containsValidValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\terrorTime <span class=\"token operator\">=</span> <span class=\"token function\">ofGetElapsedTimef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\terrorTime <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbUpdateOnReleaseOnly <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tvalue<span class=\"token punctuation\">.</span><span class=\"token function\">makeReferenceTo</span><span class=\"token punctuation\">(</span>_val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tb<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tb<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tb<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> width<span class=\"token punctuation\">;</span>\n\tb<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> height<span class=\"token punctuation\">;</span>\n\tbGuiActive <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setNeedsRedraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tvalue<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>ofxSlider<span class=\"token operator\">::</span>valueChanged<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">registerMouseEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tinput<span class=\"token punctuation\">.</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>_val<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\nofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">*</span> ofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> sliderName<span class=\"token punctuation\">,</span> Type _val<span class=\"token punctuation\">,</span> Type _min<span class=\"token punctuation\">,</span> Type _max<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tvalue<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>sliderName<span class=\"token punctuation\">,</span>_val<span class=\"token punctuation\">,</span>_min<span class=\"token punctuation\">,</span>_max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setMin</span><span class=\"token punctuation\">(</span>Type min<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    value<span class=\"token punctuation\">.</span><span class=\"token function\">setMin</span><span class=\"token punctuation\">(</span>min<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\nType ofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">getMin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">getMin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setMax</span><span class=\"token punctuation\">(</span>Type max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    value<span class=\"token punctuation\">.</span><span class=\"token function\">setMax</span><span class=\"token punctuation\">(</span>max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\nType ofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">getMax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">getMax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">bool</span> ofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">mouseMoved</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> mouse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">bool</span> mouseInside <span class=\"token operator\">=</span> <span class=\"token function\">isGuiDrawing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> b<span class=\"token punctuation\">.</span><span class=\"token function\">inside</span><span class=\"token punctuation\">(</span>mouse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mouseInside <span class=\"token operator\">!=</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>mouseInside <span class=\"token operator\">&amp;&amp;</span> overlappingLabel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setNeedsRedraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>mouseInside <span class=\"token operator\">=</span> mouseInside<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> mouseInside<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">bool</span> ofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">mousePressed</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> mouse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>state<span class=\"token operator\">==</span>Slider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mouse<span class=\"token punctuation\">.</span>button <span class=\"token operator\">==</span> OF_MOUSE_BUTTON_RIGHT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span><span class=\"token function\">inside</span><span class=\"token punctuation\">(</span>mouse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tstate <span class=\"token operator\">=</span> Input<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">auto</span> mouseLeft <span class=\"token operator\">=</span> mouse<span class=\"token punctuation\">;</span>\n\t\t\t\tmouseLeft<span class=\"token punctuation\">.</span>button <span class=\"token operator\">=</span> OF_MOUSE_BUTTON_LEFT<span class=\"token punctuation\">;</span>\n\t\t\t\tinput<span class=\"token punctuation\">.</span><span class=\"token function\">mousePressed</span><span class=\"token punctuation\">(</span>mouseLeft<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bUpdateOnReleaseOnly<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tvalue<span class=\"token punctuation\">.</span><span class=\"token function\">disableEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>mouse<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> mouse<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">isGuiDrawing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">mousePressed</span><span class=\"token punctuation\">(</span>mouse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">bool</span> ofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">mouseDragged</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> mouse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>state<span class=\"token operator\">==</span>Slider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>mouse<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> mouse<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">isGuiDrawing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">mouseDragged</span><span class=\"token punctuation\">(</span>mouse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">bool</span> ofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">mouseReleased</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> mouse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>state<span class=\"token operator\">==</span>Slider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bUpdateOnReleaseOnly<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tvalue<span class=\"token punctuation\">.</span><span class=\"token function\">enableEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">bool</span> attended <span class=\"token operator\">=</span> <span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span>mouse<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> mouse<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tbGuiActive <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>attended<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">isGuiDrawing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">mouseReleased</span><span class=\"token punctuation\">(</span>mouse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">typename</span> std<span class=\"token operator\">::</span>enable_if<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>is_integral<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span>value<span class=\"token punctuation\">,</span> Type<span class=\"token operator\">></span><span class=\"token operator\">::</span>type\n<span class=\"token function\">getRange</span><span class=\"token punctuation\">(</span>Type min<span class=\"token punctuation\">,</span> Type max<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">double</span> range <span class=\"token operator\">=</span> max <span class=\"token operator\">-</span> min<span class=\"token punctuation\">;</span>\n\trange <span class=\"token operator\">/</span><span class=\"token operator\">=</span> width<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> std<span class=\"token operator\">::</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>range<span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">typename</span> std<span class=\"token operator\">::</span>enable_if<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>is_floating_point<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span>value<span class=\"token punctuation\">,</span> Type<span class=\"token operator\">></span><span class=\"token operator\">::</span>type\n<span class=\"token function\">getRange</span><span class=\"token punctuation\">(</span>Type min<span class=\"token punctuation\">,</span> Type max<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">double</span> range <span class=\"token operator\">=</span> max <span class=\"token operator\">-</span> min<span class=\"token punctuation\">;</span>\n\trange <span class=\"token operator\">/</span><span class=\"token operator\">=</span> width<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> range<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">bool</span> ofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">mouseScrolled</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isGuiDrawing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>state<span class=\"token operator\">==</span>Slider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mouseInside<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>scrollY<span class=\"token operator\">></span><span class=\"token number\">0</span> <span class=\"token operator\">||</span> args<span class=\"token punctuation\">.</span>scrollY<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token keyword\">double</span> range <span class=\"token operator\">=</span> <span class=\"token function\">getRange</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">getMin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">getMax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tType newValue <span class=\"token operator\">=</span> value <span class=\"token operator\">+</span> <span class=\"token function\">ofMap</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>scrollY<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>range<span class=\"token punctuation\">,</span> range<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tnewValue <span class=\"token operator\">=</span> <span class=\"token function\">ofClamp</span><span class=\"token punctuation\">(</span>newValue<span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">getMin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">getMax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tvalue <span class=\"token operator\">=</span> newValue<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// the following will always return false as it is inside the slider.</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t\t\treturn input.mouseScrolled(args);</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">double</span> ofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>Type v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tvalue <span class=\"token operator\">=</span> v<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> v<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\nofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token keyword\">const</span> Type <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">generateDraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbg<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbar<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tbg<span class=\"token punctuation\">.</span><span class=\"token function\">setFillColor</span><span class=\"token punctuation\">(</span>thisBackgroundColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbg<span class=\"token punctuation\">.</span><span class=\"token function\">setExtents</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">float</span> valAsPct <span class=\"token operator\">=</span> <span class=\"token function\">ofMap</span><span class=\"token punctuation\">(</span> value<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">getMin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">getMax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span>width<span class=\"token number\">-2</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbar<span class=\"token punctuation\">.</span><span class=\"token function\">setFillColor</span><span class=\"token punctuation\">(</span>thisFillColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbar<span class=\"token punctuation\">.</span><span class=\"token function\">setExtents</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span>y<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> valAsPct<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span>height<span class=\"token number\">-2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">generateText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tinput<span class=\"token punctuation\">.</span><span class=\"token function\">generateDraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">generateText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tstring valStr <span class=\"token operator\">=</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> inputWidth <span class=\"token operator\">=</span> <span class=\"token function\">getTextBoundingBox</span><span class=\"token punctuation\">(</span>valStr<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> yPos <span class=\"token operator\">=</span> <span class=\"token function\">getTextVCenteredInRect</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> label <span class=\"token operator\">=</span> <span class=\"token function\">getTextBoundingBox</span><span class=\"token punctuation\">(</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> textPadding<span class=\"token punctuation\">,</span> yPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> value <span class=\"token operator\">=</span> <span class=\"token function\">getTextBoundingBox</span><span class=\"token punctuation\">(</span>valStr<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> b<span class=\"token punctuation\">.</span>width <span class=\"token operator\">-</span> textPadding <span class=\"token operator\">-</span> inputWidth<span class=\"token punctuation\">,</span> yPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\toverlappingLabel <span class=\"token operator\">=</span> label<span class=\"token punctuation\">.</span><span class=\"token function\">getMaxX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> value<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\n\ttextMesh<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>mouseInside <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>overlappingLabel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tstd<span class=\"token operator\">::</span>string name<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>overlappingLabel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span> c<span class=\"token operator\">:</span> <span class=\"token function\">ofUTF8Iterator</span><span class=\"token punctuation\">(</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">auto</span> next <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">ofUTF8Append</span><span class=\"token punctuation\">(</span>next<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">getTextBoundingBox</span><span class=\"token punctuation\">(</span>next<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>width <span class=\"token operator\">></span> b<span class=\"token punctuation\">.</span>width<span class=\"token operator\">-</span>textPadding<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\tname <span class=\"token operator\">=</span> next<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\tname <span class=\"token operator\">=</span> <span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\ttextMesh<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">getTextMesh</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> textPadding<span class=\"token punctuation\">,</span> yPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>overlappingLabel <span class=\"token operator\">||</span> mouseInside<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\ttextMesh<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token function\">getTextMesh</span><span class=\"token punctuation\">(</span>valStr<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> b<span class=\"token punctuation\">.</span>width <span class=\"token operator\">-</span> textPadding <span class=\"token operator\">-</span> <span class=\"token function\">getTextBoundingBox</span><span class=\"token punctuation\">(</span>valStr<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> yPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>state<span class=\"token operator\">==</span>Slider<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tofColor c <span class=\"token operator\">=</span> <span class=\"token function\">ofGetStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>errorTime<span class=\"token operator\">></span><span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>input<span class=\"token punctuation\">.</span><span class=\"token function\">containsValidValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">auto</span> now <span class=\"token operator\">=</span> <span class=\"token function\">ofGetElapsedTimef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">auto</span> pct <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>now <span class=\"token operator\">-</span> errorTime<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pct<span class=\"token operator\">&lt;</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tbg<span class=\"token punctuation\">.</span><span class=\"token function\">setFillColor</span><span class=\"token punctuation\">(</span>ofColor<span class=\"token operator\">::</span>darkRed<span class=\"token punctuation\">.</span><span class=\"token function\">getLerped</span><span class=\"token punctuation\">(</span>thisBackgroundColor<span class=\"token punctuation\">,</span> pct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tbar<span class=\"token punctuation\">.</span><span class=\"token function\">setFillColor</span><span class=\"token punctuation\">(</span>ofColor<span class=\"token operator\">::</span>red<span class=\"token punctuation\">.</span><span class=\"token function\">getLerped</span><span class=\"token punctuation\">(</span>thisFillColor<span class=\"token punctuation\">,</span> pct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\tbg<span class=\"token punctuation\">.</span><span class=\"token function\">setFillColor</span><span class=\"token punctuation\">(</span>thisBackgroundColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tbar<span class=\"token punctuation\">.</span><span class=\"token function\">setFillColor</span><span class=\"token punctuation\">(</span>thisFillColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\terrorTime <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\tbg<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tbar<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tofBlendMode blendMode <span class=\"token operator\">=</span> <span class=\"token function\">ofGetStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>blendingMode<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>blendMode<span class=\"token operator\">!=</span>OF_BLENDMODE_ALPHA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofEnableAlphaBlending</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span>thisTextColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">bindFontTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\ttextMesh<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">unbindFontTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>blendMode<span class=\"token operator\">!=</span>OF_BLENDMODE_ALPHA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofEnableBlendMode</span><span class=\"token punctuation\">(</span>blendMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tinput<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">bool</span> ofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> mx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> my<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bCheck<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">isGuiDrawing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tbGuiActive <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> bCheck <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> b<span class=\"token punctuation\">.</span><span class=\"token function\">inside</span><span class=\"token punctuation\">(</span>mx<span class=\"token punctuation\">,</span> my<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tbGuiActive <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\tbGuiActive <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> bGuiActive <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tvalue <span class=\"token operator\">=</span> <span class=\"token function\">ofMap</span><span class=\"token punctuation\">(</span>mx<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> b<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">getMin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">.</span><span class=\"token function\">getMax</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\nofAbstractParameter <span class=\"token operator\">&amp;</span> ofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> value<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setUpdateOnReleaseOnly</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> _bUpdateOnReleaseOnly<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbUpdateOnReleaseOnly <span class=\"token operator\">=</span> _bUpdateOnReleaseOnly<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">valueChanged</span><span class=\"token punctuation\">(</span>Type <span class=\"token operator\">&amp;</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setNeedsRedraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tinput<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tinput<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setSize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setSize</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tinput<span class=\"token punctuation\">.</span><span class=\"token function\">setSize</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setShape</span><span class=\"token punctuation\">(</span>ofRectangle r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setShape</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tinput<span class=\"token punctuation\">.</span><span class=\"token function\">setShape</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Type<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofxSlider<span class=\"token operator\">&lt;</span>Type<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">setShape</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofxBaseGui<span class=\"token operator\">::</span><span class=\"token function\">setShape</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tinput<span class=\"token punctuation\">.</span><span class=\"token function\">setShape</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxSlider</span><span class=\"token operator\">&lt;</span>int8_t<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxSlider</span><span class=\"token operator\">&lt;</span>uint8_t<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxSlider</span><span class=\"token operator\">&lt;</span>int16_t<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxSlider</span><span class=\"token operator\">&lt;</span>uint16_t<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxSlider</span><span class=\"token operator\">&lt;</span>int32_t<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxSlider</span><span class=\"token operator\">&lt;</span>uint32_t<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxSlider</span><span class=\"token operator\">&lt;</span>int64_t<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxSlider</span><span class=\"token operator\">&lt;</span>uint64_t<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxSlider</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxSlider</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">template</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxSlider</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> std<span class=\"token operator\">::</span>conditional<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>is_same<span class=\"token operator\">&lt;</span>uint32_t<span class=\"token punctuation\">,</span> size_t<span class=\"token operator\">></span><span class=\"token operator\">::</span>value <span class=\"token operator\">||</span> std<span class=\"token operator\">::</span>is_same<span class=\"token operator\">&lt;</span>uint64_t<span class=\"token punctuation\">,</span> size_t<span class=\"token operator\">></span><span class=\"token operator\">::</span>value<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span><span class=\"token punctuation\">,</span> size_t<span class=\"token operator\">></span><span class=\"token operator\">::</span>type<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n","type":"source","static":true}}],"fetch":[]}