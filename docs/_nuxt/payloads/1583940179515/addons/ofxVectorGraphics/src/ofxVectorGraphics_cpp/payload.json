{"data":[{"page":{"entry":{"name":"ofxVectorGraphics.cpp","filename":"ofxVectorGraphics.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/addons/ofxVectorGraphics/src/ofxVectorGraphics.cpp","path":"/addons/ofxVectorGraphics/src/ofxVectorGraphics_cpp","route":"/addons/ofxVectorGraphics/src/ofxVectorGraphics.cpp","dir":"../addons/ofxVectorGraphics/src","ext":"cpp","type":"source","id":188,"parent":186,"breadcrumbs":[186,187,36],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxVectorGraphics.h\"</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//we need a point class that can actually be used</span>\n<span class=\"token comment\" spellcheck=\"true\">//scroll down for the vectorGraphics code</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofPoint3</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofPoint<span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token function\">ofPoint3</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> _x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> _y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> _z <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tx <span class=\"token operator\">=</span> _x<span class=\"token punctuation\">;</span>\n\t\t\ty <span class=\"token operator\">=</span> _y<span class=\"token punctuation\">;</span>\n\t\t\tz <span class=\"token operator\">=</span> _z<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span>ofPoint3 <span class=\"token operator\">&amp;</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tx <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\t\t\ty <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\t\t\tz <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> _x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> _y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tx <span class=\"token operator\">=</span> _x<span class=\"token punctuation\">;</span>\n\t\t\ty <span class=\"token operator\">=</span> _y<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> _x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> _y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> _z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tx <span class=\"token operator\">=</span> _x<span class=\"token punctuation\">;</span>\n\t\t\ty <span class=\"token operator\">=</span> _y<span class=\"token punctuation\">;</span>\n\t\t\tz <span class=\"token operator\">=</span> _z<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\t\t\n\t\t\t\t\n\t\t<span class=\"token keyword\">bool</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">==</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPoint3 <span class=\"token operator\">&amp;</span>p<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">==</span> p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">==</span> p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>z <span class=\"token operator\">==</span> p<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">bool</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">!=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPoint3 <span class=\"token operator\">&amp;</span>p<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">!=</span> p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>y <span class=\"token operator\">!=</span> p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>z <span class=\"token operator\">!=</span> p<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n    \n\t\tofPoint3 <span class=\"token keyword\">operator</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPoint3 <span class=\"token operator\">&amp;</span>p<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> \n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofPoint3</span><span class=\"token punctuation\">(</span> x<span class=\"token operator\">+</span>p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> y<span class=\"token operator\">+</span>p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> z<span class=\"token operator\">+</span>p<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t\t<span class=\"token punctuation\">}</span> \n\t\t\n\t\tofPoint3 <span class=\"token keyword\">operator</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> f<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> \n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofPoint3</span><span class=\"token punctuation\">(</span> x<span class=\"token operator\">+</span>f<span class=\"token punctuation\">,</span> y<span class=\"token operator\">+</span>f<span class=\"token punctuation\">,</span> z<span class=\"token operator\">+</span>f <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> \n\t\t\n\t\tofPoint3<span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">+</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPoint3<span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n\t\t\tx <span class=\"token operator\">+</span><span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\t\t\ty <span class=\"token operator\">+</span><span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\t\t\tz <span class=\"token operator\">+</span><span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span> \n\t\t<span class=\"token punctuation\">}</span> \n    \n\t\tofPoint3<span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">+</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> f<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n\t\t\tx <span class=\"token operator\">+</span><span class=\"token operator\">=</span> f<span class=\"token punctuation\">;</span>\n\t\t\ty <span class=\"token operator\">+</span><span class=\"token operator\">=</span> f<span class=\"token punctuation\">;</span>\n\t\t\tz <span class=\"token operator\">+</span><span class=\"token operator\">=</span> f<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span> \n\t\t<span class=\"token punctuation\">}</span> \t\n\t\n\t\tofPoint3 <span class=\"token keyword\">operator</span><span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPoint3 <span class=\"token operator\">&amp;</span>p<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> \n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofPoint3</span><span class=\"token punctuation\">(</span> x<span class=\"token operator\">-</span>p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> y<span class=\"token operator\">-</span>p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> z<span class=\"token operator\">-</span>p<span class=\"token punctuation\">.</span>z <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t\t<span class=\"token punctuation\">}</span> \n\t\t\n\t\tofPoint3 <span class=\"token keyword\">operator</span><span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> f<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> \n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofPoint3</span><span class=\"token punctuation\">(</span> x<span class=\"token operator\">-</span>f<span class=\"token punctuation\">,</span> y<span class=\"token operator\">-</span>f<span class=\"token punctuation\">,</span> z<span class=\"token operator\">-</span>f <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> \n\t\t\n\t\tofPoint3<span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">-</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPoint3 <span class=\"token operator\">&amp;</span>p<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n\t\t\tx <span class=\"token operator\">-</span><span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\t\t\ty <span class=\"token operator\">-</span><span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\t\t\tz <span class=\"token operator\">-</span><span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span> \n\t\t<span class=\"token punctuation\">}</span> \n\n\t\tofPoint3<span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">-</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> f<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n\t\t\tx <span class=\"token operator\">-</span><span class=\"token operator\">=</span> f<span class=\"token punctuation\">;</span>\n\t\t\ty <span class=\"token operator\">-</span><span class=\"token operator\">=</span> f<span class=\"token punctuation\">;</span>\n\t\t\tz <span class=\"token operator\">-</span><span class=\"token operator\">=</span> f<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span> \n\t\t<span class=\"token punctuation\">}</span> \t\t\n\n\t\tofPoint3 <span class=\"token keyword\">operator</span><span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> \n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofPoint3</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">-</span>x<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>y<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>z <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t\t<span class=\"token punctuation\">}</span>\n\t\t\n\t\tofPoint3 <span class=\"token keyword\">operator</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPoint3 <span class=\"token operator\">&amp;</span>p<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> \n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofPoint3</span><span class=\"token punctuation\">(</span> x<span class=\"token operator\">*</span>p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> y<span class=\"token operator\">*</span>p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> z<span class=\"token operator\">*</span>p<span class=\"token punctuation\">.</span>z <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t\t<span class=\"token punctuation\">}</span> \n\t\t\t\n\t\tofPoint3<span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">*</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPoint3 <span class=\"token operator\">&amp;</span>p<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n\t\t\tx <span class=\"token operator\">*</span><span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\t\t\ty <span class=\"token operator\">*</span><span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\t\t\tz <span class=\"token operator\">*</span><span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span> \n\t\t<span class=\"token punctuation\">}</span> \n\n\t\tofPoint3 <span class=\"token keyword\">operator</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> f<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> \n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofPoint3</span><span class=\"token punctuation\">(</span> x<span class=\"token operator\">*</span>f<span class=\"token punctuation\">,</span> y<span class=\"token operator\">*</span>f<span class=\"token punctuation\">,</span> z<span class=\"token operator\">*</span>f <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> \n\t\t\n\t\tofPoint3<span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">*</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> f<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n\t\t\tx <span class=\"token operator\">*</span><span class=\"token operator\">=</span> f<span class=\"token punctuation\">;</span>\n\t\t\ty <span class=\"token operator\">*</span><span class=\"token operator\">=</span> f<span class=\"token punctuation\">;</span>\n\t\t\tz <span class=\"token operator\">*</span><span class=\"token operator\">=</span> f<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span> \n\t\t<span class=\"token punctuation\">}</span> \n\t\t\n\t\tofPoint3 <span class=\"token keyword\">operator</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPoint3 <span class=\"token operator\">&amp;</span>p<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> \n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofPoint3</span><span class=\"token punctuation\">(</span> x<span class=\"token operator\">/</span>p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> y<span class=\"token operator\">/</span>p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> z<span class=\"token operator\">/</span>p<span class=\"token punctuation\">.</span>z <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> \n\t\t\n\t\tofPoint3<span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">/</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPoint3 <span class=\"token operator\">&amp;</span>p<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n\t\t\tx <span class=\"token operator\">/</span><span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\t\t\ty <span class=\"token operator\">/</span><span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\t\t\tz <span class=\"token operator\">/</span><span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span> \n\t\t<span class=\"token punctuation\">}</span> \n\n\t\tofPoint3 <span class=\"token keyword\">operator</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> f<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> \n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofPoint3</span><span class=\"token punctuation\">(</span> x<span class=\"token operator\">/</span>f<span class=\"token punctuation\">,</span> y<span class=\"token operator\">/</span>f<span class=\"token punctuation\">,</span> z<span class=\"token operator\">/</span>f <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> \n\n\t\tofPoint3<span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">/</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> f<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n\t\t\tx <span class=\"token operator\">/</span><span class=\"token operator\">=</span> f<span class=\"token punctuation\">;</span>\n\t\t\ty <span class=\"token operator\">/</span><span class=\"token operator\">=</span> f<span class=\"token punctuation\">;</span>\n\t\t\tz <span class=\"token operator\">/</span><span class=\"token operator\">=</span> f<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span> \n\t\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">union</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">struct</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">float</span> x<span class=\"token punctuation\">;</span> \n\t\t<span class=\"token keyword\">float</span> y<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span> z<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------\t\t\t</span>\nofxVectorGraphics<span class=\"token operator\">::</span><span class=\"token function\">ofxVectorGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbDraw\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\tbFill\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\tbCenter\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tbRecord\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\t\n\tbFirstPoint <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\t\n\tbShouldClose<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\twhichShapeMode <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------\t\t\t</span>\n<span class=\"token keyword\">void</span> ofxVectorGraphics<span class=\"token operator\">::</span><span class=\"token function\">beginEPS</span><span class=\"token punctuation\">(</span>string fileName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">newFile</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofToDataPath</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> x<span class=\"token operator\">+</span>w<span class=\"token punctuation\">,</span> y<span class=\"token operator\">+</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbRecord <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//CreEPS uses lower left as (0,0)</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//so we have to flip our coordinates</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//this works fine as long</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//as the window doesn't change size </span>\n\t<span class=\"token comment\" spellcheck=\"true\">//while we are capturing!!!\t\t\t\t</span>\n\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">applyTranslation</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">applyScaling</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------\t\t\t\t\t\t</span>\n<span class=\"token keyword\">void</span> ofxVectorGraphics<span class=\"token operator\">::</span><span class=\"token function\">endEPS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">resetTransformations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">finalize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbRecord <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------\t\t\t</span>\n<span class=\"token keyword\">void</span> ofxVectorGraphics<span class=\"token operator\">::</span><span class=\"token function\">enableDraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> \n\tbDraw <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------\t\t\t</span>\n<span class=\"token keyword\">void</span> ofxVectorGraphics<span class=\"token operator\">::</span><span class=\"token function\">disableDraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> \n\tbDraw <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------\t\t\t</span>\n<span class=\"token keyword\">void</span> ofxVectorGraphics<span class=\"token operator\">::</span><span class=\"token function\">enableCenterRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> \n\tbCenter <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------\t\t\t</span>\n<span class=\"token keyword\">void</span> ofxVectorGraphics<span class=\"token operator\">::</span><span class=\"token function\">disableCenterRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> \n\tbCenter <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------\t\t\t</span>\n<span class=\"token keyword\">void</span> ofxVectorGraphics<span class=\"token operator\">::</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> \n\tbFill <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token function\">ofFill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------\t\t\t</span>\n<span class=\"token keyword\">void</span> ofxVectorGraphics<span class=\"token operator\">::</span><span class=\"token function\">noFill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> \n\tbFill <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token function\">ofNoFill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------\t\t\t</span>\n<span class=\"token keyword\">void</span> ofxVectorGraphics<span class=\"token operator\">::</span><span class=\"token function\">setLineWidth</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> lineWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofSetLineWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>lineWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bRecord<span class=\"token punctuation\">)</span> creeps<span class=\"token punctuation\">.</span><span class=\"token function\">setAttributes</span><span class=\"token punctuation\">(</span> <span class=\"token function\">CAtLineThickness</span><span class=\"token punctuation\">(</span>lineWidth<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxVectorGraphics<span class=\"token operator\">::</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> _r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> _g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> _b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">float</span> r <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>_r <span class=\"token operator\">/</span> <span class=\"token number\">255.0f</span><span class=\"token punctuation\">;</span> r <span class=\"token operator\">=</span> <span class=\"token function\">MAX</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token function\">MIN</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span><span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> g <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>_g <span class=\"token operator\">/</span> <span class=\"token number\">255.0f</span><span class=\"token punctuation\">;</span> g <span class=\"token operator\">=</span> <span class=\"token function\">MAX</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token function\">MIN</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">,</span><span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>_b <span class=\"token operator\">/</span> <span class=\"token number\">255.0f</span><span class=\"token punctuation\">;</span> b <span class=\"token operator\">=</span> <span class=\"token function\">MAX</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token function\">MIN</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span><span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">changeColor</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxVectorGraphics<span class=\"token operator\">::</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> hexColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> r <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>hexColor <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> g <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>hexColor <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>hexColor <span class=\"token operator\">>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxVectorGraphics<span class=\"token operator\">::</span><span class=\"token function\">changeColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofFloatColor</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bRecord<span class=\"token punctuation\">)</span>creeps<span class=\"token punctuation\">.</span><span class=\"token function\">setAttributes</span><span class=\"token punctuation\">(</span> <span class=\"token function\">CAtColor</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------\t\t</span>\n<span class=\"token keyword\">void</span> ofxVectorGraphics<span class=\"token operator\">::</span><span class=\"token function\">rect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bDraw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bCenter<span class=\"token punctuation\">)</span><span class=\"token function\">ofSetRectMode</span><span class=\"token punctuation\">(</span>OF_RECTMODE_CENTER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token function\">ofSetRectMode</span><span class=\"token punctuation\">(</span>OF_RECTMODE_CORNER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofDrawRectangle</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bRecord<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bCenter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tx1 <span class=\"token operator\">-</span><span class=\"token operator\">=</span> w <span class=\"token operator\">*</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n\t\t\ty1 <span class=\"token operator\">-</span><span class=\"token operator\">=</span> h <span class=\"token operator\">*</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bFill<span class=\"token punctuation\">)</span> creeps<span class=\"token punctuation\">.</span><span class=\"token function\">rectFill</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span>  y1<span class=\"token punctuation\">,</span>  w<span class=\"token punctuation\">,</span>  h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t\t<span class=\"token keyword\">else</span> creeps<span class=\"token punctuation\">.</span><span class=\"token function\">rectStroke</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxVectorGraphics<span class=\"token operator\">::</span><span class=\"token function\">triangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bDraw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofDrawTriangle</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span>  x2<span class=\"token punctuation\">,</span>  y2<span class=\"token punctuation\">,</span>  x3<span class=\"token punctuation\">,</span>  y3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bRecord<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">startPath</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">addLine</span><span class=\"token punctuation\">(</span>x2<span class=\"token punctuation\">,</span>  y2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">addLine</span><span class=\"token punctuation\">(</span>x3<span class=\"token punctuation\">,</span>  y3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\n\t\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">closeSubpath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bFill<span class=\"token punctuation\">)</span>creeps<span class=\"token punctuation\">.</span><span class=\"token function\">endPath</span><span class=\"token punctuation\">(</span>CreEPS<span class=\"token operator\">::</span>FILL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">else</span> creeps<span class=\"token punctuation\">.</span><span class=\"token function\">endPath</span><span class=\"token punctuation\">(</span>CreEPS<span class=\"token operator\">::</span>STROKE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\t\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxVectorGraphics<span class=\"token operator\">::</span><span class=\"token function\">circle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bDraw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofDrawCircle</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bRecord<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bFill<span class=\"token punctuation\">)</span> creeps<span class=\"token punctuation\">.</span><span class=\"token function\">disk</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t\t<span class=\"token keyword\">else</span> creeps<span class=\"token punctuation\">.</span><span class=\"token function\">circle</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\t\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxVectorGraphics<span class=\"token operator\">::</span><span class=\"token function\">ellipse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bDraw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofDrawEllipse</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bRecord<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bFill<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//there is no filled ellipse in non-path mode</span>\n\t\t\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">startPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">addEllipse</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">endPath</span><span class=\"token punctuation\">(</span>CreEPS<span class=\"token operator\">::</span>FILL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> \n\t\t<span class=\"token keyword\">else</span> creeps<span class=\"token punctuation\">.</span><span class=\"token function\">ellipse</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\t\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxVectorGraphics<span class=\"token operator\">::</span><span class=\"token function\">line</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bDraw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofDrawLine</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bRecord<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">line</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\t\n\n<span class=\"token comment\" spellcheck=\"true\">//-----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxVectorGraphics<span class=\"token operator\">::</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> offsetAngleDegrees<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> internalAngleDegrees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bDraw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//no openFrameworks arc command so we make a ghetto gl one</span>\n\t\t<span class=\"token keyword\">int</span>\t\tarcResolution <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span>\tstep  <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> DEG_TO_RAD <span class=\"token operator\">*</span> internalAngleDegrees<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>arcResolution <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span>\tangle <span class=\"token operator\">=</span> DEG_TO_RAD <span class=\"token operator\">*</span> offsetAngleDegrees<span class=\"token punctuation\">;</span>\n\t\t\t\n\t\t<span class=\"token keyword\">float</span>\txpos<span class=\"token punctuation\">,</span> ypos<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bFill<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\n\t\t\t<span class=\"token function\">glBegin</span><span class=\"token punctuation\">(</span>GL_LINE_STRIP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arcResolution<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\txpos\t<span class=\"token operator\">=</span> <span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>angle<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> radius<span class=\"token punctuation\">;</span>\n\t\t\t\t\typos\t<span class=\"token operator\">=</span> <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>angle<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> radius<span class=\"token punctuation\">;</span> \n\t\t\t\t\t<span class=\"token function\">glVertex2f</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> xpos<span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> ypos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\n\t\t\t\t\tangle <span class=\"token operator\">+</span><span class=\"token operator\">=</span> step<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token function\">glEnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glBegin</span><span class=\"token punctuation\">(</span>GL_TRIANGLE_STRIP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arcResolution<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\txpos\t<span class=\"token operator\">=</span> <span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>angle<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> radius<span class=\"token punctuation\">;</span>\n\t\t\t\t\typos\t<span class=\"token operator\">=</span> <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>angle<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> radius<span class=\"token punctuation\">;</span> \n\t\t\t\t\t<span class=\"token function\">glVertex2f</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> xpos<span class=\"token punctuation\">,</span> y <span class=\"token operator\">+</span> ypos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\n\t\t\t\t\t<span class=\"token function\">glVertex2f</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\tangle <span class=\"token operator\">+</span><span class=\"token operator\">=</span> step<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token function\">glEnd</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bRecord<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">//creps works differently it likes to know absolute starting and ending angles</span>\n\t\t<span class=\"token keyword\">float</span> startAngle <span class=\"token operator\">=</span> offsetAngleDegrees<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span> endAngle   <span class=\"token operator\">=</span> startAngle <span class=\"token operator\">+</span> internalAngleDegrees<span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">//it also only like to go from smaller to bigger in terms of rotation</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>startAngle <span class=\"token operator\">></span> endAngle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">float</span> tmp <span class=\"token operator\">=</span> endAngle<span class=\"token punctuation\">;</span>\n\t\t\tendAngle <span class=\"token operator\">=</span> startAngle<span class=\"token punctuation\">;</span>\n\t\t\tstartAngle <span class=\"token operator\">=</span> tmp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bFill<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">startPath</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">addArc</span><span class=\"token punctuation\">(</span>x <span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> radius<span class=\"token punctuation\">,</span> startAngle<span class=\"token punctuation\">,</span>  endAngle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">endPath</span><span class=\"token punctuation\">(</span>CreEPS<span class=\"token operator\">::</span>FILL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span>x <span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> radius<span class=\"token punctuation\">,</span> startAngle<span class=\"token punctuation\">,</span>  endAngle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxVectorGraphics<span class=\"token operator\">::</span><span class=\"token function\">bezier</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x4<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bDraw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofDrawBezier</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">,</span> x3<span class=\"token punctuation\">,</span> y3<span class=\"token punctuation\">,</span> x4<span class=\"token punctuation\">,</span> y4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bRecord<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bFill<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">startPath</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">addCurve</span><span class=\"token punctuation\">(</span>x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">,</span> x3<span class=\"token punctuation\">,</span> y3<span class=\"token punctuation\">,</span> x4<span class=\"token punctuation\">,</span> y4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">addLine</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\t\t\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">endPath</span><span class=\"token punctuation\">(</span>CreEPS<span class=\"token operator\">::</span>FILL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">else</span> creeps<span class=\"token punctuation\">.</span><span class=\"token function\">curve</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">,</span> x3<span class=\"token punctuation\">,</span> y3<span class=\"token punctuation\">,</span> x4<span class=\"token punctuation\">,</span> y4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\t\t\t\t\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxVectorGraphics<span class=\"token operator\">::</span><span class=\"token function\">curve</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x4<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bDraw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofDrawCurve</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">,</span> x3<span class=\"token punctuation\">,</span> y3<span class=\"token punctuation\">,</span> x4<span class=\"token punctuation\">,</span> y4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bRecord<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">//we treat the catmull rom curve as a bezier </span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//by finding the approrpriate control points </span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//to make the same curve</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">//x1 y1 = p1</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//x2 y2 = p2</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//x3 y3 = p3</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//x4 y4 = p4</span>\n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">//control point at p2 is parallel </span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//to the line defined by p3 - p1</span>\n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">//control point at p3 is parallel</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//to the line defined by p4 - p2</span>\n\t\n\t\tofPoint3 <span class=\"token function\">p1</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tofPoint3 <span class=\"token function\">p2</span><span class=\"token punctuation\">(</span>x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tofPoint3 <span class=\"token function\">p3</span><span class=\"token punctuation\">(</span>x3<span class=\"token punctuation\">,</span> y3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tofPoint3 <span class=\"token function\">p4</span><span class=\"token punctuation\">(</span>x4<span class=\"token punctuation\">,</span> y4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">//SUPER WEIRD MAGIC CONSTANT = 1/6 (this works 100% can someone explain it?)</span>\n\t\tofPoint3 cp1 <span class=\"token operator\">=</span> p2 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span> p3 <span class=\"token operator\">-</span> p1 <span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token operator\">/</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tofPoint3 cp2 <span class=\"token operator\">=</span> p3 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span> p2 <span class=\"token operator\">-</span> p4 <span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token operator\">/</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\n\t\t\t\t\n\t\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">startPath</span><span class=\"token punctuation\">(</span>x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">addCurve</span><span class=\"token punctuation\">(</span> cp1<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> cp1<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> cp2<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> cp2<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> x3<span class=\"token punctuation\">,</span> y3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bFill<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">addLine</span><span class=\"token punctuation\">(</span>x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\t\t\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">endPath</span><span class=\"token punctuation\">(</span>CreEPS<span class=\"token operator\">::</span>FILL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">endPath</span><span class=\"token punctuation\">(</span>CreEPS<span class=\"token operator\">::</span>STROKE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\t\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------\t\t\t\t\t\t</span>\n<span class=\"token keyword\">void</span> ofxVectorGraphics<span class=\"token operator\">::</span><span class=\"token function\">beginShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bDraw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofBeginShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bRecord<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tbFirstPoint\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\tbShouldClose\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------\t\t\t\t\t\t</span>\n<span class=\"token keyword\">void</span> ofxVectorGraphics<span class=\"token operator\">::</span><span class=\"token function\">polyVertex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bDraw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofVertex</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bRecord<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">//clear curve vertices</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>whichShapeMode <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">clearAllVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\twhichShapeMode <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bFirstPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">startPath</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tbFirstPoint <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\tbShouldClose <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">addLine</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------\t</span>\n<span class=\"token comment\" spellcheck=\"true\">//this takes three arguments as it is based off the idea that at least one </span>\n<span class=\"token comment\" spellcheck=\"true\">//inital polyVertex has already been set. \t\t\t\t\t</span>\n<span class=\"token keyword\">void</span> ofxVectorGraphics<span class=\"token operator\">::</span><span class=\"token function\">bezierVertex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bDraw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofBezierVertex</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">,</span> x3<span class=\"token punctuation\">,</span> y3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bRecord<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">//clear curve vertices</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>whichShapeMode <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">clearAllVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\n\t\twhichShapeMode <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">//we can only add a bezier curve if the curve</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//has started with a polyVertex</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//so as long as this is not the first point we add it</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bFirstPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">addCurve</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">,</span> x3<span class=\"token punctuation\">,</span> y3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\t\t\t\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------\t\t\t\t\t\t</span>\n<span class=\"token keyword\">void</span> ofxVectorGraphics<span class=\"token operator\">::</span><span class=\"token function\">curveVertex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bDraw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofCurveVertex</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bRecord<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">//if some points have already been created</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//this could crash the app </span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//so we close the current path to be safe</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bShouldClose<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bFill<span class=\"token punctuation\">)</span> creeps<span class=\"token punctuation\">.</span><span class=\"token function\">endPath</span><span class=\"token punctuation\">(</span>CreEPS<span class=\"token operator\">::</span>FILL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">else</span> creeps<span class=\"token punctuation\">.</span><span class=\"token function\">endPath</span><span class=\"token punctuation\">(</span>CreEPS<span class=\"token operator\">::</span>STROKE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\n\t\twhichShapeMode <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\n\t\t<span class=\"token keyword\">double</span><span class=\"token operator\">*</span> point <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">double</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\tpoint<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n\t\tpoint<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n\t\tcurvePts<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------\t\t\t\t\t\t</span>\n<span class=\"token keyword\">void</span> ofxVectorGraphics<span class=\"token operator\">::</span><span class=\"token function\">endShape</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bClose<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bDraw<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofEndShape</span><span class=\"token punctuation\">(</span>bClose<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bRecord<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">//catmull roms - we need at least 4 points to draw</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> whichShapeMode <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> curvePts<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//we go through and we calculate the bezier of each </span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//catmull rom curve - smart right? :)</span>\n\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span> curvePts<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t\n\t\t\t\tofPoint3 <span class=\"token function\">prevPt</span><span class=\"token punctuation\">(</span>\tcurvePts<span class=\"token punctuation\">[</span>i<span class=\"token number\">-1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\tcurvePts<span class=\"token punctuation\">[</span>i<span class=\"token number\">-1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tofPoint3 <span class=\"token function\">startPt</span><span class=\"token punctuation\">(</span>curvePts<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\t\tcurvePts<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t\n\t\t\t\tofPoint3 <span class=\"token function\">endPt</span><span class=\"token punctuation\">(</span>\tcurvePts<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\tcurvePts<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tofPoint3 <span class=\"token function\">nextPt</span><span class=\"token punctuation\">(</span>\tcurvePts<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\tcurvePts<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//SUPER WEIRD MAGIC CONSTANT = 1/6</span>\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//Someone please explain this!!! </span>\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//It works and is 100% accurate but wtf!</span>\n\t\t\t\tofPoint3 cp1 <span class=\"token operator\">=</span> startPt <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span> endPt <span class=\"token operator\">-</span> prevPt <span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token operator\">/</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tofPoint3 cp2 <span class=\"token operator\">=</span> endPt <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span> startPt <span class=\"token operator\">-</span> nextPt <span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token operator\">/</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//if this is the first line we are drawing </span>\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//we have to start the path at a location</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> i <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">startPath</span><span class=\"token punctuation\">(</span>startPt<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> startPt<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tbShouldClose <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\n\t\t\t\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">addCurve</span><span class=\"token punctuation\">(</span> cp1<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> cp1<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> cp2<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> cp2<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> endPt<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> endPt<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\t\t\t\t\t\t\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bShouldClose<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//we close the path if requested</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bClose<span class=\"token punctuation\">)</span>creeps<span class=\"token punctuation\">.</span><span class=\"token function\">closeSubpath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//render the stroke as either a fill or a stroke.</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bFill<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">endPath</span><span class=\"token punctuation\">(</span>CreEPS<span class=\"token operator\">::</span>FILL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\tcreeps<span class=\"token punctuation\">.</span><span class=\"token function\">endPath</span><span class=\"token punctuation\">(</span>CreEPS<span class=\"token operator\">::</span>STROKE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\tbShouldClose <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">//we want to clear all the vertices</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//otherwise we keep adding points from</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//the previous file - cool but not what we want!</span>\n\t\t<span class=\"token function\">clearAllVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\t\t\t\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxVectorGraphics<span class=\"token operator\">::</span><span class=\"token function\">clearAllVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token operator\">::</span>iterator itr<span class=\"token operator\">=</span>curvePts<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\titr<span class=\"token operator\">!=</span>curvePts<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token operator\">++</span>itr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">delete</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>itr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tcurvePts<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\t\t\t\n\t\t\t\t\t\t\n","type":"source","static":true}}],"fetch":[]}