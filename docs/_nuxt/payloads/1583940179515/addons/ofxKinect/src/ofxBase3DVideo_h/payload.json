{"data":[{"page":{"entry":{"name":"ofxBase3DVideo.h","filename":"ofxBase3DVideo.h","absolute":"/Users/Gilbert/Code/openFrameworks/addons/ofxKinect/src/ofxBase3DVideo.h","path":"/addons/ofxKinect/src/ofxBase3DVideo_h","route":"/addons/ofxKinect/src/ofxBase3DVideo.h","dir":"../addons/ofxKinect/src","ext":"h","type":"source","id":120,"parent":119,"breadcrumbs":[119,117,36],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">/*==============================================================================\n\n    Copyright (c) 2010, 2011 ofxKinect Team\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in\n    all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n    THE SOFTWARE.\n    \n==============================================================================*/</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\class ofxBase3DVideo</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// a base class for 3D video devices</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxBase3DVideo</span><span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofBaseVideo <span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">/// get the pixels of the most recent depth frame</span>\n    <span class=\"token keyword\">virtual</span> ofPixels<span class=\"token operator\">&amp;</span> <span class=\"token function\">getDepthPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">const</span> ofPixels<span class=\"token operator\">&amp;</span> <span class=\"token function\">getDepthPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">/// get the distance in millimeters to a given point as a float array</span>\n    <span class=\"token keyword\">virtual</span> ofFloatPixels<span class=\"token operator\">&amp;</span> <span class=\"token function\">getDistancePixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">const</span> ofFloatPixels<span class=\"token operator\">&amp;</span> <span class=\"token function\">getDistancePixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">/// get the grayscale depth texture</span>\n    <span class=\"token keyword\">virtual</span> ofTexture<span class=\"token operator\">&amp;</span> <span class=\"token function\">getDepthTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">const</span> ofTexture<span class=\"token operator\">&amp;</span> <span class=\"token function\">getDepthTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n","type":"source","static":true}}],"fetch":[]}