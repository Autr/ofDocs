{"data":[{"page":{"entry":{"name":"ofxCvContourFinder.h","filename":"ofxCvContourFinder.h","absolute":"/Users/Gilbert/Code/openFrameworks/addons/ofxOpenCv/src/ofxCvContourFinder.h","path":"/addons/ofxOpenCv/src/ofxCvContourFinder_h","route":"/addons/ofxOpenCv/src/ofxCvContourFinder.h","dir":"../addons/ofxOpenCv/src","ext":"h","type":"source","id":145,"parent":138,"breadcrumbs":[138,139,36],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">/*\n* ofxCvContourFinder.h\n*\n* Finds white blobs in binary images and identifies\n* centroid, bounding box, area, length and polygonal contour\n* The result is placed in a vector of ofxCvBlob objects.\n*\n*/</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxCvConstants.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxCvBlob.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxCvGrayscaleImage.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;algorithm></span></span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxCvContourFinder</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofBaseDraws <span class=\"token punctuation\">{</span>\n\n  <span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n  \n    std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>ofxCvBlob<span class=\"token operator\">></span>  blobs<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> nBlobs<span class=\"token punctuation\">;</span>    <span class=\"token comment\" spellcheck=\"true\">// DEPRECATED: use blobs.size() instead</span>\n      \n\n    <span class=\"token function\">ofxCvContourFinder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span>  <span class=\"token operator\">~</span><span class=\"token function\">ofxCvContourFinder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">float</span> <span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> _width<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\" spellcheck=\"true\">//set after first findContours call</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">float</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> _height<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">//set after first findContours call</span>\n    \n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">int</span>  <span class=\"token function\">findContours</span><span class=\"token punctuation\">(</span> ofxCvGrayscaleImage<span class=\"token operator\">&amp;</span> input<span class=\"token punctuation\">,</span>\n                               <span class=\"token keyword\">int</span> minArea<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> maxArea<span class=\"token punctuation\">,</span>\n                               <span class=\"token keyword\">int</span> nConsidered<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bFindHoles<span class=\"token punctuation\">,</span>\n                               <span class=\"token keyword\">bool</span> bUseApproximation <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                               <span class=\"token comment\" spellcheck=\"true\">// approximation = don't do points for all points </span>\n                               <span class=\"token comment\" spellcheck=\"true\">// of the contour, if the contour runs</span>\n                               <span class=\"token comment\" spellcheck=\"true\">// along a straight line, for example...</span>\n\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> _width<span class=\"token punctuation\">,</span> _height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y <span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span> _width<span class=\"token punctuation\">,</span> _height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h <span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPoint <span class=\"token operator\">&amp;</span> point<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofRectangle <span class=\"token operator\">&amp;</span> rect<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setAnchorPercent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> xPct<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> yPct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setAnchorPoint</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">resetAnchor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>      \n    <span class=\"token comment\" spellcheck=\"true\">//virtual ofxCvBlob  getBlob(int num);</span>\n\n\n\n  <span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\n    <span class=\"token keyword\">int</span>  _width<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span>  _height<span class=\"token punctuation\">;</span>\n    ofxCvGrayscaleImage     inputCopy<span class=\"token punctuation\">;</span>\n    CvMemStorage<span class=\"token operator\">*</span>           contour_storage<span class=\"token punctuation\">;</span>\n    CvMemStorage<span class=\"token operator\">*</span>           storage<span class=\"token punctuation\">;</span>\n    CvMoments<span class=\"token operator\">*</span>              myMoments<span class=\"token punctuation\">;</span>\n    std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>CvSeq<span class=\"token operator\">*</span><span class=\"token operator\">></span>     cvSeqBlobs<span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">//these will become blobs</span>\n    \n    ofPoint  anchor<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">bool</span>  bAnchorIsPct<span class=\"token punctuation\">;</span>      \n\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n","type":"source","static":true}}],"fetch":[]}