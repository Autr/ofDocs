{"data":[{"page":{"entry":{"name":"ofxCvGrayscaleImage.h","filename":"ofxCvGrayscaleImage.h","absolute":"/Users/Gilbert/Code/openFrameworks/addons/ofxOpenCv/src/ofxCvGrayscaleImage.h","path":"/addons/ofxOpenCv/src/ofxCvGrayscaleImage_h","route":"/addons/ofxOpenCv/src/ofxCvGrayscaleImage.h","dir":"../addons/ofxOpenCv/src","ext":"h","type":"source","id":149,"parent":138,"breadcrumbs":[138,139,36],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">/*\n* ofxCvGrayscaleImage.h\n* by stefanix, zach\n*\n* This is essentially an IPL_DEPTH_8U with one channel.\n* Pixel values are typically from 0-255.\n*\n*/</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxCvImage.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxCvBlob.h\"</span></span>\n\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxCvGrayscaleImage</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofxCvImage <span class=\"token punctuation\">{</span>\n\n\n  <span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">using</span> ofxCvImage<span class=\"token operator\">::</span>setFromPixels<span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">ofxCvGrayscaleImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">~</span><span class=\"token function\">ofxCvGrayscaleImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">ofxCvGrayscaleImage</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofxCvGrayscaleImage<span class=\"token operator\">&amp;</span> mom <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">// virtual void  allocate( int w, int h );                                //in base class</span>\n    <span class=\"token comment\" spellcheck=\"true\">// virtual void  clear();                                                 //in base class</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//virtual float getWidth();                                               //in base class</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//virtual float getHeight();                                              //in base class</span>\n    <span class=\"token comment\" spellcheck=\"true\">// virtual void  setUseTexture( bool bUse );                              //in base class</span>\n    <span class=\"token comment\" spellcheck=\"true\">// virtual ofTexture&amp;  getTextureReference();                             //in base class</span>\n\n\n    <span class=\"token comment\" spellcheck=\"true\">// ROI - region of interest</span>\n    <span class=\"token comment\" spellcheck=\"true\">//</span>\n    <span class=\"token comment\" spellcheck=\"true\">// virtual void  setROI( int x, int y, int w, int h );                    //in base class</span>\n    <span class=\"token comment\" spellcheck=\"true\">// virtual void  setROI( ofRectangle&amp; rect );                             //in base class</span>\n    <span class=\"token comment\" spellcheck=\"true\">// virtual ofRectangle  getROI();                                         //in base class</span>\n    <span class=\"token comment\" spellcheck=\"true\">// virtual void  resetROI();                                              //in base class</span>\n    <span class=\"token comment\" spellcheck=\"true\">// virtual ofRectangle  getIntersectionROI( ofRectangle&amp; rec1,      </span>\n    <span class=\"token comment\" spellcheck=\"true\">//                                          ofRectangle&amp; rec2 );          // inbase class</span>\n    \n    \n    <span class=\"token comment\" spellcheck=\"true\">// Set Pixel Data</span>\n    <span class=\"token comment\" spellcheck=\"true\">//</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">set</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> value <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">// virtual void  operator -= ( float value );                              //in base class </span>\n    <span class=\"token comment\" spellcheck=\"true\">// virtual void  operator += ( float value );                              //in base class</span>\n    \n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">setFromPixels</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> _pixels<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">setRoiFromPixels</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> _pixels<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token keyword\">operator</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofPixels <span class=\"token operator\">&amp;</span> _pixels <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token keyword\">operator</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofxCvGrayscaleImage<span class=\"token operator\">&amp;</span> mom <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token keyword\">operator</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofxCvColorImage<span class=\"token operator\">&amp;</span> mom <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token keyword\">operator</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofxCvFloatImage<span class=\"token operator\">&amp;</span> mom <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token keyword\">operator</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofxCvShortImage<span class=\"token operator\">&amp;</span> mom <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token keyword\">operator</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> IplImage<span class=\"token operator\">*</span> mom <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    \n\n    <span class=\"token comment\" spellcheck=\"true\">// virtual void  operator -= ( ofxCvImage&amp; mom );                          //in base class </span>\n    <span class=\"token comment\" spellcheck=\"true\">// virtual void  operator += ( ofxCvImage&amp; mom );                          //in base class </span>\n    <span class=\"token comment\" spellcheck=\"true\">// virtual void  operator *= ( ofxCvImage&amp; mom );                          //in base class </span>\n    <span class=\"token comment\" spellcheck=\"true\">// virtual void  operator &amp;= ( ofxCvImage&amp; mom );                          //in base class </span>\n\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">absDiff</span><span class=\"token punctuation\">(</span> ofxCvGrayscaleImage<span class=\"token operator\">&amp;</span> mom <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">absDiff</span><span class=\"token punctuation\">(</span> ofxCvGrayscaleImage<span class=\"token operator\">&amp;</span> mom<span class=\"token punctuation\">,</span> ofxCvGrayscaleImage<span class=\"token operator\">&amp;</span> dad <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token comment\" spellcheck=\"true\">// Get Pixel Data</span>\n    <span class=\"token comment\" spellcheck=\"true\">//</span>\n    <span class=\"token comment\" spellcheck=\"true\">//virtual unsigned char*  getPixels();                                     //in base class</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//virtual ofPixelsRef\t\tgetPixelsRef();                                //in base class</span>\n    <span class=\"token comment\" spellcheck=\"true\">//virtual unsigned char*  getRoiPixels();                                  //in base class</span>\n    <span class=\"token comment\" spellcheck=\"true\">// virtual IplImage*  getCvImage();                                        //in base class</span>\n\n\n    <span class=\"token comment\" spellcheck=\"true\">// Draw Image</span>\n    <span class=\"token comment\" spellcheck=\"true\">//</span>\n    <span class=\"token comment\" spellcheck=\"true\">//virtual void  draw( float x, float y );                                  //in base class</span>\n    <span class=\"token comment\" spellcheck=\"true\">//virtual void  draw( float x, float y, float w, float h );                //in base class</span>\n    <span class=\"token comment\" spellcheck=\"true\">//virtual void  drawROI( float x, float y );                               //in base class</span>\n    <span class=\"token comment\" spellcheck=\"true\">//virtual void  drawROI( float x, float y, float w, float h );             //in base class    </span>\n    <span class=\"token comment\" spellcheck=\"true\">//virtual void setAnchorPercent( float xPct, float yPct );                 //in base class</span>\n    <span class=\"token comment\" spellcheck=\"true\">//virtual void setAnchorPoint( int x, int y );                             //in base class</span>\n    <span class=\"token comment\" spellcheck=\"true\">//virtual void resetAnchor();                                              //in base class</span>\n\n\n    <span class=\"token comment\" spellcheck=\"true\">// Image Filter Operations</span>\n    <span class=\"token comment\" spellcheck=\"true\">//</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">contrastStretch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">convertToRange</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> min<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> max <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">threshold</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> value<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> invert<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">adaptiveThreshold</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> blockSize<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> offset<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n                                     <span class=\"token keyword\">bool</span> invert<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> gauss<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">brightnessContrast</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> brightness<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> contrast<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t   <span class=\"token comment\" spellcheck=\"true\">// (uses values between -1 and 1)</span>\n\t\n    <span class=\"token comment\" spellcheck=\"true\">// virtual void  erode( );                                                 //in base class</span>\n    <span class=\"token comment\" spellcheck=\"true\">// virtual void  dilate( );                                                //in base class</span>\n    <span class=\"token comment\" spellcheck=\"true\">// virtual void  blur( int value=3 );                                      //in base class</span>\n    <span class=\"token comment\" spellcheck=\"true\">// virtual void  blurGaussian( int value=3 );                              //in base class</span>\n    <span class=\"token comment\" spellcheck=\"true\">// virtual void  invert();                                                 //in base class</span>\n\n\n    <span class=\"token comment\" spellcheck=\"true\">// Image Transformation Operations</span>\n    <span class=\"token comment\" spellcheck=\"true\">//</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">resize</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>  <span class=\"token function\">scaleIntoMe</span><span class=\"token punctuation\">(</span> ofxCvImage<span class=\"token operator\">&amp;</span> mom<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> interpolationMethod<span class=\"token operator\">=</span>CV_INTER_NN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">// virtual void  mirror( bool bFlipVertically, bool bFlipHorizontally );   //in base class</span>\n    <span class=\"token comment\" spellcheck=\"true\">// virtual void  translate( float x, float y );                            //in base class</span>\n    <span class=\"token comment\" spellcheck=\"true\">// virtual void  rotate( float angle, float centerX, float centerY );      //in base class</span>\n    <span class=\"token comment\" spellcheck=\"true\">// virtual void  scale( float scaleX, float sclaeY );                      //in base class</span>\n    <span class=\"token comment\" spellcheck=\"true\">// virtual void  transform( float angle, float centerX, float centerY,</span>\n    <span class=\"token comment\" spellcheck=\"true\">//                          float scaleX, float scaleY,</span>\n    <span class=\"token comment\" spellcheck=\"true\">//                          float moveX, float moveY );                    //in base class</span>\n    <span class=\"token comment\" spellcheck=\"true\">// virtual void  undistort( float radialDistX, float radialDistY,</span>\n    <span class=\"token comment\" spellcheck=\"true\">//                          float tangentDistX, float tangentDistY,</span>\n    <span class=\"token comment\" spellcheck=\"true\">//                          float focalX, float focalY,</span>\n    <span class=\"token comment\" spellcheck=\"true\">//                          float centerX, float centerY );                //in base class</span>\n    <span class=\"token comment\" spellcheck=\"true\">// virtual void  remap( IplImage* mapX, IplImage* mapY );                  //in base class</span>\n    <span class=\"token comment\" spellcheck=\"true\">// virtual void  warpPerspective( ofPoint&amp; A, ofPoint&amp; B,</span>\n    <span class=\"token comment\" spellcheck=\"true\">//                                ofPoint&amp; C, ofPoint&amp; D );                //in base class</span>\n    <span class=\"token comment\" spellcheck=\"true\">// virtual void  warpIntoMe( ofxCvImage&amp; mom,</span>\n    <span class=\"token comment\" spellcheck=\"true\">//                           ofPoint src[4], ofPoint dst[4] );             //in base class</span>\n                             \n\n    <span class=\"token comment\" spellcheck=\"true\">// Other Image Operations</span>\n    <span class=\"token comment\" spellcheck=\"true\">//</span>\n    <span class=\"token comment\" spellcheck=\"true\">// virtual int  countNonZeroInRegion( int x, int y, int w, int h );        //in base class</span>\n    \n    \n    \n    <span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------</span>\n    <span class=\"token comment\" spellcheck=\"true\">//---------------- legacy ---------------------</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// this code is kept here to allow older ofxCv code to work</span>\n    <span class=\"token comment\" spellcheck=\"true\">// you should use the newer functions (ie, blur(33) instead of blurHeavily)</span>\n    <span class=\"token comment\" spellcheck=\"true\">// since we might not always keep old code around</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">blurHeavily</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">blur</span><span class=\"token punctuation\">(</span><span class=\"token number\">33</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\" spellcheck=\"true\">// for legacy code</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">erode_3x3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">erode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">dilate_3x3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token function\">dilate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setFromColorImage</span><span class=\"token punctuation\">(</span>ofxCvColorImage<span class=\"token operator\">&amp;</span> mom<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span> <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setFromFloatImage</span><span class=\"token punctuation\">(</span>ofxCvFloatImage<span class=\"token operator\">&amp;</span> mom<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span> <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n\n  <span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// </span>\n\t<span class=\"token comment\" spellcheck=\"true\">// for brightness contrast:</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t\n\tCvMat<span class=\"token operator\">*</span>\t\tbriConLutMatrix<span class=\"token punctuation\">;</span>\n\t\n    <span class=\"token keyword\">void</span> <span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">allocateTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">allocatePixels</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n","type":"source","static":true}}],"fetch":[]}