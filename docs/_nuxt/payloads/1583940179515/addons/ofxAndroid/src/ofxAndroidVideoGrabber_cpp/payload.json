{"data":[{"page":{"entry":{"name":"ofxAndroidVideoGrabber.cpp","filename":"ofxAndroidVideoGrabber.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/addons/ofxAndroid/src/ofxAndroidVideoGrabber.cpp","path":"/addons/ofxAndroid/src/ofxAndroidVideoGrabber_cpp","route":"/addons/ofxAndroid/src/ofxAndroidVideoGrabber.cpp","dir":"../addons/ofxAndroid/src","ext":"cpp","type":"source","id":57,"parent":39,"breadcrumbs":[39,40,36],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">/*\n * ofxAndroidVideoGrabber.cpp\n *\n *  Created on: 09/07/2010\n *      Author: arturo\n */</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxAndroidVideoGrabber.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxAndroidUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;map></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofAppRunner.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofVideoGrabber.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGLUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofMatrix4x4.h\"</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">struct</span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span>Data<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">bool</span> bIsFrameNew<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> bGrabberInited<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> bUsePixels<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> width<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> height<span class=\"token punctuation\">;</span>\n\tofPixelFormat internalPixelFormat<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> bNewBackFrame<span class=\"token punctuation\">;</span>\n\tofPixels frontBuffer<span class=\"token punctuation\">,</span> backBuffer<span class=\"token punctuation\">,</span> resizeBuffer<span class=\"token punctuation\">;</span>\n\tofTexture texture<span class=\"token punctuation\">;</span>\n\tjfloatArray matrixJava<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> cameraId<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> appPaused<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> newPixels<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> attemptFramerate<span class=\"token punctuation\">;</span>\n\tjobject javaVideoGrabber<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">Data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">~</span><span class=\"token function\">Data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">onAppPause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">onAppResume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">loadTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nmap<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>weak_ptr<span class=\"token operator\">&lt;</span>ofxAndroidVideoGrabber<span class=\"token operator\">::</span>Data<span class=\"token operator\">>></span> <span class=\"token operator\">&amp;</span> <span class=\"token function\">instances</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">auto</span> <span class=\"token operator\">*</span> instances <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> map<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>weak_ptr<span class=\"token operator\">&lt;</span>ofxAndroidVideoGrabber<span class=\"token operator\">::</span>Data<span class=\"token operator\">>></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">*</span>instances<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> jclass <span class=\"token class-name\">getJavaClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tJNIEnv <span class=\"token operator\">*</span>env <span class=\"token operator\">=</span> <span class=\"token function\">ofGetJNIEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tjclass <span class=\"token class-name\">javaClass</span> <span class=\"token operator\">=</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">FindClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cc/openframeworks/OFAndroidVideoGrabber\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>javaClass<span class=\"token operator\">==</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"couldn't find OFAndroidVideoGrabber java class\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> javaClass<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">InitConvertTable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">ConvertYUV2RGB</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>src0<span class=\"token punctuation\">,</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>src1<span class=\"token punctuation\">,</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>dst_ori<span class=\"token punctuation\">,</span>\n\t\t\t\t\t<span class=\"token keyword\">int</span> width<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">ConvertYUV2toRGB565</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> yuvs<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> rgbs<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nofxAndroidVideoGrabber<span class=\"token operator\">::</span>Data<span class=\"token operator\">::</span><span class=\"token function\">Data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">:</span><span class=\"token function\">bIsFrameNew</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">bGrabberInited</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">cameraId</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">appPaused</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">newPixels</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">attemptFramerate</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">bUsePixels</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">javaVideoGrabber</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tJNIEnv <span class=\"token operator\">*</span>env <span class=\"token operator\">=</span> <span class=\"token function\">ofGetJNIEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tjclass <span class=\"token class-name\">javaClass</span> <span class=\"token operator\">=</span> <span class=\"token function\">getJavaClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>javaClass<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n\tjmethodID videoGrabberConstructor <span class=\"token operator\">=</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">GetMethodID</span><span class=\"token punctuation\">(</span>javaClass<span class=\"token punctuation\">,</span><span class=\"token string\">\"&lt;init>\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"()V\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>videoGrabberConstructor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"initGrabber(): couldn't find OFAndroidVideoGrabber constructor\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tjavaVideoGrabber <span class=\"token operator\">=</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">NewObject</span><span class=\"token punctuation\">(</span>javaClass<span class=\"token punctuation\">,</span>videoGrabberConstructor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tjavaVideoGrabber <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>jobject<span class=\"token punctuation\">)</span>env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">NewGlobalRef</span><span class=\"token punctuation\">(</span>javaVideoGrabber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tjmethodID javaCameraId <span class=\"token operator\">=</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">GetMethodID</span><span class=\"token punctuation\">(</span>javaClass<span class=\"token punctuation\">,</span><span class=\"token string\">\"getId\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"()I\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>javaVideoGrabber <span class=\"token operator\">&amp;&amp;</span> javaCameraId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tcameraId <span class=\"token operator\">=</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">CallIntMethod</span><span class=\"token punctuation\">(</span>javaVideoGrabber<span class=\"token punctuation\">,</span>javaCameraId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"initGrabber(): couldn't get OFAndroidVideoGrabber camera id\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">InitConvertTable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tinternalPixelFormat <span class=\"token operator\">=</span> OF_PIXELS_RGB<span class=\"token punctuation\">;</span>\n\n\tjfloatArray localMatrixJava <span class=\"token operator\">=</span> <span class=\"token function\">ofGetJNIEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">NewFloatArray</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmatrixJava <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>jfloatArray<span class=\"token punctuation\">)</span> <span class=\"token function\">ofGetJNIEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">NewGlobalRef</span><span class=\"token punctuation\">(</span>localMatrixJava<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofAddListener</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofxAndroidEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>unloadGL<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>ofxAndroidVideoGrabber<span class=\"token operator\">::</span>Data<span class=\"token operator\">::</span>onAppPause<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofAddListener</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofxAndroidEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reloadGL<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>ofxAndroidVideoGrabber<span class=\"token operator\">::</span>Data<span class=\"token operator\">::</span>onAppResume<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span>Data<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tJNIEnv <span class=\"token operator\">*</span>env <span class=\"token operator\">=</span> <span class=\"token function\">ofGetJNIEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tjmethodID getTextureMatrix <span class=\"token operator\">=</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">GetMethodID</span><span class=\"token punctuation\">(</span><span class=\"token function\">getJavaClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"getTextureMatrix\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"([F)V\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tenv<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">CallVoidMethod</span><span class=\"token punctuation\">(</span>javaVideoGrabber<span class=\"token punctuation\">,</span> getTextureMatrix<span class=\"token punctuation\">,</span> matrixJava<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tjfloat<span class=\"token operator\">*</span> cfloats <span class=\"token operator\">=</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">GetFloatArrayElements</span><span class=\"token punctuation\">(</span>matrixJava<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofMatrix4x4 <span class=\"token function\">mat</span><span class=\"token punctuation\">(</span>cfloats<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">mat</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tmat<span class=\"token punctuation\">.</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmat<span class=\"token punctuation\">.</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">mat</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tmat<span class=\"token punctuation\">.</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmat<span class=\"token punctuation\">.</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\ttexture<span class=\"token punctuation\">.</span><span class=\"token function\">setTextureMatrix</span><span class=\"token punctuation\">(</span>mat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofxAndroidVideoGrabber<span class=\"token operator\">::</span>Data<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">Data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tJNIEnv <span class=\"token operator\">*</span>env <span class=\"token operator\">=</span> <span class=\"token function\">ofGetJNIEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tjclass <span class=\"token class-name\">javaClass</span> <span class=\"token operator\">=</span> <span class=\"token function\">getJavaClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>javaClass<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\tjmethodID javaOFDestructor <span class=\"token operator\">=</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">GetMethodID</span><span class=\"token punctuation\">(</span>javaClass<span class=\"token punctuation\">,</span><span class=\"token string\">\"release\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"()V\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>javaVideoGrabber <span class=\"token operator\">&amp;&amp;</span> javaOFDestructor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tenv<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">CallVoidMethod</span><span class=\"token punctuation\">(</span>javaVideoGrabber<span class=\"token punctuation\">,</span>javaOFDestructor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tenv<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">DeleteGlobalRef</span><span class=\"token punctuation\">(</span>javaVideoGrabber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>matrixJava<span class=\"token punctuation\">)</span> <span class=\"token function\">ofGetJNIEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">DeleteGlobalRef</span><span class=\"token punctuation\">(</span>matrixJava<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofRemoveListener</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofxAndroidEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>unloadGL<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>ofxAndroidVideoGrabber<span class=\"token operator\">::</span>Data<span class=\"token operator\">::</span>onAppPause<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofRemoveListener</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofxAndroidEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reloadGL<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>ofxAndroidVideoGrabber<span class=\"token operator\">::</span>Data<span class=\"token operator\">::</span>onAppResume<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span>Data<span class=\"token operator\">::</span><span class=\"token function\">loadTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofTextureData td<span class=\"token punctuation\">;</span>\n\tGLuint texId<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glGenTextures</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> texId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_TEXTURE_EXTERNAL_OES<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span>GL_TEXTURE_EXTERNAL_OES<span class=\"token punctuation\">,</span> texId<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">glTexParameterf</span><span class=\"token punctuation\">(</span>GL_TEXTURE_EXTERNAL_OES<span class=\"token punctuation\">,</span> GL_TEXTURE_MAG_FILTER<span class=\"token punctuation\">,</span> GL_LINEAR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glTexParameterf</span><span class=\"token punctuation\">(</span>GL_TEXTURE_EXTERNAL_OES<span class=\"token punctuation\">,</span> GL_TEXTURE_MIN_FILTER<span class=\"token punctuation\">,</span> GL_LINEAR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glTexParameterf</span><span class=\"token punctuation\">(</span>GL_TEXTURE_EXTERNAL_OES<span class=\"token punctuation\">,</span> GL_TEXTURE_WRAP_S<span class=\"token punctuation\">,</span> GL_CLAMP_TO_EDGE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glTexParameterf</span><span class=\"token punctuation\">(</span>GL_TEXTURE_EXTERNAL_OES<span class=\"token punctuation\">,</span> GL_TEXTURE_WRAP_T<span class=\"token punctuation\">,</span> GL_CLAMP_TO_EDGE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glTexEnvf</span><span class=\"token punctuation\">(</span>GL_TEXTURE_ENV<span class=\"token punctuation\">,</span> GL_TEXTURE_ENV_MODE<span class=\"token punctuation\">,</span> GL_MODULATE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">glDisable</span><span class=\"token punctuation\">(</span>GL_TEXTURE_EXTERNAL_OES<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// Set the externally created texture reference</span>\n\ttexture<span class=\"token punctuation\">.</span><span class=\"token function\">setUseExternalTextureID</span><span class=\"token punctuation\">(</span>texId<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ttexture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> width<span class=\"token punctuation\">;</span>\n\ttexture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> height<span class=\"token punctuation\">;</span>\n\ttexture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>tex_w <span class=\"token operator\">=</span> width<span class=\"token punctuation\">;</span>\n\ttexture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>tex_h <span class=\"token operator\">=</span> height<span class=\"token punctuation\">;</span>\n\ttexture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>tex_t <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// Hack!</span>\n\ttexture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>tex_u <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\ttexture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>textureTarget <span class=\"token operator\">=</span> GL_TEXTURE_EXTERNAL_OES<span class=\"token punctuation\">;</span>\n\ttexture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>glInternalFormat <span class=\"token operator\">=</span> GL_RGBA<span class=\"token punctuation\">;</span>\n\n\n<span class=\"token punctuation\">}</span>\n\n\nofxAndroidVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">ofxAndroidVideoGrabber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">:</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> Data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>cameraId<span class=\"token operator\">!=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">instances</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>pair<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>weak_ptr<span class=\"token operator\">&lt;</span>ofxAndroidVideoGrabber<span class=\"token operator\">::</span>Data<span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>cameraId<span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nofxAndroidVideoGrabber<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofxAndroidVideoGrabber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span>Data<span class=\"token operator\">::</span><span class=\"token function\">onAppPause</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tappPaused <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glDeleteTextures</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>texture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ttexture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>textureID <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ofPauseVideoGrabbers(): releasing textures\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span>Data<span class=\"token operator\">::</span><span class=\"token function\">onAppResume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">ofxAndroidCheckPermission</span><span class=\"token punctuation\">(</span>OFX_ANDROID_PERMISSION_CAMERA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ofResumeVideoGrabbers(): trying to allocate textures\"</span><span class=\"token punctuation\">;</span>\n\tJNIEnv <span class=\"token operator\">*</span>env <span class=\"token operator\">=</span> <span class=\"token function\">ofGetJNIEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>env<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"init grabber failed : couldn't get environment using GetEnv()\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tjclass <span class=\"token class-name\">javaClass</span> <span class=\"token operator\">=</span> <span class=\"token function\">getJavaClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tjmethodID javaInitGrabber <span class=\"token operator\">=</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">GetMethodID</span><span class=\"token punctuation\">(</span>javaClass<span class=\"token punctuation\">,</span><span class=\"token string\">\"initGrabber\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"(IIII)V\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">loadTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span> texID<span class=\"token operator\">=</span> texture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> w<span class=\"token operator\">=</span>width<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> h<span class=\"token operator\">=</span>height<span class=\"token punctuation\">;</span>\n\tenv<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">CallVoidMethod</span><span class=\"token punctuation\">(</span>javaVideoGrabber<span class=\"token punctuation\">,</span>javaInitGrabber<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>attemptFramerate<span class=\"token punctuation\">,</span>texID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ofResumeVideoGrabbers(): textures allocated\"</span><span class=\"token punctuation\">;</span>\n\tbGrabberInited <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\tappPaused <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nvector<span class=\"token operator\">&lt;</span>ofVideoDevice<span class=\"token operator\">></span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">listDevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\n\tvector<span class=\"token operator\">&lt;</span>ofVideoDevice<span class=\"token operator\">></span> devices<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span> numDevices <span class=\"token operator\">=</span> <span class=\"token function\">getNumCameras</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> numDevices<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">int</span> facing <span class=\"token operator\">=</span> <span class=\"token function\">getFacingOfCamera</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tofVideoDevice vd<span class=\"token punctuation\">;</span>\n\t\tvd<span class=\"token punctuation\">.</span>deviceName <span class=\"token operator\">=</span> facing <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token operator\">?</span> <span class=\"token string\">\"Back\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"Front\"</span><span class=\"token punctuation\">;</span>\n\t\tvd<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n\t\tvd<span class=\"token punctuation\">.</span>bAvailable <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\tdevices<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>vd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> devices<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">isFrameNew</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>bIsFrameNew<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>appPaused<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//ofLogWarning(\"ofxAndroidVideoGrabber\") &lt;&lt; \"update(): couldn't grab frame, movie is paused\";</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//ofLogVerbose(\"ofxAndroidVideoGrabber\") &lt;&lt; \"update(): updating camera\";</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>bGrabberInited <span class=\"token operator\">&amp;&amp;</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>newPixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//ofLogVerbose(\"ofxAndroidVideoGrabber\") &lt;&lt; \"update(): new pixels\";</span>\n\t\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>newPixels <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>bIsFrameNew <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>bNewBackFrame <span class=\"token operator\">&amp;&amp;</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>bUsePixels<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//std::unique_lock &lt;std::mutex> lck(data->mtx);</span>\n\t\t\tstd<span class=\"token operator\">::</span><span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>backBuffer<span class=\"token punctuation\">,</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>frontBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>bNewBackFrame <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// Call update in the java code</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// This will tell the camera api that we are ready for a new frame</span>\n\t\tjmethodID update <span class=\"token operator\">=</span> <span class=\"token function\">ofGetJNIEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">GetMethodID</span><span class=\"token punctuation\">(</span><span class=\"token function\">getJavaClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"update\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"()V\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofGetJNIEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">CallVoidMethod</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>javaVideoGrabber<span class=\"token punctuation\">,</span> update<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>bIsFrameNew <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// Release texture</span>\n\t<span class=\"token function\">glDeleteTextures</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>texture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    JNIEnv <span class=\"token operator\">*</span>env <span class=\"token operator\">=</span> <span class=\"token function\">ofGetJNIEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    jclass <span class=\"token class-name\">javaClass</span> <span class=\"token operator\">=</span> <span class=\"token function\">getJavaClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    jmethodID javaCloseGrabber <span class=\"token operator\">=</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">GetMethodID</span><span class=\"token punctuation\">(</span>javaClass<span class=\"token punctuation\">,</span><span class=\"token string\">\"close\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"()V\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>javaVideoGrabber <span class=\"token operator\">&amp;&amp;</span> javaCloseGrabber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">CallVoidMethod</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>javaVideoGrabber<span class=\"token punctuation\">,</span>javaCloseGrabber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"close(): couldn't get OFAndroidVideoGrabber close grabber method\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    data<span class=\"token operator\">-</span><span class=\"token operator\">></span>bGrabberInited <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\nofTexture <span class=\"token operator\">*</span>\tofxAndroidVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">getTexturePtr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">supportsTextureRendering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>texture<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">supportsTextureRendering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> supportsTexture <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> supportChecked <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>supportChecked<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tJNIEnv <span class=\"token operator\">*</span>env <span class=\"token operator\">=</span> <span class=\"token function\">ofGetJNIEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>env<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"init grabber failed :  couldn't get environment using GetEnv()\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\tjmethodID supportsTextureMethod <span class=\"token operator\">=</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">GetStaticMethodID</span><span class=\"token punctuation\">(</span><span class=\"token function\">getJavaClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"supportsTextureRendering\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"()Z\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tsupportsTexture <span class=\"token operator\">=</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">CallStaticBooleanMethod</span><span class=\"token punctuation\">(</span><span class=\"token function\">getJavaClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>supportsTextureMethod<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tsupportChecked <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> supportsTexture<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>bGrabberInited<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"initGrabber(): camera already initialized\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">ofxAndroidRequestPermission</span><span class=\"token punctuation\">(</span>OFX_ANDROID_PERMISSION_CAMERA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">ofxAndroidCheckPermission</span><span class=\"token punctuation\">(</span>OFX_ANDROID_PERMISSION_CAMERA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n    data<span class=\"token operator\">-</span><span class=\"token operator\">></span>width <span class=\"token operator\">=</span> w<span class=\"token punctuation\">;</span>\n    data<span class=\"token operator\">-</span><span class=\"token operator\">></span>height <span class=\"token operator\">=</span> h<span class=\"token punctuation\">;</span>\n    data<span class=\"token operator\">-</span><span class=\"token operator\">></span>frontBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>internalPixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    data<span class=\"token operator\">-</span><span class=\"token operator\">></span>backBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>internalPixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"initializing camera with external texture\"</span><span class=\"token punctuation\">;</span>\n\n\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">loadTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">bool</span> bInit <span class=\"token operator\">=</span> <span class=\"token function\">initCamera</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bInit<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"initGrabber(): camera initialized correctly\"</span><span class=\"token punctuation\">;</span>\n\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>appPaused <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">initCamera</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">ofxAndroidCheckPermission</span><span class=\"token punctuation\">(</span>OFX_ANDROID_PERMISSION_CAMERA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n    JNIEnv <span class=\"token operator\">*</span>env <span class=\"token operator\">=</span> <span class=\"token function\">ofGetJNIEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>env<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\tjclass <span class=\"token class-name\">javaClass</span> <span class=\"token operator\">=</span> <span class=\"token function\">getJavaClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tjmethodID javaInitGrabber <span class=\"token operator\">=</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">GetMethodID</span><span class=\"token punctuation\">(</span>javaClass<span class=\"token punctuation\">,</span><span class=\"token string\">\"initGrabber\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"(IIII)V\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>javaVideoGrabber <span class=\"token operator\">&amp;&amp;</span> javaInitGrabber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tenv<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">CallVoidMethod</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>javaVideoGrabber<span class=\"token punctuation\">,</span>javaInitGrabber<span class=\"token punctuation\">,</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>width<span class=\"token punctuation\">,</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>height<span class=\"token punctuation\">,</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>attemptFramerate<span class=\"token punctuation\">,</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>texture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"initGrabber(): couldn't get OFAndroidVideoGrabber init grabber method\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//ofLogVerbose(\"ofxAndroidVideoGrabber\") &lt;&lt; \"initGrabber(): new frame callback size: \" &lt;&lt; (int) width &lt;&lt; \"x\" &lt;&lt; (int) height;</span>\n\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>bGrabberInited <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">bool</span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">isInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>bGrabberInited<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">videoSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">setUsePixels</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> usePixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>bUsePixels <span class=\"token operator\">=</span> usePixels<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofPixels<span class=\"token operator\">&amp;</span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>bUsePixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"Calling getPixels will not return frame data when setUsePixels(false) has been set\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>frontBuffer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> ofPixels<span class=\"token operator\">&amp;</span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofxAndroidVideoGrabber<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">setVerbose</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bTalkToMe<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">getCameraFacing</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> facing<span class=\"token punctuation\">)</span><span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tJNIEnv <span class=\"token operator\">*</span>env <span class=\"token operator\">=</span> <span class=\"token function\">ofGetJNIEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>env<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n\tjclass <span class=\"token class-name\">javaClass</span> <span class=\"token operator\">=</span> <span class=\"token function\">getJavaClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tjmethodID javagetCameraFacing <span class=\"token operator\">=</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">GetMethodID</span><span class=\"token punctuation\">(</span>javaClass<span class=\"token punctuation\">,</span><span class=\"token string\">\"getCameraFacing\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"(I)I\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>javaVideoGrabber <span class=\"token operator\">&amp;&amp;</span> javagetCameraFacing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">CallIntMethod</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>javaVideoGrabber<span class=\"token punctuation\">,</span>javagetCameraFacing<span class=\"token punctuation\">,</span>facing<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getCameraFacing(): couldn't get OFAndroidVideoGrabber getCameraFacing method\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">getBackCamera</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getCameraFacing</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">getFrontCamera</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getCameraFacing</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">getNumCameras</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tJNIEnv <span class=\"token operator\">*</span>env <span class=\"token operator\">=</span> <span class=\"token function\">ofGetJNIEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>env<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\tjclass <span class=\"token class-name\">javaClass</span> <span class=\"token operator\">=</span> <span class=\"token function\">getJavaClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tjmethodID javagetNumCameras<span class=\"token operator\">=</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">GetMethodID</span><span class=\"token punctuation\">(</span>javaClass<span class=\"token punctuation\">,</span><span class=\"token string\">\"getNumCameras\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"()I\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>javaVideoGrabber <span class=\"token operator\">&amp;&amp;</span> javagetNumCameras<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">CallIntMethod</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>javaVideoGrabber<span class=\"token punctuation\">,</span>javagetNumCameras<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getNumCameras(): couldn't get OFAndroidVideoGrabber getNumCameras method\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">getCameraOrientation</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> device<span class=\"token punctuation\">)</span><span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tJNIEnv <span class=\"token operator\">*</span>env <span class=\"token operator\">=</span> <span class=\"token function\">ofGetJNIEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>env<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\tjclass <span class=\"token class-name\">javaClass</span> <span class=\"token operator\">=</span> <span class=\"token function\">getJavaClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tjmethodID javagetCameraOrientation<span class=\"token operator\">=</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">GetMethodID</span><span class=\"token punctuation\">(</span>javaClass<span class=\"token punctuation\">,</span><span class=\"token string\">\"getCameraOrientation\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"(I)I\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>javaVideoGrabber <span class=\"token operator\">&amp;&amp;</span> javagetCameraOrientation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">CallIntMethod</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>javaVideoGrabber<span class=\"token punctuation\">,</span>javagetCameraOrientation<span class=\"token punctuation\">,</span> device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getCameraOrientation(): couldn't get OFAndroidVideoGrabber getCameraOrientation method\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">getFacingOfCamera</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> device<span class=\"token punctuation\">)</span><span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tJNIEnv <span class=\"token operator\">*</span>env <span class=\"token operator\">=</span> <span class=\"token function\">ofGetJNIEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>env<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\tjclass <span class=\"token class-name\">javaClass</span> <span class=\"token operator\">=</span> <span class=\"token function\">getJavaClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tjmethodID javagetFacingOfCamera<span class=\"token operator\">=</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">GetMethodID</span><span class=\"token punctuation\">(</span>javaClass<span class=\"token punctuation\">,</span><span class=\"token string\">\"getFacingOfCamera\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"(I)I\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>javaVideoGrabber <span class=\"token operator\">&amp;&amp;</span> javagetFacingOfCamera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">CallIntMethod</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>javaVideoGrabber<span class=\"token punctuation\">,</span>javagetFacingOfCamera<span class=\"token punctuation\">,</span> device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getFacingOfCamera(): couldn't get OFAndroidVideoGrabber getFacingOfCamera method\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">setDeviceID</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> _deviceID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">bool</span> wasInited <span class=\"token operator\">=</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>bGrabberInited<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> w <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> h <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>bGrabberInited<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tJNIEnv <span class=\"token operator\">*</span>env <span class=\"token operator\">=</span> <span class=\"token function\">ofGetJNIEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>env<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n\tjclass <span class=\"token class-name\">javaClass</span> <span class=\"token operator\">=</span> <span class=\"token function\">getJavaClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tjmethodID javasetDeviceID <span class=\"token operator\">=</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">GetMethodID</span><span class=\"token punctuation\">(</span>javaClass<span class=\"token punctuation\">,</span><span class=\"token string\">\"setDeviceID\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"(I)V\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>javaVideoGrabber <span class=\"token operator\">&amp;&amp;</span> javasetDeviceID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tenv<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">CallVoidMethod</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>javaVideoGrabber<span class=\"token punctuation\">,</span>javasetDeviceID<span class=\"token punctuation\">,</span>_deviceID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setDeviceID(): couldn't get OFAndroidVideoGrabber setDeviceID method\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>wasInited<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">setAutoFocus</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> autofocus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tJNIEnv <span class=\"token operator\">*</span>env <span class=\"token operator\">=</span> <span class=\"token function\">ofGetJNIEnv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>env<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\tjclass <span class=\"token class-name\">javaClass</span> <span class=\"token operator\">=</span> <span class=\"token function\">getJavaClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tjmethodID javasetAutoFocus <span class=\"token operator\">=</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">GetMethodID</span><span class=\"token punctuation\">(</span>javaClass<span class=\"token punctuation\">,</span><span class=\"token string\">\"setAutoFocus\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"(Z)Z\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>javaVideoGrabber <span class=\"token operator\">&amp;&amp;</span> javasetAutoFocus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">CallBooleanMethod</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>javaVideoGrabber<span class=\"token punctuation\">,</span>javasetAutoFocus<span class=\"token punctuation\">,</span>autofocus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxAndroidVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setAutoFocus(): couldn't get OFAndroidVideoGrabber setAutoFocus method\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">setDesiredFrameRate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> framerate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>attemptFramerate <span class=\"token operator\">=</span> framerate<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>height<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>width<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofxAndroidVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">setPixelFormat</span><span class=\"token punctuation\">(</span>ofPixelFormat pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>internalPixelFormat <span class=\"token operator\">=</span> pixelFormat<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofPixelFormat ofxAndroidVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>internalPixelFormat<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// Conversion from yuv nv21 to rgb24 adapted from</span>\n<span class=\"token comment\" spellcheck=\"true\">// videonet conversion from YUV420 to RGB24</span>\n<span class=\"token comment\" spellcheck=\"true\">// http://www.codeguru.com/cpp/g-m/multimedia/video/article.php/c7621</span>\n <span class=\"token keyword\">static</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">int</span> crv_tab<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">static</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">int</span> cbu_tab<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">static</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">int</span> cgu_tab<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">static</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">int</span> cgv_tab<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">static</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">int</span> tab_76309<span class=\"token punctuation\">[</span><span class=\"token number\">256</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">static</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> clp<span class=\"token punctuation\">[</span><span class=\"token number\">1024</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>         <span class=\"token comment\" spellcheck=\"true\">//for clip in CCIR601</span>\n <span class=\"token comment\" spellcheck=\"true\">//</span>\n <span class=\"token comment\" spellcheck=\"true\">//Initialize conversion table for YUV420 to RGB</span>\n <span class=\"token comment\" spellcheck=\"true\">//</span>\n <span class=\"token keyword\">void</span> <span class=\"token function\">InitConvertTable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> inited <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>inited<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">long</span> <span class=\"token keyword\">int</span> crv<span class=\"token punctuation\">,</span>cbu<span class=\"token punctuation\">,</span>cgu<span class=\"token punctuation\">,</span>cgv<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span>ind<span class=\"token punctuation\">;</span>\n\n\tcrv <span class=\"token operator\">=</span> <span class=\"token number\">104597</span><span class=\"token punctuation\">;</span> cbu <span class=\"token operator\">=</span> <span class=\"token number\">132201</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">/* fra matrise i global.h */</span>\n\tcgu <span class=\"token operator\">=</span> <span class=\"token number\">25675</span><span class=\"token punctuation\">;</span>  cgv <span class=\"token operator\">=</span> <span class=\"token number\">53279</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t   crv_tab<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i<span class=\"token number\">-128</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> crv<span class=\"token punctuation\">;</span>\n\t   cbu_tab<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i<span class=\"token number\">-128</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> cbu<span class=\"token punctuation\">;</span>\n\t   cgu_tab<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i<span class=\"token number\">-128</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> cgu<span class=\"token punctuation\">;</span>\n\t   cgv_tab<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i<span class=\"token number\">-128</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> cgv<span class=\"token punctuation\">;</span>\n\t   tab_76309<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">76309</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>i<span class=\"token number\">-16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">384</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t   clp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tind<span class=\"token operator\">=</span><span class=\"token number\">384</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">256</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\tclp<span class=\"token punctuation\">[</span>ind<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>i<span class=\"token punctuation\">;</span>\n\tind<span class=\"token operator\">=</span><span class=\"token number\">640</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">384</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\tclp<span class=\"token punctuation\">[</span>ind<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n\n\tinited <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n\n <span class=\"token keyword\">void</span> <span class=\"token function\">ConvertYUV2RGB</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>src0<span class=\"token punctuation\">,</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>src1<span class=\"token punctuation\">,</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>dst_ori<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t  <span class=\"token keyword\">int</span> width<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> height<span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">{</span>\n\t <span class=\"token keyword\">register</span> <span class=\"token keyword\">int</span> y1<span class=\"token punctuation\">,</span>y2<span class=\"token punctuation\">,</span>u<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">;</span>\n\t <span class=\"token keyword\">register</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>py1<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>py2<span class=\"token punctuation\">;</span>\n\t <span class=\"token keyword\">register</span> <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">,</span> c1<span class=\"token punctuation\">,</span> c2<span class=\"token punctuation\">,</span> c3<span class=\"token punctuation\">,</span> c4<span class=\"token punctuation\">;</span>\n\t <span class=\"token keyword\">register</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>d1<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>d2<span class=\"token punctuation\">;</span>\n\n\t <span class=\"token keyword\">int</span> width3 <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token operator\">*</span>width<span class=\"token punctuation\">;</span>\n\t py1<span class=\"token operator\">=</span>src0<span class=\"token punctuation\">;</span>\n\t py2<span class=\"token operator\">=</span>py1<span class=\"token operator\">+</span>width<span class=\"token punctuation\">;</span>\n\t d1<span class=\"token operator\">=</span>dst_ori<span class=\"token punctuation\">;</span>\n\t d2<span class=\"token operator\">=</span>d1<span class=\"token operator\">+</span>width3<span class=\"token punctuation\">;</span>\n\t <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> height<span class=\"token punctuation\">;</span> j <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> width<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n\t\t\t v <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>src1<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t u <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>src1<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\n\t\t\t c1 <span class=\"token operator\">=</span> crv_tab<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t c2 <span class=\"token operator\">=</span> cgu_tab<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t c3 <span class=\"token operator\">=</span> cgv_tab<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t c4 <span class=\"token operator\">=</span> cbu_tab<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t\t\t <span class=\"token comment\" spellcheck=\"true\">//up-left</span>\n\t\t\t y1 <span class=\"token operator\">=</span> tab_76309<span class=\"token punctuation\">[</span><span class=\"token operator\">*</span>py1<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token operator\">*</span>d1<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> clp<span class=\"token punctuation\">[</span><span class=\"token number\">384</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y1 <span class=\"token operator\">+</span> c1<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token operator\">*</span>d1<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> clp<span class=\"token punctuation\">[</span><span class=\"token number\">384</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y1 <span class=\"token operator\">-</span> c2 <span class=\"token operator\">-</span> c3<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token operator\">*</span>d1<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> clp<span class=\"token punctuation\">[</span><span class=\"token number\">384</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y1 <span class=\"token operator\">+</span> c4<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t\t\t <span class=\"token comment\" spellcheck=\"true\">//down-left</span>\n\t\t\t y2 <span class=\"token operator\">=</span> tab_76309<span class=\"token punctuation\">[</span><span class=\"token operator\">*</span>py2<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token operator\">*</span>d2<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> clp<span class=\"token punctuation\">[</span><span class=\"token number\">384</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y2 <span class=\"token operator\">+</span> c1<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token operator\">*</span>d2<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> clp<span class=\"token punctuation\">[</span><span class=\"token number\">384</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y2 <span class=\"token operator\">-</span> c2 <span class=\"token operator\">-</span> c3<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token operator\">*</span>d2<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> clp<span class=\"token punctuation\">[</span><span class=\"token number\">384</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y2 <span class=\"token operator\">+</span> c4<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t\t\t <span class=\"token comment\" spellcheck=\"true\">//up-right</span>\n\t\t\t y1 <span class=\"token operator\">=</span> tab_76309<span class=\"token punctuation\">[</span><span class=\"token operator\">*</span>py1<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token operator\">*</span>d1<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> clp<span class=\"token punctuation\">[</span><span class=\"token number\">384</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y1 <span class=\"token operator\">+</span> c1<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token operator\">*</span>d1<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> clp<span class=\"token punctuation\">[</span><span class=\"token number\">384</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y1 <span class=\"token operator\">-</span> c2 <span class=\"token operator\">-</span> c3<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token operator\">*</span>d1<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> clp<span class=\"token punctuation\">[</span><span class=\"token number\">384</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y1 <span class=\"token operator\">+</span> c4<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t\t\t <span class=\"token comment\" spellcheck=\"true\">//down-right</span>\n\t\t\t y2 <span class=\"token operator\">=</span> tab_76309<span class=\"token punctuation\">[</span><span class=\"token operator\">*</span>py2<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token operator\">*</span>d2<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> clp<span class=\"token punctuation\">[</span><span class=\"token number\">384</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y2 <span class=\"token operator\">+</span> c1<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token operator\">*</span>d2<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> clp<span class=\"token punctuation\">[</span><span class=\"token number\">384</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y2 <span class=\"token operator\">-</span> c2 <span class=\"token operator\">-</span> c3<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token operator\">*</span>d2<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> clp<span class=\"token punctuation\">[</span><span class=\"token number\">384</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y2 <span class=\"token operator\">+</span> c4<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t <span class=\"token punctuation\">}</span>\n\t\t d1 <span class=\"token operator\">+</span><span class=\"token operator\">=</span> width3<span class=\"token punctuation\">;</span>\n\t\t d2 <span class=\"token operator\">+</span><span class=\"token operator\">=</span> width3<span class=\"token punctuation\">;</span>\n\t\t py1<span class=\"token operator\">+</span><span class=\"token operator\">=</span>   width<span class=\"token punctuation\">;</span>\n\t\t py2<span class=\"token operator\">+</span><span class=\"token operator\">=</span>   width<span class=\"token punctuation\">;</span>\n\t <span class=\"token punctuation\">}</span>\n\n\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\" spellcheck=\"true\">/**\n * Converts semi-planar YUV420 as generated for camera preview into RGB565\n * format for use as an OpenGL ES texture. It assumes that both the input\n * and output data are contiguous and start at zero.\n *\n * @param yuvs the array of YUV420 semi-planar data\n * @param rgbs an array into which the RGB565 data will be written\n * @param width the number of pixels horizontally\n * @param height the number of pixels vertically\n */</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//we tackle the conversion two pixels at a time for greater speed</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ConvertYUV2toRGB565</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> yuvs<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> rgbs<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> height<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//the end of the luminance data</span>\n\t<span class=\"token keyword\">int</span> lumEnd <span class=\"token operator\">=</span> width <span class=\"token operator\">*</span> height<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//points to the next luminance value pair</span>\n\t<span class=\"token keyword\">int</span> lumPtr <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//points to the next chromiance value pair</span>\n\t<span class=\"token keyword\">int</span> chrPtr <span class=\"token operator\">=</span> lumEnd<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//points to the next byte output pair of RGB565 value</span>\n\t<span class=\"token keyword\">int</span> outPtr <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//the end of the current luminance scanline</span>\n\t<span class=\"token keyword\">int</span> lineEnd <span class=\"token operator\">=</span> width<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">register</span> <span class=\"token keyword\">int</span> R<span class=\"token punctuation\">,</span> G<span class=\"token punctuation\">,</span> B<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">register</span> <span class=\"token keyword\">int</span> Y1<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">register</span> <span class=\"token keyword\">int</span> Y2<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">register</span> <span class=\"token keyword\">int</span> Cr<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">register</span> <span class=\"token keyword\">int</span> Cb<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//skip back to the start of the chromiance values when necessary</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lumPtr <span class=\"token operator\">==</span> lineEnd<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lumPtr <span class=\"token operator\">==</span> lumEnd<span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//we've reached the end</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//division here is a bit expensive, but's only done once per scanline</span>\n\t\t\tchrPtr <span class=\"token operator\">=</span> lumEnd <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>lumPtr  <span class=\"token operator\">>></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> width<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> width<span class=\"token punctuation\">;</span>\n\t\t\tlineEnd <span class=\"token operator\">+</span><span class=\"token operator\">=</span> width<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//read the luminance and chromiance values</span>\n\t\tY1 <span class=\"token operator\">=</span> yuvs<span class=\"token punctuation\">[</span>lumPtr<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span>\n\t\tY2 <span class=\"token operator\">=</span> yuvs<span class=\"token punctuation\">[</span>lumPtr<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span>\n\t\tCr <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>yuvs<span class=\"token punctuation\">[</span>chrPtr<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">128</span><span class=\"token punctuation\">;</span>\n\t\tCb <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>yuvs<span class=\"token punctuation\">[</span>chrPtr<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">128</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//generate first RGB components</span>\n\t\tB <span class=\"token operator\">=</span> Y1 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">454</span> <span class=\"token operator\">*</span> Cb<span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>B <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> B <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>B <span class=\"token operator\">></span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span> B <span class=\"token operator\">=</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n\t\tG <span class=\"token operator\">=</span> Y1 <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">88</span> <span class=\"token operator\">*</span> Cb <span class=\"token operator\">+</span> <span class=\"token number\">183</span> <span class=\"token operator\">*</span> Cr<span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>G <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> G <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>G <span class=\"token operator\">></span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span> G <span class=\"token operator\">=</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n\t\tR <span class=\"token operator\">=</span> Y1 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">359</span> <span class=\"token operator\">*</span> Cr<span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>R <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> R <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>R <span class=\"token operator\">></span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span> R <span class=\"token operator\">=</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//NOTE: this assume little-endian encoding</span>\n\t\trgbs<span class=\"token punctuation\">[</span>outPtr<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>G <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3c</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>B <span class=\"token operator\">>></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\trgbs<span class=\"token punctuation\">[</span>outPtr<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>R <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xf8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>G <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//generate second RGB components</span>\n\t\tB <span class=\"token operator\">=</span> Y2 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">454</span> <span class=\"token operator\">*</span> Cb<span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>B <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> B <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>B <span class=\"token operator\">></span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span> B <span class=\"token operator\">=</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n\t\tG <span class=\"token operator\">=</span> Y2 <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">88</span> <span class=\"token operator\">*</span> Cb <span class=\"token operator\">+</span> <span class=\"token number\">183</span> <span class=\"token operator\">*</span> Cr<span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>G <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> G <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>G <span class=\"token operator\">></span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span> G <span class=\"token operator\">=</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n\t\tR <span class=\"token operator\">=</span> Y2 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">359</span> <span class=\"token operator\">*</span> Cr<span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>R <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> R <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>R <span class=\"token operator\">></span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span> R <span class=\"token operator\">=</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//NOTE: this assume little-endian encoding</span>\n\t\trgbs<span class=\"token punctuation\">[</span>outPtr<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>G <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3c</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>B <span class=\"token operator\">>></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\trgbs<span class=\"token punctuation\">[</span>outPtr<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>R <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xf8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>G <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ConvertYUV2toRGB565_2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>src0<span class=\"token punctuation\">,</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>src1<span class=\"token punctuation\">,</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>dst_ori<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t <span class=\"token keyword\">int</span> width<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> height<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">register</span> <span class=\"token keyword\">int</span> y1<span class=\"token punctuation\">,</span>y2<span class=\"token punctuation\">,</span>u<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">register</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>py1<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>py2<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">register</span> <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">,</span> c1<span class=\"token punctuation\">,</span> c2<span class=\"token punctuation\">,</span> c3<span class=\"token punctuation\">,</span> c4<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">register</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>d1<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>d2<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">register</span> <span class=\"token keyword\">int</span> R<span class=\"token punctuation\">,</span>G<span class=\"token punctuation\">,</span>B<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> width2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>width<span class=\"token punctuation\">;</span>\n\tpy1<span class=\"token operator\">=</span>src0<span class=\"token punctuation\">;</span>\n\tpy2<span class=\"token operator\">=</span>py1<span class=\"token operator\">+</span>width<span class=\"token punctuation\">;</span>\n\td1<span class=\"token operator\">=</span>dst_ori<span class=\"token punctuation\">;</span>\n\td2<span class=\"token operator\">=</span>d1<span class=\"token operator\">+</span>width2<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> height<span class=\"token punctuation\">;</span> j <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> width<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n\t\t\tv <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>src1<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\tu <span class=\"token operator\">=</span> <span class=\"token operator\">*</span>src1<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\n\t\t\tc1 <span class=\"token operator\">=</span> crv_tab<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tc2 <span class=\"token operator\">=</span> cgu_tab<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tc3 <span class=\"token operator\">=</span> cgv_tab<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tc4 <span class=\"token operator\">=</span> cbu_tab<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//up-left</span>\n\t\t\ty1 <span class=\"token operator\">=</span> tab_76309<span class=\"token punctuation\">[</span><span class=\"token operator\">*</span>py1<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tR <span class=\"token operator\">=</span> clp<span class=\"token punctuation\">[</span><span class=\"token number\">384</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y1 <span class=\"token operator\">+</span> c1<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tG <span class=\"token operator\">=</span> clp<span class=\"token punctuation\">[</span><span class=\"token number\">384</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y1 <span class=\"token operator\">-</span> c2 <span class=\"token operator\">-</span> c3<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tB <span class=\"token operator\">=</span> clp<span class=\"token punctuation\">[</span><span class=\"token number\">384</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y1 <span class=\"token operator\">+</span> c4<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token operator\">*</span>d1<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>G <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3c</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>B <span class=\"token operator\">>></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token operator\">*</span>d1<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>R <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xf8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>G <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//down-left</span>\n\t\t\ty2 <span class=\"token operator\">=</span> tab_76309<span class=\"token punctuation\">[</span><span class=\"token operator\">*</span>py2<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tB <span class=\"token operator\">=</span> clp<span class=\"token punctuation\">[</span><span class=\"token number\">384</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y2 <span class=\"token operator\">+</span> c1<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tG <span class=\"token operator\">=</span> clp<span class=\"token punctuation\">[</span><span class=\"token number\">384</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y2 <span class=\"token operator\">-</span> c2 <span class=\"token operator\">-</span> c3<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tR <span class=\"token operator\">=</span> clp<span class=\"token punctuation\">[</span><span class=\"token number\">384</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y2 <span class=\"token operator\">+</span> c4<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token operator\">*</span>d2<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>G <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3c</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>B <span class=\"token operator\">>></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token operator\">*</span>d2<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>R <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xf8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>G <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//up-right</span>\n\t\t\ty1 <span class=\"token operator\">=</span> tab_76309<span class=\"token punctuation\">[</span><span class=\"token operator\">*</span>py1<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tR <span class=\"token operator\">=</span> clp<span class=\"token punctuation\">[</span><span class=\"token number\">384</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y1 <span class=\"token operator\">+</span> c1<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tG <span class=\"token operator\">=</span> clp<span class=\"token punctuation\">[</span><span class=\"token number\">384</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y1 <span class=\"token operator\">-</span> c2 <span class=\"token operator\">-</span> c3<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tB <span class=\"token operator\">=</span> clp<span class=\"token punctuation\">[</span><span class=\"token number\">384</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y1 <span class=\"token operator\">+</span> c4<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token operator\">*</span>d1<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>G <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3c</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>B <span class=\"token operator\">>></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token operator\">*</span>d1<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>R <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xf8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>G <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//down-right</span>\n\t\t\ty2 <span class=\"token operator\">=</span> tab_76309<span class=\"token punctuation\">[</span><span class=\"token operator\">*</span>py2<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tB <span class=\"token operator\">=</span> clp<span class=\"token punctuation\">[</span><span class=\"token number\">384</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y2 <span class=\"token operator\">+</span> c1<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tG <span class=\"token operator\">=</span> clp<span class=\"token punctuation\">[</span><span class=\"token number\">384</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y2 <span class=\"token operator\">-</span> c2 <span class=\"token operator\">-</span> c3<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tR <span class=\"token operator\">=</span> clp<span class=\"token punctuation\">[</span><span class=\"token number\">384</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>y2 <span class=\"token operator\">+</span> c4<span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token operator\">*</span>d2<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>G <span class=\"token operator\">&amp;</span> <span class=\"token number\">0x3c</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>B <span class=\"token operator\">>></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token operator\">*</span>d2<span class=\"token operator\">++</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>R <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xf8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>G <span class=\"token operator\">>></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\td1 <span class=\"token operator\">+</span><span class=\"token operator\">=</span> width2<span class=\"token punctuation\">;</span>\n\t\td2 <span class=\"token operator\">+</span><span class=\"token operator\">=</span> width2<span class=\"token punctuation\">;</span>\n\t\tpy1<span class=\"token operator\">+</span><span class=\"token operator\">=</span>   width<span class=\"token punctuation\">;</span>\n\t\tpy2<span class=\"token operator\">+</span><span class=\"token operator\">=</span>   width<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">extern</span> <span class=\"token string\">\"C\"</span><span class=\"token punctuation\">{</span>\njint\n<span class=\"token function\">Java_cc_openframeworks_OFAndroidVideoGrabber_newFrame</span><span class=\"token punctuation\">(</span>JNIEnv<span class=\"token operator\">*</span>  env<span class=\"token punctuation\">,</span> jobject  thiz<span class=\"token punctuation\">,</span> jbyteArray array<span class=\"token punctuation\">,</span> jint width<span class=\"token punctuation\">,</span> jint height<span class=\"token punctuation\">,</span> jint cameraId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">auto</span> data <span class=\"token operator\">=</span> <span class=\"token function\">instances</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>cameraId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>bUsePixels<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tjboolean isCopy<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">auto</span> currentFrame <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> env<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">GetByteArrayElements</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>isCopy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//ofLog()&lt;&lt;\"Is copy: \"&lt;&lt;(isCopy?true:false);</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>currentFrame<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n\t\tofPixels <span class=\"token operator\">&amp;</span>pixels <span class=\"token operator\">=</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>backBuffer<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span> needsResize <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> width <span class=\"token operator\">||</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> height<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tneedsResize <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            pixels <span class=\"token operator\">=</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>resizeBuffer<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> width <span class=\"token operator\">||</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> height<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                pixels<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> data<span class=\"token operator\">-</span><span class=\"token operator\">></span>internalPixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>internalPixelFormat <span class=\"token operator\">==</span> OF_PIXELS_RGB<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ConvertYUV2RGB</span><span class=\"token punctuation\">(</span>currentFrame<span class=\"token punctuation\">,</span>                    <span class=\"token comment\" spellcheck=\"true\">// y component</span>\n\t\t\t\t\t\t   currentFrame <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>width <span class=\"token operator\">*</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>            <span class=\"token comment\" spellcheck=\"true\">// uv components</span>\n\t\t\t\t\t\t   pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>internalPixelFormat <span class=\"token operator\">==</span> OF_PIXELS_RGB565<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ConvertYUV2toRGB565</span><span class=\"token punctuation\">(</span>currentFrame<span class=\"token punctuation\">,</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>internalPixelFormat <span class=\"token operator\">==</span> OF_PIXELS_GRAY<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">setFromPixels</span><span class=\"token punctuation\">(</span>currentFrame<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> OF_IMAGE_GRAYSCALE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>internalPixelFormat <span class=\"token operator\">==</span> OF_PIXELS_NV21<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            pixels<span class=\"token punctuation\">.</span><span class=\"token function\">setFromPixels</span><span class=\"token punctuation\">(</span>currentFrame<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> OF_PIXELS_NV21<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n\t\tenv<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">ReleaseByteArrayElements</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>jbyte<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>currentFrame<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>needsResize<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">resizeTo</span><span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token operator\">></span>backBuffer<span class=\"token punctuation\">,</span> OF_INTERPOLATE_NEAREST_NEIGHBOR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>bNewBackFrame<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tdata<span class=\"token operator\">-</span><span class=\"token operator\">></span>newPixels <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n","type":"source","static":true}}],"fetch":[]}