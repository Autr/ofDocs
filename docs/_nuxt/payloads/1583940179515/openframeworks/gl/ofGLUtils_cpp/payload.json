{"data":[{"page":{"entry":{"name":"ofGLUtils.cpp","filename":"ofGLUtils.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/gl/ofGLUtils.cpp","path":"/openframeworks/gl/ofGLUtils_cpp","route":"/openframeworks/gl/ofGLUtils.cpp","dir":"../libs/openFrameworks/gl","ext":"cpp","type":"source","id":245,"parent":235,"breadcrumbs":[235,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGLUtils.h\"</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;set></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGLProgrammableRenderer.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGraphics.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofShader.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGraphicsBaseTypes.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofRendererCollection.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGLRenderer.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofPixels.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofLog.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGraphicsConstants.h\"</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">// deprecations</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofGetGlInternalFormat</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPixels<span class=\"token operator\">&amp;</span> pixels<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">ofGetGLInternalFormat</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofGetGlInternalFormat</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofShortPixels<span class=\"token operator\">&amp;</span> pixels<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">ofGetGLInternalFormat</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofGetGlInternalFormat</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFloatPixels<span class=\"token operator\">&amp;</span> pixels<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">ofGetGLInternalFormat</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nstd<span class=\"token operator\">::</span>string <span class=\"token function\">ofGetGlInternalFormatName</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> glInternalFormat<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">ofGetGLInternalFormatName</span><span class=\"token punctuation\">(</span>glInternalFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofGetGlTypeFromInternal</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> glInternalFormat<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">ofGetGLTypeFromInternal</span><span class=\"token punctuation\">(</span>glInternalFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofGetGlType</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPixels <span class=\"token operator\">&amp;</span> pixels<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">ofGetGLType</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofGetGlType</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofShortPixels <span class=\"token operator\">&amp;</span> pixels<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">ofGetGLType</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofGetGlType</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFloatPixels <span class=\"token operator\">&amp;</span> pixels<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">ofGetGLType</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofGetGLInternalFormat</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPixels<span class=\"token operator\">&amp;</span> pixels<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofGetGLInternalFormatFromPixelFormat</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofGetGLInternalFormat</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofShortPixels<span class=\"token operator\">&amp;</span> pixels<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getNumChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> GL_RGB16<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> GL_RGBA16<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">return</span> GL_RG16<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">return</span> GL_LUMINANCE16_ALPHA16<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">return</span> GL_R16<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">return</span> GL_LUMINANCE16<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGLUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ofGetGLInternalFormat(): 16bit textures are not supported in OpenGL ES\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getNumChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> GL_RGB<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> GL_RGBA<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_LUMINANCE_ALPHA<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_LUMINANCE<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofGetGLInternalFormat</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFloatPixels<span class=\"token operator\">&amp;</span> pixels<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getNumChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> GL_RGB32F<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> GL_RGBA32F<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">return</span> GL_RG32F<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">return</span> GL_LUMINANCE_ALPHA32F_ARB<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">return</span> GL_R32F<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">return</span> GL_LUMINANCE32F_ARB<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGLUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ofGetGLInternalFormat(): float textures not supported in OpenGL ES\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getNumChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> GL_RGB<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> GL_RGBA<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_LUMINANCE_ALPHA<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_LUMINANCE<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">// this is helpful for debugging ofTexture</span>\nstring <span class=\"token function\">ofGetGLInternalFormatName</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> glInternalFormat<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>glInternalFormat<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> GL_RGBA<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"GL_RGBA\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token keyword\">case</span> GL_RGBA8<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"GL_RGBA8\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token keyword\">case</span> GL_RGB<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"GL_RGB\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token keyword\">case</span> GL_RGB8<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"GL_RGB8\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token keyword\">case</span> GL_LUMINANCE<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"GL_LUMINANCE\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token keyword\">case</span> GL_LUMINANCE8<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"GL_LUMINANCE8\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GL_RGBA16<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"GL_RGBA16\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GL_RGB16<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"GL_RGB16\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GL_LUMINANCE16<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"GL_LUMINANCE16\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GL_RGBA32F_ARB<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"GL_RGBA32F_ARB\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GL_RGB32F_ARB<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"GL_RGB32F_ARB\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GL_LUMINANCE32F_ARB<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"GL_LUMINANCE32F_ARB\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token keyword\">case</span> GL_LUMINANCE_ALPHA<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"GL_LUMINANCE_ALPHA\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token keyword\">case</span> GL_LUMINANCE8_ALPHA8<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"GL_LUMINANCE8_ALPHA8\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"unknown glInternalFormat\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofGetGLFormatFromInternal</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> glInternalFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>glInternalFormat<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">case</span> GL_RGBA<span class=\"token operator\">:</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t<span class=\"token keyword\">case</span> GL_RGBA8<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> GL_RGBA16<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> GL_RGBA16F<span class=\"token operator\">:</span>\n\t\t    <span class=\"token keyword\">case</span> GL_RGBA16I<span class=\"token operator\">:</span>\n\t\t    <span class=\"token keyword\">case</span> GL_RGBA16UI<span class=\"token operator\">:</span>\n\t\t    <span class=\"token keyword\">case</span> GL_RGBA32F<span class=\"token operator\">:</span>\n\t\t    <span class=\"token keyword\">case</span> GL_RGBA32I<span class=\"token operator\">:</span>\n\t\t    <span class=\"token keyword\">case</span> GL_RGBA32UI<span class=\"token operator\">:</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t\t <span class=\"token keyword\">return</span> GL_RGBA<span class=\"token punctuation\">;</span>\n\n\n\t\t\t<span class=\"token keyword\">case</span> GL_RGB<span class=\"token operator\">:</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t<span class=\"token keyword\">case</span> GL_RGB8<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> GL_RGB16<span class=\"token operator\">:</span>\n\t\t    <span class=\"token keyword\">case</span> GL_RGB16F<span class=\"token operator\">:</span>\n\t\t    <span class=\"token keyword\">case</span> GL_RGB16I<span class=\"token operator\">:</span>\n\t\t    <span class=\"token keyword\">case</span> GL_RGB16UI<span class=\"token operator\">:</span>\n\t\t    <span class=\"token keyword\">case</span> GL_RGB32F<span class=\"token operator\">:</span>\n\t\t    <span class=\"token keyword\">case</span> GL_RGB32I<span class=\"token operator\">:</span>\n\t\t    <span class=\"token keyword\">case</span> GL_RGB32UI<span class=\"token operator\">:</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t\t<span class=\"token keyword\">return</span> GL_RGB<span class=\"token punctuation\">;</span>\n\n\n\t\t\t<span class=\"token keyword\">case</span> GL_LUMINANCE<span class=\"token operator\">:</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t<span class=\"token keyword\">case</span> GL_LUMINANCE8<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> GL_LUMINANCE16<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> GL_LUMINANCE32F_ARB<span class=\"token operator\">:</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t\t <span class=\"token keyword\">return</span> GL_LUMINANCE<span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">case</span> GL_LUMINANCE_ALPHA<span class=\"token operator\">:</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t<span class=\"token keyword\">case</span> GL_LUMINANCE8_ALPHA8<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> GL_LUMINANCE16_ALPHA16<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> GL_LUMINANCE_ALPHA32F_ARB<span class=\"token operator\">:</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t\t<span class=\"token keyword\">return</span> GL_LUMINANCE_ALPHA<span class=\"token punctuation\">;</span>\n\n\n\t\t\t<span class=\"token keyword\">case</span> GL_DEPTH_STENCIL<span class=\"token operator\">:</span>\n\t\t\t\t <span class=\"token keyword\">return</span> GL_DEPTH_STENCIL<span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">case</span> GL_DEPTH_COMPONENT<span class=\"token operator\">:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t<span class=\"token keyword\">case</span> GL_DEPTH_COMPONENT16<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> GL_DEPTH_COMPONENT24<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> GL_DEPTH_COMPONENT32<span class=\"token operator\">:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t\t<span class=\"token keyword\">return</span> GL_DEPTH_COMPONENT<span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">case</span> GL_STENCIL_INDEX<span class=\"token operator\">:</span>\n\t\t\t\t<span class=\"token keyword\">return</span> GL_STENCIL_INDEX<span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t<span class=\"token keyword\">case</span> GL_R8<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> GL_R16<span class=\"token operator\">:</span>\n\t\t    <span class=\"token keyword\">case</span> GL_R16I<span class=\"token operator\">:</span>\n\t\t    <span class=\"token keyword\">case</span> GL_R16UI<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> GL_R16F<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> GL_R32F<span class=\"token operator\">:</span>\n\t\t    <span class=\"token keyword\">case</span> GL_R32I<span class=\"token operator\">:</span>\n\t\t    <span class=\"token keyword\">case</span> GL_R32UI<span class=\"token operator\">:</span>\n\t\t\t\t<span class=\"token keyword\">return</span> GL_RED<span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">case</span> GL_RG8<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> GL_RG16<span class=\"token operator\">:</span>\n\t\t    <span class=\"token keyword\">case</span> GL_RG16I<span class=\"token operator\">:</span>\n\t\t    <span class=\"token keyword\">case</span> GL_RG16UI<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> GL_RG16F<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> GL_RG32F<span class=\"token operator\">:</span>\n\t\t    <span class=\"token keyword\">case</span> GL_RG32I<span class=\"token operator\">:</span>\n\t\t    <span class=\"token keyword\">case</span> GL_RG32UI<span class=\"token operator\">:</span>\n\t\t\t\t<span class=\"token keyword\">return</span> GL_RG<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t<span class=\"token keyword\">case</span> GL_ALPHA8<span class=\"token operator\">:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token keyword\">case</span> GL_ALPHA<span class=\"token operator\">:</span>\n\t\t\t\t<span class=\"token keyword\">return</span> GL_ALPHA<span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGLUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ofGetGLFormatFromInternal(): unknown internal format \"</span> <span class=\"token operator\">&lt;&lt;</span> glInternalFormat <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", returning GL_RGBA\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">return</span> GL_RGBA<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofGetGLTypeFromInternal</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> glInternalFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>glInternalFormat<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> GL_RGB<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_RGBA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_LUMINANCE<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_LUMINANCE_ALPHA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_ALPHA<span class=\"token operator\">:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token keyword\">case</span> GL_LUMINANCE8<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_LUMINANCE8_ALPHA8<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_R8<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_RG8<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_RGB8<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_RGBA8<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_ALPHA8<span class=\"token operator\">:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t <span class=\"token keyword\">return</span> GL_UNSIGNED_BYTE<span class=\"token punctuation\">;</span>\n\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> !defined(TARGET_OPENGLES) &amp;&amp; defined(GL_RGB565)</span>\n\t\t<span class=\"token keyword\">case</span> GL_RGB565<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_UNSIGNED_SHORT_5_6_5<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token keyword\">case</span> GL_LUMINANCE32F_ARB<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_LUMINANCE_ALPHA32F_ARB<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_R32F<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_RG32F<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_RGB32F<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_RGBA32F<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_FLOAT<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> GL_R16F<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_RG16F<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_RGB16F<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_RGBA16F<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_LUMINANCE16<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_LUMINANCE16_ALPHA16<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_R16<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_RG16<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_RGB16<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_RGBA16<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_HALF_FLOAT<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t\t<span class=\"token keyword\">case</span> GL_DEPTH_STENCIL<span class=\"token operator\">:</span>\n\t\t\t <span class=\"token keyword\">return</span> GL_UNSIGNED_INT_24_8<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> GL_DEPTH_COMPONENT<span class=\"token operator\">:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token keyword\">case</span> GL_DEPTH_COMPONENT16<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_R16UI<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_RG16UI<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_RGB16UI<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_RGBA16UI<span class=\"token operator\">:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token keyword\">return</span> GL_UNSIGNED_SHORT<span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token keyword\">case</span> GL_R16I<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_RG16I<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_RGB16I<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_RGBA16I<span class=\"token operator\">:</span>\n\t\t    <span class=\"token keyword\">return</span> GL_SHORT<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token keyword\">case</span> GL_DEPTH_COMPONENT24<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_DEPTH_COMPONENT32<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_R32UI<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_RG32UI<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_RGB32UI<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_RGBA32UI<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_UNSIGNED_INT<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token keyword\">case</span> GL_R32I<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_RG32I<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_RGB32I<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> GL_RGBA32I<span class=\"token operator\">:</span>\n\t\t    <span class=\"token keyword\">return</span> GL_INT<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t\t<span class=\"token keyword\">case</span> GL_STENCIL_INDEX<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_UNSIGNED_BYTE<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGLUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ofGetGLTypeFromInternal(): unknown internal format \"</span> <span class=\"token operator\">&lt;&lt;</span> glInternalFormat <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", returning GL_UNSIGNED_BYTE\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_UNSIGNED_BYTE<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofGetGLType</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPixels <span class=\"token operator\">&amp;</span> pixels<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> OF_PIXELS_RGB565<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> GL_UNSIGNED_SHORT_5_6_5<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token keyword\">return</span> GL_UNSIGNED_BYTE<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofGetGLType</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofShortPixels <span class=\"token operator\">&amp;</span> pixels<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> GL_UNSIGNED_SHORT<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofGetGLType</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFloatPixels <span class=\"token operator\">&amp;</span> pixels<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> GL_FLOAT<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\nofImageType <span class=\"token function\">ofGetImageTypeFromGLType</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> glType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>glType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> GL_LUMINANCE<span class=\"token operator\">:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">case</span> GL_LUMINANCE8<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> GL_LUMINANCE16<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> GL_LUMINANCE32F_ARB<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> GL_R8<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> GL_R16<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> GL_R16F<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> GL_R16I<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> GL_R16UI<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> GL_R32F<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> GL_R32I<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> GL_R32UI<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> GL_DEPTH_COMPONENT32F<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> GL_DEPTH_COMPONENT32<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> GL_DEPTH_COMPONENT16<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> GL_DEPTH_COMPONENT24<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> GL_DEPTH_COMPONENT<span class=\"token operator\">:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token keyword\">return</span> OF_IMAGE_GRAYSCALE<span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token keyword\">case</span> GL_RGB<span class=\"token operator\">:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">case</span> GL_RGB8<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> GL_RGB16<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> GL_RGB16F<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> GL_RGB16I<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> GL_RGB16UI<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> GL_RGB32F<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> GL_RGB32I<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> GL_RGB32UI<span class=\"token operator\">:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token keyword\">return</span> OF_IMAGE_COLOR<span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token keyword\">case</span> GL_RGBA<span class=\"token operator\">:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">case</span> GL_RGBA8<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> GL_RGBA16<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> GL_RGBA16F<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> GL_RGBA16I<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> GL_RGBA16UI<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> GL_RGBA32F<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> GL_RGBA32I<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> GL_RGBA32UI<span class=\"token operator\">:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token keyword\">return</span> OF_IMAGE_COLOR_ALPHA<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> OF_IMAGE_UNDEFINED<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nGLuint <span class=\"token function\">ofGetGLPolyMode</span><span class=\"token punctuation\">(</span>ofPolyRenderMode mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span><span class=\"token punctuation\">(</span>OF_MESH_POINTS<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_POINT<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span><span class=\"token punctuation\">(</span>OF_MESH_WIREFRAME<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_LINE<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span><span class=\"token punctuation\">(</span>OF_MESH_FILL<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_FILL<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGLUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ofGetGLPolyMode(): unknown OF poly mode \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>mode<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", returning GL_FILL\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_FILL<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\nofPolyRenderMode <span class=\"token function\">ofGetOFPolyMode</span><span class=\"token punctuation\">(</span>GLuint mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span><span class=\"token punctuation\">(</span>GL_POINT<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> OF_MESH_POINTS<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span><span class=\"token punctuation\">(</span>GL_LINE<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> OF_MESH_WIREFRAME<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span><span class=\"token punctuation\">(</span>GL_FILL<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> OF_MESH_FILL<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGLUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ofGetOFPolyMode(): unknown GL poly mode \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>mode<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", returning OF_MESH_FILL\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> OF_MESH_FILL<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token keyword\">return</span> OF_MESH_FILL<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n\nGLuint <span class=\"token function\">ofGetGLPrimitiveMode</span><span class=\"token punctuation\">(</span>ofPrimitiveMode mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> OF_PRIMITIVE_TRIANGLES<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_TRIANGLES<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PRIMITIVE_TRIANGLE_STRIP<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_TRIANGLE_STRIP<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PRIMITIVE_TRIANGLE_FAN<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_TRIANGLE_FAN<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PRIMITIVE_LINES<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_LINES<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PRIMITIVE_LINE_STRIP<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_LINE_STRIP<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PRIMITIVE_LINE_LOOP<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_LINE_LOOP<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PRIMITIVE_POINTS<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_POINTS<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token keyword\">case</span> OF_PRIMITIVE_LINES_ADJACENCY<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_LINES_ADJACENCY<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PRIMITIVE_LINE_STRIP_ADJACENCY<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_LINE_STRIP_ADJACENCY<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PRIMITIVE_TRIANGLES_ADJACENCY<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_TRIANGLES_ADJACENCY<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PRIMITIVE_TRIANGLE_STRIP_ADJACENCY<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_TRIANGLE_STRIP_ADJACENCY<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PRIMITIVE_PATCHES<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_PATCHES<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGLUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ofGetGLPrimitiveMode(): unknown OF primitive mode \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>mode<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", returning GL_TRIANGLES\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_TRIANGLES<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nofPrimitiveMode <span class=\"token function\">ofGetOFPrimitiveMode</span><span class=\"token punctuation\">(</span>GLuint mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> GL_TRIANGLES<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> OF_PRIMITIVE_TRIANGLES<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GL_TRIANGLE_STRIP<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> OF_PRIMITIVE_TRIANGLE_STRIP<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GL_TRIANGLE_FAN<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> OF_PRIMITIVE_TRIANGLE_FAN<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GL_LINES<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> OF_PRIMITIVE_LINES<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GL_LINE_STRIP<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> OF_PRIMITIVE_LINE_STRIP<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GL_LINE_LOOP<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> OF_PRIMITIVE_LINE_LOOP<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GL_POINTS<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> OF_PRIMITIVE_POINTS<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token keyword\">case</span> GL_LINES_ADJACENCY<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> OF_PRIMITIVE_LINES_ADJACENCY<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GL_LINE_STRIP_ADJACENCY<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> OF_PRIMITIVE_LINE_STRIP_ADJACENCY<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GL_TRIANGLES_ADJACENCY<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> OF_PRIMITIVE_TRIANGLES_ADJACENCY<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GL_TRIANGLE_STRIP_ADJACENCY<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> OF_PRIMITIVE_TRIANGLE_STRIP_ADJACENCY<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GL_PATCHES<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> OF_PRIMITIVE_PATCHES<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGLUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ofGetOFPrimitiveMode(): unknown GL primitive mode \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>mode<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", returning OF_PRIMITIVE_TRIANGLES\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> OF_PRIMITIVE_TRIANGLES<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofGetGLInternalFormatFromPixelFormat</span><span class=\"token punctuation\">(</span>ofPixelFormat pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_BGRA<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_RGBA<span class=\"token operator\">:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token keyword\">return</span> GL_RGBA8<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t<span class=\"token keyword\">return</span> GL_RGBA<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_BGR<span class=\"token operator\">:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token keyword\">return</span> GL_RGB8<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t<span class=\"token keyword\">return</span> GL_RGB<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n    <span class=\"token keyword\">case</span> OF_PIXELS_RGB565<span class=\"token operator\">:</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_ANDROID) || defined(TARGET_RASPBERRY_PI_LEGACY)</span>\n\t\t<span class=\"token keyword\">return</span> GL_RGB565_OES<span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(GL_RGB565)</span>\n\t\t<span class=\"token keyword\">return</span> GL_RGB565<span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t<span class=\"token keyword\">return</span> GL_RGB<span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n    <span class=\"token keyword\">case</span> OF_PIXELS_GRAY<span class=\"token operator\">:</span>\n    <span class=\"token keyword\">case</span> OF_PIXELS_NV12<span class=\"token operator\">:</span>\n    <span class=\"token keyword\">case</span> OF_PIXELS_NV21<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_YV12<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_I420<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_Y<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_U<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_V<span class=\"token operator\">:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_R8<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token keyword\">return</span> GL_LUMINANCE<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n    <span class=\"token keyword\">case</span> OF_PIXELS_GRAY_ALPHA<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_YUY2<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_UV<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_VU<span class=\"token operator\">:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_RG8<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token keyword\">return</span> GL_LUMINANCE_ALPHA<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGLUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ofGetGLInternalFormatFromPixelFormat(): unknown OF pixel format \"</span>\n\t\t\t\t\t\t<span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", returning GL_RGBA\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> GL_RGBA<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofGetGLFormatFromPixelFormat</span><span class=\"token punctuation\">(</span>ofPixelFormat pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_BGRA<span class=\"token operator\">:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n    \t<span class=\"token keyword\">return</span> GL_BGRA_EXT<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n        <span class=\"token keyword\">return</span> GL_BGRA<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> GL_RGB<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_BGR<span class=\"token operator\">:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n    \t<span class=\"token keyword\">return</span> GL_RGB<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n        <span class=\"token keyword\">return</span> GL_BGR<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_RGBA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> GL_RGBA<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_PIXELS_RGB565<span class=\"token operator\">:</span>\n        <span class=\"token keyword\">return</span> GL_RGB<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_GRAY<span class=\"token operator\">:</span>\n    <span class=\"token keyword\">case</span> OF_PIXELS_NV12<span class=\"token operator\">:</span>\n    <span class=\"token keyword\">case</span> OF_PIXELS_NV21<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_YV12<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_I420<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_Y<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_U<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_V<span class=\"token operator\">:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_RED<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token keyword\">return</span> GL_LUMINANCE<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n    <span class=\"token keyword\">case</span> OF_PIXELS_GRAY_ALPHA<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_YUY2<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_UV<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_VU<span class=\"token operator\">:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_RG<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token keyword\">return</span> GL_LUMINANCE_ALPHA<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGLUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ofGetGLFormatFromPixelFormat(): unknown OF pixel format \"</span>\n\t\t\t\t<span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", returning GL_RED\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_RED<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGLUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ofGetGLFormatFromPixelFormat(): unknown OF pixel format \"</span>\n\t\t\t\t<span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>pixelFormat<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", returning GL_LUMINANCE\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> GL_LUMINANCE<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofGetNumChannelsFromGLFormat</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> glFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>glFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> GL_RGB<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> GL_RGBA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> GL_LUMINANCE<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> GL_LUMINANCE_ALPHA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">case</span> GL_RED<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> GL_RG<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofGetBytesPerChannelFromGLType</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> glType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>glType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> GL_UNSIGNED_BYTE<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GL_UNSIGNED_SHORT<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> !defined(TARGET_OPENGLES) &amp;&amp; defined(GL_RGB565)</span>\n\t\t<span class=\"token keyword\">case</span> GL_UNSIGNED_SHORT_5_6_5<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token keyword\">case</span> GL_FLOAT<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token keyword\">case</span> GL_UNSIGNED_INT_24_8<span class=\"token operator\">:</span>\n\t\t\t <span class=\"token keyword\">return</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token keyword\">case</span> GL_UNSIGNED_INT<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token keyword\">case</span> GL_HALF_FLOAT<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGetBytesPerChannelFromGLType\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"unknown type returning 1\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// Rounds an integer value up to the next multiple of 2,4 and 8.</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_ROUND_UP_2(num)  (((num)+1)&amp;~1)</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_ROUND_UP_4(num)  (((num)+3)&amp;~3)</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_ROUND_UP_8(num)  (((num)+7)&amp;~7)</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetPixelStoreiAlignment</span><span class=\"token punctuation\">(</span>GLenum pname<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> bpc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> numChannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> stride <span class=\"token operator\">=</span> w <span class=\"token operator\">*</span> numChannels <span class=\"token operator\">*</span> bpc<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofSetPixelStoreiAlignment</span><span class=\"token punctuation\">(</span>pname<span class=\"token punctuation\">,</span>stride<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetPixelStoreiAlignment</span><span class=\"token punctuation\">(</span>GLenum pname<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> stride<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">OF_ROUND_UP_8</span> <span class=\"token punctuation\">(</span>stride<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> stride<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">glPixelStorei</span> <span class=\"token punctuation\">(</span>pname<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">OF_ROUND_UP_4</span> <span class=\"token punctuation\">(</span>stride<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> stride<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">glPixelStorei</span> <span class=\"token punctuation\">(</span>pname<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">OF_ROUND_UP_2</span> <span class=\"token punctuation\">(</span>stride<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> stride<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">glPixelStorei</span> <span class=\"token punctuation\">(</span>pname<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">glPixelStorei</span> <span class=\"token punctuation\">(</span>pname<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nvector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> <span class=\"token function\">ofGLSupportedExtensions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">char</span><span class=\"token operator\">*</span> extensions <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">glGetString</span><span class=\"token punctuation\">(</span>GL_EXTENSIONS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>extensions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tstring extensions_str <span class=\"token operator\">=</span> extensions<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofSplitString</span><span class=\"token punctuation\">(</span>extensions_str<span class=\"token punctuation\">,</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> vector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token keyword\">int</span> numExtensions<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glGetIntegerv</span><span class=\"token punctuation\">(</span>GL_NUM_EXTENSIONS<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>numExtensions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token operator\">></span> extensions<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>numExtensions<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">char</span><span class=\"token operator\">*</span> extension <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">glGetStringi</span><span class=\"token punctuation\">(</span>GL_EXTENSIONS<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>extension<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\textensions<span class=\"token punctuation\">.</span><span class=\"token function\">emplace_back</span><span class=\"token punctuation\">(</span>extension<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> extensions<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofGLCheckExtension</span><span class=\"token punctuation\">(</span>string searchName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined( TARGET_OPENGLES )</span>\n\tvector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> extensionsList <span class=\"token operator\">=</span> <span class=\"token function\">ofGLSupportedExtensions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tset<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> extensionsSet<span class=\"token punctuation\">;</span>\n\textensionsSet<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>extensionsList<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>extensionsList<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> extensionsSet<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>searchName<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span>extensionsSet<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">glewIsSupported</span><span class=\"token punctuation\">(</span>searchName<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofGLSupportsNPOTTextures</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">return</span> GL_ARB_texture_rectangle<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> !defined(TARGET_EMSCRIPTEN)</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> npotChecked <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> npotSupported <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>npotChecked<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tvector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> extensionsList <span class=\"token operator\">=</span> <span class=\"token function\">ofGLSupportedExtensions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tset<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> extensionsSet<span class=\"token punctuation\">;</span>\n\t\textensionsSet<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>extensionsList<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>extensionsList<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tnpotSupported <span class=\"token operator\">=</span> extensionsSet<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GL_OES_texture_npot\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span>extensionsSet<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n\t\t\t\textensionsSet<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"APPLE_texture_2D_limited_npot\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span>extensionsSet<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n\t\t\t\textensionsSet<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GL_NV_texture_npot_2D_mipmap\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span>extensionsSet<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n\t\t\t\textensionsSet<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GL_IMG_texture_npot\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span>extensionsSet<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n\t\t\t\textensionsSet<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GL_ARB_texture_non_power_of_two\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span>extensionsSet<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tnpotChecked <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> npotSupported<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\nstring <span class=\"token function\">ofGLSLVersionFromGL</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> major<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"ES1\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>major<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>minor<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"130\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>minor<span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"140\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>minor<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"150\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>major<span class=\"token operator\">*</span><span class=\"token number\">100</span><span class=\"token operator\">+</span>minor<span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>major<span class=\"token operator\">*</span><span class=\"token number\">100</span><span class=\"token operator\">+</span>minor<span class=\"token operator\">*</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"120\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_PROGRAMMABLE_GL</span>\nshared_ptr<span class=\"token operator\">&lt;</span>ofBaseGLRenderer<span class=\"token operator\">></span> <span class=\"token function\">ofGetGLRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetCurrentRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>ofGLRenderer<span class=\"token operator\">::</span>TYPE <span class=\"token operator\">||</span> <span class=\"token function\">ofGetCurrentRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>ofGLProgrammableRenderer<span class=\"token operator\">::</span>TYPE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>shared_ptr<span class=\"token operator\">&lt;</span>ofBaseGLRenderer<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span><span class=\"token function\">ofGetCurrentRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetCurrentRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>ofRendererCollection<span class=\"token operator\">::</span>TYPE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>shared_ptr<span class=\"token operator\">&lt;</span>ofRendererCollection<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span><span class=\"token function\">ofGetCurrentRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getGLRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> shared_ptr<span class=\"token operator\">&lt;</span>ofGLRenderer<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\nshared_ptr<span class=\"token operator\">&lt;</span>ofBaseGLRenderer<span class=\"token operator\">></span> <span class=\"token function\">ofGetGLRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetCurrentRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>ofGLProgrammableRenderer<span class=\"token operator\">::</span>TYPE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>shared_ptr<span class=\"token operator\">&lt;</span>ofBaseGLRenderer<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span><span class=\"token function\">ofGetCurrentRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetCurrentRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>ofRendererCollection<span class=\"token operator\">::</span>TYPE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>shared_ptr<span class=\"token operator\">&lt;</span>ofRendererCollection<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span><span class=\"token function\">ofGetCurrentRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getGLRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> shared_ptr<span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n<span class=\"token keyword\">namespace</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">gl_debug_callback</span><span class=\"token punctuation\">(</span>GLenum source<span class=\"token punctuation\">,</span> GLenum type<span class=\"token punctuation\">,</span> GLuint id<span class=\"token punctuation\">,</span> GLenum severity<span class=\"token punctuation\">,</span> GLsizei length<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> GLchar <span class=\"token operator\">*</span>message<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tostringstream oss<span class=\"token punctuation\">;</span>\n\t\toss <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"GL Debug: \"</span><span class=\"token punctuation\">;</span>\n\n\t\tofLogLevel level<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> GL_DEBUG_TYPE_ERROR<span class=\"token operator\">:</span>\n\t\t\tlevel <span class=\"token operator\">=</span> OF_LOG_ERROR<span class=\"token punctuation\">;</span>\n\t\t\toss <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ERROR\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR<span class=\"token operator\">:</span>\n\t\t\tlevel <span class=\"token operator\">=</span> OF_LOG_WARNING<span class=\"token punctuation\">;</span>\n\t\t\toss <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"DEPRECATED_BEHAVIOR\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR<span class=\"token operator\">:</span>\n\t\t\tlevel <span class=\"token operator\">=</span> OF_LOG_WARNING<span class=\"token punctuation\">;</span>\n\t\t\toss <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"UNDEFINED_BEHAVIOR\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GL_DEBUG_TYPE_PORTABILITY<span class=\"token operator\">:</span>\n\t\t\tlevel <span class=\"token operator\">=</span> OF_LOG_NOTICE<span class=\"token punctuation\">;</span>\n\t\t\toss <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"PORTABILITY\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GL_DEBUG_TYPE_PERFORMANCE<span class=\"token operator\">:</span>\n\t\t\tlevel <span class=\"token operator\">=</span> OF_LOG_NOTICE<span class=\"token punctuation\">;</span>\n\t\t\toss <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"PERFORMANCE\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GL_DEBUG_TYPE_OTHER<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\tlevel <span class=\"token operator\">=</span> OF_LOG_VERBOSE<span class=\"token punctuation\">;</span>\n\t\t\toss <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"OTHER\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>severity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> GL_DEBUG_SEVERITY_LOW<span class=\"token operator\">:</span>\n\t\t\toss <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" (LOW)\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GL_DEBUG_SEVERITY_MEDIUM<span class=\"token operator\">:</span>\n\t\t\toss <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" (MEDIUM)\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GL_DEBUG_SEVERITY_HIGH<span class=\"token operator\">:</span>\n\t\t\toss <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" (HIGH)\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\toss <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">&lt;&lt;</span> id <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\": \"</span> <span class=\"token operator\">&lt;&lt;</span> message<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">ofLog</span><span class=\"token punctuation\">(</span>level<span class=\"token punctuation\">,</span> oss<span class=\"token punctuation\">.</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofEnableGLDebugLog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGLCheckExtension</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GL_KHR_debug\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">ofGLCheckExtension</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GL_ARB_debug_output\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_DEBUG_OUTPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_DEBUG_OUTPUT_SYNCHRONOUS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glDebugMessageCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>GLDEBUGPROC<span class=\"token punctuation\">)</span>gl_debug_callback<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDisableGLDebugLog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGLCheckExtension</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GL_KHR_debug\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">ofGLCheckExtension</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GL_ARB_debug_output\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glDisable</span><span class=\"token punctuation\">(</span>GL_DEBUG_OUTPUT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n","type":"source","static":true}}],"fetch":[]}