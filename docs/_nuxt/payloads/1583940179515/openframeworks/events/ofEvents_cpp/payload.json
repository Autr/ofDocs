{"data":[{"page":{"entry":{"name":"ofEvents.cpp","filename":"ofEvents.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/events/ofEvents.cpp","path":"/openframeworks/events/ofEvents_cpp","route":"/openframeworks/events/ofEvents.cpp","dir":"../libs/openFrameworks/events","ext":"cpp","type":"source","id":232,"parent":230,"breadcrumbs":[230,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofEvents.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofAppRunner.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofAppBaseWindow.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofLog.h\"</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">static</span> ofEventArgs voidEventArgs<span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetFrameRate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> targetRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">auto</span> window <span class=\"token operator\">=</span> <span class=\"token function\">ofGetMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getCurrentWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\twindow<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setFrameRate</span><span class=\"token punctuation\">(</span>targetRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofEvents\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Trying to set framerate before mainloop is ready\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofGetFrameRate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">auto</span> window <span class=\"token operator\">=</span> <span class=\"token function\">ofGetMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getCurrentWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> window<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFrameRate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofGetTargetFrameRate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">auto</span> window <span class=\"token operator\">=</span> <span class=\"token function\">ofGetMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getCurrentWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> window<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTargetFrameRate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n<span class=\"token keyword\">double</span> <span class=\"token function\">ofGetLastFrameTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">auto</span> window <span class=\"token operator\">=</span> <span class=\"token function\">ofGetMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getCurrentWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> window<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLastFrameTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\nuint64_t <span class=\"token function\">ofGetFrameNum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">auto</span> window <span class=\"token operator\">=</span> <span class=\"token function\">ofGetMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getCurrentWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> window<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getFrameNum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofGetMousePressed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token comment\" spellcheck=\"true\">//by default any button</span>\n\t<span class=\"token keyword\">auto</span> window <span class=\"token operator\">=</span> <span class=\"token function\">ofGetMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getCurrentWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> window<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMousePressed</span><span class=\"token punctuation\">(</span>button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofGetKeyPressed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">auto</span> window <span class=\"token operator\">=</span> <span class=\"token function\">ofGetMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getCurrentWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> window<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getKeyPressed</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofGetMouseX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">auto</span> window <span class=\"token operator\">=</span> <span class=\"token function\">ofGetMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getCurrentWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> window<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMouseX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofGetMouseY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">auto</span> window <span class=\"token operator\">=</span> <span class=\"token function\">ofGetMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getCurrentWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> window<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMouseY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofGetPreviousMouseX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">auto</span> window <span class=\"token operator\">=</span> <span class=\"token function\">ofGetMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getCurrentWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> window<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPreviousMouseX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofGetPreviousMouseY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">auto</span> window <span class=\"token operator\">=</span> <span class=\"token function\">ofGetMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getCurrentWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> window<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPreviousMouseY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">ofCoreEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">:</span><span class=\"token function\">targetRate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">bFrameRateSet</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">fps</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">currentMouseX</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">currentMouseY</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">previousMouseX</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">previousMouseY</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">bPreMouseNotSet</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tsetup<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tdraw<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tupdate<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\texit<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tkeyPressed<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tkeyReleased<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmouseDragged<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmouseReleased<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmousePressed<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmouseMoved<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmouseScrolled<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmouseEntered<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmouseExited<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ttouchDown<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ttouchUp<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ttouchMoved<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ttouchDoubleTap<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ttouchCancelled<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmessageEvent<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tfileDragEvent<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tsetup<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tdraw<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tupdate<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\texit<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tkeyPressed<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tkeyReleased<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmouseDragged<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmouseReleased<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmousePressed<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmouseMoved<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmouseScrolled<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmouseEntered<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmouseExited<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ttouchDown<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ttouchUp<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ttouchMoved<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ttouchDoubleTap<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ttouchCancelled<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmessageEvent<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tfileDragEvent<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">setTimeModeSystem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\ttimeMode <span class=\"token operator\">=</span> System<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">setTimeModeFixedRate</span><span class=\"token punctuation\">(</span>uint64_t nanosecsPerFrame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\ttimeMode <span class=\"token operator\">=</span> FixedRate<span class=\"token punctuation\">;</span>\n\tfixedRateTimeNanos <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span>chrono<span class=\"token operator\">::</span><span class=\"token function\">nanoseconds</span><span class=\"token punctuation\">(</span>nanosecsPerFrame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">setTimeModeFiltered</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> alpha<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\ttimeMode <span class=\"token operator\">=</span> Filtered<span class=\"token punctuation\">;</span>\n\tfps<span class=\"token punctuation\">.</span><span class=\"token function\">setFilterAlpha</span><span class=\"token punctuation\">(</span>alpha<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">setFrameRate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> _targetRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// given this FPS, what is the amount of millis per frame</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// that should elapse?</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// --- > f / s</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_targetRate <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tbFrameRateSet <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tbFrameRateSet\t<span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\ttargetRate\t\t<span class=\"token operator\">=</span> _targetRate<span class=\"token punctuation\">;</span>\n\t\tuint64_t nanosPerFrame <span class=\"token operator\">=</span> <span class=\"token number\">1000000000.0</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span>targetRate<span class=\"token punctuation\">;</span>\n\t\ttimer<span class=\"token punctuation\">.</span><span class=\"token function\">setPeriodicEvent</span><span class=\"token punctuation\">(</span>nanosPerFrame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n<span class=\"token keyword\">float</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">getFrameRate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> fps<span class=\"token punctuation\">.</span><span class=\"token function\">getFps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n<span class=\"token keyword\">float</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">getTargetFrameRate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> targetRate<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n<span class=\"token keyword\">double</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">getLastFrameTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>timeMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> Filtered<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> fps<span class=\"token punctuation\">.</span><span class=\"token function\">getLastFrameFilteredSecs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> FixedRate<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> std<span class=\"token operator\">::</span>chrono<span class=\"token operator\">::</span>duration<span class=\"token operator\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>fixedRateTimeNanos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> System<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> fps<span class=\"token punctuation\">.</span><span class=\"token function\">getLastFrameSecs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\nuint64_t ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">getFrameNum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> fps<span class=\"token punctuation\">.</span><span class=\"token function\">getNumFrames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">getMousePressed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span> <span class=\"token comment\" spellcheck=\"true\">//by default any button</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>button<span class=\"token operator\">==</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> pressedMouseButtons<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> pressedMouseButtons<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>button<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span>pressedMouseButtons<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">getKeyPressed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key<span class=\"token operator\">==</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> pressedKeys<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> pressedKeys<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span>pressedKeys<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n<span class=\"token keyword\">int</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">getMouseX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> currentMouseX<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n<span class=\"token keyword\">int</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">getMouseY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> currentMouseY<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n<span class=\"token keyword\">int</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">getPreviousMouseX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> previousMouseX<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n<span class=\"token keyword\">int</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">getPreviousMouseY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> previousMouseY<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n<span class=\"token keyword\">int</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">getModifiers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> modifiers<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">notifySetup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span> setup<span class=\"token punctuation\">,</span> voidEventArgs <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGraphics.h\"</span></span>\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">notifyUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span> update<span class=\"token punctuation\">,</span> voidEventArgs <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">notifyDraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">auto</span> attended <span class=\"token operator\">=</span> <span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span> draw<span class=\"token punctuation\">,</span> voidEventArgs <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bFrameRateSet<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\ttimer<span class=\"token punctuation\">.</span><span class=\"token function\">waitNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>fps<span class=\"token punctuation\">.</span><span class=\"token function\">getNumFrames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bFrameRateSet<span class=\"token punctuation\">)</span> fps <span class=\"token operator\">=</span> <span class=\"token function\">ofFpsCounter</span><span class=\"token punctuation\">(</span>targetRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">/*if(ofIsVerticalSyncEnabled()){\n\t\t\tfloat rate = ofGetRefreshRate();\n\t\t\tint intervals = round(lastFrameTime*rate/1000000.);//+vsyncedIntervalsRemainder;\n\t\t\t//vsyncedIntervalsRemainder = lastFrameTime*rate/1000000.+vsyncedIntervalsRemainder - intervals;\n\t\t\tlastFrameTime = intervals*1000000/rate;\n\t\t}*/</span>\n\t<span class=\"token punctuation\">}</span>\n\tfps<span class=\"token punctuation\">.</span><span class=\"token function\">newFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> attended<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">notifyKeyPressed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> keycode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> scancode<span class=\"token punctuation\">,</span> uint32_t codepoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofKeyEventArgs <span class=\"token function\">keyEventArgs</span><span class=\"token punctuation\">(</span>ofKeyEventArgs<span class=\"token operator\">::</span>Pressed<span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">,</span>keycode<span class=\"token punctuation\">,</span>scancode<span class=\"token punctuation\">,</span>codepoint<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">notifyKeyEvent</span><span class=\"token punctuation\">(</span>keyEventArgs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">notifyKeyReleased</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> keycode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> scancode<span class=\"token punctuation\">,</span> uint32_t codepoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofKeyEventArgs <span class=\"token function\">keyEventArgs</span><span class=\"token punctuation\">(</span>ofKeyEventArgs<span class=\"token operator\">::</span>Released<span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">,</span>keycode<span class=\"token punctuation\">,</span>scancode<span class=\"token punctuation\">,</span>codepoint<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">notifyKeyEvent</span><span class=\"token punctuation\">(</span>keyEventArgs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">notifyKeyEvent</span><span class=\"token punctuation\">(</span>ofKeyEventArgs <span class=\"token operator\">&amp;</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">bool</span> attended <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tmodifiers <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>modifiers<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> ofKeyEventArgs<span class=\"token operator\">::</span>Pressed<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// FIXME: modifiers are being reported twice, for generic and for left/right</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// add operators to the arguments class so it can be checked for both</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> OF_KEY_RIGHT_CONTROL <span class=\"token operator\">||</span> e<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> OF_KEY_LEFT_CONTROL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tpressedKeys<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>OF_KEY_CONTROL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tofKeyEventArgs keyEventArgs <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span>\n\t\t\t\tkeyEventArgs<span class=\"token punctuation\">.</span>key <span class=\"token operator\">=</span> OF_KEY_CONTROL<span class=\"token punctuation\">;</span>\n\t\t\t\tattended <span class=\"token operator\">=</span> <span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span> keyPressed<span class=\"token punctuation\">,</span> keyEventArgs <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> OF_KEY_RIGHT_SHIFT <span class=\"token operator\">||</span> e<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> OF_KEY_LEFT_SHIFT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tpressedKeys<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>OF_KEY_SHIFT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tofKeyEventArgs keyEventArgs <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span>\n\t\t\t\tkeyEventArgs<span class=\"token punctuation\">.</span>key <span class=\"token operator\">=</span> OF_KEY_SHIFT<span class=\"token punctuation\">;</span>\n\t\t\t\tattended <span class=\"token operator\">=</span> <span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span> keyPressed<span class=\"token punctuation\">,</span> keyEventArgs <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> OF_KEY_LEFT_ALT <span class=\"token operator\">||</span> e<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> OF_KEY_RIGHT_ALT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tpressedKeys<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>OF_KEY_ALT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tofKeyEventArgs keyEventArgs <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span>\n\t\t\t\tkeyEventArgs<span class=\"token punctuation\">.</span>key <span class=\"token operator\">=</span> OF_KEY_ALT<span class=\"token punctuation\">;</span>\n\t\t\t\tattended <span class=\"token operator\">=</span> <span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span> keyPressed<span class=\"token punctuation\">,</span> keyEventArgs <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> OF_KEY_LEFT_SUPER <span class=\"token operator\">||</span> e<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> OF_KEY_RIGHT_SUPER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tpressedKeys<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>OF_KEY_SUPER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tofKeyEventArgs keyEventArgs <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span>\n\t\t\t\tkeyEventArgs<span class=\"token punctuation\">.</span>key <span class=\"token operator\">=</span> OF_KEY_SUPER<span class=\"token punctuation\">;</span>\n\t\t\t\tattended <span class=\"token operator\">=</span> <span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span> keyPressed<span class=\"token punctuation\">,</span> keyEventArgs <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\tpressedKeys<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>attended<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span> keyPressed<span class=\"token punctuation\">,</span> e <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">return</span> attended<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">case</span> ofKeyEventArgs<span class=\"token operator\">::</span>Released<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// FIXME: modifiers are being reported twice, for generic and for left/right</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// add operators to the arguments class so it can be checked for both</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> OF_KEY_RIGHT_CONTROL <span class=\"token operator\">||</span> e<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> OF_KEY_LEFT_CONTROL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tpressedKeys<span class=\"token punctuation\">.</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span>OF_KEY_CONTROL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tofKeyEventArgs keyEventArgs <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span>\n\t\t\t\tkeyEventArgs<span class=\"token punctuation\">.</span>key <span class=\"token operator\">=</span> OF_KEY_CONTROL<span class=\"token punctuation\">;</span>\n\t\t\t\tattended <span class=\"token operator\">=</span> <span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span> keyReleased<span class=\"token punctuation\">,</span> keyEventArgs <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> OF_KEY_RIGHT_SHIFT <span class=\"token operator\">||</span> e<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> OF_KEY_LEFT_SHIFT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tpressedKeys<span class=\"token punctuation\">.</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span>OF_KEY_SHIFT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tofKeyEventArgs keyEventArgs <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span>\n\t\t\t\tkeyEventArgs<span class=\"token punctuation\">.</span>key <span class=\"token operator\">=</span> OF_KEY_SHIFT<span class=\"token punctuation\">;</span>\n\t\t\t\tattended <span class=\"token operator\">=</span> <span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span> keyReleased<span class=\"token punctuation\">,</span> keyEventArgs <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> OF_KEY_LEFT_ALT <span class=\"token operator\">||</span> e<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> OF_KEY_RIGHT_ALT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tpressedKeys<span class=\"token punctuation\">.</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span>OF_KEY_ALT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tofKeyEventArgs keyEventArgs <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span>\n\t\t\t\tkeyEventArgs<span class=\"token punctuation\">.</span>key <span class=\"token operator\">=</span> OF_KEY_ALT<span class=\"token punctuation\">;</span>\n\t\t\t\tattended <span class=\"token operator\">=</span> <span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span> keyReleased<span class=\"token punctuation\">,</span> keyEventArgs <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> OF_KEY_LEFT_SUPER <span class=\"token operator\">||</span> e<span class=\"token punctuation\">.</span>key <span class=\"token operator\">==</span> OF_KEY_RIGHT_SUPER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tpressedKeys<span class=\"token punctuation\">.</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span>OF_KEY_SUPER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tofKeyEventArgs keyEventArgs <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span>\n\t\t\t\tkeyEventArgs<span class=\"token punctuation\">.</span>key <span class=\"token operator\">=</span> OF_KEY_SUPER<span class=\"token punctuation\">;</span>\n\t\t\t\tattended <span class=\"token operator\">=</span> <span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span> keyReleased<span class=\"token punctuation\">,</span> keyEventArgs <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\tpressedKeys<span class=\"token punctuation\">.</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>attended<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span> keyReleased<span class=\"token punctuation\">,</span> e <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">return</span> attended<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">notifyTouchDown</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> touchID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofTouchEventArgs touchArgs<span class=\"token punctuation\">;</span>\n\ttouchArgs<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> touchID<span class=\"token punctuation\">;</span>\n\ttouchArgs<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n\ttouchArgs<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n\ttouchArgs<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> ofTouchEventArgs<span class=\"token operator\">::</span>down<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">notifyTouchEvent</span><span class=\"token punctuation\">(</span>touchArgs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">notifyTouchUp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> touchID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofTouchEventArgs touchArgs<span class=\"token punctuation\">;</span>\n\ttouchArgs<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> touchID<span class=\"token punctuation\">;</span>\n\ttouchArgs<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n\ttouchArgs<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n\ttouchArgs<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> ofTouchEventArgs<span class=\"token operator\">::</span>up<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">notifyTouchEvent</span><span class=\"token punctuation\">(</span>touchArgs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">notifyTouchMoved</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> touchID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofTouchEventArgs touchArgs<span class=\"token punctuation\">;</span>\n\ttouchArgs<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> touchID<span class=\"token punctuation\">;</span>\n\ttouchArgs<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n\ttouchArgs<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n\ttouchArgs<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> ofTouchEventArgs<span class=\"token operator\">::</span>move<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">notifyTouchEvent</span><span class=\"token punctuation\">(</span>touchArgs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">notifyTouchCancelled</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> touchID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofTouchEventArgs touchArgs<span class=\"token punctuation\">;</span>\n\ttouchArgs<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> touchID<span class=\"token punctuation\">;</span>\n\ttouchArgs<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n\ttouchArgs<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n\ttouchArgs<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> ofTouchEventArgs<span class=\"token operator\">::</span>cancel<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">notifyTouchEvent</span><span class=\"token punctuation\">(</span>touchArgs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">notifyTouchDoubleTap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> touchID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofTouchEventArgs touchArgs<span class=\"token punctuation\">;</span>\n\ttouchArgs<span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> touchID<span class=\"token punctuation\">;</span>\n\ttouchArgs<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n\ttouchArgs<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n\ttouchArgs<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> ofTouchEventArgs<span class=\"token operator\">::</span>doubleTap<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">notifyTouchEvent</span><span class=\"token punctuation\">(</span>touchArgs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">notifyTouchEvent</span><span class=\"token punctuation\">(</span>ofTouchEventArgs <span class=\"token operator\">&amp;</span> touchArgs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>touchArgs<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> ofTouchEventArgs<span class=\"token operator\">::</span>move<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span> touchMoved<span class=\"token punctuation\">,</span> touchArgs <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> ofTouchEventArgs<span class=\"token operator\">::</span>down<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span> touchDown<span class=\"token punctuation\">,</span> touchArgs <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> ofTouchEventArgs<span class=\"token operator\">::</span>up<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span> touchUp<span class=\"token punctuation\">,</span> touchArgs <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> ofTouchEventArgs<span class=\"token operator\">::</span>cancel<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span> touchCancelled<span class=\"token punctuation\">,</span> touchArgs <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> ofTouchEventArgs<span class=\"token operator\">::</span>doubleTap<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span> touchDoubleTap<span class=\"token punctuation\">,</span> touchArgs <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">bool</span>  ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">notifyMouseEvent</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tmodifiers <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>modifiers<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> ofMouseEventArgs<span class=\"token operator\">::</span>Moved<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> bPreMouseNotSet <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tpreviousMouseX\t<span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\t\t\t\tpreviousMouseY\t<span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\t\t\t\tbPreMouseNotSet\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\tpreviousMouseX <span class=\"token operator\">=</span> currentMouseX<span class=\"token punctuation\">;</span>\n\t\t\t\tpreviousMouseY <span class=\"token operator\">=</span> currentMouseY<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\tcurrentMouseX <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\t\t\tcurrentMouseY <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span> mouseMoved<span class=\"token punctuation\">,</span> e <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> ofMouseEventArgs<span class=\"token operator\">::</span>Dragged<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> bPreMouseNotSet <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tpreviousMouseX\t<span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\t\t\t\tpreviousMouseY\t<span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\t\t\t\tbPreMouseNotSet\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\tpreviousMouseX <span class=\"token operator\">=</span> currentMouseX<span class=\"token punctuation\">;</span>\n\t\t\t\tpreviousMouseY <span class=\"token operator\">=</span> currentMouseY<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\tcurrentMouseX <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\t\t\tcurrentMouseY <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span> mouseDragged<span class=\"token punctuation\">,</span> e <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> ofMouseEventArgs<span class=\"token operator\">::</span>Pressed<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> bPreMouseNotSet <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tpreviousMouseX\t<span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\t\t\t\tpreviousMouseY\t<span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\t\t\t\tbPreMouseNotSet\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\tpreviousMouseX <span class=\"token operator\">=</span> currentMouseX<span class=\"token punctuation\">;</span>\n\t\t\t\tpreviousMouseY <span class=\"token operator\">=</span> currentMouseY<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\tcurrentMouseX <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\t\t\tcurrentMouseY <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\t\t\tpressedMouseButtons<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span> mousePressed<span class=\"token punctuation\">,</span> e <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">case</span> ofMouseEventArgs<span class=\"token operator\">::</span>Released<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> bPreMouseNotSet <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tpreviousMouseX\t<span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\t\t\t\tpreviousMouseY\t<span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\t\t\t\tbPreMouseNotSet\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\tpreviousMouseX <span class=\"token operator\">=</span> currentMouseX<span class=\"token punctuation\">;</span>\n\t\t\t\tpreviousMouseY <span class=\"token operator\">=</span> currentMouseY<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\tcurrentMouseX <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\t\t\tcurrentMouseY <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\t\t\tpressedMouseButtons<span class=\"token punctuation\">.</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span> mouseReleased<span class=\"token punctuation\">,</span> e <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> ofMouseEventArgs<span class=\"token operator\">::</span>Scrolled<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span> mouseScrolled<span class=\"token punctuation\">,</span> e <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> ofMouseEventArgs<span class=\"token operator\">::</span>Entered<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span> mouseEntered<span class=\"token punctuation\">,</span> e <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> ofMouseEventArgs<span class=\"token operator\">::</span>Exited<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span> mouseExited<span class=\"token punctuation\">,</span> e <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">notifyMousePressed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofMouseEventArgs <span class=\"token function\">mouseEventArgs</span><span class=\"token punctuation\">(</span>ofMouseEventArgs<span class=\"token operator\">::</span>Pressed<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">notifyMouseEvent</span><span class=\"token punctuation\">(</span>mouseEventArgs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">notifyMouseReleased</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofMouseEventArgs <span class=\"token function\">mouseEventArgs</span><span class=\"token punctuation\">(</span>ofMouseEventArgs<span class=\"token operator\">::</span>Released<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">notifyMouseEvent</span><span class=\"token punctuation\">(</span>mouseEventArgs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">notifyMouseDragged</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofMouseEventArgs <span class=\"token function\">mouseEventArgs</span><span class=\"token punctuation\">(</span>ofMouseEventArgs<span class=\"token operator\">::</span>Dragged<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">notifyMouseEvent</span><span class=\"token punctuation\">(</span>mouseEventArgs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">notifyMouseMoved</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofMouseEventArgs <span class=\"token function\">mouseEventArgs</span><span class=\"token punctuation\">(</span>ofMouseEventArgs<span class=\"token operator\">::</span>Moved<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">notifyMouseEvent</span><span class=\"token punctuation\">(</span>mouseEventArgs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">notifyMouseScrolled</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> scrollX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> scrollY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofMouseEventArgs <span class=\"token function\">mouseEventArgs</span><span class=\"token punctuation\">(</span>ofMouseEventArgs<span class=\"token operator\">::</span>Scrolled<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmouseEventArgs<span class=\"token punctuation\">.</span>scrollX <span class=\"token operator\">=</span> scrollX<span class=\"token punctuation\">;</span>\n\tmouseEventArgs<span class=\"token punctuation\">.</span>scrollY <span class=\"token operator\">=</span> scrollY<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">notifyMouseEvent</span><span class=\"token punctuation\">(</span>mouseEventArgs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">notifyMouseEntered</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofMouseEventArgs <span class=\"token function\">mouseEventArgs</span><span class=\"token punctuation\">(</span>ofMouseEventArgs<span class=\"token operator\">::</span>Entered<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">notifyMouseEvent</span><span class=\"token punctuation\">(</span>mouseEventArgs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">notifyMouseExited</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofMouseEventArgs <span class=\"token function\">mouseEventArgs</span><span class=\"token punctuation\">(</span>ofMouseEventArgs<span class=\"token operator\">::</span>Exited<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">notifyMouseEvent</span><span class=\"token punctuation\">(</span>mouseEventArgs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">notifyExit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span> exit<span class=\"token punctuation\">,</span> voidEventArgs <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">notifyWindowResized</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofResizeEventArgs <span class=\"token function\">resizeEventArgs</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span> windowResized<span class=\"token punctuation\">,</span> resizeEventArgs <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">notifyWindowMoved</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofWindowPosEventArgs <span class=\"token function\">windowPosEventArgs</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span> windowMoved<span class=\"token punctuation\">,</span> windowPosEventArgs <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofCoreEvents<span class=\"token operator\">::</span><span class=\"token function\">notifyDragEvent</span><span class=\"token punctuation\">(</span>ofDragInfo info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span>fileDragEvent<span class=\"token punctuation\">,</span> info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofSendMessage</span><span class=\"token punctuation\">(</span>ofMessage msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofNotifyEvent</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>messageEvent<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofSendMessage</span><span class=\"token punctuation\">(</span>string messageString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofMessage <span class=\"token function\">msg</span><span class=\"token punctuation\">(</span>messageString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofSendMessage</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------</span>\n<span class=\"token keyword\">namespace</span> of<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">namespace</span> priv<span class=\"token punctuation\">{</span>\n\t\tstd<span class=\"token operator\">::</span>atomic<span class=\"token operator\">&lt;</span>uint_fast64_t<span class=\"token operator\">></span> StdFunctionId<span class=\"token operator\">::</span>nextId<span class=\"token punctuation\">;</span>\n\n\t\tAbstractEventToken<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">AbstractEventToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\t\tBaseFunctionId<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">BaseFunctionId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\t\tStdFunctionId<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">StdFunctionId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n","type":"source","static":true}}],"fetch":[]}