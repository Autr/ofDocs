{"data":[{"page":{"entry":{"name":"ofFpsCounter.h","filename":"ofFpsCounter.h","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/utils/ofFpsCounter.h","path":"/openframeworks/utils/ofFpsCounter_h","route":"/openframeworks/utils/ofFpsCounter.h","dir":"../libs/openFrameworks/utils","ext":"h","type":"source","id":334,"parent":329,"breadcrumbs":[329,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;queue></span></span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofFpsCounter</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">ofFpsCounter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofFpsCounter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> targetFps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">newFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// no need to call it usually, useful if</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// the update rate of the source is not very</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// consistent. calling update from the main</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// loop for example will make the measurement</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// update more often</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">double</span> <span class=\"token function\">getFps</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\tuint64_t <span class=\"token function\">getNumFrames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\tuint64_t <span class=\"token function\">getLastFrameNanos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">double</span> <span class=\"token function\">getLastFrameSecs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\tuint64_t <span class=\"token function\">getLastFrameFilteredNanos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">double</span> <span class=\"token function\">getLastFrameFilteredSecs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setFilterAlpha</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> alpha<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> now<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tuint64_t nFrameCount<span class=\"token punctuation\">;</span>\n\tofTime then<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">double</span> fps<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>chrono<span class=\"token operator\">::</span>nanoseconds lastFrameTime<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>chrono<span class=\"token operator\">::</span>nanoseconds filteredTime<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">double</span> filterAlpha<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>queue<span class=\"token operator\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token operator\">></span> timestamps<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n","type":"source","static":true}}],"fetch":[]}