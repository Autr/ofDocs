{"data":[{"page":{"entry":{"name":"ofImage.h","filename":"ofImage.h","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/graphics/ofImage.h","path":"/openframeworks/graphics/ofImage_h","route":"/openframeworks/graphics/ofImage.h","dir":"../libs/openFrameworks/graphics","ext":"h","type":"source","id":272,"parent":259,"breadcrumbs":[259,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofTexture.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofPixels.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGLBaseTypes.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGraphicsConstants.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGLUtils.h\"</span></span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofFile</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofBuffer</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\file</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ofImage is used for loading, saving and drawing images in openFrameworks.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ofImage is a convenient class that lets you both draw images to the screen</span>\n<span class=\"token comment\" spellcheck=\"true\">/// and manipulate their pixel data. The ofImage allows you to load an image</span>\n<span class=\"token comment\" spellcheck=\"true\">/// from disk, manipulate the pixels, and create an OpenGL texture that you</span>\n<span class=\"token comment\" spellcheck=\"true\">/// can display and manipulate on the graphics card. Loading a file into the</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ofImage allocates an ofPixels object and creates the ofTexture to display</span>\n<span class=\"token comment\" spellcheck=\"true\">/// the pixels.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Used for controlling the save quality of JPEGs.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// These values are directly mapped to FreeImage's JPEG quality flags.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\sa http://freeimage.sourceforge.net/fnet/html/E77CD483.htm</span>\n<span class=\"token keyword\">enum</span> ofImageQualityType <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Equivalent to FreeImage's JPEG_QUALITYSUPERB (100:1 ratio)</span>\n    OF_IMAGE_QUALITY_BEST<span class=\"token punctuation\">,</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Equivalent to FreeImage's JPEG_QUALITYGOOD (75:1 ratio)</span>\n    OF_IMAGE_QUALITY_HIGH<span class=\"token punctuation\">,</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Equivalent to FreeImage's JPEG_QUALITYNORMAL (50:1 ratio)</span>\n    OF_IMAGE_QUALITY_MEDIUM<span class=\"token punctuation\">,</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Equivalent to FreeImage's JPEG_QUALITYAVERAGE (25:1 ratio)</span>\n    OF_IMAGE_QUALITY_LOW<span class=\"token punctuation\">,</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Equivalent to FreeImage's JPEG_QUALITYBAD (10:1 ratio)</span>\n    OF_IMAGE_QUALITY_WORST\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\todo Needs documentation.</span>\n<span class=\"token keyword\">enum</span> ofImageFormat <span class=\"token punctuation\">{</span>\n    OF_IMAGE_FORMAT_BMP     <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_ICO     <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_JPEG    <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_JNG     <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_KOALA   <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_LBM     <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_IFF <span class=\"token operator\">=</span> OF_IMAGE_FORMAT_LBM<span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_MNG     <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_PBM     <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_PBMRAW  <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_PCD     <span class=\"token operator\">=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_PCX     <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_PGM     <span class=\"token operator\">=</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span>\n\tOF_IMAGE_FORMAT_PGMRAW  <span class=\"token operator\">=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_PNG     <span class=\"token operator\">=</span> <span class=\"token number\">13</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_PPM     <span class=\"token operator\">=</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_PPMRAW  <span class=\"token operator\">=</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_RAS     <span class=\"token operator\">=</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_TARGA   <span class=\"token operator\">=</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_TIFF    <span class=\"token operator\">=</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_WBMP    <span class=\"token operator\">=</span> <span class=\"token number\">19</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_PSD     <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_CUT     <span class=\"token operator\">=</span> <span class=\"token number\">21</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_XBM     <span class=\"token operator\">=</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_XPM     <span class=\"token operator\">=</span> <span class=\"token number\">23</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_DDS     <span class=\"token operator\">=</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_GIF     <span class=\"token operator\">=</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_HDR     <span class=\"token operator\">=</span> <span class=\"token number\">26</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_FAXG3   <span class=\"token operator\">=</span> <span class=\"token number\">27</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_SGI     <span class=\"token operator\">=</span> <span class=\"token number\">28</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_EXR     <span class=\"token operator\">=</span> <span class=\"token number\">29</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_J2K     <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_JP2     <span class=\"token operator\">=</span> <span class=\"token number\">31</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_PFM     <span class=\"token operator\">=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_PICT    <span class=\"token operator\">=</span> <span class=\"token number\">33</span><span class=\"token punctuation\">,</span>\n    OF_IMAGE_FORMAT_RAW     <span class=\"token operator\">=</span> <span class=\"token number\">34</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">inline</span> std<span class=\"token operator\">::</span>string <span class=\"token function\">ofImageFormatExtension</span><span class=\"token punctuation\">(</span>ofImageFormat format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_BMP<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"bmp\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_ICO<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"ico\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_JPEG<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"jpg\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_JNG<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"jng\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_KOALA<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"koala\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_LBM<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"lbm\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_MNG<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"mng\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_PBM<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"pbm\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_PBMRAW<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"pbm\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_PCD<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"pcd\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_PCX<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"pcx\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_PGM<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"pgm\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_PGMRAW<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"pgm\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_PNG<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"png\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_PPM<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"ppm\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_PPMRAW<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"ppm\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_RAS<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"ras\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_TARGA<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"tga\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_TIFF<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"tif\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_WBMP<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"wbmp\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_PSD<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"psd\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_CUT<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"cut\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_XBM<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"xbm\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_XPM<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"xpm\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_DDS<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"dds\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_GIF<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"gif\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_HDR<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"hdr\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_FAXG3<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"faxg3\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_SGI<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"sgi\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_EXR<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"exr\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_J2K<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"j2k\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_JP2<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"jp2\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_PFM<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"pfm\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_PICT<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"pict\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> OF_IMAGE_FORMAT_RAW<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"raw\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"unkown\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\todo Needs documentation.</span>\n<span class=\"token keyword\">struct</span> ofImageLoadSettings <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">bool</span> accurate <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> exifRotate <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> grayscale <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> separateCMYK <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">// FreeImage based stuff</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\todo Needs documentation.</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofLoadImage</span><span class=\"token punctuation\">(</span>ofPixels <span class=\"token operator\">&amp;</span> pix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path<span class=\"token operator\">&amp;</span> path<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofImageLoadSettings <span class=\"token operator\">&amp;</span>settings <span class=\"token operator\">=</span> <span class=\"token function\">ofImageLoadSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofLoadImage</span><span class=\"token punctuation\">(</span>ofPixels <span class=\"token operator\">&amp;</span> pix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofBuffer <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofImageLoadSettings <span class=\"token operator\">&amp;</span>settings <span class=\"token operator\">=</span> <span class=\"token function\">ofImageLoadSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofLoadImage</span><span class=\"token punctuation\">(</span>ofFloatPixels <span class=\"token operator\">&amp;</span> pix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path<span class=\"token operator\">&amp;</span> path<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofImageLoadSettings <span class=\"token operator\">&amp;</span>settings <span class=\"token operator\">=</span> <span class=\"token function\">ofImageLoadSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofLoadImage</span><span class=\"token punctuation\">(</span>ofFloatPixels <span class=\"token operator\">&amp;</span> pix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofBuffer <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofImageLoadSettings <span class=\"token operator\">&amp;</span>settings <span class=\"token operator\">=</span> <span class=\"token function\">ofImageLoadSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofLoadImage</span><span class=\"token punctuation\">(</span>ofShortPixels <span class=\"token operator\">&amp;</span> pix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path<span class=\"token operator\">&amp;</span> path<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofImageLoadSettings <span class=\"token operator\">&amp;</span>settings <span class=\"token operator\">=</span> <span class=\"token function\">ofImageLoadSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofLoadImage</span><span class=\"token punctuation\">(</span>ofShortPixels <span class=\"token operator\">&amp;</span> pix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofBuffer <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofImageLoadSettings <span class=\"token operator\">&amp;</span>settings <span class=\"token operator\">=</span> <span class=\"token function\">ofImageLoadSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\todo Needs documentation.</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofLoadImage</span><span class=\"token punctuation\">(</span>ofTexture <span class=\"token operator\">&amp;</span> tex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path<span class=\"token operator\">&amp;</span> path<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofImageLoadSettings <span class=\"token operator\">&amp;</span>settings <span class=\"token operator\">=</span> <span class=\"token function\">ofImageLoadSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofLoadImage</span><span class=\"token punctuation\">(</span>ofTexture <span class=\"token operator\">&amp;</span> tex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofBuffer <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofImageLoadSettings <span class=\"token operator\">&amp;</span>settings <span class=\"token operator\">=</span> <span class=\"token function\">ofImageLoadSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\todo Needs documentation.</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofSaveImage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPixels <span class=\"token operator\">&amp;</span> pix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path<span class=\"token operator\">&amp;</span> path<span class=\"token punctuation\">,</span> ofImageQualityType qualityLevel <span class=\"token operator\">=</span> OF_IMAGE_QUALITY_BEST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofSaveImage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPixels <span class=\"token operator\">&amp;</span> pix<span class=\"token punctuation\">,</span> ofBuffer <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">,</span> ofImageFormat format <span class=\"token operator\">=</span> OF_IMAGE_FORMAT_PNG<span class=\"token punctuation\">,</span> ofImageQualityType qualityLevel <span class=\"token operator\">=</span> OF_IMAGE_QUALITY_BEST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\todo Needs documentation.</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofSaveImage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFloatPixels <span class=\"token operator\">&amp;</span> pix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path<span class=\"token operator\">&amp;</span> path<span class=\"token punctuation\">,</span> ofImageQualityType qualityLevel <span class=\"token operator\">=</span> OF_IMAGE_QUALITY_BEST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofSaveImage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFloatPixels <span class=\"token operator\">&amp;</span> pix<span class=\"token punctuation\">,</span> ofBuffer <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">,</span> ofImageFormat format <span class=\"token operator\">=</span> OF_IMAGE_FORMAT_PNG<span class=\"token punctuation\">,</span> ofImageQualityType qualityLevel <span class=\"token operator\">=</span> OF_IMAGE_QUALITY_BEST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\todo Needs documentation.</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofSaveImage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofShortPixels <span class=\"token operator\">&amp;</span> pix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path<span class=\"token operator\">&amp;</span> path<span class=\"token punctuation\">,</span> ofImageQualityType qualityLevel <span class=\"token operator\">=</span> OF_IMAGE_QUALITY_BEST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofSaveImage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofShortPixels <span class=\"token operator\">&amp;</span> pix<span class=\"token punctuation\">,</span> ofBuffer <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">,</span> ofImageFormat format <span class=\"token operator\">=</span> OF_IMAGE_FORMAT_PNG<span class=\"token punctuation\">,</span> ofImageQualityType qualityLevel <span class=\"token operator\">=</span> OF_IMAGE_QUALITY_BEST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Deallocates FreeImage resources.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Used internally during shutdown.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofCloseFreeImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief A class representing an image using memory and gpu based pixels.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\tparam PixelType The data type used to represent a single pixel value.</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofImage_</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofBaseImage_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\name Image Construction</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\{</span>\n\n    <span class=\"token function\">ofImage_</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">ofImage_</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> pix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofImage_</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path <span class=\"token operator\">&amp;</span> fileName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofImageLoadSettings <span class=\"token operator\">&amp;</span>settings <span class=\"token operator\">=</span> <span class=\"token function\">ofImageLoadSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">ofImage_</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofImage_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">ofImage_</span><span class=\"token punctuation\">(</span>ofImage_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">&amp;&amp;</span> mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> SrcType<span class=\"token operator\">></span>\n    <span class=\"token function\">ofImage_</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofImage_<span class=\"token operator\">&lt;</span>SrcType<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token comment\" spellcheck=\"true\">/// This allocates space in the ofImage, both the ofPixels and the</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// ofTexture that the ofImage contains.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// You don't need to call this before loading an image, but for when you</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// want to allocate. space ahead of when you are going to use the image.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// The types of images can be `OF_IMAGE_COLOR`, `OF_IMAGE_COLOR_ALPHA`</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// or `OF_IMAGE_GRAYSCALE`.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// You need to call update() to update the texture after updating</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// the pixels manually.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param w Width of image to allocate.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param h Height of image to allocate.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param type The ofImageType.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span> ofImageType type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Whether the image has been allocated either by a call to</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// allocate or by loading pixel data into the image.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\returns true if the image has been allocated.</span>\n    <span class=\"token keyword\">bool</span> <span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Whether the image has been allocated either by a call to</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// allocate or by loading pixel data into the image.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\deprecated Use isAllocated() instead</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\returns true if the image has been allocated.</span>\n    <span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use isAllocated()\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">bAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief This clears the texture and pixels contained within the ofImage.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Loads an image given by fileName.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param fileName Program looks for image given by fileName, relative to</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// the data folder.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param settings Load options</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\returns true if image loaded correctly.</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path<span class=\"token operator\">&amp;</span> fileName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofImageLoadSettings <span class=\"token operator\">&amp;</span>settings <span class=\"token operator\">=</span> <span class=\"token function\">ofImageLoadSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Loads an image from an ofBuffer instance created by, for</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// instance, ofFile::readToBuffer().</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// This actually loads the image data into an ofPixels object and then</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// into the texture.</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofBuffer <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofImageLoadSettings <span class=\"token operator\">&amp;</span>settings <span class=\"token operator\">=</span> <span class=\"token function\">ofImageLoadSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use load instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">bool</span> <span class=\"token function\">loadImage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use load instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">bool</span> <span class=\"token function\">loadImage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofBuffer <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use load instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">bool</span> <span class=\"token function\">loadImage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFile <span class=\"token operator\">&amp;</span> file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">ofImage_</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\}</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\name Drawing</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\{</span>\n\n    <span class=\"token keyword\">using</span> ofBaseDraws<span class=\"token operator\">::</span>draw<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw the image at it's normal size.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param x Draw position on the x axis.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param y Draw position on the y axis.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw the texture at it's normal size with depth.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param x Draw position on the x axis.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param y Draw position on the y axis.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param z Draw position on the z axis.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> pos<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw the image at a given size.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param x Draw position on the x axis.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param y Draw position on the y axis.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param w Draw width.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param h Draw height.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw the image at a given size with depth.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param x Draw position on the x axis.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param y Draw position on the y axis.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param z Draw position on the z axis.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param w Draw width.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param h Draw height.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> pos<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws a subsection of the image.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// This functions like a clipping mask. Does not altering any pixel</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// data.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param x X position to draw cropped image at.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param y Y position to draw cropped image at.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param w Width of subsection to draw.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param h Height of subsection to draw.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param sx X position in image to begin cropping from.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param sy Y position in image to begin cropping from.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">drawSubsection</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws a subsection of the image.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// This functions like a clipping mask. Does not altering any pixel</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// data.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param x X position to draw cropped image at.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param y Y position to draw cropped image at.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param z Z position to draw cropped image at.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param w Width of subsection to draw.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param h Height of subsection to draw.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param sx X position in image to begin cropping from.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param sy Y position in image to begin cropping from.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">drawSubsection</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws a subsection of the image.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// This functions like a clipping mask. Does not altering any pixel</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// data.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param x X position to draw cropped image at.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param y Y position to draw cropped image at.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param w Width of subsection to draw.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param h Height of subsection to draw.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param sx X position in image to begin cropping from.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param sy Y position in image to begin cropping from.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param sw Source width of cropped area.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param sh Source height of cropped area.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">drawSubsection</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sh<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws a subsection of the image.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// This functions like a clipping mask. Does not altering any pixel</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// data.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param x X position to draw cropped image at.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param y Y position to draw cropped image at.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param z Z position to draw cropped image at.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param w Width of subsection to draw.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param h Height of subsection to draw.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param sx X position in image to begin cropping from.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param sy Y position in image to begin cropping from.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param sw Source width of cropped area.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param sh Source height of cropped area.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">drawSubsection</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sh<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\}</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\name Texture</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\{</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Call to ensure that changes to pixels are reflected in the ofTexture of the image.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// Many of the ofImage methods call this after they change the pixels,</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// but if you directly manipulate  the pixels of the ofImage, then you</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// should make sure to call update() before trying to draw the  texture</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// of the image to the screen.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Turns on or off the allocation and use of a texture.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param bUse Allocate and use a texture or not.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setUseTexture</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bUse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Returns whether the ofImage has a texture or not.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// If the ofImage doesn't have a texture, nothing will be drawn to the screen.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\returns true if the ofImage is using a texture.</span>\n    <span class=\"token keyword\">bool</span> <span class=\"token function\">isUsingTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Returns a reference to the texture that the ofImage contains.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// You can use this to directly manipulate the texture itself, but keep in</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// mind that if you manipulate the texture directly, there is no simple way</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// to copy the data from the texture back to the pixels and keep the ofImage in sync.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\returns A reference to the texture that the ofImage contains.</span>\n    ofTexture <span class=\"token operator\">&amp;</span> <span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Returns a const reference to the texture that the ofImage contains.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns A const reference to the texture that the ofImage contains.</span>\n    <span class=\"token keyword\">const</span> ofTexture <span class=\"token operator\">&amp;</span> <span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use getTexture\"</span><span class=\"token punctuation\">,</span>ofTexture <span class=\"token operator\">&amp;</span> <span class=\"token function\">getTextureReference</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use getTexture\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">const</span> ofTexture <span class=\"token operator\">&amp;</span> <span class=\"token function\">getTextureReference</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Binds the oftexture instance that the ofImage contains so that</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// it can be used for advanced drawing.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> textureLocation<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Unbinds the ofTexture instance that the ofImage contains.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// Call this after you call bind().</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> textureLocation<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief This sets the compression level used when creating mipmaps for</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// the ofTexture contained by the ofImage.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param compression The ofTexCompression to set.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setCompression</span><span class=\"token punctuation\">(</span>ofTexCompression compression<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\}</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\name Pixel Getters</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\{</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Returns a raw pointer to the pixel data.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// This function will give you access to a continuous block of pixels.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// you can grab the data and do what you like with it. If you have a</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// grayscale image, you will have (width*height)  number of pixels. Color</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// images will have (width*height*3) number of pixels (interlaced R,G,B),</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// and coloralpha images will have (width*height*4) number of pixels</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// (interlaced R,G,B,A).</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\warning This is a raw pointer. It's up to you to get this right.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\returns A raw pointer to the pixel data.</span>\n    ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief This returns an ofPixels reference that you can use to</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// manipulate the raw pixel data of the ofImage.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// Make sure you call either update() after making changes to the ofPixels.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\returns An ofPixels reference that you can use to manipulate the raw pixel data of the ofImage.</span>\n    <span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use getPixels() instead \"</span><span class=\"token punctuation\">,</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token function\">getPixelsRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use getPixels() instead \"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token function\">getPixelsRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">operator</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief This returns the ofColor representing the pixels at the x and y</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// position passed in.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param x x position of pixel</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param y y position of pixel</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\returns The ofColor representing the pixels at the x and y position passed in.</span>\n    ofColor_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> <span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief This returns the ofColor representing the pixels at the index</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// passed in.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param index index into pixel data</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns The ofColor representing the pixels at the index position passed in.</span>\n\tofColor_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> <span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Get height of image as a float.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\returns Height of image as float.</span>\n    <span class=\"token keyword\">float</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Get width of image as a float.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\returns Width of image as float.</span>\n    <span class=\"token keyword\">float</span> <span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\}</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\name Pixel Setters</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\{</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Sets the pixel at the x,y position passed in.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// The ofColor type needs to match the ofImage type, i.e. ofFloatImage</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// requires that you use ofFloatPixels.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param x x position of pixel.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param y y position of pixel.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param color Color to set pixel to.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofColor_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Sets the pixel at the given pixel buffer index</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param index Index of pixel to set.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param color Color to set pixel to.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofColor_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Sets all pixels to a color.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param color Color to set pixel to.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Sets the pixels of the image from an array of values.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// Set the pixels of the image from an array of values, for an</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// ofFloatImage these need to be floats, for an ofImage  these need to be</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// unsigned chars. The w and h values are important so that the correct</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// dimensions are set in the  image. This assumes that you're setting the</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// pixels from 0,0 or the upper left hand corner of the image. The</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// bOrderIsRGB flag allows you pass in pixel data that is BGR by setting</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// bOrderIsRGB=false.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param pixels Array of pixel values.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param w Width of image being passed in.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param h Height of image being passed in.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param type The image type can be OF_IMAGE_GRAYSCALE, OF_IMAGE_COLOR, or OF_IMAGE_COLOR_ALPHA.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param bOrderIsRGB Pass in pixel data that is BGR by setting bOrderIsRGB=false.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setFromPixels</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> PixelType <span class=\"token operator\">*</span> pixels<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span> ofImageType type<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bOrderIsRGB <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the pixels of the image from an ofPixels instance.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// Set the pixels of the image from an ofPixels instance, for an</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// ofFloatImage these need to be ofFloatPixels, for an ofImage these need</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// to be unsigned chars.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setFromPixels</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Grabs pixels from the opengl window specified by the region</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// (x, y, w, h) and turns them into an image.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// It resizes or allocates the ofImage if it's necessary.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\warning Uses glReadPixels() which can be slow.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param x x position of upper-left corner of region.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param y y position of upper-left corner of region.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param w Width of region.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param h Height of region.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">grabScreen</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Set type of image to one of the following: OF_IMAGE_GRAYSCALE,</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// OF_IMAGE_COLOR, OF_IMAGE_COLOR_ALPHA</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// This does cause the image to be reallocated and the texture to be</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// updated, so it can be an expensive operation  if done frequently.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// Converting down, for example from color to grayscale, loses</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// information and is a destructive change.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param type The type of image, one of the following:</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// `OF_IMAGE_GRAYSCALE`, `OF_IMAGE_COLOR`, `OF_IMAGE_COLOR_ALPHA`</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setImageType</span><span class=\"token punctuation\">(</span>ofImageType type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ofImageType <span class=\"token function\">getImageType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\}</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\name Modifiers</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\{</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Resizes the image to a new size (w, h); Can be used to scale up</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// or down an image.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param newWidth New width of image.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param newHeight New height of image.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> newWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> newHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief This crops the image to the w,h passed in from the x,y position.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// This does an in place crop and **allocates memory**.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param x x position of upper-left corner of region to crop.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param y y position of upper-left corner of region to crop.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param w Width of region to crop.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param h Height of region to crop.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">crop</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Replaces region in caller image specified by w,h,x,y with pixels from otherImage.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// The w,h are measured from the x,y, so passing 100, 100, 300, 300 will grab</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// a 300x300 pixel block of data starting from 100, 100.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param otherImage Image to crop from.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param x x position of upper-left corner of region to crop.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param y y position of upper-left corner of region to crop.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param w Width of region to crop.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param h Height of region to crop.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">cropFrom</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofImage_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> otherImage<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Rotates the image by a multiple of 90 degrees.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param rotation Amount to rotate in multiples of 90. For instance, if you pass</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// in 2, then the image will be rotated 180 degrees.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">rotate90</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> rotation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief This reflects the pixels of the image across the vertical and/or horizontal axis.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param vertical Set to true to reflect image across vertical axis.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param horizontal Set to true to reflect image across horizontal axis.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">mirror</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> vertical<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> horizontal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\}</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\name Anchor</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\{</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Change the drawing anchor from top-left corner to a position</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// specified by xPct and yPct.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// Changes the drawing position specified by draw() from the normal top-</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// left corner of the image to a position specified by xPct and yPct in</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// relation to the dimensions of the image. This can be useful  for</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// aligning and centering images as well as rotating an image around its</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// center. Note: range of  xPct and yPct is 0.0 to 1.0. For xPct, 1.0</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// represents the width of the image. For yPct, 1.0 represents  the</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// height of the image. These values are not capped.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param xPct X position of the new anchor, specified as a percent of the width of the image.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param yPct Y position of the new anchor, specified as a percent of the height of the image.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setAnchorPercent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> xPct<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> yPct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Changes drawing position from top-left corner to position specified by x,y.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// Changes the drawing position specified by draw() from the normal top-</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// left corner of the image to a  position specified by x and y, measured</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// in pixels. This can be useful for aligning and centering  images as</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// well as rotating an image around its center.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param x X position of the new anchor.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param y Y position of the new anchor.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setAnchorPoint</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Removes anchor positioning.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// Resets the anchor to (0, 0) so the image will be drawn from its</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// upper left hand corner.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">resetAnchor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\name Saving</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\{</span>\n\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Saves the image to the file path in fileName with the image</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// quality specified by compressionLevel.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param fileName Saves image to this path, relative to the data folder.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param compressionLevel The ofImageQualityType.</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path <span class=\"token operator\">&amp;</span> fileName<span class=\"token punctuation\">,</span> ofImageQualityType compressionLevel <span class=\"token operator\">=</span> OF_IMAGE_QUALITY_BEST<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief This saves the image to the ofBuffer passed with the image</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// quality specified by compressionLevel.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param buffer ofBuffer to save image to.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param compressionLevel The ofImageQualityType.</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span>ofBuffer <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">,</span> ofImageFormat imageFormat <span class=\"token operator\">=</span> OF_IMAGE_FORMAT_PNG<span class=\"token punctuation\">,</span> ofImageQualityType compressionLevel <span class=\"token operator\">=</span> OF_IMAGE_QUALITY_BEST<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use save instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">saveImage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> fileName<span class=\"token punctuation\">,</span> ofImageQualityType compressionLevel <span class=\"token operator\">=</span> OF_IMAGE_QUALITY_BEST<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use save instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">saveImage</span><span class=\"token punctuation\">(</span>ofBuffer <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">,</span> ofImageQualityType compressionLevel <span class=\"token operator\">=</span> OF_IMAGE_QUALITY_BEST<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use save instead\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">saveImage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFile <span class=\"token operator\">&amp;</span> file<span class=\"token punctuation\">,</span> ofImageQualityType compressionLevel <span class=\"token operator\">=</span> OF_IMAGE_QUALITY_BEST<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\}</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\name Operators</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\{</span>\n\n    ofImage_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// default copy overwriting (for = or std::vector)</span>\n    ofImage_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofImage_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> SrcType<span class=\"token operator\">></span>\n    ofImage_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofImage_<span class=\"token operator\">&lt;</span>SrcType<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">//move assignment</span>\n    ofImage_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ofImage_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">&amp;&amp;</span> mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\}</span>\n    <span class=\"token comment\" spellcheck=\"true\">///&lt; \\sa ofImageType</span>\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\cond INTERNAL</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">changeTypeOfPixels</span><span class=\"token punctuation\">(</span>ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>pix<span class=\"token punctuation\">,</span> ofImageType type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">resizePixels</span><span class=\"token punctuation\">(</span>ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>pix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> newWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> newHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">unloadTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    ofPixels_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span> pixels<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">bool</span> bUseTexture<span class=\"token punctuation\">;</span>\n    ofTexture tex<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">int</span> width<span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">///&lt; \\brief Image width in pixels.</span>\n    <span class=\"token keyword\">int</span> height<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">///&lt; \\brief Image Height in pixels.</span>\n    <span class=\"token keyword\">int</span> bpp<span class=\"token punctuation\">;</span>    <span class=\"token comment\" spellcheck=\"true\">///&lt; \\brief Bits per image pixel.</span>\n    ofImageType type<span class=\"token punctuation\">;</span>   <span class=\"token comment\" spellcheck=\"true\">///&lt; \\brief Image type.</span>\n\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> SrcType<span class=\"token operator\">></span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofImage_<span class=\"token operator\">&lt;</span>SrcType<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\endcond</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\name Variants</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\{</span>\n<span class=\"token keyword\">typedef</span> ofImage_<span class=\"token operator\">&lt;</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">></span> ofImage<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> ofImage_<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span> ofFloatImage<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> ofImage_<span class=\"token operator\">&lt;</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">short</span><span class=\"token operator\">></span> ofShortImage<span class=\"token punctuation\">;</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\}</span>\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> SrcType<span class=\"token operator\">></span>\nofImage_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> ofImage_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofImage_<span class=\"token operator\">&lt;</span>SrcType<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> mom<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">clone</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> SrcType<span class=\"token operator\">></span>\nofImage_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">ofImage_</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofImage_<span class=\"token operator\">&lt;</span>SrcType<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> mom<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">clone</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> PixelType<span class=\"token operator\">></span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> SrcType<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> ofImage_<span class=\"token operator\">&lt;</span>PixelType<span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofImage_<span class=\"token operator\">&lt;</span>SrcType<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span>mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    pixels <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    tex<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bUseTexture <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">isUsingTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bUseTexture <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">&amp;&amp;</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        tex<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLInternalFormat</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\nstd<span class=\"token operator\">::</span>string <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> T <span class=\"token operator\">&amp;</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\nstd<span class=\"token operator\">::</span>string <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofImageType <span class=\"token operator\">&amp;</span> imgType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n","type":"source","static":true}}],"fetch":[]}