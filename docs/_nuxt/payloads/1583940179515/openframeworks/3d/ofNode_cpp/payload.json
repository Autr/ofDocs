{"data":[{"page":{"entry":{"name":"ofNode.cpp","filename":"ofNode.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/3d/ofNode.cpp","path":"/openframeworks/3d/ofNode_cpp","route":"/openframeworks/3d/ofNode.cpp","dir":"../libs/openFrameworks/3d","ext":"cpp","type":"source","id":205,"parent":194,"breadcrumbs":[194,195],"siblings":[],"translations":{}},"document":"\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofNode.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofMath.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofLog.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"of3dGraphics.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGraphicsBaseTypes.h\"</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofNode<span class=\"token operator\">::</span><span class=\"token function\">ofNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">:</span><span class=\"token function\">parent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">localTransformMatrix</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">legacyCustomDrawOverrided</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tposition<span class=\"token punctuation\">.</span><span class=\"token function\">disableEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tscale<span class=\"token punctuation\">.</span><span class=\"token function\">disableEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\torientation<span class=\"token punctuation\">.</span><span class=\"token function\">disableEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofNode<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tparent<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">removeListener</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// clearParent() will remove children of this element as a side-effect.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// This changes the \"children\", and so we can't use a normal foreach</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// loop, but must use the following construction to deal with newly</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// invalidated iterators:</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>children<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>children<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">clearParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofNode<span class=\"token operator\">::</span><span class=\"token function\">ofNode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofNode <span class=\"token operator\">&amp;</span> node<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">:</span><span class=\"token function\">parent</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">axis</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>axis<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">localTransformMatrix</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>localTransformMatrix<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">legacyCustomDrawOverrided</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tparent<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tposition <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">;</span>\n\torientation <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>orientation<span class=\"token punctuation\">;</span>\n\tscale <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">;</span>\n\tposition<span class=\"token punctuation\">.</span><span class=\"token function\">disableEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tscale<span class=\"token punctuation\">.</span><span class=\"token function\">disableEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\torientation<span class=\"token punctuation\">.</span><span class=\"token function\">disableEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofNode<span class=\"token operator\">::</span><span class=\"token function\">ofNode</span><span class=\"token punctuation\">(</span>ofNode <span class=\"token operator\">&amp;&amp;</span> node<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">:</span><span class=\"token function\">parent</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">position</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">orientation</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>orientation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">axis</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>axis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">localTransformMatrix</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>localTransformMatrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">legacyCustomDrawOverrided</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>legacyCustomDrawOverrided<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">children</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tparent<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofNode <span class=\"token operator\">&amp;</span> ofNode<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofNode <span class=\"token operator\">&amp;</span> node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">==</span> <span class=\"token operator\">&amp;</span>node<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\tparent <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">;</span>\n\tposition <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">;</span>\n\torientation <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>orientation<span class=\"token punctuation\">;</span>\n\tscale <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">;</span>\n\taxis <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>axis<span class=\"token punctuation\">;</span>\n\tposition<span class=\"token punctuation\">.</span><span class=\"token function\">disableEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tscale<span class=\"token punctuation\">.</span><span class=\"token function\">disableEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\torientation<span class=\"token punctuation\">.</span><span class=\"token function\">disableEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tlocalTransformMatrix <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>localTransformMatrix<span class=\"token punctuation\">;</span>\n\tlegacyCustomDrawOverrided <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tparent<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofNode <span class=\"token operator\">&amp;</span> ofNode<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ofNode <span class=\"token operator\">&amp;&amp;</span> node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span> <span class=\"token operator\">==</span> <span class=\"token operator\">&amp;</span>node<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\tparent <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">;</span>\n\tposition <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\torientation <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>orientation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tscale <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>scale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\taxis <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>axis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tlocalTransformMatrix <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>localTransformMatrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tlegacyCustomDrawOverrided <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>legacyCustomDrawOverrided<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tchildren <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tparent<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>ofNode <span class=\"token operator\">&amp;</span> node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tposition<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>node<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ofNode<span class=\"token operator\">::</span>onParentPositionChanged<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\torientation<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>node<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ofNode<span class=\"token operator\">::</span>onParentOrientationChanged<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tscale<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>node<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ofNode<span class=\"token operator\">::</span>onParentScaleChanged<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tposition<span class=\"token punctuation\">.</span><span class=\"token function\">enableEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\torientation<span class=\"token punctuation\">.</span><span class=\"token function\">enableEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tscale<span class=\"token punctuation\">.</span><span class=\"token function\">enableEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tchildren<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">removeListener</span><span class=\"token punctuation\">(</span>ofNode <span class=\"token operator\">&amp;</span> node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tposition<span class=\"token punctuation\">.</span><span class=\"token function\">removeListener</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>node<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ofNode<span class=\"token operator\">::</span>onParentPositionChanged<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\torientation<span class=\"token punctuation\">.</span><span class=\"token function\">removeListener</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>node<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ofNode<span class=\"token operator\">::</span>onParentOrientationChanged<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tscale<span class=\"token punctuation\">.</span><span class=\"token function\">removeListener</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>node<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ofNode<span class=\"token operator\">::</span>onParentScaleChanged<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">.</span><span class=\"token function\">getNumListeners</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tposition<span class=\"token punctuation\">.</span><span class=\"token function\">disableEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tscale<span class=\"token punctuation\">.</span><span class=\"token function\">disableEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\torientation<span class=\"token punctuation\">.</span><span class=\"token function\">disableEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tchildren<span class=\"token punctuation\">.</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">setParent</span><span class=\"token punctuation\">(</span>ofNode<span class=\"token operator\">&amp;</span> parent<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bMaintainGlobalTransform<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>parent<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// we need to make sure to clear before</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// re-assigning parenthood.</span>\n\t\t<span class=\"token function\">clearParent</span><span class=\"token punctuation\">(</span>bMaintainGlobalTransform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bMaintainGlobalTransform<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">auto</span> postParentPosition <span class=\"token operator\">=</span> position <span class=\"token operator\">-</span> parent<span class=\"token punctuation\">.</span><span class=\"token function\">getGlobalPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">auto</span> postParentOrientation <span class=\"token operator\">=</span> orientation<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> glm<span class=\"token operator\">::</span><span class=\"token function\">inverse</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">.</span><span class=\"token function\">getGlobalOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">auto</span> postParentScale <span class=\"token operator\">=</span> scale <span class=\"token operator\">/</span> parent<span class=\"token punctuation\">.</span><span class=\"token function\">getGlobalScale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tparent<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">setOrientation</span><span class=\"token punctuation\">(</span>postParentOrientation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>postParentPosition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span>postParentScale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\tparent<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>parent <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>parent<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">clearParent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bMaintainGlobalTransform<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tparent<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">removeListener</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bMaintainGlobalTransform <span class=\"token operator\">&amp;&amp;</span> parent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">auto</span> orientation <span class=\"token operator\">=</span> <span class=\"token function\">getGlobalOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">auto</span> position <span class=\"token operator\">=</span> <span class=\"token function\">getGlobalPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">auto</span> scale <span class=\"token operator\">=</span> <span class=\"token function\">getGlobalScale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>parent <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">setOrientation</span><span class=\"token punctuation\">(</span>orientation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span>scale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>parent <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nofNode<span class=\"token operator\">*</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">getParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> parent<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> px<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> py<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> pz<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>px<span class=\"token punctuation\">,</span> py<span class=\"token punctuation\">,</span> pz<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tposition <span class=\"token operator\">=</span> p<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">createMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">onPositionChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">setGlobalPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> px<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> py<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> pz<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setGlobalPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>px<span class=\"token punctuation\">,</span> py<span class=\"token punctuation\">,</span> pz<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">setGlobalPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>parent <span class=\"token operator\">==</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">auto</span> newP <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">inverse</span><span class=\"token punctuation\">(</span>parent<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getGlobalTransformMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec4</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>newP<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> newP<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nglm<span class=\"token operator\">::</span>vec3 ofNode<span class=\"token operator\">::</span><span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> position<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">getX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> position<span class=\"token operator\">-</span><span class=\"token operator\">></span>x<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">getY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> position<span class=\"token operator\">-</span><span class=\"token operator\">></span>y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">getZ</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> position<span class=\"token operator\">-</span><span class=\"token operator\">></span>z<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">setOrientation</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>quat<span class=\"token operator\">&amp;</span> q<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\torientation <span class=\"token operator\">=</span> q<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">createMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">onOrientationChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">setOrientation</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> eulerAngles<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setOrientation</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">angleAxis</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofDegToRad</span><span class=\"token punctuation\">(</span>eulerAngles<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> glm<span class=\"token operator\">::</span><span class=\"token function\">angleAxis</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofDegToRad</span><span class=\"token punctuation\">(</span>eulerAngles<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> glm<span class=\"token operator\">::</span><span class=\"token function\">angleAxis</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofDegToRad</span><span class=\"token punctuation\">(</span>eulerAngles<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">setGlobalOrientation</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>quat<span class=\"token operator\">&amp;</span> q<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>parent <span class=\"token operator\">==</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setOrientation</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">auto</span> invParent <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">inverse</span><span class=\"token punctuation\">(</span>parent<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getGlobalOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">auto</span> m44 <span class=\"token operator\">=</span> invParent <span class=\"token operator\">*</span> q<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">setOrientation</span><span class=\"token punctuation\">(</span>m44<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nglm<span class=\"token operator\">::</span>quat ofNode<span class=\"token operator\">::</span><span class=\"token function\">getOrientationQuat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> orientation<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nglm<span class=\"token operator\">::</span>vec3 ofNode<span class=\"token operator\">::</span><span class=\"token function\">getOrientationEuler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getOrientationEulerDeg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nglm<span class=\"token operator\">::</span>vec3 ofNode<span class=\"token operator\">::</span><span class=\"token function\">getOrientationEulerDeg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">auto</span> euler <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">eulerAngles</span><span class=\"token punctuation\">(</span>orientation<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token function\">ofRadToDeg</span><span class=\"token punctuation\">(</span>euler<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofRadToDeg</span><span class=\"token punctuation\">(</span>euler<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofRadToDeg</span><span class=\"token punctuation\">(</span>euler<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nglm<span class=\"token operator\">::</span>vec3 ofNode<span class=\"token operator\">::</span><span class=\"token function\">getOrientationEulerRad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> glm<span class=\"token operator\">::</span><span class=\"token function\">eulerAngles</span><span class=\"token punctuation\">(</span>orientation<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sz<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>sx<span class=\"token punctuation\">,</span> sy<span class=\"token punctuation\">,</span> sz<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> s<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>scale <span class=\"token operator\">=</span> s<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">createMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">onScaleChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nglm<span class=\"token operator\">::</span>vec3 ofNode<span class=\"token operator\">::</span><span class=\"token function\">getScale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> scale<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> offset<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tposition <span class=\"token operator\">+</span><span class=\"token operator\">=</span> offset<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">createMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">onPositionChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">truck</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> amount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token function\">getXAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">boom</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> amount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token function\">getYAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">dolly</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> amount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">move</span><span class=\"token punctuation\">(</span><span class=\"token function\">getZAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">tilt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">rotateDeg</span><span class=\"token punctuation\">(</span>degrees<span class=\"token punctuation\">,</span> <span class=\"token function\">getXAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">pan</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">rotateDeg</span><span class=\"token punctuation\">(</span>degrees<span class=\"token punctuation\">,</span> <span class=\"token function\">getYAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">roll</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">rotateDeg</span><span class=\"token punctuation\">(</span>degrees<span class=\"token punctuation\">,</span> <span class=\"token function\">getZAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">tiltDeg</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">rotateDeg</span><span class=\"token punctuation\">(</span>degrees<span class=\"token punctuation\">,</span> <span class=\"token function\">getXAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">panDeg</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">rotateDeg</span><span class=\"token punctuation\">(</span>degrees<span class=\"token punctuation\">,</span> <span class=\"token function\">getYAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">rollDeg</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">rotateDeg</span><span class=\"token punctuation\">(</span>degrees<span class=\"token punctuation\">,</span> <span class=\"token function\">getZAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">tiltRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radians<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">rotateRad</span><span class=\"token punctuation\">(</span>radians<span class=\"token punctuation\">,</span> <span class=\"token function\">getXAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">panRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radians<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">rotateRad</span><span class=\"token punctuation\">(</span>radians<span class=\"token punctuation\">,</span> <span class=\"token function\">getYAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">rollRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radians<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">rotateRad</span><span class=\"token punctuation\">(</span>radians<span class=\"token punctuation\">,</span> <span class=\"token function\">getZAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>quat<span class=\"token operator\">&amp;</span> q<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\torientation <span class=\"token operator\">=</span> q <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>quat<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span>orientation<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">createMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">onOrientationChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> v<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">rotateDeg</span><span class=\"token punctuation\">(</span>degrees<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">rotateDeg</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> v<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">angleAxis</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofDegToRad</span><span class=\"token punctuation\">(</span>degrees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">rotateRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radians<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> v<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">angleAxis</span><span class=\"token punctuation\">(</span>radians<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vz<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">rotateDeg</span><span class=\"token punctuation\">(</span>degrees<span class=\"token punctuation\">,</span> vx<span class=\"token punctuation\">,</span> vy<span class=\"token punctuation\">,</span> vz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">rotateDeg</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vz<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">angleAxis</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofDegToRad</span><span class=\"token punctuation\">(</span>degrees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>vx<span class=\"token punctuation\">,</span> vy<span class=\"token punctuation\">,</span> vz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">rotateRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radians<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vz<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">angleAxis</span><span class=\"token punctuation\">(</span>radians<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>vx<span class=\"token punctuation\">,</span> vy<span class=\"token punctuation\">,</span> vz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">rotateAround</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>quat<span class=\"token operator\">&amp;</span> q<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> point<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//\tofLogVerbose(\"ofNode\") &lt;&lt; \"rotateAround(const glm::quat&amp; q, const ofVec3f&amp; point) not implemented yet\";</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//\tofMatrix4x4 m = getLocalTransformMatrix();</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//\tm.setTranslation(point);</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//\tm.rotate(q);</span>\n\t\n\t<span class=\"token function\">setGlobalPosition</span><span class=\"token punctuation\">(</span>q <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getGlobalPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> point<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token function\">onOrientationChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">onPositionChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">rotateAround</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> axis<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> point<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">rotateAroundDeg</span><span class=\"token punctuation\">(</span>degrees<span class=\"token punctuation\">,</span> axis<span class=\"token punctuation\">,</span> point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">rotateAroundDeg</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> axis<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> point<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">rotateAround</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">angleAxis</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofDegToRad</span><span class=\"token punctuation\">(</span>degrees<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> axis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">rotateAroundRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radians<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> axis<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> point<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">rotateAround</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">angleAxis</span><span class=\"token punctuation\">(</span>radians<span class=\"token punctuation\">,</span> axis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> lookAtPosition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">auto</span> relPosition <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getGlobalPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> lookAtPosition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> radius <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span>relPosition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>radius<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">float</span> latitude <span class=\"token operator\">=</span> <span class=\"token function\">acos</span><span class=\"token punctuation\">(</span>relPosition<span class=\"token punctuation\">.</span>y <span class=\"token operator\">/</span> radius<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> glm<span class=\"token operator\">::</span>half_pi<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span> longitude <span class=\"token operator\">=</span> <span class=\"token function\">atan2</span><span class=\"token punctuation\">(</span>relPosition<span class=\"token punctuation\">.</span>x <span class=\"token punctuation\">,</span> relPosition<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tglm<span class=\"token operator\">::</span>quat q <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">angleAxis</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> glm<span class=\"token operator\">::</span><span class=\"token function\">angleAxis</span><span class=\"token punctuation\">(</span>longitude<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> glm<span class=\"token operator\">::</span><span class=\"token function\">angleAxis</span><span class=\"token punctuation\">(</span>latitude<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">setGlobalOrientation</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> lookAtPosition<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span>vec3 upVector<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">auto</span> upVector4 <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">inverse</span><span class=\"token punctuation\">(</span>parent<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getGlobalTransformMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec4</span><span class=\"token punctuation\">(</span>upVector<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tupVector <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>upVector4<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> upVector4<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">auto</span> zaxis <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token function\">getGlobalPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> lookAtPosition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span>zaxis<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">auto</span> xaxis <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">cross</span><span class=\"token punctuation\">(</span>upVector<span class=\"token punctuation\">,</span> zaxis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">auto</span> yaxis <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">cross</span><span class=\"token punctuation\">(</span>zaxis<span class=\"token punctuation\">,</span> xaxis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tglm<span class=\"token operator\">::</span>mat3 m<span class=\"token punctuation\">;</span>\n\t\tm<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> xaxis<span class=\"token punctuation\">;</span>\n\t\tm<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> yaxis<span class=\"token punctuation\">;</span>\n\t\tm<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> zaxis<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">setGlobalOrientation</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">toQuat</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofNode<span class=\"token operator\">&amp;</span> lookAtNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span>lookAtNode<span class=\"token punctuation\">.</span><span class=\"token function\">getGlobalPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofNode<span class=\"token operator\">&amp;</span> lookAtNode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> upVector<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span>lookAtNode<span class=\"token punctuation\">.</span><span class=\"token function\">getGlobalPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> upVector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">updateAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>scale<span class=\"token operator\">-</span><span class=\"token operator\">></span>x<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> axis<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token function\">getLocalTransformMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span>scale<span class=\"token operator\">-</span><span class=\"token operator\">></span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>scale<span class=\"token operator\">-</span><span class=\"token operator\">></span>y<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> axis<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token function\">getLocalTransformMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span>scale<span class=\"token operator\">-</span><span class=\"token operator\">></span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>scale<span class=\"token operator\">-</span><span class=\"token operator\">></span>z<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> axis<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token function\">getLocalTransformMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span>scale<span class=\"token operator\">-</span><span class=\"token operator\">></span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nglm<span class=\"token operator\">::</span>vec3 ofNode<span class=\"token operator\">::</span><span class=\"token function\">getXAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> axis<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nglm<span class=\"token operator\">::</span>vec3 ofNode<span class=\"token operator\">::</span><span class=\"token function\">getYAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> axis<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nglm<span class=\"token operator\">::</span>vec3 ofNode<span class=\"token operator\">::</span><span class=\"token function\">getZAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> axis<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nglm<span class=\"token operator\">::</span>vec3 ofNode<span class=\"token operator\">::</span><span class=\"token function\">getSideDir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getXAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nglm<span class=\"token operator\">::</span>vec3 ofNode<span class=\"token operator\">::</span><span class=\"token function\">getLookAtDir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token function\">getZAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nglm<span class=\"token operator\">::</span>vec3 ofNode<span class=\"token operator\">::</span><span class=\"token function\">getUpDir</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getYAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">getPitch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getPitchDeg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">getHeading</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getHeadingDeg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">getRoll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getRollDeg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">getPitchDeg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getOrientationEulerDeg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">getHeadingDeg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getOrientationEulerDeg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">getRollDeg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getOrientationEulerDeg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">getPitchRad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getOrientationEulerRad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">getHeadingRad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getOrientationEulerRad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">float</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">getRollRad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getOrientationEulerRad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4<span class=\"token operator\">&amp;</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">getLocalTransformMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> localTransformMatrix<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nglm<span class=\"token operator\">::</span>mat4 ofNode<span class=\"token operator\">::</span><span class=\"token function\">getGlobalTransformMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> parent<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getGlobalTransformMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token function\">getLocalTransformMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">return</span> <span class=\"token function\">getLocalTransformMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nglm<span class=\"token operator\">::</span>vec3 ofNode<span class=\"token operator\">::</span><span class=\"token function\">getGlobalPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token function\">getGlobalTransformMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nglm<span class=\"token operator\">::</span>quat ofNode<span class=\"token operator\">::</span><span class=\"token function\">getGlobalOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> parent<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getGlobalOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token function\">getOrientationQuat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getOrientationQuat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\nglm<span class=\"token operator\">::</span>vec3 ofNode<span class=\"token operator\">::</span><span class=\"token function\">getGlobalScale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">getScale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>parent<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getGlobalScale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">return</span> <span class=\"token function\">getScale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">orbit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> longitude<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> latitude<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> centerPoint<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">orbitDeg</span><span class=\"token punctuation\">(</span>longitude<span class=\"token punctuation\">,</span> latitude<span class=\"token punctuation\">,</span> radius<span class=\"token punctuation\">,</span> centerPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">orbit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> longitude<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> latitude<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> ofNode<span class=\"token operator\">&amp;</span> centerNode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">orbitDeg</span><span class=\"token punctuation\">(</span>longitude<span class=\"token punctuation\">,</span> latitude<span class=\"token punctuation\">,</span> radius<span class=\"token punctuation\">,</span> centerNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">orbitDeg</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> longitude<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> latitude<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> ofNode<span class=\"token operator\">&amp;</span> centerNode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">orbitDeg</span><span class=\"token punctuation\">(</span>longitude<span class=\"token punctuation\">,</span> latitude<span class=\"token punctuation\">,</span> radius<span class=\"token punctuation\">,</span> centerNode<span class=\"token punctuation\">.</span><span class=\"token function\">getGlobalPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">orbitDeg</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> longitude<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> latitude<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> centerPoint<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tglm<span class=\"token operator\">::</span>quat q <span class=\"token operator\">=</span> \n\t          glm<span class=\"token operator\">::</span><span class=\"token function\">angleAxis</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofDegToRad</span><span class=\"token punctuation\">(</span>longitude<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n\t        <span class=\"token operator\">*</span> glm<span class=\"token operator\">::</span><span class=\"token function\">angleAxis</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofDegToRad</span><span class=\"token punctuation\">(</span>latitude<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tglm<span class=\"token operator\">::</span>vec4 p <span class=\"token punctuation\">{</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\t   <span class=\"token comment\" spellcheck=\"true\">// p is a direction, not a position, so .w == 0</span>\n\t\n\tp <span class=\"token operator\">=</span> q <span class=\"token operator\">*</span> p<span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t   <span class=\"token comment\" spellcheck=\"true\">// rotate p on unit sphere based on quaternion</span>\n\tp <span class=\"token operator\">=</span> p <span class=\"token operator\">*</span> radius<span class=\"token punctuation\">;</span>\t\t\t\t\t\t   <span class=\"token comment\" spellcheck=\"true\">// scale p by radius from its position on unit sphere</span>\n\n\t<span class=\"token function\">setGlobalPosition</span><span class=\"token punctuation\">(</span>centerPoint <span class=\"token operator\">+</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setOrientation</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">onOrientationChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">onPositionChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">orbitRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> longitude<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> latitude<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> ofNode<span class=\"token operator\">&amp;</span> centerNode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">orbitRad</span><span class=\"token punctuation\">(</span>longitude<span class=\"token punctuation\">,</span> latitude<span class=\"token punctuation\">,</span> radius<span class=\"token punctuation\">,</span> centerNode<span class=\"token punctuation\">.</span><span class=\"token function\">getGlobalPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">orbitRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> longitude<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> latitude<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> centerPoint<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tglm<span class=\"token operator\">::</span>quat q <span class=\"token operator\">=</span> \n\t          glm<span class=\"token operator\">::</span><span class=\"token function\">angleAxis</span><span class=\"token punctuation\">(</span>longitude<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n\t        <span class=\"token operator\">*</span> glm<span class=\"token operator\">::</span><span class=\"token function\">angleAxis</span><span class=\"token punctuation\">(</span>latitude<span class=\"token punctuation\">,</span>  glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tglm<span class=\"token operator\">::</span>vec4 p <span class=\"token punctuation\">{</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\t   <span class=\"token comment\" spellcheck=\"true\">// p is a direction, not a position, so .w == 0</span>\n\t\n\tp <span class=\"token operator\">=</span> q <span class=\"token operator\">*</span> p<span class=\"token punctuation\">;</span>\t\t\t\t\t\t\t   <span class=\"token comment\" spellcheck=\"true\">// rotate p on unit sphere based on quaternion</span>\n\tp <span class=\"token operator\">=</span> p <span class=\"token operator\">*</span> radius<span class=\"token punctuation\">;</span>\t\t\t\t\t\t   <span class=\"token comment\" spellcheck=\"true\">// scale p by radius from its position on unit sphere</span>\n\n\t<span class=\"token function\">setGlobalPosition</span><span class=\"token punctuation\">(</span>centerPoint <span class=\"token operator\">+</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setOrientation</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">onOrientationChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">onPositionChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">resetTransform</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofGetCurrentRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">customDraw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofBaseRenderer <span class=\"token operator\">*</span> renderer<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofNode<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">customDraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>legacyCustomDrawOverrided<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\trenderer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">drawBox</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\trenderer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>ofMesh<span class=\"token operator\">::</span><span class=\"token function\">axis</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>OF_MESH_FILL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">customDraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tlegacyCustomDrawOverrided <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">transformGL</span><span class=\"token punctuation\">(</span>ofBaseRenderer <span class=\"token operator\">*</span> renderer<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> renderer <span class=\"token operator\">==</span> <span class=\"token keyword\">nullptr</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\trenderer <span class=\"token operator\">=</span> <span class=\"token function\">ofGetCurrentRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\trenderer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\trenderer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">multMatrix</span><span class=\"token punctuation\">(</span> <span class=\"token function\">getGlobalTransformMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">restoreTransformGL</span><span class=\"token punctuation\">(</span>ofBaseRenderer <span class=\"token operator\">*</span> renderer<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> renderer <span class=\"token operator\">==</span> <span class=\"token keyword\">nullptr</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\trenderer <span class=\"token operator\">=</span> <span class=\"token function\">ofGetCurrentRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\trenderer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">popMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> ofNode<span class=\"token operator\">::</span><span class=\"token function\">createMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tlocalTransformMatrix <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">mat4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">toGlm</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tlocalTransformMatrix <span class=\"token operator\">=</span> localTransformMatrix <span class=\"token operator\">*</span> glm<span class=\"token operator\">::</span><span class=\"token function\">toMat4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>quat<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span>orientation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tlocalTransformMatrix <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>localTransformMatrix<span class=\"token punctuation\">,</span> <span class=\"token function\">toGlm</span><span class=\"token punctuation\">(</span>scale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">updateAxis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n","type":"source","static":true}}],"fetch":[]}