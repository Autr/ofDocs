{"data":[{"page":{"entry":{"name":"ofAppGLFWWindow.h","filename":"ofAppGLFWWindow.h","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/app/ofAppGLFWWindow.h","path":"/openframeworks/app/ofAppGLFWWindow_h","route":"/openframeworks/app/ofAppGLFWWindow.h","dir":"../libs/openFrameworks/app","ext":"h","type":"source","id":212,"parent":207,"breadcrumbs":[207,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofAppBaseWindow.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofRectangle.h\"</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_LINUX) &amp;&amp; !defined(TARGET_RASPBERRY_PI_LEGACY)</span>\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> _XIM <span class=\"token operator\">*</span> XIM<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> _XIC <span class=\"token operator\">*</span> XIC<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofBaseApp</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">struct</span> GLFWwindow<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofCoreEvents</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofPixels_</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> ofPixels_<span class=\"token operator\">&lt;</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">></span> ofPixels<span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofGLFWWindowSettings</span><span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofGLESWindowSettings<span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofGLFWWindowSettings</span><span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofGLWindowSettings<span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">ofGLFWWindowSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n\t<span class=\"token function\">ofGLFWWindowSettings</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofGLESWindowSettings <span class=\"token operator\">&amp;</span> settings<span class=\"token punctuation\">)</span>\n\t<span class=\"token operator\">:</span><span class=\"token function\">ofGLESWindowSettings</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token function\">ofGLFWWindowSettings</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofGLWindowSettings <span class=\"token operator\">&amp;</span> settings<span class=\"token punctuation\">)</span>\n\t<span class=\"token operator\">:</span><span class=\"token function\">ofGLWindowSettings</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_RASPBERRY_PI</span>\n\t<span class=\"token keyword\">int</span> numSamples <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token keyword\">int</span> numSamples <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token keyword\">bool</span> doubleBuffering <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> redBits <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> greenBits <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> blueBits <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> alphaBits <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> depthBits <span class=\"token operator\">=</span> <span class=\"token number\">24</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> stencilBits <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> stereo <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> visible <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> iconified <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> decorated <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> resizable <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> monitor <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> multiMonitorFullScreen <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofAppBaseWindow<span class=\"token operator\">></span> shareContextWith<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofAppGLFWWindow</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofAppBaseGLESWindow<span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofAppGLFWWindow</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofAppBaseGLWindow <span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\n\t<span class=\"token function\">ofAppGLFWWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">~</span><span class=\"token function\">ofAppGLFWWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// Can't be copied, use shared_ptr</span>\n\t<span class=\"token function\">ofAppGLFWWindow</span><span class=\"token punctuation\">(</span>ofAppGLFWWindow <span class=\"token operator\">&amp;</span> w<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">delete</span><span class=\"token punctuation\">;</span>\n\tofAppGLFWWindow <span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ofAppGLFWWindow <span class=\"token operator\">&amp;</span> w<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">delete</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">doesLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">allowsMultiWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">needsPolling</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">pollEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token comment\" spellcheck=\"true\">// this functions are only meant to be called from inside OF don't call them from your code</span>\n    <span class=\"token keyword\">using</span> ofAppBaseWindow<span class=\"token operator\">::</span>setup<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofGLESWindowSettings <span class=\"token operator\">&amp;</span> settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofGLWindowSettings <span class=\"token operator\">&amp;</span> settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofGLFWWindowSettings <span class=\"token operator\">&amp;</span> settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">getWindowShouldClose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setWindowShouldClose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">hideCursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">showCursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tofCoreEvents <span class=\"token operator\">&amp;</span> <span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofBaseRenderer<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token function\">renderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    GLFWwindow<span class=\"token operator\">*</span> <span class=\"token function\">getGLFWWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> <span class=\"token function\">getWindowContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token function\">getGLFWWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\tofGLFWWindowSettings <span class=\"token function\">getSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> settings<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n\tglm<span class=\"token operator\">::</span>vec2\t<span class=\"token function\">getWindowSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tglm<span class=\"token operator\">::</span>vec2\t<span class=\"token function\">getScreenSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tglm<span class=\"token operator\">::</span>vec2 \t<span class=\"token function\">getWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setWindowTitle</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setWindowShape</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span>\t\t\t<span class=\"token function\">setOrientation</span><span class=\"token punctuation\">(</span>ofOrientation orientation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofOrientation\t<span class=\"token function\">getOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tofWindowMode\t<span class=\"token function\">getWindowMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span>\t\t<span class=\"token function\">setFullscreen</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> fullscreen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span>\t\t<span class=\"token function\">toggleFullscreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span>\t\t<span class=\"token function\">enableSetupScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span>\t\t<span class=\"token function\">disableSetupScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span>\t\t<span class=\"token function\">setVerticalSync</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bSync<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">void</span>        <span class=\"token function\">setClipboardString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    std<span class=\"token operator\">::</span>string      <span class=\"token function\">getClipboardString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">int</span>         <span class=\"token function\">getPixelScreenCoordScale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">void</span> \t\t<span class=\"token function\">makeCurrent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">swapBuffers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">startRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">finishRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">listVideoModes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">listMonitors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">isWindowIconified</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">isWindowActive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">isWindowResizeable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">iconify</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bIconify<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// window settings, this functions can only be called from main before calling ofSetupOpenGL</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// TODO: remove specialized version of ofSetupOpenGL when these go away</span>\n\t<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"use ofGLFWWindowSettings to create the window instead\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setNumSamples</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> samples<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"use ofGLFWWindowSettings to create the window instead\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setDoubleBuffering</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> doubleBuff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"use ofGLFWWindowSettings to create the window instead\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setColorBits</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"use ofGLFWWindowSettings to create the window instead\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setAlphaBits</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"use ofGLFWWindowSettings to create the window instead\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setDepthBits</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> depth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"use ofGLFWWindowSettings to create the window instead\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setStencilBits</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> stencil<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"use ofGLFWWindowSettings to create the window instead\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setMultiDisplayFullscreen</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bMultiFullscreen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//note this just enables the mode, you have to toggle fullscreen to activate it.</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_LINUX) &amp;&amp; !defined(TARGET_RASPBERRY_PI_LEGACY)</span>\n\tDisplay<span class=\"token operator\">*</span> \t<span class=\"token function\">getX11Display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tWindow  \t<span class=\"token function\">getX11Window</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tXIC\t\t\t<span class=\"token function\">getX11XIC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_LINUX) &amp;&amp; !defined(TARGET_OPENGLES)</span>\n\tGLXContext \t<span class=\"token function\">getGLXContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_LINUX) &amp;&amp; defined(TARGET_OPENGLES)</span>\n\tEGLDisplay \t<span class=\"token function\">getEGLDisplay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tEGLContext \t<span class=\"token function\">getEGLContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tEGLSurface \t<span class=\"token function\">getEGLSurface</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_OSX)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>\t\t<span class=\"token function\">getNSGLContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>\t\t<span class=\"token function\">getCocoaWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_WIN32)</span>\n\tHGLRC \t\t<span class=\"token function\">getWGLContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tHWND \t\t<span class=\"token function\">getWin32Window</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">static</span> ofAppGLFWWindow <span class=\"token operator\">*</span> <span class=\"token function\">setCurrent</span><span class=\"token punctuation\">(</span>GLFWwindow<span class=\"token operator\">*</span> windowP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> \t<span class=\"token function\">mouse_cb</span><span class=\"token punctuation\">(</span>GLFWwindow<span class=\"token operator\">*</span> windowP_<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> state<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> mods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> \t<span class=\"token function\">motion_cb</span><span class=\"token punctuation\">(</span>GLFWwindow<span class=\"token operator\">*</span> windowP_<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> \t<span class=\"token function\">entry_cb</span><span class=\"token punctuation\">(</span>GLFWwindow<span class=\"token operator\">*</span> windowP_<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> entered<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> \t<span class=\"token function\">keyboard_cb</span><span class=\"token punctuation\">(</span>GLFWwindow<span class=\"token operator\">*</span> windowP_<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> scancode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> action<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> mods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> \t<span class=\"token function\">char_cb</span><span class=\"token punctuation\">(</span>GLFWwindow<span class=\"token operator\">*</span> windowP_<span class=\"token punctuation\">,</span> uint32_t key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> \t<span class=\"token function\">resize_cb</span><span class=\"token punctuation\">(</span>GLFWwindow<span class=\"token operator\">*</span> windowP_<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> \t<span class=\"token function\">framebuffer_size_cb</span><span class=\"token punctuation\">(</span>GLFWwindow<span class=\"token operator\">*</span> windowP_<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> \t<span class=\"token function\">exit_cb</span><span class=\"token punctuation\">(</span>GLFWwindow<span class=\"token operator\">*</span> windowP_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span>\t\t<span class=\"token function\">scroll_cb</span><span class=\"token punctuation\">(</span>GLFWwindow<span class=\"token operator\">*</span> windowP_<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> \t<span class=\"token function\">drop_cb</span><span class=\"token punctuation\">(</span>GLFWwindow<span class=\"token operator\">*</span> windowP_<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> numFiles<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span> dropString<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span>\t\t<span class=\"token function\">error_cb</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> errorCode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> errorDescription<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_LINUX) &amp;&amp; !defined(TARGET_RASPBERRY_PI_LEGACY)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setWindowIcon</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setWindowIcon</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPixels <span class=\"token operator\">&amp;</span> iconPixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tXIM xim<span class=\"token punctuation\">;</span>\n\tXIC xic<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\tstd<span class=\"token operator\">::</span>unique_ptr<span class=\"token operator\">&lt;</span>ofCoreEvents<span class=\"token operator\">></span> coreEvents<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofBaseRenderer<span class=\"token operator\">></span> currentRenderer<span class=\"token punctuation\">;</span>\n\tofGLFWWindowSettings settings<span class=\"token punctuation\">;</span>\n\n\tofWindowMode\ttargetWindowMode<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">bool</span>\t\t\tbEnableSetupScreen<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span>\t\t\t\twindowW<span class=\"token punctuation\">,</span> windowH<span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\" spellcheck=\"true\">/// Physical framebuffer pixels extents</span>\n\t<span class=\"token keyword\">int</span>\t\t\t\tcurrentW<span class=\"token punctuation\">,</span> currentH<span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\" spellcheck=\"true\">/// Extents of the window client area, which may be scaled by pixelsScreenCoordScale to map to physical framebuffer pixels.</span>\n\t<span class=\"token keyword\">float</span>           pixelScreenCoordScale<span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">/// Scale factor from virtual operating-system defined client area extents (as seen in currentW, currentH) to physical framebuffer pixel coordinates (as seen in windowW, windowH).</span>\n\n\tofRectangle windowRect<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span>\t\t\t\tbuttonInUse<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span>\t\t\tbuttonPressed<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span> \t\t\tnFramesSinceWindowResized<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span>\t\t\tbWindowNeedsShowing<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span>\t\t\tneedsResizeCheck <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">/// Just for RPI at this point</span>\n\n\tGLFWwindow<span class=\"token operator\">*</span> \twindowP<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span>\t\t\t\t<span class=\"token function\">getCurrentMonitor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tofBaseApp <span class=\"token operator\">*</span>\tofAppPtr<span class=\"token punctuation\">;</span>\n\n\n\tofOrientation orientation<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">bool</span> iconSet<span class=\"token punctuation\">;</span>\n\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_WIN32</span>\n    LONG lExStyle<span class=\"token punctuation\">,</span> lStyle<span class=\"token punctuation\">;</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span> </span><span class=\"token comment\" spellcheck=\"true\">// TARGET_WIN32</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//#endif</span>\n","type":"source","static":true}}],"fetch":[]}