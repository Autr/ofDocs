{"data":[{"page":{"entry":{"name":"ofGstVideoPlayer.cpp","filename":"ofGstVideoPlayer.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/video/ofGstVideoPlayer.cpp","path":"/openframeworks/video/ofGstVideoPlayer_cpp","route":"/openframeworks/video/ofGstVideoPlayer.cpp","dir":"../libs/openFrameworks/video","ext":"cpp","type":"source","id":366,"parent":354,"breadcrumbs":[354,195],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">/*\n * ofGstVideoUtils.cpp\n *\n *  Created on: 16/01/2011\n *      Author: arturo\n */</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGstVideoPlayer.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;gst/gst.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;gst/video/video.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;gst/app/gstappsink.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGstUtils.h\"</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\nofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">ofGstVideoPlayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tnFrames\t\t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tinternalPixelFormat\t\t\t<span class=\"token operator\">=</span> OF_PIXELS_RGB<span class=\"token punctuation\">;</span>\n\tbIsStream\t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tbIsAllocated\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tthreadAppSink\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tbAsyncLoad\t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tvideoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">setSinkListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tfps_d <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\tfps_n <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofGstVideoPlayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">setPixelFormat</span><span class=\"token punctuation\">(</span>ofPixelFormat pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tinternalPixelFormat <span class=\"token operator\">=</span> pixelFormat<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofPixelFormat ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> internalPixelFormat<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">bool</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">createPipeline</span><span class=\"token punctuation\">(</span>string name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> OF_USE_GST_GL</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==0</span>\n\tGstCaps <span class=\"token operator\">*</span>caps<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> bpp<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>internalPixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_GRAY<span class=\"token operator\">:</span>\n\t\tbpp <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\t\tcaps <span class=\"token operator\">=</span> <span class=\"token function\">gst_caps_new_simple</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"video/x-raw-gray\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"bpp\"</span><span class=\"token punctuation\">,</span> G_TYPE_INT<span class=\"token punctuation\">,</span> bpp<span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"depth\"</span><span class=\"token punctuation\">,</span> G_TYPE_INT<span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB<span class=\"token operator\">:</span>\n\t\tbpp <span class=\"token operator\">=</span> <span class=\"token number\">24</span><span class=\"token punctuation\">;</span>\n\t\tcaps <span class=\"token operator\">=</span> <span class=\"token function\">gst_caps_new_simple</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"video/x-raw-rgb\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"bpp\"</span><span class=\"token punctuation\">,</span> G_TYPE_INT<span class=\"token punctuation\">,</span> bpp<span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"depth\"</span><span class=\"token punctuation\">,</span> G_TYPE_INT<span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"endianness\"</span><span class=\"token punctuation\">,</span>G_TYPE_INT<span class=\"token punctuation\">,</span><span class=\"token number\">4321</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"red_mask\"</span><span class=\"token punctuation\">,</span>G_TYPE_INT<span class=\"token punctuation\">,</span><span class=\"token number\">0xff0000</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"green_mask\"</span><span class=\"token punctuation\">,</span>G_TYPE_INT<span class=\"token punctuation\">,</span><span class=\"token number\">0x00ff00</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"blue_mask\"</span><span class=\"token punctuation\">,</span>G_TYPE_INT<span class=\"token punctuation\">,</span><span class=\"token number\">0x0000ff</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_RGBA<span class=\"token operator\">:</span>\n\t\tbpp <span class=\"token operator\">=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span>\n\t\tcaps <span class=\"token operator\">=</span> <span class=\"token function\">gst_caps_new_simple</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"video/x-raw-rgb\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"bpp\"</span><span class=\"token punctuation\">,</span> G_TYPE_INT<span class=\"token punctuation\">,</span> bpp<span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"depth\"</span><span class=\"token punctuation\">,</span> G_TYPE_INT<span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"endianness\"</span><span class=\"token punctuation\">,</span>G_TYPE_INT<span class=\"token punctuation\">,</span><span class=\"token number\">4321</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"red_mask\"</span><span class=\"token punctuation\">,</span>G_TYPE_INT<span class=\"token punctuation\">,</span><span class=\"token number\">0xff000000</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"green_mask\"</span><span class=\"token punctuation\">,</span>G_TYPE_INT<span class=\"token punctuation\">,</span><span class=\"token number\">0x00ff0000</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"blue_mask\"</span><span class=\"token punctuation\">,</span>G_TYPE_INT<span class=\"token punctuation\">,</span><span class=\"token number\">0x0000ff00</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"alpha_mask\"</span><span class=\"token punctuation\">,</span>G_TYPE_INT<span class=\"token punctuation\">,</span><span class=\"token number\">0x000000ff</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_PIXELS_BGRA<span class=\"token operator\">:</span>\n\t\tbpp <span class=\"token operator\">=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span>\n\t\tcaps <span class=\"token operator\">=</span> <span class=\"token function\">gst_caps_new_simple</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"video/x-raw-rgb\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"bpp\"</span><span class=\"token punctuation\">,</span> G_TYPE_INT<span class=\"token punctuation\">,</span> bpp<span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"depth\"</span><span class=\"token punctuation\">,</span> G_TYPE_INT<span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"endianness\"</span><span class=\"token punctuation\">,</span>G_TYPE_INT<span class=\"token punctuation\">,</span><span class=\"token number\">4321</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"red_mask\"</span><span class=\"token punctuation\">,</span>G_TYPE_INT<span class=\"token punctuation\">,</span><span class=\"token number\">0x0000ff00</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"green_mask\"</span><span class=\"token punctuation\">,</span>G_TYPE_INT<span class=\"token punctuation\">,</span><span class=\"token number\">0x00ff0000</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"blue_mask\"</span><span class=\"token punctuation\">,</span>G_TYPE_INT<span class=\"token punctuation\">,</span><span class=\"token number\">0xff000000</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"alpha_mask\"</span><span class=\"token punctuation\">,</span>G_TYPE_INT<span class=\"token punctuation\">,</span><span class=\"token number\">0x000000ff</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\tbpp <span class=\"token operator\">=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span>\n\t\tcaps <span class=\"token operator\">=</span> <span class=\"token function\">gst_caps_new_simple</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"video/x-raw-rgb\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"bpp\"</span><span class=\"token punctuation\">,</span> G_TYPE_INT<span class=\"token punctuation\">,</span> bpp<span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"depth\"</span><span class=\"token punctuation\">,</span> G_TYPE_INT<span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"endianness\"</span><span class=\"token punctuation\">,</span>G_TYPE_INT<span class=\"token punctuation\">,</span><span class=\"token number\">4321</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"red_mask\"</span><span class=\"token punctuation\">,</span>G_TYPE_INT<span class=\"token punctuation\">,</span><span class=\"token number\">0xff0000</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"green_mask\"</span><span class=\"token punctuation\">,</span>G_TYPE_INT<span class=\"token punctuation\">,</span><span class=\"token number\">0x00ff00</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token string\">\"blue_mask\"</span><span class=\"token punctuation\">,</span>G_TYPE_INT<span class=\"token punctuation\">,</span><span class=\"token number\">0x0000ff</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\tstring mime<span class=\"token operator\">=</span><span class=\"token string\">\"video/x-raw\"</span><span class=\"token punctuation\">;</span>\n\n\tGstCaps <span class=\"token operator\">*</span>caps<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>internalPixelFormat<span class=\"token operator\">==</span>OF_PIXELS_NATIVE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tcaps <span class=\"token operator\">=</span> <span class=\"token function\">gst_caps_from_string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>mime <span class=\"token operator\">+</span> <span class=\"token string\">\",format={RGBA,BGRA,RGB,BGR,RGB16,GRAY8,YV12,I420,NV12,NV21,YUY2}\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tstring format <span class=\"token operator\">=</span> ofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">getGstFormatName</span><span class=\"token punctuation\">(</span>internalPixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tcaps <span class=\"token operator\">=</span> <span class=\"token function\">gst_caps_new_simple</span><span class=\"token punctuation\">(</span>mime<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"token string\">\"format\"</span><span class=\"token punctuation\">,</span> G_TYPE_STRING<span class=\"token punctuation\">,</span> format<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==0</span>\n\t\tGstElement <span class=\"token operator\">*</span> gstPipeline <span class=\"token operator\">=</span> <span class=\"token function\">gst_element_factory_make</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"playbin2\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"player\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\tGstElement <span class=\"token operator\">*</span> gstPipeline <span class=\"token operator\">=</span> <span class=\"token function\">gst_element_factory_make</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"playbin\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"player\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token function\">g_object_ref_sink</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">g_object_set</span><span class=\"token punctuation\">(</span><span class=\"token function\">G_OBJECT</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"uri\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// create the oF appsink for video rgb without sync to clock</span>\n\tGstElement <span class=\"token operator\">*</span> gstSink <span class=\"token operator\">=</span> <span class=\"token function\">gst_element_factory_make</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"appsink\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"app_sink\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">gst_app_sink_set_caps</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_APP_SINK</span><span class=\"token punctuation\">(</span>gstSink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> caps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">gst_caps_unref</span><span class=\"token punctuation\">(</span>caps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>threadAppSink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tGstElement <span class=\"token operator\">*</span> appQueue <span class=\"token operator\">=</span> <span class=\"token function\">gst_element_factory_make</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"queue\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"appsink_queue\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">g_object_set</span><span class=\"token punctuation\">(</span><span class=\"token function\">G_OBJECT</span><span class=\"token punctuation\">(</span>appQueue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"leaky\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"silent\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tGstElement<span class=\"token operator\">*</span> appBin <span class=\"token operator\">=</span> <span class=\"token function\">gst_bin_new</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app_bin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">gst_bin_add</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_BIN</span><span class=\"token punctuation\">(</span>appBin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> appQueue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tGstPad<span class=\"token operator\">*</span> appQueuePad <span class=\"token operator\">=</span> <span class=\"token function\">gst_element_get_static_pad</span><span class=\"token punctuation\">(</span>appQueue<span class=\"token punctuation\">,</span> <span class=\"token string\">\"sink\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tGstPad<span class=\"token operator\">*</span> ghostPad <span class=\"token operator\">=</span> <span class=\"token function\">gst_ghost_pad_new</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"app_bin_sink\"</span><span class=\"token punctuation\">,</span> appQueuePad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">gst_object_unref</span><span class=\"token punctuation\">(</span>appQueuePad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">gst_element_add_pad</span><span class=\"token punctuation\">(</span>appBin<span class=\"token punctuation\">,</span> ghostPad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">gst_bin_add</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_BIN</span><span class=\"token punctuation\">(</span>appBin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> gstSink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">gst_element_link</span><span class=\"token punctuation\">(</span>appQueue<span class=\"token punctuation\">,</span> gstSink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">g_object_set</span> <span class=\"token punctuation\">(</span><span class=\"token function\">G_OBJECT</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"video-sink\"</span><span class=\"token punctuation\">,</span>appBin<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">g_object_set</span> <span class=\"token punctuation\">(</span><span class=\"token function\">G_OBJECT</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"video-sink\"</span><span class=\"token punctuation\">,</span>gstSink<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_WIN32</span>\n\t\tGstElement <span class=\"token operator\">*</span>audioSink <span class=\"token operator\">=</span> <span class=\"token function\">gst_element_factory_make</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"directsoundsink\"</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">g_object_set</span> <span class=\"token punctuation\">(</span><span class=\"token function\">G_OBJECT</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"audio-sink\"</span><span class=\"token punctuation\">,</span>audioSink<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token keyword\">return</span> videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">setPipelineWithSink</span><span class=\"token punctuation\">(</span>gstPipeline<span class=\"token punctuation\">,</span>gstSink<span class=\"token punctuation\">,</span>bIsStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">/*auto gstPipeline = gst_parse_launch((\"uridecodebin uri=\" + name + \" ! glcolorscale name=gl_filter ! appsink name=app_sink\").c_str(),NULL);\n\tauto gstSink = gst_bin_get_by_name(GST_BIN(gstPipeline),\"app_sink\");\n\tauto glfilter = gst_bin_get_by_name(GST_BIN(gstPipeline),\"gl_filter\");\n\tgst_app_sink_set_caps(GST_APP_SINK(gstSink), caps);\n\tgst_caps_unref(caps);\n\n\tglXMakeCurrent (ofGetX11Display(), None, 0);\n\tglDisplay = (GstGLDisplay *)gst_gl_display_x11_new_with_display(ofGetX11Display());\n\tglContext = gst_gl_context_new_wrapped (glDisplay, (guintptr) ofGetGLXContext(),\n\t    \t\t  GST_GL_PLATFORM_GLX, GST_GL_API_OPENGL);\n\n\tg_object_set (G_OBJECT (glfilter), \"other-context\", glContext, NULL);\n\n\t// FIXME: this seems to be the way to add the context in 1.4.5\n\t//\n\t// GstBus * bus = gst_pipeline_get_bus (GST_PIPELINE(gstPipeline));\n\t// gst_bus_enable_sync_message_emission (bus);\n\t// g_signal_connect (bus, \"sync-message\", G_CALLBACK (sync_bus_call), this);\n\t// gst_object_unref(bus);\n\n\tauto ret = videoUtils.setPipelineWithSink(gstPipeline,gstSink,bIsStream);\n\tglXMakeCurrent (ofGetX11Display(), ofGetX11Window(), ofGetGLXContext());\n\treturn ret;*/</span>\n\n\t<span class=\"token keyword\">return</span> videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">setPipeline</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"uridecodebin uri=\"</span> <span class=\"token operator\">+</span> name<span class=\"token punctuation\">,</span>internalPixelFormat<span class=\"token punctuation\">,</span>bIsStream<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//return videoUtils.setPipeline(\"filesrc location=\" + name + \" ! qtdemux \",internalPixelFormat,bIsStream,-1,-1);</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">loadAsync</span><span class=\"token punctuation\">(</span>string name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbAsyncLoad <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">load</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>string name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> name<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"file://\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> string<span class=\"token operator\">::</span>npos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tbIsStream <span class=\"token operator\">=</span> bAsyncLoad<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> name<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span> <span class=\"token string\">\"://\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> string<span class=\"token operator\">::</span>npos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tGError <span class=\"token operator\">*</span> err <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\t\tgchar<span class=\"token operator\">*</span> name_ptr <span class=\"token operator\">=</span> <span class=\"token function\">gst_filename_to_uri</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofToDataPath</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tname <span class=\"token operator\">=</span> name_ptr<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">g_free</span><span class=\"token punctuation\">(</span>name_ptr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token function\">g_free</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//name = ofToDataPath(name);</span>\n\t\tbIsStream <span class=\"token operator\">=</span> bAsyncLoad<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tbIsStream <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"loadMovie(): loading \\\"\"</span> <span class=\"token operator\">&lt;&lt;</span> name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"\"</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">gst_element_set_state</span> <span class=\"token punctuation\">(</span>videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">getPipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> GST_STATE_READY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bIsStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">gst_element_get_state</span> <span class=\"token punctuation\">(</span>videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">getPipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tinternalPixelFormat <span class=\"token operator\">=</span> OF_PIXELS_NATIVE<span class=\"token punctuation\">;</span>\n\t\tbIsAllocated <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\tvideoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">reallocateOnNextFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">g_object_set</span><span class=\"token punctuation\">(</span><span class=\"token function\">G_OBJECT</span><span class=\"token punctuation\">(</span>videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">getPipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"uri\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">gst_element_set_state</span> <span class=\"token punctuation\">(</span>videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">getPipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> GST_STATE_PAUSED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bIsStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">gst_element_get_state</span> <span class=\"token punctuation\">(</span>videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">getPipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">startGstMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">createPipeline</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n\t\t\t\tvideoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">startPipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n\t\t\t\t<span class=\"token punctuation\">(</span>bIsStream <span class=\"token operator\">||</span> <span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">setThreadAppSink</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> threaded<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tthreadAppSink <span class=\"token operator\">=</span> threaded<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">bool</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bIsAllocated<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tguint64 durationNanos <span class=\"token operator\">=</span> videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">getDurationNanos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tnFrames\t\t  <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>GstPad<span class=\"token operator\">*</span> pad <span class=\"token operator\">=</span> <span class=\"token function\">gst_element_get_static_pad</span><span class=\"token punctuation\">(</span>videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">getSink</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"sink\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==0</span>\n\t\t<span class=\"token keyword\">int</span> width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">gst_video_get_size</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_PAD</span><span class=\"token punctuation\">(</span>pad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>width<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">,</span>internalPixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"allocate(): couldn't query width and height\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">const</span> GValue <span class=\"token operator\">*</span>framerate <span class=\"token operator\">=</span> <span class=\"token function\">gst_video_frame_rate</span><span class=\"token punctuation\">(</span>pad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tfps_n<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\tfps_d<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>framerate <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">GST_VALUE_HOLDS_FRACTION</span> <span class=\"token punctuation\">(</span>framerate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tfps_n <span class=\"token operator\">=</span> <span class=\"token function\">gst_value_get_fraction_numerator</span> <span class=\"token punctuation\">(</span>framerate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tfps_d <span class=\"token operator\">=</span> <span class=\"token function\">gst_value_get_fraction_denominator</span> <span class=\"token punctuation\">(</span>framerate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tnFrames <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>durationNanos <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>GST_SECOND<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>fps_n<span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>fps_d<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"allocate(): framerate: \"</span> <span class=\"token operator\">&lt;&lt;</span> fps_n <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"/\"</span> <span class=\"token operator\">&lt;&lt;</span> fps_d<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"allocate(): cannot get framerate, frame seek won't work\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tbIsAllocated <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>GstCaps <span class=\"token operator\">*</span>caps <span class=\"token operator\">=</span> <span class=\"token function\">gst_pad_get_current_caps</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GST_PAD</span> <span class=\"token punctuation\">(</span>pad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tGstVideoInfo info<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">gst_video_info_init</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">gst_video_info_from_caps</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>info<span class=\"token punctuation\">,</span> caps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tofPixelFormat format <span class=\"token operator\">=</span> ofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">getOFFormat</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_VIDEO_INFO_FORMAT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>info<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>format<span class=\"token operator\">!=</span>internalPixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"allocating as \"</span> <span class=\"token operator\">&lt;&lt;</span> info<span class=\"token punctuation\">.</span>width <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"x\"</span> <span class=\"token operator\">&lt;&lt;</span> info<span class=\"token punctuation\">.</span>height <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> info<span class=\"token punctuation\">.</span>finfo<span class=\"token operator\">-</span><span class=\"token operator\">></span>description <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> info<span class=\"token punctuation\">.</span>finfo<span class=\"token operator\">-</span><span class=\"token operator\">></span>name<span class=\"token punctuation\">;</span>\n\t\t\t\t\tinternalPixelFormat <span class=\"token operator\">=</span> format<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>info<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>info<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span>format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"allocate(): couldn't query width and height\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\tfps_n <span class=\"token operator\">=</span> info<span class=\"token punctuation\">.</span>fps_n<span class=\"token punctuation\">;</span>\n\t\t\tfps_d <span class=\"token operator\">=</span> info<span class=\"token punctuation\">.</span>fps_d<span class=\"token punctuation\">;</span>\n\t\t\tnFrames <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>durationNanos <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>GST_SECOND<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>fps_n<span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>fps_d<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">gst_caps_unref</span><span class=\"token punctuation\">(</span>caps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tbIsAllocated <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"allocate(): cannot get pipeline caps\"</span><span class=\"token punctuation\">;</span>\n\t\t\tbIsAllocated <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token function\">gst_object_unref</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_OBJECT</span><span class=\"token punctuation\">(</span>pad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"allocate(): cannot get sink pad\"</span><span class=\"token punctuation\">;</span>\n\t\tbIsAllocated <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> bIsAllocated<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">on_stream_prepared</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bIsAllocated<span class=\"token punctuation\">)</span> <span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span>\tofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">getCurrentFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> frame <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// zach I think this may fail on variable length frames...</span>\n\t<span class=\"token keyword\">float</span> pos <span class=\"token operator\">=</span> <span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pos <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token keyword\">float</span>  framePosInFloat <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token function\">getTotalNumFrames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span>    framePosInInt <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>framePosInFloat<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span>  floatRemainder <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>framePosInFloat <span class=\"token operator\">-</span> framePosInInt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>floatRemainder <span class=\"token operator\">></span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span> framePosInInt <span class=\"token operator\">=</span> framePosInInt <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//frame = (int)ceil((getTotalNumFrames() * getPosition()));</span>\n\tframe <span class=\"token operator\">=</span> framePosInInt<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> frame<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span>\tofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">getTotalNumFrames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> nFrames<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">firstFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setFrame</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">nextFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tgint64 currentFrame <span class=\"token operator\">=</span> <span class=\"token function\">getCurrentFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentFrame<span class=\"token operator\">!=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token function\">setFrame</span><span class=\"token punctuation\">(</span>currentFrame <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">previousFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tgint64 currentFrame <span class=\"token operator\">=</span> <span class=\"token function\">getCurrentFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentFrame<span class=\"token operator\">!=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token function\">setFrame</span><span class=\"token punctuation\">(</span>currentFrame <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">setFrame</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> frame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token comment\" spellcheck=\"true\">// frame 0 = first frame...</span>\n\t<span class=\"token keyword\">float</span> pct <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>frame <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>nFrames<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>pct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">isStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> bIsStream<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tvideoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tvideoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tvideoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">setPaused</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bPause<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tvideoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">setPaused</span><span class=\"token punctuation\">(</span>bPause<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">isPaused</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">isPaused</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">isLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">isLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">isPlaying</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">isPlaying</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">getSpeed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">getSpeed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">getDuration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">getDuration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">getIsMovieDone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">getIsMovieDone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> pct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tvideoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>pct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">setVolume</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> volume<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tvideoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">setVolume</span><span class=\"token punctuation\">(</span>volume<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">setLoopState</span><span class=\"token punctuation\">(</span>ofLoopType state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tvideoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">setLoopState</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofLoopType ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">getLoopState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">getLoopState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">setSpeed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tvideoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">setSpeed</span><span class=\"token punctuation\">(</span>speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbIsAllocated <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tvideoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">isFrameNew</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">isFrameNew</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofPixels<span class=\"token operator\">&amp;</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> ofPixels<span class=\"token operator\">&amp;</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofTexture <span class=\"token operator\">*</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">getTexturePtr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofGstVideoUtils <span class=\"token operator\">*</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">getGstVideoUtils</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>videoUtils<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">setFrameByFrame</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> frameByFrame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tvideoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">setFrameByFrame</span><span class=\"token punctuation\">(</span>frameByFrame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">isThreadedAppSink</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> threadAppSink<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofGstVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">isFrameByFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">isFrameByFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n","type":"source","static":true}}],"fetch":[]}