{"data":[{"page":{"entry":{"name":"ofGstUtils.h","filename":"ofGstUtils.h","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/video/ofGstUtils.h","path":"/openframeworks/video/ofGstUtils_h","route":"/openframeworks/video/ofGstUtils.h","dir":"../libs/openFrameworks/video","ext":"h","type":"source","id":363,"parent":354,"breadcrumbs":[354,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_ANDROID</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofPixels.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofEvents.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofThread.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofVideoBaseTypes.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> GST_DISABLE_DEPRECATED</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;gst/gst.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;gst/gstpad.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;gst/video/video.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;queue></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;condition_variable></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;mutex></span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//#define OF_USE_GST_GL</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_USE_GST_GL</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> GST_USE_UNSTABLE_API</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;gst/gl/gl.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofGstAppSink</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofTexture</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> _GstElement GstElement<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> _GstBuffer GstBuffer<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> _GstMessage GstMessage<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------- ofGstUtils</span>\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------------</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofGstUtils</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">ofGstUtils</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">ofGstUtils</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">bool</span> \t<span class=\"token function\">setPipelineWithSink</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string pipeline<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>string sinkname<span class=\"token operator\">=</span><span class=\"token string\">\"sink\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> isStream<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> \t<span class=\"token function\">setPipelineWithSink</span><span class=\"token punctuation\">(</span>GstElement <span class=\"token operator\">*</span> pipeline<span class=\"token punctuation\">,</span> GstElement <span class=\"token operator\">*</span> sink<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> isStream<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span>\t<span class=\"token function\">startPipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> \t<span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> \t<span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> \t<span class=\"token function\">setPaused</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bPause<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> \t<span class=\"token function\">isPaused</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> bPaused<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">bool</span> \t<span class=\"token function\">isLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> bLoaded<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">bool</span> \t<span class=\"token function\">isPlaying</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> bPlaying<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">float</span>\t<span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> \t<span class=\"token function\">getSpeed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> \t<span class=\"token function\">getDuration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\tint64_t  <span class=\"token function\">getDurationNanos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span>  \t<span class=\"token function\">getIsMovieDone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> \t<span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> pct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> \t<span class=\"token function\">setVolume</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> volume<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> \t<span class=\"token function\">setLoopState</span><span class=\"token punctuation\">(</span>ofLoopType state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofLoopType\t<span class=\"token function\">getLoopState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> loopMode<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">void</span> \t<span class=\"token function\">setSpeed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> \t<span class=\"token function\">setFrameByFrame</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bFrameByFrame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span>\t<span class=\"token function\">isFrameByFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\tGstElement \t<span class=\"token operator\">*</span> <span class=\"token function\">getPipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\tGstElement \t<span class=\"token operator\">*</span> <span class=\"token function\">getSink</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\tGstElement \t<span class=\"token operator\">*</span> <span class=\"token function\">getGstElementByName</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\tuint64_t <span class=\"token function\">getMinLatencyNanos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\tuint64_t <span class=\"token function\">getMaxLatencyNanos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setSinkListener</span><span class=\"token punctuation\">(</span>ofGstAppSink <span class=\"token operator\">*</span> appsink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// callbacks to get called from gstreamer</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==0</span>\n\t<span class=\"token keyword\">virtual</span> GstFlowReturn <span class=\"token function\">preroll_cb</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>GstBuffer<span class=\"token operator\">></span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> GstFlowReturn <span class=\"token function\">buffer_cb</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>GstBuffer<span class=\"token operator\">></span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token keyword\">virtual</span> GstFlowReturn <span class=\"token function\">preroll_cb</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>GstSample<span class=\"token operator\">></span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> GstFlowReturn <span class=\"token function\">buffer_cb</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>GstSample<span class=\"token operator\">></span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> \t\t  <span class=\"token function\">eos_cb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">startGstMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> GMainLoop <span class=\"token operator\">*</span> <span class=\"token function\">getGstMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">quitGstMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\tofGstAppSink <span class=\"token operator\">*</span> \t\tappsink<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span>\t\t\t\tisStream<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span>\t\t\t\tclosing<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span>\t\t\t<span class=\"token function\">busFunction</span><span class=\"token punctuation\">(</span>GstBus <span class=\"token operator\">*</span> bus<span class=\"token punctuation\">,</span> GstMessage <span class=\"token operator\">*</span> message<span class=\"token punctuation\">,</span> ofGstUtils <span class=\"token operator\">*</span> app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span>\t\t\t\t<span class=\"token function\">gstHandleMessage</span><span class=\"token punctuation\">(</span>GstBus <span class=\"token operator\">*</span> bus<span class=\"token punctuation\">,</span> GstMessage <span class=\"token operator\">*</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">bool</span> \t\t\t\tbPlaying<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> \t\t\t\tbPaused<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span>\t\t\t\tbIsMovieDone<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> \t\t\t\tbLoaded<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> \t\t\t\tbFrameByFrame<span class=\"token punctuation\">;</span>\n\tofLoopType\t\t\tloopMode<span class=\"token punctuation\">;</span>\n\n\tGstElement  <span class=\"token operator\">*</span>\t\tgstSink<span class=\"token punctuation\">;</span>\n\tGstElement \t<span class=\"token operator\">*</span>\t\tgstPipeline<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">float</span>\t\t\t\tspeed<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">mutable</span> gint64\t\tdurationNanos<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span>\t\t\t\tisAppSink<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>condition_variable\t\teosCondition<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>mutex\t\t\teosMutex<span class=\"token punctuation\">;</span>\n\tguint\t\t\t\tbusWatchID<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofGstMainLoopThread</span><span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofThread<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token function\">ofGstMainLoopThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">:</span><span class=\"token function\">main_loop</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">ofGstMainLoopThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tmain_loop <span class=\"token operator\">=</span> <span class=\"token function\">g_main_loop_new</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">startThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">threadedFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">g_main_loop_run</span> <span class=\"token punctuation\">(</span>main_loop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\tGMainLoop <span class=\"token operator\">*</span> <span class=\"token function\">getMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> main_loop<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">quit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>main_loop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">g_main_loop_quit</span><span class=\"token punctuation\">(</span>main_loop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">waitForThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\t\tGMainLoop <span class=\"token operator\">*</span>main_loop <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">static</span> ofGstMainLoopThread <span class=\"token operator\">*</span> mainLoop<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------- videoUtils</span>\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------------</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofGstVideoUtils</span><span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofBaseVideo<span class=\"token punctuation\">,</span> <span class=\"token keyword\">public</span> ofGstUtils<span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\n\t<span class=\"token function\">ofGstVideoUtils</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">ofGstVideoUtils</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">bool</span> \t\t\t<span class=\"token function\">setPipeline</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string pipeline<span class=\"token punctuation\">,</span> ofPixelFormat pixelFormat<span class=\"token operator\">=</span>OF_PIXELS_RGB<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> isStream<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">bool</span> \t\t\t<span class=\"token function\">setPixelFormat</span><span class=\"token punctuation\">(</span>ofPixelFormat pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofPixelFormat \t<span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> \t\t\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span> ofPixelFormat pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> \t\t\t<span class=\"token function\">reallocateOnNextFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">bool</span> \t\t\t<span class=\"token function\">isFrameNew</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\tofPixels<span class=\"token operator\">&amp;</span>\t\t<span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> ofPixels<span class=\"token operator\">&amp;</span>\t<span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\tofTexture <span class=\"token operator\">*</span> \t<span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> \t\t\t<span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">float</span> \t\t\t<span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> \t\t\t<span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> \t\t\t<span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR>0</span>\n\t<span class=\"token keyword\">static</span> std<span class=\"token operator\">::</span>string\t\t\t<span class=\"token function\">getGstFormatName</span><span class=\"token punctuation\">(</span>ofPixelFormat format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> GstVideoFormat\t<span class=\"token function\">getGstFormat</span><span class=\"token punctuation\">(</span>ofPixelFormat format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> ofPixelFormat\t<span class=\"token function\">getOFFormat</span><span class=\"token punctuation\">(</span>GstVideoFormat format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token keyword\">bool</span>\t\t\t<span class=\"token function\">isInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// copy pixels from gst buffer to avoid</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// https://bugzilla.gnome.org/show_bug.cgi?id=737427</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setCopyPixels</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> copy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// this events happen in a different thread</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// do not use them for opengl stuff</span>\n\tofEvent<span class=\"token operator\">&lt;</span>ofPixels<span class=\"token operator\">></span> prerollEvent<span class=\"token punctuation\">;</span>\n\tofEvent<span class=\"token operator\">&lt;</span>ofPixels<span class=\"token operator\">></span> bufferEvent<span class=\"token punctuation\">;</span>\n\tofEvent<span class=\"token operator\">&lt;</span>ofEventArgs<span class=\"token operator\">></span> eosEvent<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==0</span>\n\tGstFlowReturn <span class=\"token function\">process_buffer</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>GstBuffer<span class=\"token operator\">></span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tGstFlowReturn <span class=\"token function\">preroll_cb</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>GstBuffer<span class=\"token operator\">></span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tGstFlowReturn <span class=\"token function\">buffer_cb</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>GstBuffer<span class=\"token operator\">></span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\tGstFlowReturn <span class=\"token function\">process_sample</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>GstSample<span class=\"token operator\">></span> sample<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tGstFlowReturn <span class=\"token function\">preroll_cb</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>GstSample<span class=\"token operator\">></span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tGstFlowReturn <span class=\"token function\">buffer_cb</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>GstSample<span class=\"token operator\">></span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token keyword\">void</span>\t\t\t<span class=\"token function\">eos_cb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\tofPixels\t\tpixels<span class=\"token punctuation\">;</span>\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">// 24 bit: rgb</span>\n\tofPixels\t\tbackPixels<span class=\"token punctuation\">;</span>\n\tofPixels\t\teventPixels<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">static</span> gboolean\t<span class=\"token function\">sync_bus_call</span> <span class=\"token punctuation\">(</span>GstBus <span class=\"token operator\">*</span> bus<span class=\"token punctuation\">,</span> GstMessage <span class=\"token operator\">*</span> msg<span class=\"token punctuation\">,</span> gpointer data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span>\t\t\tbIsFrameNew<span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\" spellcheck=\"true\">// if we are new</span>\n\t<span class=\"token keyword\">bool</span>\t\t\tbHavePixelsChanged<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span>\t\t\tbBackPixelsChanged<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>mutex\t\tmutex<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==0</span>\n\tstd<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>GstBuffer<span class=\"token operator\">></span> \tfrontBuffer<span class=\"token punctuation\">,</span> backBuffer<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\tstd<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>GstSample<span class=\"token operator\">></span> \tfrontBuffer<span class=\"token punctuation\">,</span> backBuffer<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>queue<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>GstSample<span class=\"token operator\">></span> <span class=\"token operator\">></span> bufferQueue<span class=\"token punctuation\">;</span>\n\tGstMapInfo mapinfo<span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_USE_GST_GL</span>\n\t\tofTexture\t\tfrontTexture<span class=\"token punctuation\">,</span> backTexture<span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\tofPixelFormat\tinternalPixelFormat<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> copyPixels<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// fix for certain versions bug with v4l2</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_USE_GST_GL</span>\n\tGstGLDisplay <span class=\"token operator\">*</span>\t\tglDisplay<span class=\"token punctuation\">;</span>\n\tGstGLContext <span class=\"token operator\">*</span>\t\tglContext<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------- appsink listener</span>\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------------</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofGstAppSink</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">ofGstAppSink</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==0</span>\n\t<span class=\"token keyword\">virtual</span> GstFlowReturn <span class=\"token function\">on_preroll</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>GstBuffer<span class=\"token operator\">></span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> GST_FLOW_OK<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> GstFlowReturn <span class=\"token function\">on_buffer</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>GstBuffer<span class=\"token operator\">></span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> GST_FLOW_OK<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token keyword\">virtual</span> GstFlowReturn <span class=\"token function\">on_preroll</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>GstSample<span class=\"token operator\">></span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> GST_FLOW_OK<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> GstFlowReturn <span class=\"token function\">on_buffer</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>GstSample<span class=\"token operator\">></span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> GST_FLOW_OK<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>\t\t\t<span class=\"token function\">on_eos</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// return true to set the message as attended so upstream doesn't try to process it</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">on_message</span><span class=\"token punctuation\">(</span>GstMessage<span class=\"token operator\">*</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// pings when enough data has arrived to be able to get sink properties</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">on_stream_prepared</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n","type":"source","static":true}}],"fetch":[]}