{"data":[{"page":{"entry":{"name":"ofQuickTimeGrabber.cpp","filename":"ofQuickTimeGrabber.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/video/ofQuickTimeGrabber.cpp","path":"/openframeworks/video/ofQuickTimeGrabber_cpp","route":"/openframeworks/video/ofQuickTimeGrabber.cpp","dir":"../libs/openFrameworks/video","ext":"cpp","type":"source","id":373,"parent":354,"breadcrumbs":[354,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofQuickTimeGrabber.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofUtils.h\"</span></span>\n\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> !defined(TARGET_LINUX) &amp;&amp; !defined(MAC_OS_X_VERSION_10_7) &amp;&amp; (!defined(MAC_OS_X_VERSION_10_12) || MAC_OS_X_VERSION_MAX_ALLOWED &lt; MAC_OS_X_VERSION_10_12)</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_CAPTURE_QUICKTIME</span>\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n\n<span class=\"token keyword\">static</span> ComponentResult \t<span class=\"token function\">frameIsGrabbedProc</span><span class=\"token punctuation\">(</span>SGChannel sgChan<span class=\"token punctuation\">,</span> <span class=\"token keyword\">short</span> nBufferNum<span class=\"token punctuation\">,</span> Boolean <span class=\"token operator\">*</span>pbDone<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> lRefCon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> ComponentResult  <span class=\"token function\">frameIsGrabbedProc</span><span class=\"token punctuation\">(</span>SGChannel sgChan<span class=\"token punctuation\">,</span> <span class=\"token keyword\">short</span> nBufferNum<span class=\"token punctuation\">,</span> Boolean <span class=\"token operator\">*</span>pbDone<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> lRefCon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n \tComponentResult err <span class=\"token operator\">=</span> <span class=\"token function\">SGGrabFrameComplete</span><span class=\"token punctuation\">(</span> sgChan<span class=\"token punctuation\">,</span> nBufferNum<span class=\"token punctuation\">,</span> pbDone <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">bool</span> <span class=\"token operator\">*</span> havePixChanged <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>lRefCon<span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">*</span>havePixChanged <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> err<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\nofQuickTimeGrabber<span class=\"token operator\">::</span><span class=\"token function\">ofQuickTimeGrabber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_CAPTURE_QUICKTIME</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\n\t\t<span class=\"token function\">initializeQuicktime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tbSgInited\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\tgSeqGrabber\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t\toffscreenGWorldPixels\t<span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// common</span>\n\tbIsFrameNew\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tbVerbose \t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tbGrabberInited \t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tbChooseDevice\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tdeviceID\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//width \t\t\t\t\t= 320;\t// default setting</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//height \t\t\t\t\t= 240;\t// default setting</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//pixels\t\t\t\t\t= nullptr;</span>\n\tattemptFramerate\t\t<span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\nofQuickTimeGrabber<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofQuickTimeGrabber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_CAPTURE_QUICKTIME</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>offscreenGWorldPixels <span class=\"token operator\">!=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">delete</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> offscreenGWorldPixels<span class=\"token punctuation\">;</span>\n\t\t\toffscreenGWorldPixels <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofQuickTimeGrabber<span class=\"token operator\">::</span><span class=\"token function\">setVerbose</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bTalkToMe<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbVerbose <span class=\"token operator\">=</span> bTalkToMe<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofQuickTimeGrabber<span class=\"token operator\">::</span><span class=\"token function\">setDeviceID</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> _deviceID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tdeviceID\t\t<span class=\"token operator\">=</span> _deviceID<span class=\"token punctuation\">;</span>\n\tbChooseDevice\t<span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofQuickTimeGrabber<span class=\"token operator\">::</span><span class=\"token function\">setDesiredFrameRate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> framerate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tattemptFramerate <span class=\"token operator\">=</span> framerate<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofQuickTimeGrabber<span class=\"token operator\">::</span><span class=\"token function\">setPixelFormat</span><span class=\"token punctuation\">(</span>ofPixelFormat pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//note as we only support RGB we are just confirming that this pixel format is supported</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> pixelFormat <span class=\"token operator\">==</span> OF_PIXELS_RGB <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setPixelFormat(): requested pixel format \"</span> <span class=\"token operator\">&lt;&lt;</span> pixelFormat <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" not supported\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\nofPixelFormat ofQuickTimeGrabber<span class=\"token operator\">::</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//note if you support more than one pixel format you will need to return a ofPixelFormat variable. </span>\n\t<span class=\"token keyword\">return</span> OF_PIXELS_RGB<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofQuickTimeGrabber<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_CAPTURE_QUICKTIME</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------- 1 - open the sequence grabber</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">qtInitSeqGrabber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"initGrabber(): unable to initialize the seq grabber\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------- 2 - set the dimensions</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//width \t\t= w;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//height \t\t= h;</span>\n\n\t\t<span class=\"token function\">MacSetRect</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>videoRect<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------- 3 - buffer allocation</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// Create a buffer big enough to hold the video data,</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// make sure the pointer is 32-byte aligned.</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// also the rgb image that people will grab</span>\n\n\t\toffscreenGWorldPixels \t<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">malloc</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> w <span class=\"token operator\">*</span> h <span class=\"token operator\">+</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> OF_IMAGE_COLOR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_OSX) &amp;&amp; defined(__BIG_ENDIAN__)</span>\n\t\t\t<span class=\"token function\">QTNewGWorldFromPtr</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>videogworld<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> k32ARGBPixelFormat<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>videoRect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>offscreenGWorldPixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t\t<span class=\"token function\">QTNewGWorldFromPtr</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>videogworld<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> k24RGBPixelFormat<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>videoRect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span>\t\t</span>\n\t\t\n\t\t<span class=\"token function\">LockPixels</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetGWorldPixMap</span><span class=\"token punctuation\">(</span>videogworld<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">SetGWorld</span> <span class=\"token punctuation\">(</span>videogworld<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">SGSetGWorld</span><span class=\"token punctuation\">(</span>gSeqGrabber<span class=\"token punctuation\">,</span> videogworld<span class=\"token punctuation\">,</span> nil<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------- 4 - device selection</span>\n\t\t<span class=\"token keyword\">bool</span> didWeChooseADevice <span class=\"token operator\">=</span> bChooseDevice<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span> deviceIsSelected\t<span class=\"token operator\">=</span>  <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//if we have a device selected then try first to setup</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//that device</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>didWeChooseADevice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tdeviceIsSelected <span class=\"token operator\">=</span> <span class=\"token function\">qtSelectDevice</span><span class=\"token punctuation\">(</span>deviceID<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>deviceIsSelected <span class=\"token operator\">&amp;&amp;</span> bVerbose<span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"initGrabber(): unable to open device[\"</span> <span class=\"token operator\">&lt;&lt;</span> deviceID <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"], will attempt other devices\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//if we couldn't select our required device</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//or we aren't specifiying a device to setup</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//then lets try to setup ANY device!</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>deviceIsSelected <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//lets list available devices</span>\n\t\t\t<span class=\"token function\">listDevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token function\">setDeviceID</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tdeviceIsSelected <span class=\"token operator\">=</span> <span class=\"token function\">qtSelectDevice</span><span class=\"token punctuation\">(</span>deviceID<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//if we still haven't been able to setup a device</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//we should error and stop!</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> deviceIsSelected <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">goto</span> bail<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------- 5 - final initialization steps</span>\n\t\tOSStatus err<span class=\"token punctuation\">;</span>\n\n\t \terr <span class=\"token operator\">=</span> <span class=\"token function\">SGSetChannelUsage</span><span class=\"token punctuation\">(</span>gVideoChannel<span class=\"token punctuation\">,</span>seqGrabPreview<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> err <span class=\"token operator\">!=</span> noErr <span class=\"token punctuation\">)</span> <span class=\"token keyword\">goto</span> bail<span class=\"token punctuation\">;</span>\n\n\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">//----------------- callback method for notifying new frame</span>\n\t\terr <span class=\"token operator\">=</span> <span class=\"token function\">SGSetChannelRefCon</span><span class=\"token punctuation\">(</span>gVideoChannel<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>bHavePixelsChanged <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n\t\t\tVideoBottles vb<span class=\"token punctuation\">;</span> \n\t\t\t<span class=\"token comment\" spellcheck=\"true\">/* get the current bottlenecks */</span> \n\t\t\tvb<span class=\"token punctuation\">.</span>procCount <span class=\"token operator\">=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span> \n\t\t\terr <span class=\"token operator\">=</span> <span class=\"token function\">SGGetVideoBottlenecks</span><span class=\"token punctuation\">(</span>gVideoChannel<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>vb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \t\t\t\n\t\t\t\tmyGrabCompleteProc <span class=\"token operator\">=</span> <span class=\"token function\">NewSGGrabCompleteBottleUPP</span><span class=\"token punctuation\">(</span>frameIsGrabbedProc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tvb<span class=\"token punctuation\">.</span>grabCompleteProc <span class=\"token operator\">=</span> myGrabCompleteProc<span class=\"token punctuation\">;</span>\n\t\t\t\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">/* add our GrabFrameComplete function */</span> \n\t\t\t\terr <span class=\"token operator\">=</span> <span class=\"token function\">SGSetVideoBottlenecks</span><span class=\"token punctuation\">(</span>gVideoChannel<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>vb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \t\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\n\t\terr <span class=\"token operator\">=</span> <span class=\"token function\">SGSetChannelBounds</span><span class=\"token punctuation\">(</span>gVideoChannel<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>videoRect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> err <span class=\"token operator\">!=</span> noErr <span class=\"token punctuation\">)</span> <span class=\"token keyword\">goto</span> bail<span class=\"token punctuation\">;</span>\n\n\t\terr <span class=\"token operator\">=</span> <span class=\"token function\">SGPrepare</span><span class=\"token punctuation\">(</span>gSeqGrabber<span class=\"token punctuation\">,</span>  <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//theo swapped so preview is true and capture is false</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> err <span class=\"token operator\">!=</span> noErr <span class=\"token punctuation\">)</span> <span class=\"token keyword\">goto</span> bail<span class=\"token punctuation\">;</span>\n\n\t\terr <span class=\"token operator\">=</span> <span class=\"token function\">SGStartPreview</span><span class=\"token punctuation\">(</span>gSeqGrabber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> err <span class=\"token operator\">!=</span> noErr <span class=\"token punctuation\">)</span> <span class=\"token keyword\">goto</span> bail<span class=\"token punctuation\">;</span>\n\n\t\tbGrabberInited <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">loadSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> attemptFramerate <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\terr <span class=\"token operator\">=</span> <span class=\"token function\">SGSetFrameRate</span><span class=\"token punctuation\">(</span>gVideoChannel<span class=\"token punctuation\">,</span> <span class=\"token function\">IntToFixed</span><span class=\"token punctuation\">(</span>attemptFramerate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> err <span class=\"token operator\">!=</span> noErr <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"initGrabber: couldn't setting framerate to \"</span> <span class=\"token operator\">&lt;&lt;</span> attemptFramerate <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\": OSStatus \"</span> <span class=\"token operator\">&lt;&lt;</span> err<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\t\t\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\n\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"           inited grabbed            \"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-------------------------------------\"</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// we are done</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//--------------------- (bail) something's wrong -----</span>\n\t\tbail<span class=\"token operator\">:</span>\n\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"***** ofQuickTimeGrabber error *****\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"------------------------------------\"</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//if we don't close this - it messes up the next device!</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bSgInited<span class=\"token punctuation\">)</span> <span class=\"token function\">qtCloseSeqGrabber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tbGrabberInited <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t\n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofQuickTimeGrabber<span class=\"token operator\">::</span><span class=\"token function\">isInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> bGrabberInited<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\nvector<span class=\"token operator\">&lt;</span>ofVideoDevice<span class=\"token operator\">></span> ofQuickTimeGrabber<span class=\"token operator\">::</span><span class=\"token function\">listDevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\n    vector <span class=\"token operator\">&lt;</span>ofVideoDevice<span class=\"token operator\">></span> devices<span class=\"token punctuation\">;</span> \n    \n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_CAPTURE_QUICKTIME</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\n\t\t<span class=\"token keyword\">bool</span> bNeedToInitGrabberFirst <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bSgInited<span class=\"token punctuation\">)</span> bNeedToInitGrabberFirst <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//if we need to initialize the grabbing component then do it</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> bNeedToInitGrabberFirst <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">qtInitSeqGrabber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">return</span> devices<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-------------------------------------\"</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">/*\n\t\t\t//input selection stuff (ie multiple webcams)\n\t\t\t//from http://developer.apple.com/samplecode/SGDevices/listing13.html\n\t\t\t//and originally http://lists.apple.com/archives/QuickTime-API/2008/Jan/msg00178.html\n\t\t*/</span>\n\n\t\tSGDeviceList deviceList<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">SGGetChannelDeviceList</span> <span class=\"token punctuation\">(</span>gVideoChannel<span class=\"token punctuation\">,</span> sgDeviceListIncludeInputs<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>deviceList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> pascalName<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> pascalNameInput<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//this is our new way of enumerating devices</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//quicktime can have multiple capture 'inputs' on the same capture 'device'</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//ie the USB Video Class Video 'device' - can have multiple usb webcams attached on what QT calls 'inputs'</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//The isight for example will show up as:</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//USB Video Class Video - Built-in iSight ('input' 1 of the USB Video Class Video 'device')</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//Where as another webcam also plugged whill show up as</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//USB Video Class Video - Philips SPC 1000NC Webcam ('input' 2 of the USB Video Class Video 'device')</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//this means our the device ID we use for selection has to count both capture 'devices' and their 'inputs'</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//this needs to be the same in our init grabber method so that we select the device we ask for</span>\n\t\t<span class=\"token keyword\">int</span> deviceCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"listing available capture devices\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>deviceList<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>count <span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\tSGDeviceName nameRec<span class=\"token punctuation\">;</span>\n\t\t\tnameRec <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>deviceList<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>entry<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tSGDeviceInputList deviceInputList <span class=\"token operator\">=</span> nameRec<span class=\"token punctuation\">.</span>inputs<span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">int</span> numInputs <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> deviceInputList <span class=\"token punctuation\">)</span> numInputs <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>deviceInputList<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>pascalName<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>deviceList<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>entry<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//this means we can use the capture method</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>nameRec<span class=\"token punctuation\">.</span>flags <span class=\"token operator\">!=</span> sgDeviceNameFlagDeviceUnavailable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//if we have a capture 'device' (qt's word not mine - I would prefer 'system' ) that is ready to be used</span>\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//we go through its inputs to list all physical devices - as there could be more than one!</span>\n\t\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> numInputs<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\n\t\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//if our 'device' has inputs we get their names here</span>\n\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> deviceInputList <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t\tSGDeviceInputName inputNameRec  <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>deviceInputList<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>entry<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>pascalNameInput<span class=\"token punctuation\">,</span> inputNameRec<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"device [\"</span> <span class=\"token operator\">&lt;&lt;</span> deviceCount <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"] \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">p2cstr</span><span class=\"token punctuation\">(</span>pascalName<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" - \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">p2cstr</span><span class=\"token punctuation\">(</span>pascalNameInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    ofVideoDevice vd<span class=\"token punctuation\">;</span> \n                    vd<span class=\"token punctuation\">.</span>id           <span class=\"token operator\">=</span> deviceCount<span class=\"token punctuation\">;</span> \n                    vd<span class=\"token punctuation\">.</span>deviceName   <span class=\"token operator\">=</span> <span class=\"token function\">p2cstr</span><span class=\"token punctuation\">(</span>pascalName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    vd<span class=\"token punctuation\">.</span>bAvailable   <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> \n                    devices<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>vd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    \n\t\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//we count this way as we need to be able to distinguish multiple inputs as devices</span>\n\t\t\t\t\tdeviceCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"(unavailable) device [\"</span> <span class=\"token operator\">&lt;&lt;</span> deviceCount <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"] \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">p2cstr</span><span class=\"token punctuation\">(</span>pascalName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                \n                ofVideoDevice vd<span class=\"token punctuation\">;</span>\n                vd<span class=\"token punctuation\">.</span>id           <span class=\"token operator\">=</span> deviceCount<span class=\"token punctuation\">;</span> \n                vd<span class=\"token punctuation\">.</span>deviceName   <span class=\"token operator\">=</span> <span class=\"token function\">p2cstr</span><span class=\"token punctuation\">(</span>pascalName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                vd<span class=\"token punctuation\">.</span>bAvailable   <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> \n                devices<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>vd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\tdeviceCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"-------------------------------------\"</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//if we initialized the grabbing component then close it</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> bNeedToInitGrabberFirst <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">qtCloseSeqGrabber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\n    <span class=\"token keyword\">return</span> devices<span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofQuickTimeGrabber<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_CAPTURE_QUICKTIME</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bGrabberInited <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">SGIdle</span><span class=\"token punctuation\">(</span>gSeqGrabber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// set the top pixel alpha = 0, so we can know if it</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// was a new frame or not..</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// or else we will process way more than necessary</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// (ie opengl is running at 60fps +, capture at 30fps)</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bHavePixelsChanged<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\n\t\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_OSX) &amp;&amp; defined(__BIG_ENDIAN__)</span>\n\t\t\t\t\t<span class=\"token function\">convertPixels</span><span class=\"token punctuation\">(</span>offscreenGWorldPixels<span class=\"token punctuation\">,</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// newness test for quicktime:</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bGrabberInited <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tbIsFrameNew <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bHavePixelsChanged <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tbIsFrameNew <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t\tbHavePixelsChanged <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\nofPixels<span class=\"token operator\">&amp;</span> ofQuickTimeGrabber<span class=\"token operator\">::</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> pixels<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">const</span> ofPixels<span class=\"token operator\">&amp;</span> ofQuickTimeGrabber<span class=\"token operator\">::</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> pixels<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span>  ofQuickTimeGrabber<span class=\"token operator\">::</span><span class=\"token function\">isFrameNew</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> bIsFrameNew<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">float</span> ofQuickTimeGrabber<span class=\"token operator\">::</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\t\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">float</span> ofQuickTimeGrabber<span class=\"token operator\">::</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofQuickTimeGrabber<span class=\"token operator\">::</span><span class=\"token function\">clearMemory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofQuickTimeGrabber<span class=\"token operator\">::</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_CAPTURE_QUICKTIME</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\n\t\t<span class=\"token function\">qtCloseSeqGrabber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">DisposeSGGrabCompleteBottleUPP</span><span class=\"token punctuation\">(</span>myGrabCompleteProc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\n\t<span class=\"token function\">clearMemory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofQuickTimeGrabber<span class=\"token operator\">::</span><span class=\"token function\">videoSettings</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_CAPTURE_QUICKTIME</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\n\t\tRect curBounds<span class=\"token punctuation\">,</span> curVideoRect<span class=\"token punctuation\">;</span>\n\t\tComponentResult\terr<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// Get our current state</span>\n\t\terr <span class=\"token operator\">=</span> <span class=\"token function\">SGGetChannelBounds</span> <span class=\"token punctuation\">(</span>gVideoChannel<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>curBounds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err <span class=\"token operator\">!=</span> noErr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"videoSettings(): couldn't get get channel bounds: ComponentResult \"</span> <span class=\"token operator\">&lt;&lt;</span> err<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\terr <span class=\"token operator\">=</span> <span class=\"token function\">SGGetVideoRect</span> <span class=\"token punctuation\">(</span>gVideoChannel<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>curVideoRect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err <span class=\"token operator\">!=</span> noErr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"videoSettings(): couldn't get video rect: ComponentResult \"</span> <span class=\"token operator\">&lt;&lt;</span> err<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// Pause</span>\n\t\terr <span class=\"token operator\">=</span> <span class=\"token function\">SGPause</span> <span class=\"token punctuation\">(</span>gSeqGrabber<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err <span class=\"token operator\">!=</span> noErr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"videoSettings(): couldn't set pause: ComponentResult \"</span> <span class=\"token operator\">&lt;&lt;</span> err<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OSX</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//load any saved camera settings from file</span>\n\t\t\t<span class=\"token function\">loadSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">static</span> SGModalFilterUPP gSeqGrabberModalFilterUPP <span class=\"token operator\">=</span> <span class=\"token function\">NewSGModalFilterUPP</span><span class=\"token punctuation\">(</span>SeqGrabberModalFilterUPP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tComponentResult result <span class=\"token operator\">=</span> <span class=\"token function\">SGSettingsDialog</span><span class=\"token punctuation\">(</span>gSeqGrabber<span class=\"token punctuation\">,</span>  gVideoChannel<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> nil<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> gSeqGrabberModalFilterUPP<span class=\"token punctuation\">,</span> nil<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result <span class=\"token operator\">!=</span> noErr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"videoSettings(): settings dialog error: ComponentResult \"</span> <span class=\"token operator\">&lt;&lt;</span> err<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//save any changed settings to file</span>\n\t\t\t<span class=\"token function\">saveSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t\t<span class=\"token function\">SGSettingsDialog</span><span class=\"token punctuation\">(</span>gSeqGrabber<span class=\"token punctuation\">,</span> gVideoChannel<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> nil<span class=\"token punctuation\">,</span> seqGrabSettingsPreviewOnly<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t\t<span class=\"token function\">SGSetChannelBounds</span><span class=\"token punctuation\">(</span>gVideoChannel<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>videoRect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">SGPause</span> <span class=\"token punctuation\">(</span>gSeqGrabber<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OSX</span>\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofQuickTimeGrabber<span class=\"token operator\">::</span><span class=\"token function\">saveSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bGrabberInited <span class=\"token operator\">!=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\tComponentResult\terr<span class=\"token punctuation\">;</span>\n\n\t\tUserData mySGVideoSettings <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// get the SGChannel settings cofigured by the user</span>\n\t\terr <span class=\"token operator\">=</span> <span class=\"token function\">SGGetChannelSettings</span><span class=\"token punctuation\">(</span>gSeqGrabber<span class=\"token punctuation\">,</span> gVideoChannel<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>mySGVideoSettings<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> err <span class=\"token operator\">!=</span> noErr <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"saveSettings(): couldn't get camera settings: ComponentResult \"</span> <span class=\"token operator\">&lt;&lt;</span> err<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tstring pref <span class=\"token operator\">=</span> <span class=\"token string\">\"ofVideoSettings-\"</span><span class=\"token operator\">+</span>deviceName<span class=\"token punctuation\">;</span>\n\t\tCFStringRef cameraString <span class=\"token operator\">=</span> <span class=\"token function\">CFStringCreateWithCString</span><span class=\"token punctuation\">(</span>kCFAllocatorDefault<span class=\"token punctuation\">,</span>pref<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>kCFStringEncodingMacRoman<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//get the settings using the key \"ofVideoSettings-the name of the device\"</span>\n\t\t<span class=\"token function\">SaveSettingsPreference</span><span class=\"token punctuation\">(</span> cameraString<span class=\"token punctuation\">,</span> mySGVideoSettings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">DisposeUserData</span><span class=\"token punctuation\">(</span>mySGVideoSettings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofQuickTimeGrabber<span class=\"token operator\">::</span><span class=\"token function\">loadSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bGrabberInited <span class=\"token operator\">!=</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">||</span> deviceName<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n   ComponentResult   err<span class=\"token punctuation\">;</span>\n   UserData mySGVideoSettings <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\" spellcheck=\"true\">// get the settings using the key \"ofVideoSettings-the name of the device\"</span>\n   string pref <span class=\"token operator\">=</span> <span class=\"token string\">\"ofVideoSettings-\"</span><span class=\"token operator\">+</span>deviceName<span class=\"token punctuation\">;</span>\n   CFStringRef cameraString <span class=\"token operator\">=</span> <span class=\"token function\">CFStringCreateWithCString</span><span class=\"token punctuation\">(</span>kCFAllocatorDefault<span class=\"token punctuation\">,</span>pref<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>kCFStringEncodingMacRoman<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token function\">GetSettingsPreference</span><span class=\"token punctuation\">(</span>cameraString<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>mySGVideoSettings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mySGVideoSettings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n      Rect   curBounds<span class=\"token punctuation\">,</span> curVideoRect<span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\" spellcheck=\"true\">//we need to make sure the dimensions don't get effected</span>\n      <span class=\"token comment\" spellcheck=\"true\">//by our preferences</span>\n\n      <span class=\"token comment\" spellcheck=\"true\">// Get our current state</span>\n      err <span class=\"token operator\">=</span> <span class=\"token function\">SGGetChannelBounds</span> <span class=\"token punctuation\">(</span>gVideoChannel<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>curBounds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err <span class=\"token operator\">!=</span> noErr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"loadSettings(): couldn't set channel bounds: ComponentResult \"</span> <span class=\"token operator\">&lt;&lt;</span> err<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      err <span class=\"token operator\">=</span> <span class=\"token function\">SGGetVideoRect</span> <span class=\"token punctuation\">(</span>gVideoChannel<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>curVideoRect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err <span class=\"token operator\">!=</span> noErr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n         <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"loadSettings(): couldn't set video rect: ComponentResult \"</span> <span class=\"token operator\">&lt;&lt;</span> err<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token comment\" spellcheck=\"true\">// use the saved settings preference to configure the SGChannel</span>\n      err <span class=\"token operator\">=</span> <span class=\"token function\">SGSetChannelSettings</span><span class=\"token punctuation\">(</span>gSeqGrabber<span class=\"token punctuation\">,</span> gVideoChannel<span class=\"token punctuation\">,</span> mySGVideoSettings<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> err <span class=\"token operator\">!=</span> noErr <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n         <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"loadSettings(): couldn't set channel settings: ComponentResult \"</span> <span class=\"token operator\">&lt;&lt;</span> err<span class=\"token punctuation\">;</span>\n         <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token function\">DisposeUserData</span><span class=\"token punctuation\">(</span>mySGVideoSettings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\" spellcheck=\"true\">// Pause</span>\n      err <span class=\"token operator\">=</span> <span class=\"token function\">SGPause</span> <span class=\"token punctuation\">(</span>gSeqGrabber<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err <span class=\"token operator\">!=</span> noErr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n         <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"loadSettings(): couldn't set pause: ComponentResult \"</span> <span class=\"token operator\">&lt;&lt;</span> err<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token function\">SGSetChannelBounds</span><span class=\"token punctuation\">(</span>gVideoChannel<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>videoRect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">SGPause</span> <span class=\"token punctuation\">(</span>gSeqGrabber<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n      <span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"loadSettings(): no camera settings to load\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n   <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofQuickTimeGrabber<span class=\"token operator\">::</span><span class=\"token function\">qtInitSeqGrabber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bSgInited <span class=\"token operator\">!=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t\tOSErr err <span class=\"token operator\">=</span> noErr<span class=\"token punctuation\">;</span>\n\n\t\t\tComponentDescription\ttheDesc<span class=\"token punctuation\">;</span>\n\t\t\tComponent\t\t\t\tsgCompID<span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// this crashes when we get to</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// SGNewChannel</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// we get -9405 as error code for the channel</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// -----------------------------------------</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// gSeqGrabber = OpenDefaultComponent(SeqGrabComponentType, 0);</span>\n\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// this seems to work instead (got it from hackTV)</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// -----------------------------------------</span>\n\t\t\ttheDesc<span class=\"token punctuation\">.</span>componentType <span class=\"token operator\">=</span> SeqGrabComponentType<span class=\"token punctuation\">;</span>\n\t\t\ttheDesc<span class=\"token punctuation\">.</span>componentSubType <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t\t\ttheDesc<span class=\"token punctuation\">.</span>componentManufacturer <span class=\"token operator\">=</span> <span class=\"token string\">'appl'</span><span class=\"token punctuation\">;</span>\n\t\t\ttheDesc<span class=\"token punctuation\">.</span>componentFlags <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t\t\ttheDesc<span class=\"token punctuation\">.</span>componentFlagsMask <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t\t\tsgCompID <span class=\"token operator\">=</span> <span class=\"token function\">FindNextComponent</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>theDesc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// -----------------------------------------</span>\n\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sgCompID <span class=\"token operator\">==</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"qtInitSeqGrabber(): findNextComponent did not return a valid component\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\tgSeqGrabber <span class=\"token operator\">=</span> <span class=\"token function\">OpenComponent</span><span class=\"token punctuation\">(</span>sgCompID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\terr <span class=\"token operator\">=</span> <span class=\"token function\">GetMoviesError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>gSeqGrabber <span class=\"token operator\">==</span> <span class=\"token keyword\">nullptr</span> <span class=\"token operator\">||</span> err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"qtInitSeqGrabber(): couldn't get default sequence grabber component: OSErr \"</span> <span class=\"token operator\">&lt;&lt;</span> err<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\terr <span class=\"token operator\">=</span> <span class=\"token function\">SGInitialize</span><span class=\"token punctuation\">(</span>gSeqGrabber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err <span class=\"token operator\">!=</span> noErr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"qtInitSeqGrabber(): can't initialize sequence grabber component: OSErr \"</span> <span class=\"token operator\">&lt;&lt;</span> err<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\terr <span class=\"token operator\">=</span> <span class=\"token function\">SGSetDataRef</span><span class=\"token punctuation\">(</span>gSeqGrabber<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> seqGrabDontMakeMovie<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err <span class=\"token operator\">!=</span> noErr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"qtInitSeqGrabber(): can't set the destination data reference: OSErr \"</span> <span class=\"token operator\">&lt;&lt;</span> err<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// windows crashes w/ out gworld, make a dummy for now...</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// this took a long time to figure out.</span>\n\t\t\terr <span class=\"token operator\">=</span> <span class=\"token function\">SGSetGWorld</span><span class=\"token punctuation\">(</span>gSeqGrabber<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err <span class=\"token operator\">!=</span> noErr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"qtInitSeqGrabber(): setting up the gworld: OSErr \"</span> <span class=\"token operator\">&lt;&lt;</span> err<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\terr <span class=\"token operator\">=</span> <span class=\"token function\">SGNewChannel</span><span class=\"token punctuation\">(</span>gSeqGrabber<span class=\"token punctuation\">,</span> VideoMediaType<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>gVideoChannel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err <span class=\"token operator\">!=</span> noErr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"qtInitSeqGrabber(): couldn't create a new channel: OSErr \"</span> <span class=\"token operator\">&lt;&lt;</span> err<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"qtInitSeqGrabber(): check if you have any qt capable cameras attached\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\tbSgInited <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofQuickTimeGrabber<span class=\"token operator\">::</span><span class=\"token function\">qtCloseSeqGrabber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>gSeqGrabber <span class=\"token operator\">!=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">SGStop</span> <span class=\"token punctuation\">(</span>gSeqGrabber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">CloseComponent</span> <span class=\"token punctuation\">(</span>gSeqGrabber<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tgSeqGrabber <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t\tbSgInited <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofQuickTimeGrabber<span class=\"token operator\">::</span><span class=\"token function\">qtSelectDevice</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> deviceNumber<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> didWeChooseADevice<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//note - check for memory freeing possibly needed for the all SGGetChannelDeviceList mac stuff</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// also see notes in listDevices() regarding new enunemeration method.</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//Generate a device list and enumerate</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//all devices availble to the channel</span>\n\tSGDeviceList deviceList<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">SGGetChannelDeviceList</span><span class=\"token punctuation\">(</span>gVideoChannel<span class=\"token punctuation\">,</span> sgDeviceListIncludeInputs<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>deviceList<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> pascalName<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> pascalNameInput<span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span> numDevices <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>deviceList<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>count<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>numDevices <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"no capture devices found\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">int</span> deviceCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> numDevices<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tSGDeviceName nameRec<span class=\"token punctuation\">;</span>\n\t\tnameRec <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>deviceList<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>entry<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\tSGDeviceInputList deviceInputList <span class=\"token operator\">=</span> nameRec<span class=\"token punctuation\">.</span>inputs<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">int</span> numInputs <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> deviceInputList <span class=\"token punctuation\">)</span> numInputs <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>deviceInputList<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>pascalName<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>deviceList<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>entry<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>pascalNameInput<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//this means we can use the capture method</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>nameRec<span class=\"token punctuation\">.</span>flags <span class=\"token operator\">!=</span> sgDeviceNameFlagDeviceUnavailable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//if we have a capture 'device' (qt's word not mine - I would prefer 'system' ) that is ready to be used</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//we go through its inputs to list all physical devices - as there could be more than one!</span>\n\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> numInputs<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//if our 'device' has inputs we get their names here</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> deviceInputList <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\tSGDeviceInputName inputNameRec  <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>deviceInputList<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>entry<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">memcpy</span><span class=\"token punctuation\">(</span>pascalNameInput<span class=\"token punctuation\">,</span> inputNameRec<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//if the device number matches we try and setup the device</span>\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//if we didn't specifiy a device then we will try all devices till one works!</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> deviceCount <span class=\"token operator\">==</span> deviceNumber <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>didWeChooseADevice <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"attempting to open device [\"</span> <span class=\"token operator\">&lt;&lt;</span> deviceCount <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"] \"</span>\n\t\t\t\t\t<span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">p2cstr</span><span class=\"token punctuation\">(</span>pascalName<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" - \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">p2cstr</span><span class=\"token punctuation\">(</span>pascalNameInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\t\tOSErr err1 <span class=\"token operator\">=</span> <span class=\"token function\">SGSetChannelDevice</span><span class=\"token punctuation\">(</span>gVideoChannel<span class=\"token punctuation\">,</span> pascalName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tOSErr err2 <span class=\"token operator\">=</span> <span class=\"token function\">SGSetChannelDeviceInput</span><span class=\"token punctuation\">(</span>gVideoChannel<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\t\t<span class=\"token keyword\">int</span> successLevel <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//if there were no errors then we have opened the device without issue</span>\n\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> err1 <span class=\"token operator\">==</span> noErr <span class=\"token operator\">&amp;&amp;</span> err2 <span class=\"token operator\">==</span> noErr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t\tsuccessLevel <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//parameter errors are not fatal so we will try and open but will caution the user</span>\n\t\t\t\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>err1 <span class=\"token operator\">==</span> paramErr <span class=\"token operator\">||</span> err1 <span class=\"token operator\">==</span> noErr<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>err2 <span class=\"token operator\">==</span> noErr <span class=\"token operator\">||</span> err2 <span class=\"token operator\">==</span> paramErr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t\tsuccessLevel <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//the device is opened!</span>\n\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> successLevel <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t\t\t\t\tdeviceName <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">p2cstr</span><span class=\"token punctuation\">(</span>pascalName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\tdeviceName  <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token string\">\"-\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\tdeviceName <span class=\"token operator\">+</span><span class=\"token operator\">=</span>  <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">p2cstr</span><span class=\"token punctuation\">(</span>pascalNameInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>successLevel <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"device \"</span> <span class=\"token operator\">&lt;&lt;</span> deviceName <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" opened successfully\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"device \"</span> <span class=\"token operator\">&lt;&lt;</span> deviceName <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" opened with some paramater errors, should be fine though!\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//no need to keep searching - return that we have opened a device!</span>\n\t\t\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//if we selected a device in particular but failed we want to go through the whole list again - starting from 0 and try any device.</span>\n\t\t\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//so we return false - and try one more time without a preference</span>\n\t\t\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> didWeChooseADevice <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"problems setting device [\"</span> <span class=\"token operator\">&lt;&lt;</span> deviceNumber <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"] \"</span>\n\t\t\t\t\t\t\t<span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">p2cstr</span><span class=\"token punctuation\">(</span>pascalName<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" - \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">p2cstr</span><span class=\"token punctuation\">(</span>pascalNameInput<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" *****\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimeGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"unable to open device, trying next device\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//we count this way as we need to be able to distinguish multiple inputs as devices</span>\n\t\t\t\tdeviceCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//ofLogError(\"ofQuickTimeGrabber\") &lt;&lt;  \"(unavailable) device [\" &lt;&lt; deviceCount &lt;&lt; \"] \" &lt;&lt; p2cstr(pascalName);</span>\n\t\t\tdeviceCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n","type":"source","static":true}}],"fetch":[]}