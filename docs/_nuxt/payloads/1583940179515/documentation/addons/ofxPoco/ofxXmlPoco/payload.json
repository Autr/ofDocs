{"data":[{"page":{"entry":{"name":"ofxXmlPoco","filename":"ofxXmlPoco.markdown","absolute":"/Users/Gilbert/Code/openFrameworks/ofSite/documentation/addons/ofxPoco/ofxXmlPoco.markdown","path":"/documentation/addons/ofxPoco/ofxXmlPoco","route":"/documentation/addons/ofxPoco/ofxXmlPoco.markdown","dir":"../ofSite/documentation/addons/ofxPoco","ext":"markdown","type":"page","id":1886,"parent":1884,"breadcrumbs":[1884,1743,1718],"siblings":[],"translations":{}},"description":{"short":"","full":"<p>The ofXmlPoco is a friendly wrapper around the xml functionality included in the Poco::XML library, in particular the Poco::XML::DOM. You can find some more information on that in the Poco Documentation, but hopefully we've wrapped up everything you might need, so that you don't need to dig into Poco itself. Conceptually you should think of an ofXmlPoco object as an XML document, because that's exactly what it is: it has a root element, some number of children, and a current element that you're pointing at. For instance, if your XML looked like this:</p>\n<pre><code><span class=\"token operator\">&amp;</span>lt<span class=\"token punctuation\">;</span>pictures</code></pre>\n"},"config":{"visible":"True","advanced":"False","istemplated":"False","extends":null},"methods":[{"syntax":"DOMErrorMessage(msg)","name":"DOMErrorMessage","returns":"string","returns_description":null,"parameters":"<span class=\"token keyword\">short</span> msg","access":"protected","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"addChild(&path)","name":"addChild","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>path","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"addValue(&path, data, createEntirePath = false)","name":"addValue","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>path<span class=\"token punctuation\">,</span> T data<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> createEntirePath<span class=\"token operator\">=</span><span class=\"token boolean\">false</span>","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"addXml(&xml, copyAll = false)","name":"addXml","returns":"void","returns_description":null,"parameters":"ofxXmlPoco <span class=\"token operator\">&amp;</span>xml<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> copyAll<span class=\"token operator\">=</span><span class=\"token boolean\">false</span>","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"clear()","name":"clear","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"exists(&path)","name":"exists","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>path","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getAttribute(&path)","name":"getAttribute","returns":"string","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>path","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getAttributes()","name":"getAttributes","returns":"int","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getBoolValue(&path)","name":"getBoolValue","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>path","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getBoolValue()","name":"getBoolValue","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getFloatValue(&path)","name":"getFloatValue","returns":"float","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>path","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getFloatValue()","name":"getFloatValue","returns":"float","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getInt64Value(&path)","name":"getInt64Value","returns":"int64_t","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>path","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getInt64Value()","name":"getInt64Value","returns":"int64_t","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getIntValue(&path)","name":"getIntValue","returns":"int","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>path","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getIntValue()","name":"getIntValue","returns":"int","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getName()","name":"getName","returns":"string","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getNumChildren(&path)","name":"getNumChildren","returns":"int","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>path","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getNumChildren()","name":"getNumChildren","returns":"int","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getPocoDocument()","name":"getPocoDocument","returns":"int *","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getPocoDocument()","name":"getPocoDocument","returns":"const int *","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getPocoElement()","name":"getPocoElement","returns":"int *","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getPocoElement()","name":"getPocoElement","returns":"int *","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getPocoElement()","name":"getPocoElement","returns":"const int *","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getPocoElement()","name":"getPocoElement","returns":"const int *","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getValue(&path)","name":"getValue","returns":"string","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>path","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>Returns the value of the current element in the ofXml.</p>\n"},{"syntax":"getValue(&path, returnVal)","name":"getValue","returns":"T","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>path<span class=\"token punctuation\">,</span> T returnVal","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>Returns the value at the node indicated by the path. This can be a path that uses an element:</p>\n<pre><code>xml<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span>picture<span class=\"token operator\">/</span>pictures<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span>url<span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>or an attribute:</p>\n<pre><code>xml<span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span>picture<span class=\"token operator\">/</span>pictures<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>@id<span class=\"token punctuation\">]</span><span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n"},{"syntax":"getValue()","name":"getValue","returns":"string","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"load(&path)","name":"load","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> filesystem<span class=\"token operator\">::</span>path <span class=\"token operator\">&amp;</span>path","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"loadFromBuffer(&buffer)","name":"loadFromBuffer","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>buffer","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"ofxXmlPoco(&path)","name":"ofxXmlPoco","returns":null,"returns_description":null,"parameters":"<span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>path","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"ofxXmlPoco(&rhs)","name":"ofxXmlPoco","returns":null,"returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofxXmlPoco <span class=\"token operator\">&amp;</span>rhs","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"ofxXmlPoco()","name":"ofxXmlPoco","returns":null,"returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"operator=(&rhs)","name":"operator=","returns":"const ofxXmlPoco &","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofxXmlPoco <span class=\"token operator\">&amp;</span>rhs","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"releaseAll()","name":"releaseAll","returns":"void","returns_description":null,"parameters":null,"access":"protected","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"remove(&path)","name":"remove","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>path","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"remove()","name":"remove","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"removeAttribute(&path)","name":"removeAttribute","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>path","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"removeAttributes(&path)","name":"removeAttributes","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>path","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"removeAttributes()","name":"removeAttributes","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"removeContents(&path)","name":"removeContents","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>path","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"removeContents()","name":"removeContents","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"reset()","name":"reset","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"save(&path)","name":"save","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> filesystem<span class=\"token operator\">::</span>path <span class=\"token operator\">&amp;</span>path","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setAttribute(&path, &value)","name":"setAttribute","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>path<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>value","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setTo(&path)","name":"setTo","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>path","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setToChild(index)","name":"setToChild","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> index","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setToParent()","name":"setToParent","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setToParent(numLevelsUp)","name":"setToParent","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> numLevelsUp","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setToPrevSibling()","name":"setToPrevSibling","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setToSibling()","name":"setToSibling","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setValue(&path, &value)","name":"setValue","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>path<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>value","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"toString()","name":"toString","returns":"string","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"tokenize()","name":"tokenize","returns":"int","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"True","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"~ofxXmlPoco()","name":"~ofxXmlPoco","returns":null,"returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"name":"document","type":"int *","access":"protected","version_started":"0.10.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{"name":"element","type":"int *","access":"protected","version_started":"0.10.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{}],"document":"<p>#class ofxXmlPoco</p>\n<p>&lt;!--\n<em>visible: True</em>\n<em>advanced: False</em>\n<em>istemplated: False</em>\n_extends: _\n--&gt;</p>\n<p>##InlineDescription</p>\n<p>##Description</p>\n<p>The ofXmlPoco is a friendly wrapper around the xml functionality included in the Poco::XML library, in particular the Poco::XML::DOM. You can find some more information on that in the Poco Documentation, but hopefully we've wrapped up everything you might need, so that you don't need to dig into Poco itself. Conceptually you should think of an ofXmlPoco object as an XML document, because that's exactly what it is: it has a root element, some number of children, and a current element that you're pointing at. For instance, if your XML looked like this:</p>\n<pre><code><span class=\"token operator\">&amp;</span>lt<span class=\"token punctuation\">;</span>pictures<span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">&amp;</span>lt<span class=\"token punctuation\">;</span>picture id<span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span><span class=\"token number\">0</span><span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token operator\">&amp;</span>lt<span class=\"token punctuation\">;</span>url<span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span>http<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>apicture<span class=\"token punctuation\">.</span>co<span class=\"token punctuation\">.</span>uk<span class=\"token operator\">/</span>pic<span class=\"token punctuation\">.</span>png<span class=\"token operator\">&amp;</span>lt<span class=\"token punctuation\">;</span><span class=\"token operator\">/</span>url<span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token operator\">&amp;</span>lt<span class=\"token punctuation\">;</span>width<span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span><span class=\"token number\">100</span><span class=\"token operator\">&amp;</span>lt<span class=\"token punctuation\">;</span><span class=\"token operator\">/</span>width<span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token operator\">&amp;</span>lt<span class=\"token punctuation\">;</span>height<span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span><span class=\"token number\">100</span><span class=\"token operator\">&amp;</span>lt<span class=\"token punctuation\">;</span><span class=\"token operator\">/</span>height<span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">&amp;</span>lt<span class=\"token punctuation\">;</span><span class=\"token operator\">/</span>picture<span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">&amp;</span>lt<span class=\"token punctuation\">;</span>picture id<span class=\"token operator\">=</span><span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span><span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token operator\">&amp;</span>lt<span class=\"token punctuation\">;</span>url<span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span>http<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>apicture<span class=\"token punctuation\">.</span>co<span class=\"token punctuation\">.</span>uk<span class=\"token operator\">/</span>pic2<span class=\"token punctuation\">.</span>png<span class=\"token operator\">&amp;</span>lt<span class=\"token punctuation\">;</span><span class=\"token operator\">/</span>url<span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token operator\">&amp;</span>lt<span class=\"token punctuation\">;</span>width<span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span><span class=\"token number\">100</span><span class=\"token operator\">&amp;</span>lt<span class=\"token punctuation\">;</span><span class=\"token operator\">/</span>width<span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token operator\">&amp;</span>lt<span class=\"token punctuation\">;</span>height<span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span><span class=\"token number\">100</span><span class=\"token operator\">&amp;</span>lt<span class=\"token punctuation\">;</span><span class=\"token operator\">/</span>height<span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">&amp;</span>lt<span class=\"token punctuation\">;</span><span class=\"token operator\">/</span>picture<span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&amp;</span>lt<span class=\"token punctuation\">;</span><span class=\"token operator\">/</span>pictures<span class=\"token operator\">&amp;</span>gt<span class=\"token punctuation\">;</span>\n</code></pre>\n<p>You load it into an ofXmlPoco document like so:</p>\n<pre><code>ofFile file<span class=\"token punctuation\">;</span>\nfile<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span>pictures<span class=\"token punctuation\">.</span>xml<span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// open a file</span>\nofBuffer buffer <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">readToBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// read to a buffer</span>\n\nofXmlPoco pictures<span class=\"token punctuation\">;</span>\npictures<span class=\"token punctuation\">.</span><span class=\"token function\">loadFromBuffer</span><span class=\"token punctuation\">(</span> buffer<span class=\"token punctuation\">.</span><span class=\"token function\">getText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// now get the buffer as a string and make XML</span>\n</code></pre>\n<p>Now you have an ofXmlPoco document, but you're not pointing at anything yet. The way to select which element you're looking at is by setting the current element, using setTo(const string&amp; path), like this:</p>\n<pre><code>pictures<span class=\"token punctuation\">.</span><span class=\"token function\">setTo</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span>pictures<span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// now we're at the root</span>\n</code></pre>\n<p>or</p>\n<pre><code>pictures<span class=\"token punctuation\">.</span><span class=\"token function\">setTo</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span>pictures<span class=\"token operator\">/</span>picture<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// now we're at the first picture.</span>\n</code></pre>\n<p>or</p>\n<pre><code>pictures<span class=\"token punctuation\">.</span><span class=\"token function\">setTo</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span>pictures<span class=\"token operator\">/</span>picture<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// now we're at the second picture.</span>\n</code></pre>\n<p>or</p>\n<pre><code>pictures<span class=\"token punctuation\">.</span><span class=\"token function\">setTo</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span>pictures<span class=\"token operator\">/</span>picture<span class=\"token punctuation\">[</span>@id<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// now we're at the first picture with the id of 0</span>\n</code></pre>\n<p>To traverse, we can use the following methods:</p>\n<pre><code><span class=\"token keyword\">int</span> children <span class=\"token operator\">=</span> pictures<span class=\"token punctuation\">.</span><span class=\"token function\">getNumChildren</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// how many do you have?</span>\n\npictures<span class=\"token punctuation\">.</span><span class=\"token function\">setToParent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// go up a level</span>\n\npictures<span class=\"token punctuation\">.</span><span class=\"token function\">setToSibling</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// go to the next at your level</span>\npictures<span class=\"token punctuation\">.</span><span class=\"token function\">setToPrevSibling</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// go to the previous at your level</span>\n</code></pre>\n<p>To get values, we use getValue(const string&amp; path), like:</p>\n<pre><code>pictures<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span>pictures<span class=\"token operator\">/</span>picture<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span>url<span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// returns &amp;quot;http://apicture.co.uk/pic2.png&amp;quot;</span>\n</code></pre>\n<p>To set values, we use setValue(const string&amp; path, const string&amp; value), like:</p>\n<pre><code>pictures<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span>pictures<span class=\"token operator\">/</span>picture<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span>url<span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span>http<span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span>superpicks<span class=\"token punctuation\">.</span>jp<span class=\"token operator\">/</span>pic1<span class=\"token punctuation\">.</span>png<span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// sets the element in the DOM</span>\n</code></pre>\n<p>##Methods</p>\n<p>###string DOMErrorMessage(msg)</p>\n<p>&lt;!--\n<em>syntax: DOMErrorMessage(msg)</em>\n<em>name: DOMErrorMessage</em>\n<em>returns: string</em>\n_returns_description: _\n<em>parameters: short msg</em>\n<em>access: protected</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool addChild(&amp;path)</p>\n<p>&lt;!--\n<em>syntax: addChild(&amp;path)</em>\n<em>name: addChild</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: const string &amp;path</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool addValue(&amp;path, data, createEntirePath = false)</p>\n<p>&lt;!--\n<em>syntax: addValue(&amp;path, data, createEntirePath = false)</em>\n<em>name: addValue</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: const string &amp;path, T data, bool createEntirePath=false</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void addXml(&amp;xml, copyAll = false)</p>\n<p>&lt;!--\n<em>syntax: addXml(&amp;xml, copyAll = false)</em>\n<em>name: addXml</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: ofxXmlPoco &amp;xml, bool copyAll=false</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void clear()</p>\n<p>&lt;!--\n<em>syntax: clear()</em>\n<em>name: clear</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool exists(&amp;path)</p>\n<p>&lt;!--\n<em>syntax: exists(&amp;path)</em>\n<em>name: exists</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: const string &amp;path</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###string getAttribute(&amp;path)</p>\n<p>&lt;!--\n<em>syntax: getAttribute(&amp;path)</em>\n<em>name: getAttribute</em>\n<em>returns: string</em>\n_returns_description: _\n<em>parameters: const string &amp;path</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###int getAttributes()</p>\n<p>&lt;!--\n<em>syntax: getAttributes()</em>\n<em>name: getAttributes</em>\n<em>returns: int</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool getBoolValue(&amp;path)</p>\n<p>&lt;!--\n<em>syntax: getBoolValue(&amp;path)</em>\n<em>name: getBoolValue</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: const string &amp;path</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool getBoolValue()</p>\n<p>&lt;!--\n<em>syntax: getBoolValue()</em>\n<em>name: getBoolValue</em>\n<em>returns: bool</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###float getFloatValue(&amp;path)</p>\n<p>&lt;!--\n<em>syntax: getFloatValue(&amp;path)</em>\n<em>name: getFloatValue</em>\n<em>returns: float</em>\n_returns_description: _\n<em>parameters: const string &amp;path</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###float getFloatValue()</p>\n<p>&lt;!--\n<em>syntax: getFloatValue()</em>\n<em>name: getFloatValue</em>\n<em>returns: float</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###int64_t getInt64Value(&amp;path)</p>\n<p>&lt;!--\n<em>syntax: getInt64Value(&amp;path)</em>\n<em>name: getInt64Value</em>\n<em>returns: int64_t</em>\n_returns_description: _\n<em>parameters: const string &amp;path</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###int64_t getInt64Value()</p>\n<p>&lt;!--\n<em>syntax: getInt64Value()</em>\n<em>name: getInt64Value</em>\n<em>returns: int64_t</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###int getIntValue(&amp;path)</p>\n<p>&lt;!--\n<em>syntax: getIntValue(&amp;path)</em>\n<em>name: getIntValue</em>\n<em>returns: int</em>\n_returns_description: _\n<em>parameters: const string &amp;path</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###int getIntValue()</p>\n<p>&lt;!--\n<em>syntax: getIntValue()</em>\n<em>name: getIntValue</em>\n<em>returns: int</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###string getName()</p>\n<p>&lt;!--\n<em>syntax: getName()</em>\n<em>name: getName</em>\n<em>returns: string</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###int getNumChildren(&amp;path)</p>\n<p>&lt;!--\n<em>syntax: getNumChildren(&amp;path)</em>\n<em>name: getNumChildren</em>\n<em>returns: int</em>\n_returns_description: _\n<em>parameters: const string &amp;path</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###int getNumChildren()</p>\n<p>&lt;!--\n<em>syntax: getNumChildren()</em>\n<em>name: getNumChildren</em>\n<em>returns: int</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###int * getPocoDocument()</p>\n<p>&lt;!--\n<em>syntax: getPocoDocument()</em>\n<em>name: getPocoDocument</em>\n<em>returns: int *</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###const int * getPocoDocument()</p>\n<p>&lt;!--\n<em>syntax: getPocoDocument()</em>\n<em>name: getPocoDocument</em>\n<em>returns: const int *</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###int * getPocoElement()</p>\n<p>&lt;!--\n<em>syntax: getPocoElement()</em>\n<em>name: getPocoElement</em>\n<em>returns: int *</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###int * getPocoElement()</p>\n<p>&lt;!--\n<em>syntax: getPocoElement()</em>\n<em>name: getPocoElement</em>\n<em>returns: int *</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###const int * getPocoElement()</p>\n<p>&lt;!--\n<em>syntax: getPocoElement()</em>\n<em>name: getPocoElement</em>\n<em>returns: const int *</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###const int * getPocoElement()</p>\n<p>&lt;!--\n<em>syntax: getPocoElement()</em>\n<em>name: getPocoElement</em>\n<em>returns: const int *</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###string getValue(&amp;path)</p>\n<p>&lt;!--\n<em>syntax: getValue(&amp;path)</em>\n<em>name: getValue</em>\n<em>returns: string</em>\n_returns_description: _\n<em>parameters: const string &amp;path</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>Returns the value of the current element in the ofXml.</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###T getValue(&amp;path, returnVal)</p>\n<p>&lt;!--\n<em>syntax: getValue(&amp;path, returnVal)</em>\n<em>name: getValue</em>\n<em>returns: T</em>\n_returns_description: _\n<em>parameters: const string &amp;path, T returnVal</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>Returns the value at the node indicated by the path. This can be a path that uses an element:</p>\n<pre><code>xml<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span>picture<span class=\"token operator\">/</span>pictures<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span>url<span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>or an attribute:</p>\n<pre><code>xml<span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span>picture<span class=\"token operator\">/</span>pictures<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>@id<span class=\"token punctuation\">]</span><span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###string getValue()</p>\n<p>&lt;!--\n<em>syntax: getValue()</em>\n<em>name: getValue</em>\n<em>returns: string</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool load(&amp;path)</p>\n<p>&lt;!--\n<em>syntax: load(&amp;path)</em>\n<em>name: load</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: const filesystem::path &amp;path</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool loadFromBuffer(&amp;buffer)</p>\n<p>&lt;!--\n<em>syntax: loadFromBuffer(&amp;buffer)</em>\n<em>name: loadFromBuffer</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: const string &amp;buffer</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<h3>ofxXmlPoco(&amp;path)</h3>\n<p>&lt;!--\n<em>syntax: ofxXmlPoco(&amp;path)</em>\n<em>name: ofxXmlPoco</em>\n_returns: _\n_returns_description: _\n<em>parameters: const string &amp;path</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<h3>ofxXmlPoco(&amp;rhs)</h3>\n<p>&lt;!--\n<em>syntax: ofxXmlPoco(&amp;rhs)</em>\n<em>name: ofxXmlPoco</em>\n_returns: _\n_returns_description: _\n<em>parameters: const ofxXmlPoco &amp;rhs</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<h3>ofxXmlPoco()</h3>\n<p>&lt;!--\n<em>syntax: ofxXmlPoco()</em>\n<em>name: ofxXmlPoco</em>\n_returns: _\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###const ofxXmlPoco &amp; operator=(&amp;rhs)</p>\n<p>&lt;!--\n<em>syntax: operator=(&amp;rhs)</em>\n<em>name: operator=</em>\n<em>returns: const ofxXmlPoco &amp;</em>\n_returns_description: _\n<em>parameters: const ofxXmlPoco &amp;rhs</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void releaseAll()</p>\n<p>&lt;!--\n<em>syntax: releaseAll()</em>\n<em>name: releaseAll</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: protected</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool remove(&amp;path)</p>\n<p>&lt;!--\n<em>syntax: remove(&amp;path)</em>\n<em>name: remove</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: const string &amp;path</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void remove()</p>\n<p>&lt;!--\n<em>syntax: remove()</em>\n<em>name: remove</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool removeAttribute(&amp;path)</p>\n<p>&lt;!--\n<em>syntax: removeAttribute(&amp;path)</em>\n<em>name: removeAttribute</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: const string &amp;path</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool removeAttributes(&amp;path)</p>\n<p>&lt;!--\n<em>syntax: removeAttributes(&amp;path)</em>\n<em>name: removeAttributes</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: const string &amp;path</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool removeAttributes()</p>\n<p>&lt;!--\n<em>syntax: removeAttributes()</em>\n<em>name: removeAttributes</em>\n<em>returns: bool</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool removeContents(&amp;path)</p>\n<p>&lt;!--\n<em>syntax: removeContents(&amp;path)</em>\n<em>name: removeContents</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: const string &amp;path</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool removeContents()</p>\n<p>&lt;!--\n<em>syntax: removeContents()</em>\n<em>name: removeContents</em>\n<em>returns: bool</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool reset()</p>\n<p>&lt;!--\n<em>syntax: reset()</em>\n<em>name: reset</em>\n<em>returns: bool</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool save(&amp;path)</p>\n<p>&lt;!--\n<em>syntax: save(&amp;path)</em>\n<em>name: save</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: const filesystem::path &amp;path</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool setAttribute(&amp;path, &amp;value)</p>\n<p>&lt;!--\n<em>syntax: setAttribute(&amp;path, &amp;value)</em>\n<em>name: setAttribute</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: const string &amp;path, const string &amp;value</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool setTo(&amp;path)</p>\n<p>&lt;!--\n<em>syntax: setTo(&amp;path)</em>\n<em>name: setTo</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: const string &amp;path</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool setToChild(index)</p>\n<p>&lt;!--\n<em>syntax: setToChild(index)</em>\n<em>name: setToChild</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: unsigned long index</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool setToParent()</p>\n<p>&lt;!--\n<em>syntax: setToParent()</em>\n<em>name: setToParent</em>\n<em>returns: bool</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool setToParent(numLevelsUp)</p>\n<p>&lt;!--\n<em>syntax: setToParent(numLevelsUp)</em>\n<em>name: setToParent</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: int numLevelsUp</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool setToPrevSibling()</p>\n<p>&lt;!--\n<em>syntax: setToPrevSibling()</em>\n<em>name: setToPrevSibling</em>\n<em>returns: bool</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool setToSibling()</p>\n<p>&lt;!--\n<em>syntax: setToSibling()</em>\n<em>name: setToSibling</em>\n<em>returns: bool</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool setValue(&amp;path, &amp;value)</p>\n<p>&lt;!--\n<em>syntax: setValue(&amp;path, &amp;value)</em>\n<em>name: setValue</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: const string &amp;path, const string &amp;value</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###string toString()</p>\n<p>&lt;!--\n<em>syntax: toString()</em>\n<em>name: toString</em>\n<em>returns: string</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###int tokenize()</p>\n<p>&lt;!--\n<em>syntax: tokenize()</em>\n<em>name: tokenize</em>\n<em>returns: int</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: True</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<h3>~ofxXmlPoco()</h3>\n<p>&lt;!--\n<em>syntax: ~ofxXmlPoco()</em>\n<em>name: ~ofxXmlPoco</em>\n_returns: _\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>##Variables</p>\n<p>###int * document</p>\n<p>&lt;!--\n<em>name: document</em>\n<em>type: int *</em>\n<em>access: protected</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###int * element</p>\n<p>&lt;!--\n<em>name: element</em>\n<em>type: int *</em>\n<em>access: protected</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n","raw":"#class ofxXmlPoco\n\n\n<!--\n_visible: True_\n_advanced: False_\n_istemplated: False_\n_extends: _\n-->\n\n##InlineDescription\n\n\n\n\n\n\n##Description\n\nThe ofXmlPoco is a friendly wrapper around the xml functionality included in the Poco::XML library, in particular the Poco::XML::DOM. You can find some more information on that in the Poco Documentation, but hopefully we've wrapped up everything you might need, so that you don't need to dig into Poco itself. Conceptually you should think of an ofXmlPoco object as an XML document, because that's exactly what it is: it has a root element, some number of children, and a current element that you're pointing at. For instance, if your XML looked like this:\n\n~~~~{.cpp}\n<pictures>\n\t<picture id=\"0\">\n\t\t<url>http://apicture.co.uk/pic.png</url>\n\t\t<width>100</width>\n\t\t<height>100</height>\n\t</picture>\n\t<picture id=\"1\">\n\t\t<url>http://apicture.co.uk/pic2.png</url>\n\t\t<width>100</width>\n\t\t<height>100</height>\n\t</picture>\n</pictures>\n~~~~\n\nYou load it into an ofXmlPoco document like so:\n\n~~~~{.cpp}\nofFile file;\nfile.open(\"pictures.xml\"); // open a file\nofBuffer buffer = file.readToBuffer(); // read to a buffer\n\nofXmlPoco pictures;\npictures.loadFromBuffer( buffer.getText() ); // now get the buffer as a string and make XML\n~~~~\n\nNow you have an ofXmlPoco document, but you're not pointing at anything yet. The way to select which element you're looking at is by setting the current element, using setTo(const string& path), like this:\n\n~~~~{.cpp}\npictures.setTo(\"pictures\"); // now we're at the root\n~~~~\n\nor\n\n~~~~{.cpp}\npictures.setTo(\"pictures/picture[0]\"); // now we're at the first picture.\n~~~~\n\nor\n~~~~{.cpp}\npictures.setTo(\"pictures/picture[1]\"); // now we're at the second picture.\n~~~~\nor\n~~~~{.cpp}\npictures.setTo(\"pictures/picture[@id=0]\"); // now we're at the first picture with the id of 0\n~~~~\nTo traverse, we can use the following methods:\n~~~~{.cpp}\nint children = pictures.getNumChildren(); // how many do you have?\n\npictures.setToParent(); // go up a level\n\npictures.setToSibling(); // go to the next at your level\npictures.setToPrevSibling(); // go to the previous at your level\n~~~~\nTo get values, we use getValue(const string& path), like:\n~~~~{.cpp}\npictures.getValue(\"pictures/picture[0]/url\"); // returns \"http://apicture.co.uk/pic2.png\"\n~~~~\nTo set values, we use setValue(const string& path, const string& value), like:\n~~~~{.cpp}\npictures.setValue(\"pictures/picture[0]/url\", \"http://superpicks.jp/pic1.png\"); // sets the element in the DOM\n~~~~\n\n\n\n\n\n##Methods\n\n\n\n###string DOMErrorMessage(msg)\n\n<!--\n_syntax: DOMErrorMessage(msg)_\n_name: DOMErrorMessage_\n_returns: string_\n_returns_description: _\n_parameters: short msg_\n_access: protected_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool addChild(&path)\n\n<!--\n_syntax: addChild(&path)_\n_name: addChild_\n_returns: bool_\n_returns_description: _\n_parameters: const string &path_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool addValue(&path, data, createEntirePath = false)\n\n<!--\n_syntax: addValue(&path, data, createEntirePath = false)_\n_name: addValue_\n_returns: bool_\n_returns_description: _\n_parameters: const string &path, T data, bool createEntirePath=false_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void addXml(&xml, copyAll = false)\n\n<!--\n_syntax: addXml(&xml, copyAll = false)_\n_name: addXml_\n_returns: void_\n_returns_description: _\n_parameters: ofxXmlPoco &xml, bool copyAll=false_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void clear()\n\n<!--\n_syntax: clear()_\n_name: clear_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool exists(&path)\n\n<!--\n_syntax: exists(&path)_\n_name: exists_\n_returns: bool_\n_returns_description: _\n_parameters: const string &path_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###string getAttribute(&path)\n\n<!--\n_syntax: getAttribute(&path)_\n_name: getAttribute_\n_returns: string_\n_returns_description: _\n_parameters: const string &path_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int getAttributes()\n\n<!--\n_syntax: getAttributes()_\n_name: getAttributes_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool getBoolValue(&path)\n\n<!--\n_syntax: getBoolValue(&path)_\n_name: getBoolValue_\n_returns: bool_\n_returns_description: _\n_parameters: const string &path_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool getBoolValue()\n\n<!--\n_syntax: getBoolValue()_\n_name: getBoolValue_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float getFloatValue(&path)\n\n<!--\n_syntax: getFloatValue(&path)_\n_name: getFloatValue_\n_returns: float_\n_returns_description: _\n_parameters: const string &path_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float getFloatValue()\n\n<!--\n_syntax: getFloatValue()_\n_name: getFloatValue_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int64_t getInt64Value(&path)\n\n<!--\n_syntax: getInt64Value(&path)_\n_name: getInt64Value_\n_returns: int64_t_\n_returns_description: _\n_parameters: const string &path_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int64_t getInt64Value()\n\n<!--\n_syntax: getInt64Value()_\n_name: getInt64Value_\n_returns: int64_t_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int getIntValue(&path)\n\n<!--\n_syntax: getIntValue(&path)_\n_name: getIntValue_\n_returns: int_\n_returns_description: _\n_parameters: const string &path_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int getIntValue()\n\n<!--\n_syntax: getIntValue()_\n_name: getIntValue_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###string getName()\n\n<!--\n_syntax: getName()_\n_name: getName_\n_returns: string_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int getNumChildren(&path)\n\n<!--\n_syntax: getNumChildren(&path)_\n_name: getNumChildren_\n_returns: int_\n_returns_description: _\n_parameters: const string &path_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int getNumChildren()\n\n<!--\n_syntax: getNumChildren()_\n_name: getNumChildren_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int * getPocoDocument()\n\n<!--\n_syntax: getPocoDocument()_\n_name: getPocoDocument_\n_returns: int *_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###const int * getPocoDocument()\n\n<!--\n_syntax: getPocoDocument()_\n_name: getPocoDocument_\n_returns: const int *_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int * getPocoElement()\n\n<!--\n_syntax: getPocoElement()_\n_name: getPocoElement_\n_returns: int *_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int * getPocoElement()\n\n<!--\n_syntax: getPocoElement()_\n_name: getPocoElement_\n_returns: int *_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###const int * getPocoElement()\n\n<!--\n_syntax: getPocoElement()_\n_name: getPocoElement_\n_returns: const int *_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###const int * getPocoElement()\n\n<!--\n_syntax: getPocoElement()_\n_name: getPocoElement_\n_returns: const int *_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###string getValue(&path)\n\n<!--\n_syntax: getValue(&path)_\n_name: getValue_\n_returns: string_\n_returns_description: _\n_parameters: const string &path_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nReturns the value of the current element in the ofXml.\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###T getValue(&path, returnVal)\n\n<!--\n_syntax: getValue(&path, returnVal)_\n_name: getValue_\n_returns: T_\n_returns_description: _\n_parameters: const string &path, T returnVal_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nReturns the value at the node indicated by the path. This can be a path that uses an element:\n\n~~~~{.cpp}\nxml.getValue(\"picture/pictures[2]/url\");\n~~~~\n\nor an attribute:\n\n~~~~{.cpp}\nxml.exists(\"picture/pictures[2][@id]\");\n~~~~\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###string getValue()\n\n<!--\n_syntax: getValue()_\n_name: getValue_\n_returns: string_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool load(&path)\n\n<!--\n_syntax: load(&path)_\n_name: load_\n_returns: bool_\n_returns_description: _\n_parameters: const filesystem::path &path_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool loadFromBuffer(&buffer)\n\n<!--\n_syntax: loadFromBuffer(&buffer)_\n_name: loadFromBuffer_\n_returns: bool_\n_returns_description: _\n_parameters: const string &buffer_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n### ofxXmlPoco(&path)\n\n<!--\n_syntax: ofxXmlPoco(&path)_\n_name: ofxXmlPoco_\n_returns: _\n_returns_description: _\n_parameters: const string &path_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n### ofxXmlPoco(&rhs)\n\n<!--\n_syntax: ofxXmlPoco(&rhs)_\n_name: ofxXmlPoco_\n_returns: _\n_returns_description: _\n_parameters: const ofxXmlPoco &rhs_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n### ofxXmlPoco()\n\n<!--\n_syntax: ofxXmlPoco()_\n_name: ofxXmlPoco_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###const ofxXmlPoco & operator=(&rhs)\n\n<!--\n_syntax: operator=(&rhs)_\n_name: operator=_\n_returns: const ofxXmlPoco &_\n_returns_description: _\n_parameters: const ofxXmlPoco &rhs_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void releaseAll()\n\n<!--\n_syntax: releaseAll()_\n_name: releaseAll_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: protected_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool remove(&path)\n\n<!--\n_syntax: remove(&path)_\n_name: remove_\n_returns: bool_\n_returns_description: _\n_parameters: const string &path_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void remove()\n\n<!--\n_syntax: remove()_\n_name: remove_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool removeAttribute(&path)\n\n<!--\n_syntax: removeAttribute(&path)_\n_name: removeAttribute_\n_returns: bool_\n_returns_description: _\n_parameters: const string &path_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool removeAttributes(&path)\n\n<!--\n_syntax: removeAttributes(&path)_\n_name: removeAttributes_\n_returns: bool_\n_returns_description: _\n_parameters: const string &path_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool removeAttributes()\n\n<!--\n_syntax: removeAttributes()_\n_name: removeAttributes_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool removeContents(&path)\n\n<!--\n_syntax: removeContents(&path)_\n_name: removeContents_\n_returns: bool_\n_returns_description: _\n_parameters: const string &path_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool removeContents()\n\n<!--\n_syntax: removeContents()_\n_name: removeContents_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool reset()\n\n<!--\n_syntax: reset()_\n_name: reset_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool save(&path)\n\n<!--\n_syntax: save(&path)_\n_name: save_\n_returns: bool_\n_returns_description: _\n_parameters: const filesystem::path &path_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool setAttribute(&path, &value)\n\n<!--\n_syntax: setAttribute(&path, &value)_\n_name: setAttribute_\n_returns: bool_\n_returns_description: _\n_parameters: const string &path, const string &value_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool setTo(&path)\n\n<!--\n_syntax: setTo(&path)_\n_name: setTo_\n_returns: bool_\n_returns_description: _\n_parameters: const string &path_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool setToChild(index)\n\n<!--\n_syntax: setToChild(index)_\n_name: setToChild_\n_returns: bool_\n_returns_description: _\n_parameters: unsigned long index_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool setToParent()\n\n<!--\n_syntax: setToParent()_\n_name: setToParent_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool setToParent(numLevelsUp)\n\n<!--\n_syntax: setToParent(numLevelsUp)_\n_name: setToParent_\n_returns: bool_\n_returns_description: _\n_parameters: int numLevelsUp_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool setToPrevSibling()\n\n<!--\n_syntax: setToPrevSibling()_\n_name: setToPrevSibling_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool setToSibling()\n\n<!--\n_syntax: setToSibling()_\n_name: setToSibling_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool setValue(&path, &value)\n\n<!--\n_syntax: setValue(&path, &value)_\n_name: setValue_\n_returns: bool_\n_returns_description: _\n_parameters: const string &path, const string &value_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###string toString()\n\n<!--\n_syntax: toString()_\n_name: toString_\n_returns: string_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int tokenize()\n\n<!--\n_syntax: tokenize()_\n_name: tokenize_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: True_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n### ~ofxXmlPoco()\n\n<!--\n_syntax: ~ofxXmlPoco()_\n_name: ~ofxXmlPoco_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n##Variables\n\n\n\n###int * document\n\n<!--\n_name: document_\n_type: int *_\n_access: protected_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int * element\n\n<!--\n_name: element_\n_type: int *_\n_access: protected_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page","static":true}}],"fetch":[]}