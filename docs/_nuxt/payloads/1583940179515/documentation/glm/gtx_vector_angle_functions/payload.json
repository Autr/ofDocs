{"data":[{"page":{"entry":{"name":"gtx_vector_angle_functions","filename":"gtx_vector_angle_functions.markdown","absolute":"/Users/Gilbert/Code/openFrameworks/ofSite/documentation/glm/gtx_vector_angle_functions.markdown","path":"/documentation/glm/gtx_vector_angle_functions","route":"/documentation/glm/gtx_vector_angle_functions.markdown","dir":"../ofSite/documentation/glm","ext":"markdown","type":"page","id":2070,"parent":1985,"breadcrumbs":[1985,1718],"siblings":[],"translations":{}},"description":{},"methods":[null,{"syntax":"glm::angle(&x, &y)","name":"glm::angle","returns":"typename vecType::value_type","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> vecType <span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> vecType <span class=\"token operator\">&amp;</span>y","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Returns the absolute angle between two vectors.\nParameters need to be normalized.</p>\n<p><strong>See also</strong>: gtx_vector_angle extension.</p>\n","desc":""},{"syntax":"glm::orientedAngle(&x = P, &y = P)","name":"glm::orientedAngle","returns":"T","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span>x<span class=\"token operator\">=</span>P<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span>y<span class=\"token operator\">=</span>P","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Returns the oriented angle between two 2d vectors.\nParameters need to be normalized.</p>\n<p><strong>See also</strong>: gtx_vector_angle extension.</p>\n","desc":""},{"syntax":"glm::orientedAngle(&x = P, &y = P, &ref = P)","name":"glm::orientedAngle","returns":"T","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span>x<span class=\"token operator\">=</span>P<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span>y<span class=\"token operator\">=</span>P<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span>ref<span class=\"token operator\">=</span>P","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Returns the oriented angle between two 3d vectors based from a reference axis.\nParameters need to be normalized.</p>\n<p><strong>See also</strong>: gtx_vector_angle extension.</p>\n","desc":""},{}],"document":"<p>#functions</p>\n<p>&lt;!--\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>##Description</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###typename vecType::value_type glm::angle(&amp;x, &amp;y)</p>\n<p>&lt;!--\n<em>syntax: glm::angle(&amp;x, &amp;y)</em>\n<em>name: glm::angle</em>\n<em>returns: typename vecType::value_type</em>\n_returns_description: _\n<em>parameters: const vecType &amp;x, const vecType &amp;y</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Returns the absolute angle between two vectors.\nParameters need to be normalized.</p>\n<p><strong>See also</strong>: gtx_vector_angle extension.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###T glm::orientedAngle(&amp;x = P, &amp;y = P)</p>\n<p>&lt;!--\n<em>syntax: glm::orientedAngle(&amp;x = P, &amp;y = P)</em>\n<em>name: glm::orientedAngle</em>\n<em>returns: T</em>\n_returns_description: _\n<em>parameters: const glm::vec2 &amp;x=P, const glm::vec2 &amp;y=P</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Returns the oriented angle between two 2d vectors.\nParameters need to be normalized.</p>\n<p><strong>See also</strong>: gtx_vector_angle extension.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###T glm::orientedAngle(&amp;x = P, &amp;y = P, &amp;ref = P)</p>\n<p>&lt;!--\n<em>syntax: glm::orientedAngle(&amp;x = P, &amp;y = P, &amp;ref = P)</em>\n<em>name: glm::orientedAngle</em>\n<em>returns: T</em>\n_returns_description: _\n<em>parameters: const glm::vec3 &amp;x=P, const glm::vec3 &amp;y=P, const glm::vec3 &amp;ref=P</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Returns the oriented angle between two 3d vectors based from a reference axis.\nParameters need to be normalized.</p>\n<p><strong>See also</strong>: gtx_vector_angle extension.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n","raw":"#functions\n\n\n<!--\n_visible: True_\n_advanced: False_\n-->\n\n##Description\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###typename vecType::value_type glm::angle(&x, &y)\n\n<!--\n_syntax: glm::angle(&x, &y)_\n_name: glm::angle_\n_returns: typename vecType::value_type_\n_returns_description: _\n_parameters: const vecType &x, const vecType &y_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Returns the absolute angle between two vectors.\n Parameters need to be normalized.\n\n**See also**: gtx_vector_angle extension.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###T glm::orientedAngle(&x = P, &y = P)\n\n<!--\n_syntax: glm::orientedAngle(&x = P, &y = P)_\n_name: glm::orientedAngle_\n_returns: T_\n_returns_description: _\n_parameters: const glm::vec2 &x=P, const glm::vec2 &y=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Returns the oriented angle between two 2d vectors.\n Parameters need to be normalized.\n\n**See also**: gtx_vector_angle extension.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###T glm::orientedAngle(&x = P, &y = P, &ref = P)\n\n<!--\n_syntax: glm::orientedAngle(&x = P, &y = P, &ref = P)_\n_name: glm::orientedAngle_\n_returns: T_\n_returns_description: _\n_parameters: const glm::vec3 &x=P, const glm::vec3 &y=P, const glm::vec3 &ref=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Returns the oriented angle between two 3d vectors based from a reference axis.\n Parameters need to be normalized.\n\n**See also**: gtx_vector_angle extension.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page","static":true}}],"fetch":[]}