{"data":[{"page":{"entry":{"name":"gtc_type_ptr_functions","filename":"gtc_type_ptr_functions.markdown","absolute":"/Users/Gilbert/Code/openFrameworks/ofSite/documentation/glm/gtc_type_ptr_functions.markdown","path":"/documentation/glm/gtc_type_ptr_functions","route":"/documentation/glm/gtc_type_ptr_functions.markdown","dir":"../ofSite/documentation/glm","ext":"markdown","type":"page","id":2023,"parent":1985,"breadcrumbs":[1985,1718],"siblings":[],"translations":{}},"description":{},"methods":[null,{"short":"<p>Build a matrix from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n","desc":""},{"short":"<p>Build a matrix from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n","desc":""},{"short":"<p>Build a matrix from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n","desc":""},{"short":"<p>Build a matrix from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n","desc":""},{"short":"<p>Build a matrix from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n","desc":""},{"short":"<p>Build a matrix from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n","desc":""},{"short":"<p>Build a matrix from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n","desc":""},{"short":"<p>Build a matrix from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n","desc":""},{"short":"<p>Build a matrix from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n","desc":""},{"short":"<p>Build a matrix from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n","desc":""},{"short":"<p>Build a matrix from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n","desc":""},{"short":"<p>Build a matrix from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n","desc":""},{"short":"<p>Build a quaternion from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n","desc":""},{"short":"<p>Build a vector from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n","desc":""},{"short":"<p>Build a vector from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n","desc":""},{"short":"<p>Build a vector from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n","desc":""},{"syntax":"glm::value_ptr(&vec)","name":"glm::value_ptr","returns":"const typename genType::value_type *","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>vec","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Return the constant address to the data of the input parameter.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n","desc":""},{}],"document":"<p>#functions</p>\n<p>&lt;!--\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>##Description</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###tmat2x2&lt; T, defaultp &gt; glm::make_mat2(ptr)</p>\n<p>&lt;!--\n<em>syntax: glm::make_mat2(ptr)</em>\n<em>name: glm::make_mat2</em>\n<em>returns: tmat2x2&lt; T, defaultp &gt;</em>\n_returns_description: _\n<em>parameters: const T *const ptr</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Build a matrix from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###tmat2x2&lt; T, defaultp &gt; glm::make_mat2x2(ptr)</p>\n<p>&lt;!--\n<em>syntax: glm::make_mat2x2(ptr)</em>\n<em>name: glm::make_mat2x2</em>\n<em>returns: tmat2x2&lt; T, defaultp &gt;</em>\n_returns_description: _\n<em>parameters: const T *const ptr</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Build a matrix from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###tmat2x3&lt; T, defaultp &gt; glm::make_mat2x3(ptr)</p>\n<p>&lt;!--\n<em>syntax: glm::make_mat2x3(ptr)</em>\n<em>name: glm::make_mat2x3</em>\n<em>returns: tmat2x3&lt; T, defaultp &gt;</em>\n_returns_description: _\n<em>parameters: const T *const ptr</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Build a matrix from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###tmat2x4&lt; T, defaultp &gt; glm::make_mat2x4(ptr)</p>\n<p>&lt;!--\n<em>syntax: glm::make_mat2x4(ptr)</em>\n<em>name: glm::make_mat2x4</em>\n<em>returns: tmat2x4&lt; T, defaultp &gt;</em>\n_returns_description: _\n<em>parameters: const T *const ptr</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Build a matrix from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###tmat3x3&lt; T, defaultp &gt; glm::make_mat3(ptr)</p>\n<p>&lt;!--\n<em>syntax: glm::make_mat3(ptr)</em>\n<em>name: glm::make_mat3</em>\n<em>returns: tmat3x3&lt; T, defaultp &gt;</em>\n_returns_description: _\n<em>parameters: const T *const ptr</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Build a matrix from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###tmat3x2&lt; T, defaultp &gt; glm::make_mat3x2(ptr)</p>\n<p>&lt;!--\n<em>syntax: glm::make_mat3x2(ptr)</em>\n<em>name: glm::make_mat3x2</em>\n<em>returns: tmat3x2&lt; T, defaultp &gt;</em>\n_returns_description: _\n<em>parameters: const T *const ptr</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Build a matrix from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###tmat3x3&lt; T, defaultp &gt; glm::make_mat3x3(ptr)</p>\n<p>&lt;!--\n<em>syntax: glm::make_mat3x3(ptr)</em>\n<em>name: glm::make_mat3x3</em>\n<em>returns: tmat3x3&lt; T, defaultp &gt;</em>\n_returns_description: _\n<em>parameters: const T *const ptr</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Build a matrix from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###tmat3x4&lt; T, defaultp &gt; glm::make_mat3x4(ptr)</p>\n<p>&lt;!--\n<em>syntax: glm::make_mat3x4(ptr)</em>\n<em>name: glm::make_mat3x4</em>\n<em>returns: tmat3x4&lt; T, defaultp &gt;</em>\n_returns_description: _\n<em>parameters: const T *const ptr</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Build a matrix from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###tmat4x4&lt; T, defaultp &gt; glm::make_mat4(ptr)</p>\n<p>&lt;!--\n<em>syntax: glm::make_mat4(ptr)</em>\n<em>name: glm::make_mat4</em>\n<em>returns: tmat4x4&lt; T, defaultp &gt;</em>\n_returns_description: _\n<em>parameters: const T *const ptr</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Build a matrix from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###tmat4x2&lt; T, defaultp &gt; glm::make_mat4x2(ptr)</p>\n<p>&lt;!--\n<em>syntax: glm::make_mat4x2(ptr)</em>\n<em>name: glm::make_mat4x2</em>\n<em>returns: tmat4x2&lt; T, defaultp &gt;</em>\n_returns_description: _\n<em>parameters: const T *const ptr</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Build a matrix from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###tmat4x3&lt; T, defaultp &gt; glm::make_mat4x3(ptr)</p>\n<p>&lt;!--\n<em>syntax: glm::make_mat4x3(ptr)</em>\n<em>name: glm::make_mat4x3</em>\n<em>returns: tmat4x3&lt; T, defaultp &gt;</em>\n_returns_description: _\n<em>parameters: const T *const ptr</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Build a matrix from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###tmat4x4&lt; T, defaultp &gt; glm::make_mat4x4(ptr)</p>\n<p>&lt;!--\n<em>syntax: glm::make_mat4x4(ptr)</em>\n<em>name: glm::make_mat4x4</em>\n<em>returns: tmat4x4&lt; T, defaultp &gt;</em>\n_returns_description: _\n<em>parameters: const T *const ptr</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Build a matrix from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###tquat&lt; T, defaultp &gt; glm::make_quat(ptr)</p>\n<p>&lt;!--\n<em>syntax: glm::make_quat(ptr)</em>\n<em>name: glm::make_quat</em>\n<em>returns: tquat&lt; T, defaultp &gt;</em>\n_returns_description: _\n<em>parameters: const T *const ptr</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Build a quaternion from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###tvec2&lt; T, defaultp &gt; glm::make_vec2(ptr)</p>\n<p>&lt;!--\n<em>syntax: glm::make_vec2(ptr)</em>\n<em>name: glm::make_vec2</em>\n<em>returns: tvec2&lt; T, defaultp &gt;</em>\n_returns_description: _\n<em>parameters: const T *const ptr</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Build a vector from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###tvec3&lt; T, defaultp &gt; glm::make_vec3(ptr)</p>\n<p>&lt;!--\n<em>syntax: glm::make_vec3(ptr)</em>\n<em>name: glm::make_vec3</em>\n<em>returns: tvec3&lt; T, defaultp &gt;</em>\n_returns_description: _\n<em>parameters: const T *const ptr</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Build a vector from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###tvec4&lt; T, defaultp &gt; glm::make_vec4(ptr)</p>\n<p>&lt;!--\n<em>syntax: glm::make_vec4(ptr)</em>\n<em>name: glm::make_vec4</em>\n<em>returns: tvec4&lt; T, defaultp &gt;</em>\n_returns_description: _\n<em>parameters: const T *const ptr</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Build a vector from a pointer.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###const typename genType::value_type * glm::value_ptr(&amp;vec)</p>\n<p>&lt;!--\n<em>syntax: glm::value_ptr(&amp;vec)</em>\n<em>name: glm::value_ptr</em>\n<em>returns: const typename genType::value_type *</em>\n_returns_description: _\n<em>parameters: const genType &amp;vec</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Return the constant address to the data of the input parameter.</p>\n<p><strong>See also</strong>: gtc_type_ptr</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n","raw":"#functions\n\n\n<!--\n_visible: True_\n_advanced: False_\n-->\n\n##Description\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###tmat2x2< T, defaultp > glm::make_mat2(ptr)\n\n<!--\n_syntax: glm::make_mat2(ptr)_\n_name: glm::make_mat2_\n_returns: tmat2x2< T, defaultp >_\n_returns_description: _\n_parameters: const T *const ptr_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nBuild a matrix from a pointer.\n\n**See also**: gtc_type_ptr\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###tmat2x2< T, defaultp > glm::make_mat2x2(ptr)\n\n<!--\n_syntax: glm::make_mat2x2(ptr)_\n_name: glm::make_mat2x2_\n_returns: tmat2x2< T, defaultp >_\n_returns_description: _\n_parameters: const T *const ptr_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nBuild a matrix from a pointer.\n\n**See also**: gtc_type_ptr\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###tmat2x3< T, defaultp > glm::make_mat2x3(ptr)\n\n<!--\n_syntax: glm::make_mat2x3(ptr)_\n_name: glm::make_mat2x3_\n_returns: tmat2x3< T, defaultp >_\n_returns_description: _\n_parameters: const T *const ptr_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nBuild a matrix from a pointer.\n\n**See also**: gtc_type_ptr\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###tmat2x4< T, defaultp > glm::make_mat2x4(ptr)\n\n<!--\n_syntax: glm::make_mat2x4(ptr)_\n_name: glm::make_mat2x4_\n_returns: tmat2x4< T, defaultp >_\n_returns_description: _\n_parameters: const T *const ptr_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nBuild a matrix from a pointer.\n\n**See also**: gtc_type_ptr\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###tmat3x3< T, defaultp > glm::make_mat3(ptr)\n\n<!--\n_syntax: glm::make_mat3(ptr)_\n_name: glm::make_mat3_\n_returns: tmat3x3< T, defaultp >_\n_returns_description: _\n_parameters: const T *const ptr_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nBuild a matrix from a pointer.\n\n**See also**: gtc_type_ptr\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###tmat3x2< T, defaultp > glm::make_mat3x2(ptr)\n\n<!--\n_syntax: glm::make_mat3x2(ptr)_\n_name: glm::make_mat3x2_\n_returns: tmat3x2< T, defaultp >_\n_returns_description: _\n_parameters: const T *const ptr_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nBuild a matrix from a pointer.\n\n**See also**: gtc_type_ptr\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###tmat3x3< T, defaultp > glm::make_mat3x3(ptr)\n\n<!--\n_syntax: glm::make_mat3x3(ptr)_\n_name: glm::make_mat3x3_\n_returns: tmat3x3< T, defaultp >_\n_returns_description: _\n_parameters: const T *const ptr_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nBuild a matrix from a pointer.\n\n**See also**: gtc_type_ptr\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###tmat3x4< T, defaultp > glm::make_mat3x4(ptr)\n\n<!--\n_syntax: glm::make_mat3x4(ptr)_\n_name: glm::make_mat3x4_\n_returns: tmat3x4< T, defaultp >_\n_returns_description: _\n_parameters: const T *const ptr_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nBuild a matrix from a pointer.\n\n**See also**: gtc_type_ptr\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###tmat4x4< T, defaultp > glm::make_mat4(ptr)\n\n<!--\n_syntax: glm::make_mat4(ptr)_\n_name: glm::make_mat4_\n_returns: tmat4x4< T, defaultp >_\n_returns_description: _\n_parameters: const T *const ptr_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nBuild a matrix from a pointer.\n\n**See also**: gtc_type_ptr\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###tmat4x2< T, defaultp > glm::make_mat4x2(ptr)\n\n<!--\n_syntax: glm::make_mat4x2(ptr)_\n_name: glm::make_mat4x2_\n_returns: tmat4x2< T, defaultp >_\n_returns_description: _\n_parameters: const T *const ptr_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nBuild a matrix from a pointer.\n\n**See also**: gtc_type_ptr\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###tmat4x3< T, defaultp > glm::make_mat4x3(ptr)\n\n<!--\n_syntax: glm::make_mat4x3(ptr)_\n_name: glm::make_mat4x3_\n_returns: tmat4x3< T, defaultp >_\n_returns_description: _\n_parameters: const T *const ptr_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nBuild a matrix from a pointer.\n\n**See also**: gtc_type_ptr\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###tmat4x4< T, defaultp > glm::make_mat4x4(ptr)\n\n<!--\n_syntax: glm::make_mat4x4(ptr)_\n_name: glm::make_mat4x4_\n_returns: tmat4x4< T, defaultp >_\n_returns_description: _\n_parameters: const T *const ptr_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nBuild a matrix from a pointer.\n\n**See also**: gtc_type_ptr\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###tquat< T, defaultp > glm::make_quat(ptr)\n\n<!--\n_syntax: glm::make_quat(ptr)_\n_name: glm::make_quat_\n_returns: tquat< T, defaultp >_\n_returns_description: _\n_parameters: const T *const ptr_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nBuild a quaternion from a pointer.\n\n**See also**: gtc_type_ptr\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###tvec2< T, defaultp > glm::make_vec2(ptr)\n\n<!--\n_syntax: glm::make_vec2(ptr)_\n_name: glm::make_vec2_\n_returns: tvec2< T, defaultp >_\n_returns_description: _\n_parameters: const T *const ptr_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nBuild a vector from a pointer.\n\n**See also**: gtc_type_ptr\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###tvec3< T, defaultp > glm::make_vec3(ptr)\n\n<!--\n_syntax: glm::make_vec3(ptr)_\n_name: glm::make_vec3_\n_returns: tvec3< T, defaultp >_\n_returns_description: _\n_parameters: const T *const ptr_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nBuild a vector from a pointer.\n\n**See also**: gtc_type_ptr\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###tvec4< T, defaultp > glm::make_vec4(ptr)\n\n<!--\n_syntax: glm::make_vec4(ptr)_\n_name: glm::make_vec4_\n_returns: tvec4< T, defaultp >_\n_returns_description: _\n_parameters: const T *const ptr_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nBuild a vector from a pointer.\n\n**See also**: gtc_type_ptr\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###const typename genType::value_type * glm::value_ptr(&vec)\n\n<!--\n_syntax: glm::value_ptr(&vec)_\n_name: glm::value_ptr_\n_returns: const typename genType::value_type *_\n_returns_description: _\n_parameters: const genType &vec_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nReturn the constant address to the data of the input parameter.\n\n**See also**: gtc_type_ptr\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page","static":true}}],"fetch":[]}