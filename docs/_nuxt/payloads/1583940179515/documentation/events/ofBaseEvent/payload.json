{"data":[{"page":{"entry":{"name":"ofBaseEvent","filename":"ofBaseEvent.markdown","absolute":"/Users/Gilbert/Code/openFrameworks/ofSite/documentation/events/ofBaseEvent.markdown","path":"/documentation/events/ofBaseEvent","route":"/documentation/events/ofBaseEvent.markdown","dir":"../ofSite/documentation/events","ext":"markdown","type":"page","id":1924,"parent":1922,"breadcrumbs":[1922,1718],"siblings":[],"translations":{}},"description":{"short":"","full":"<h1></h1>\n"},"config":{"visible":"True","advanced":"False","istemplated":"False","extends":null},"methods":[{"syntax":"add(&&f)","name":"add","returns":"void","returns_description":null,"parameters":"TFunction <span class=\"token operator\">&amp;&amp;</span>f","access":"protected","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"disable()","name":"disable","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Disable an event.</p>\n<p>\\see ofBaseEvent::enable()\n\\see ofBaseEvent::isEnabled()</p>\n","desc":""},{"syntax":"enable()","name":"enable","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Enable an event.</p>\n<p>\\see ofBaseEvent::disable()\n\\see ofBaseEvent::isEnabled()</p>\n","desc":""},{"syntax":"isEnabled()","name":"isEnabled","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Check whether an event is enabled or not.</p>\n<p>Returns: true if enables\n\\see ofBaseEvent::enable()\n\\see ofBaseEvent::disable()</p>\n","desc":""},{"syntax":"ofBaseEvent()","name":"ofBaseEvent","returns":null,"returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Basic constructor enabling an ofBaseEvent.</p>\n<p>\\see ofBaseEvent::ofBaseEvent(const ofBaseEvent &amp; mom)\n\\see ofBaseEvent::enable()\n\\see ofBaseEvent::disable()\n\\see ofBaseEvent::isEnabled()</p>\n","desc":""},{"short":"<p>Copy-constructor for ofBaseEvent.</p>\n<p>\\see ofBaseEvent::ofBaseEvent()</p>\n","desc":""},{"short":"<p>Overloading the assignment operator.</p>\n","desc":""},{"syntax":"remove(&function)","name":"remove","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> TFunction <span class=\"token operator\">&amp;</span>function","access":"protected","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"size()","name":"size","returns":"size_t","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"name":"enabled","type":"bool","access":"protected","version_started":"0.9.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{"short":"","desc":""},{"name":"mtx","type":"Mutex","access":"protected","version_started":"0.9.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{}],"document":"<p>#class ofBaseEvent</p>\n<p>&lt;!--\n<em>visible: True</em>\n<em>advanced: False</em>\n<em>istemplated: False</em>\n_extends: _\n--&gt;</p>\n<p>##InlineDescription</p>\n<p>##Description</p>\n<p>##Methods</p>\n<p>###void add(&amp;&amp;f)</p>\n<p>&lt;!--\n<em>syntax: add(&amp;&amp;f)</em>\n<em>name: add</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: TFunction &amp;&amp;f</em>\n<em>access: protected</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void disable()</p>\n<p>&lt;!--\n<em>syntax: disable()</em>\n<em>name: disable</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Disable an event.</p>\n<p>\\see ofBaseEvent::enable()\n\\see ofBaseEvent::isEnabled()</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void enable()</p>\n<p>&lt;!--\n<em>syntax: enable()</em>\n<em>name: enable</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Enable an event.</p>\n<p>\\see ofBaseEvent::disable()\n\\see ofBaseEvent::isEnabled()</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool isEnabled()</p>\n<p>&lt;!--\n<em>syntax: isEnabled()</em>\n<em>name: isEnabled</em>\n<em>returns: bool</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Check whether an event is enabled or not.</p>\n<p>Returns: true if enables\n\\see ofBaseEvent::enable()\n\\see ofBaseEvent::disable()</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<h3>ofBaseEvent()</h3>\n<p>&lt;!--\n<em>syntax: ofBaseEvent()</em>\n<em>name: ofBaseEvent</em>\n_returns: _\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Basic constructor enabling an ofBaseEvent.</p>\n<p>\\see ofBaseEvent::ofBaseEvent(const ofBaseEvent &amp; mom)\n\\see ofBaseEvent::enable()\n\\see ofBaseEvent::disable()\n\\see ofBaseEvent::isEnabled()</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<h3>ofBaseEvent(Function, &amp;mom)</h3>\n<p>&lt;!--\n<em>syntax: ofBaseEvent(Function, &amp;mom)</em>\n<em>name: ofBaseEvent</em>\n_returns: _\n_returns_description: _\n<em>parameters: const ofBaseEvent&lt; Function, Mutex &gt; &amp;mom</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Copy-constructor for ofBaseEvent.</p>\n<p>\\see ofBaseEvent::ofBaseEvent()</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofBaseEvent&lt; Function, Mutex &gt; &amp; operator=(Function, &amp;mom)</p>\n<p>&lt;!--\n<em>syntax: operator=(Function, &amp;mom)</em>\n<em>name: operator=</em>\n<em>returns: ofBaseEvent&lt; Function, Mutex &gt; &amp;</em>\n_returns_description: _\n<em>parameters: const ofBaseEvent&lt; Function, Mutex &gt; &amp;mom</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Overloading the assignment operator.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void remove(&amp;function)</p>\n<p>&lt;!--\n<em>syntax: remove(&amp;function)</em>\n<em>name: remove</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const TFunction &amp;function</em>\n<em>access: protected</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###size_t size()</p>\n<p>&lt;!--\n<em>syntax: size()</em>\n<em>name: size</em>\n<em>returns: size_t</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>##Variables</p>\n<p>###bool enabled</p>\n<p>&lt;!--\n<em>name: enabled</em>\n<em>type: bool</em>\n<em>access: protected</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###vector&lt;shared_ptr&lt; Function&gt;  &gt; functions</p>\n<p>&lt;!--\n<em>name: functions</em>\n<em>type: vector&lt;shared_ptr&lt; Function&gt;  &gt;</em>\n<em>access: protected</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###Mutex mtx</p>\n<p>&lt;!--\n<em>name: mtx</em>\n<em>type: Mutex</em>\n<em>access: protected</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n","raw":"#class ofBaseEvent\n\n\n<!--\n_visible: True_\n_advanced: False_\n_istemplated: False_\n_extends: _\n-->\n\n##InlineDescription\n\n\n\n\n\n\n##Description\n\n\n\n\n\n##Methods\n\n\n\n###void add(&&f)\n\n<!--\n_syntax: add(&&f)_\n_name: add_\n_returns: void_\n_returns_description: _\n_parameters: TFunction &&f_\n_access: protected_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void disable()\n\n<!--\n_syntax: disable()_\n_name: disable_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nDisable an event.\n\n\\see ofBaseEvent::enable()\n\\see ofBaseEvent::isEnabled()\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void enable()\n\n<!--\n_syntax: enable()_\n_name: enable_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nEnable an event.\n\n\\see ofBaseEvent::disable()\n\\see ofBaseEvent::isEnabled()\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool isEnabled()\n\n<!--\n_syntax: isEnabled()_\n_name: isEnabled_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nCheck whether an event is enabled or not.\n\n\nReturns: true if enables\n\\see ofBaseEvent::enable()\n\\see ofBaseEvent::disable()\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n### ofBaseEvent()\n\n<!--\n_syntax: ofBaseEvent()_\n_name: ofBaseEvent_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nBasic constructor enabling an ofBaseEvent.\n\n\\see ofBaseEvent::ofBaseEvent(const ofBaseEvent & mom)\n\\see ofBaseEvent::enable()\n\\see ofBaseEvent::disable()\n\\see ofBaseEvent::isEnabled()\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n### ofBaseEvent(Function, &mom)\n\n<!--\n_syntax: ofBaseEvent(Function, &mom)_\n_name: ofBaseEvent_\n_returns: _\n_returns_description: _\n_parameters: const ofBaseEvent< Function, Mutex > &mom_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nCopy-constructor for ofBaseEvent.\n\n\\see ofBaseEvent::ofBaseEvent()\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofBaseEvent< Function, Mutex > & operator=(Function, &mom)\n\n<!--\n_syntax: operator=(Function, &mom)_\n_name: operator=_\n_returns: ofBaseEvent< Function, Mutex > &_\n_returns_description: _\n_parameters: const ofBaseEvent< Function, Mutex > &mom_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nOverloading the assignment operator.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void remove(&function)\n\n<!--\n_syntax: remove(&function)_\n_name: remove_\n_returns: void_\n_returns_description: _\n_parameters: const TFunction &function_\n_access: protected_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###size_t size()\n\n<!--\n_syntax: size()_\n_name: size_\n_returns: size_t_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n##Variables\n\n\n\n###bool enabled\n\n<!--\n_name: enabled_\n_type: bool_\n_access: protected_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###vector<shared_ptr< Function>  > functions\n\n<!--\n_name: functions_\n_type: vector<shared_ptr< Function>  >_\n_access: protected_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###Mutex mtx\n\n<!--\n_name: mtx_\n_type: Mutex_\n_access: protected_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page","static":true}}],"fetch":[]}