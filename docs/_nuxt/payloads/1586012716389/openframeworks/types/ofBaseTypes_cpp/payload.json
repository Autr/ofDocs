{"data":[{"page":{"entry":{"name":"ofBaseTypes.cpp","filename":"ofBaseTypes.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/types/ofBaseTypes.cpp","path":"/openframeworks/types/ofBaseTypes_cpp","route":"/openframeworks/types/ofBaseTypes.cpp","dir":"../libs/openFrameworks/types","ext":"cpp","type":"source","id":286,"parent":285,"breadcrumbs":[285,164],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGLUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGLProgrammableRenderer.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"of3dGraphics.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofSoundBuffer.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofMesh.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofVideoPlayer.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofSoundBaseTypes.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofVideoBaseTypes.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGraphicsBaseTypes.h\"</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\nofBaseVideoGrabber<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofBaseVideoGrabber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofBaseVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">setVerbose</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bTalkToMe<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofBaseVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setVerbose() not implemented\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofBaseVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">setDeviceID</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> _deviceID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofBaseVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setDeviceID() not implemented\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofBaseVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">setDesiredFrameRate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> framerate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofBaseVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setDesiredFrameRate() not implemented\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofBaseVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">videoSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofBaseVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"videoSettings() not implemented\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">//void ofBaseVideoGrabber::setPixelFormat(ofPixelFormat pixelFormat){</span>\n<span class=\"token comment\" spellcheck=\"true\">//\tofLogWarning(\"ofBaseVideoGrabber\") &lt;&lt; \"setPixelFormat() not implemented\";</span>\n<span class=\"token comment\" spellcheck=\"true\">//}</span>\n<span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token comment\" spellcheck=\"true\">//ofPixelFormat ofBaseVideoGrabber::getPixelFormat(){</span>\n<span class=\"token comment\" spellcheck=\"true\">//\tofLogWarning(\"ofBaseVideoGrabber\") &lt;&lt; \"getPixelFormat() not implemented\";</span>\n<span class=\"token comment\" spellcheck=\"true\">//\treturn OF_PIXELS_RGB;</span>\n<span class=\"token comment\" spellcheck=\"true\">//}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\nofBaseVideoPlayer<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofBaseVideoPlayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">loadAsync</span><span class=\"token punctuation\">(</span>string name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofBaseVideoPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"loadAsync() not implemented, loading synchronously\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">load</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">float</span> ofBaseVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofBaseVideoPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getPosition() not implemented\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">float</span> ofBaseVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">getSpeed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofBaseVideoPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getSpeed() not implemented\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">float</span> ofBaseVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">getDuration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofBaseVideoPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getDuration() not implemented\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofBaseVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">getIsMovieDone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofBaseVideoPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getIsMovieDone() not implemented\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofBaseVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">setPaused</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bPause<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofBaseVideoPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setPaused() not implemented\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofBaseVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> pct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofBaseVideoPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setPosition() not implemented\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofBaseVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">setVolume</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> volume<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofBaseVideoPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setVolume() not implemented\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofBaseVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">setLoopState</span><span class=\"token punctuation\">(</span>ofLoopType state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofBaseVideoPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setLoopState() not implemented\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofBaseVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">setSpeed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofBaseVideoPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setSpeed() not implemented\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofBaseVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">setFrame</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> frame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofBaseVideoPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setFrame() not implemented\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">int</span>\tofBaseVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">getCurrentFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofBaseVideoPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getCurrentFrame() not implemented\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">int</span>\tofBaseVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">getTotalNumFrames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofBaseVideoPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getTotalNumFrames() not implemented\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\nofLoopType ofBaseVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">getLoopState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofBaseVideoPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getLoopState() not implemented\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> OF_LOOP_NONE<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofBaseVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">firstFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofBaseVideoPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"firstFrame() not implemented\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofBaseVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">nextFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofBaseVideoPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"nextFrame() not implemented\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofBaseVideoPlayer<span class=\"token operator\">::</span><span class=\"token function\">previousFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofBaseVideoPlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"previousFrame() not implemented\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\nglm<span class=\"token operator\">::</span>mat4 ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">getCurrentOrientationMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getCurrentOrientationMatrix() Not implemented for this renderer. Returning Identity matrix.\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> glm<span class=\"token operator\">::</span><span class=\"token function\">mat4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofMesh <span class=\"token operator\">&amp;</span> mesh<span class=\"token punctuation\">,</span> ofPolyRenderMode renderType<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">,</span>renderType<span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">usingColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">usingTextures</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">usingNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">setPlaneResolution</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> columns<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> rows <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setPlaneResolution</span><span class=\"token punctuation\">(</span>columns<span class=\"token punctuation\">,</span>rows<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nglm<span class=\"token operator\">::</span>vec2 ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">getPlaneResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getPlaneResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawPlane</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawPlane</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawPlane</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawPlane</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">,</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawPlane</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawPlane</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">,</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawPlane</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height <span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawPlane</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">setSphereResolution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setSphereResolution</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">getSphereResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSphereResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawSphere</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawSphere</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">,</span>radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawSphere</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">,</span>radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawSphere</span><span class=\"token punctuation\">(</span>radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">setIcoSphereResolution</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> res <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setIcoSphereResolution</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">getIcoSphereResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getIcoSphereResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawIcoSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawIcoSphere</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">,</span>radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawIcoSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawIcoSphere</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawIcoSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawIcoSphere</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">,</span>radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawIcoSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawIcoSphere</span><span class=\"token punctuation\">(</span>radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">setCylinderResolution</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> radiusSegments<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> heightSegments<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> capSegments <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setCylinderResolution</span><span class=\"token punctuation\">(</span>radiusSegments<span class=\"token punctuation\">,</span>heightSegments<span class=\"token punctuation\">,</span>capSegments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nglm<span class=\"token operator\">::</span>vec3 ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">getCylinderResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getCylinderResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawCylinder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawCylinder</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>radius<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawCylinder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawCylinder</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">,</span>radius<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawCylinder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawCylinder</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">,</span>radius<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawCylinder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawCylinder</span><span class=\"token punctuation\">(</span>radius<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">setConeResolution</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> radiusSegments<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> heightSegments<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> capSegments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setConeResolution</span><span class=\"token punctuation\">(</span>radiusSegments<span class=\"token punctuation\">,</span>heightSegments<span class=\"token punctuation\">,</span>capSegments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nglm<span class=\"token operator\">::</span>vec3 ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">getConeResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getConeResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawCone</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawCone</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">,</span>radius<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawCone</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawCone</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>radius<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawCone</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawCone</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">,</span>radius<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawCone</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawCone</span><span class=\"token punctuation\">(</span>radius<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">setBoxResolution</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> res <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setBoxResolution</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">setBoxResolution</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> resWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> resHeight<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> resDepth <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setBoxResolution</span><span class=\"token punctuation\">(</span>resWidth<span class=\"token punctuation\">,</span>resHeight<span class=\"token punctuation\">,</span>resDepth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nglm<span class=\"token operator\">::</span>vec3 ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">getBoxResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBoxResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawBox</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> depth<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawBox</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">,</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">,</span>depth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> size<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawBox</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> depth<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawBox</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">,</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">,</span>depth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> size<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawBox</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">,</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> size<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawBox</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawBox</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> depth <span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawBox</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">,</span>depth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawAxis</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> size<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawAxis</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawGrid</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> stepSize<span class=\"token punctuation\">,</span> size_t numberOfSteps<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> labels<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> z<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawGrid</span><span class=\"token punctuation\">(</span>stepSize<span class=\"token punctuation\">,</span>numberOfSteps<span class=\"token punctuation\">,</span>labels<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawGridPlane</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> stepSize<span class=\"token punctuation\">,</span> size_t numberOfSteps<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> labels<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawGridPlane</span><span class=\"token punctuation\">(</span>stepSize<span class=\"token punctuation\">,</span>numberOfSteps<span class=\"token punctuation\">,</span>labels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawArrow</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> start<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> end<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> headSize<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawArrow</span><span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">,</span>end<span class=\"token punctuation\">,</span>headSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawRotationAxes</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> stripWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> circleRes<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">drawRotationAxes</span><span class=\"token punctuation\">(</span>radius<span class=\"token punctuation\">,</span>stripWidth<span class=\"token punctuation\">,</span>circleRes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseMaterial<span class=\"token operator\">::</span><span class=\"token function\">uploadMatrices</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofShader <span class=\"token operator\">&amp;</span> shader<span class=\"token punctuation\">,</span>ofGLProgrammableRenderer <span class=\"token operator\">&amp;</span> renderer<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setUniformMatrix4f</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"normalMatrix\"</span><span class=\"token punctuation\">,</span> renderer<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentNormalMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">void</span> ofBaseSoundInput<span class=\"token operator\">::</span><span class=\"token function\">audioIn</span><span class=\"token punctuation\">(</span> ofSoundBuffer<span class=\"token operator\">&amp;</span> buffer <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">audioIn</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>buffer<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">.</span><span class=\"token function\">getNumFrames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">.</span><span class=\"token function\">getNumChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">.</span><span class=\"token function\">getDeviceID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">.</span><span class=\"token function\">getTickCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseSoundInput<span class=\"token operator\">::</span><span class=\"token function\">audioIn</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span> input<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> bufferSize<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nChannels<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> deviceID<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> tickCount <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">audioIn</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> bufferSize<span class=\"token punctuation\">,</span> nChannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseSoundInput<span class=\"token operator\">::</span><span class=\"token function\">audioIn</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span> input<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> bufferSize<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nChannels <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">audioReceived</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">,</span> bufferSize<span class=\"token punctuation\">,</span> nChannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">void</span> ofBaseSoundOutput<span class=\"token operator\">::</span><span class=\"token function\">audioOut</span><span class=\"token punctuation\">(</span> ofSoundBuffer<span class=\"token operator\">&amp;</span> buffer <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">audioOut</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>buffer<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">.</span><span class=\"token function\">getNumFrames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">.</span><span class=\"token function\">getNumChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">.</span><span class=\"token function\">getDeviceID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">.</span><span class=\"token function\">getTickCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseSoundOutput<span class=\"token operator\">::</span><span class=\"token function\">audioOut</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span> output<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> bufferSize<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nChannels<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> deviceID<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> tickCount  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">audioOut</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">,</span> bufferSize<span class=\"token punctuation\">,</span> nChannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofBaseSoundOutput<span class=\"token operator\">::</span><span class=\"token function\">audioOut</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span> output<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> bufferSize<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nChannels <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">audioRequested</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">,</span> bufferSize<span class=\"token punctuation\">,</span> nChannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n","type":"source","static":true}}],"fetch":[]}