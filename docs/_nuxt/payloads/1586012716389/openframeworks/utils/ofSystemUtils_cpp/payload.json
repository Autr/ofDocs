{"data":[{"page":{"entry":{"name":"ofSystemUtils.cpp","filename":"ofSystemUtils.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/utils/ofSystemUtils.cpp","path":"/openframeworks/utils/ofSystemUtils_cpp","route":"/openframeworks/utils/ofSystemUtils.cpp","dir":"../libs/openFrameworks/utils","ext":"cpp","type":"source","id":310,"parent":298,"breadcrumbs":[298,164],"siblings":[],"translations":{}},"document":"\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofSystemUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofFileUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofLog.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;condition_variable></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;mutex></span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_WIN32</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;winuser.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;commdlg.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> _WIN32_DCOM</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;windows.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;shlobj.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;tchar.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OSX</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// ofSystemUtils.cpp is configured to build as</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// objective-c++ so as able to use Cocoa dialog panels</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// This is done with this compiler flag</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//\t\t-x objective-c++</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// http://www.yakyak.org/viewtopic.php?p=1475838&amp;sid=1e9dcb5c9fd652a6695ac00c5e957822#p1475838</span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Cocoa/Cocoa.h></span></span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofAppRunner.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_WIN32</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;locale></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sstream></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span>\n\nstd<span class=\"token operator\">::</span>string <span class=\"token function\">convertWideToNarrow</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">wchar_t</span> <span class=\"token operator\">*</span>s<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span> dfault <span class=\"token operator\">=</span> <span class=\"token string\">'?'</span><span class=\"token punctuation\">,</span>\n                      <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>locale<span class=\"token operator\">&amp;</span> loc <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">locale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  std<span class=\"token operator\">::</span>ostringstream stm<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">*</span>s <span class=\"token operator\">!=</span> L<span class=\"token string\">'\\0'</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    stm <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>use_facet<span class=\"token operator\">&lt;</span> std<span class=\"token operator\">::</span>ctype<span class=\"token operator\">&lt;</span><span class=\"token keyword\">wchar_t</span><span class=\"token operator\">></span> <span class=\"token operator\">></span><span class=\"token punctuation\">(</span> loc <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">narrow</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">*</span>s<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span> dfault <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> stm<span class=\"token punctuation\">.</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nstd<span class=\"token operator\">::</span>wstring <span class=\"token function\">convertNarrowToWide</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> as <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// deal with trivial case of empty string</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> as<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>    <span class=\"token keyword\">return</span> std<span class=\"token operator\">::</span><span class=\"token function\">wstring</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// determine required length of new string</span>\n    size_t reqLength <span class=\"token operator\">=</span> <span class=\"token operator\">::</span><span class=\"token function\">MultiByteToWideChar</span><span class=\"token punctuation\">(</span> CP_UTF8<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> as<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>as<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// construct new string of required length</span>\n    std<span class=\"token operator\">::</span>wstring <span class=\"token function\">ret</span><span class=\"token punctuation\">(</span> reqLength<span class=\"token punctuation\">,</span> L<span class=\"token string\">'\\0'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// convert old string to new string</span>\n    <span class=\"token operator\">::</span><span class=\"token function\">MultiByteToWideChar</span><span class=\"token punctuation\">(</span> CP_UTF8<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> as<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>as<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ret<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>ret<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// return new string ( compiler should optimize this away )</span>\n    <span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined( TARGET_OSX )</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">restoreAppWindowFocus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tNSWindow <span class=\"token operator\">*</span> appWindow <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>NSWindow <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token function\">ofGetCocoaWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>appWindow<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token punctuation\">[</span>appWindow makeKeyAndOrderFront<span class=\"token operator\">:</span>nil<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined( TARGET_LINUX ) &amp;&amp; defined (OF_USING_GTK)</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;gtk/gtk.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGstUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;thread></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;X11/Xlib.h></span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GTK_MAJOR_VERSION>=3</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OPEN_BUTTON \"_Open\"</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> SELECT_BUTTON \"_Select All\"</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> SAVE_BUTTON \"_Save\"</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> CANCEL_BUTTON \"_Cancel\"</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OPEN_BUTTON GTK_STOCK_OPEN</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> SELECT_BUTTON GTK_STOCK_SELECT_ALL</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> SAVE_BUTTON GTK_STOCK_SAVE</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> CANCEL_BUTTON GTK_STOCK_CANCEL</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\ngboolean <span class=\"token function\">init_gtk</span><span class=\"token punctuation\">(</span>gpointer userdata<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> argc<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">gtk_init</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>argc<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> FALSE<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">struct</span> FileDialogData<span class=\"token punctuation\">{</span>\n\tGtkFileChooserAction action<span class=\"token punctuation\">;</span>\n\tstring windowTitle<span class=\"token punctuation\">;</span>\n\tstring defaultName<span class=\"token punctuation\">;</span>\n\tstring results<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> done<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>condition_variable condition<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>mutex mutex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\ngboolean <span class=\"token function\">file_dialog_gtk</span><span class=\"token punctuation\">(</span>gpointer userdata<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tFileDialogData <span class=\"token operator\">*</span> dialogData <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>FileDialogData<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>userdata<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> gchar<span class=\"token operator\">*</span> button_name <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>dialogData<span class=\"token operator\">-</span><span class=\"token operator\">></span>action<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> GTK_FILE_CHOOSER_ACTION_OPEN<span class=\"token operator\">:</span>\n\t\tbutton_name <span class=\"token operator\">=</span> OPEN_BUTTON<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER<span class=\"token operator\">:</span>\n\t\tbutton_name <span class=\"token operator\">=</span> SELECT_BUTTON<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> GTK_FILE_CHOOSER_ACTION_SAVE<span class=\"token operator\">:</span>\n\t\tbutton_name <span class=\"token operator\">=</span> SAVE_BUTTON<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>button_name<span class=\"token operator\">!=</span><span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tGtkWidget <span class=\"token operator\">*</span>dialog <span class=\"token operator\">=</span> <span class=\"token function\">gtk_file_chooser_dialog_new</span> <span class=\"token punctuation\">(</span>dialogData<span class=\"token operator\">-</span><span class=\"token operator\">></span>windowTitle<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t  <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t  dialogData<span class=\"token operator\">-</span><span class=\"token operator\">></span>action<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t  button_name<span class=\"token punctuation\">,</span> GTK_RESPONSE_ACCEPT<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t  CANCEL_BUTTON<span class=\"token punctuation\">,</span> GTK_RESPONSE_CANCEL<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t  <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofFile</span><span class=\"token punctuation\">(</span>dialogData<span class=\"token operator\">-</span><span class=\"token operator\">></span>defaultName<span class=\"token punctuation\">,</span> ofFile<span class=\"token operator\">::</span>Reference<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">gtk_file_chooser_set_current_folder</span><span class=\"token punctuation\">(</span><span class=\"token function\">GTK_FILE_CHOOSER</span><span class=\"token punctuation\">(</span>dialog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dialogData<span class=\"token operator\">-</span><span class=\"token operator\">></span>defaultName<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">gtk_file_chooser_set_filename</span><span class=\"token punctuation\">(</span><span class=\"token function\">GTK_FILE_CHOOSER</span><span class=\"token punctuation\">(</span>dialog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dialogData<span class=\"token operator\">-</span><span class=\"token operator\">></span>defaultName<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">gtk_dialog_run</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GTK_DIALOG</span> <span class=\"token punctuation\">(</span>dialog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> GTK_RESPONSE_ACCEPT<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tdialogData<span class=\"token operator\">-</span><span class=\"token operator\">></span>results <span class=\"token operator\">=</span> <span class=\"token function\">gtk_file_chooser_get_filename</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GTK_FILE_CHOOSER</span> <span class=\"token punctuation\">(</span>dialog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token function\">gtk_widget_destroy</span> <span class=\"token punctuation\">(</span>dialog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tstd<span class=\"token operator\">::</span>unique_lock<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>mutex<span class=\"token operator\">></span> <span class=\"token function\">lck</span><span class=\"token punctuation\">(</span>dialogData<span class=\"token operator\">-</span><span class=\"token operator\">></span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tdialogData<span class=\"token operator\">-</span><span class=\"token operator\">></span>condition<span class=\"token punctuation\">.</span><span class=\"token function\">notify_all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tdialogData<span class=\"token operator\">-</span><span class=\"token operator\">></span>done <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> G_SOURCE_REMOVE<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">struct</span> TextDialogData<span class=\"token punctuation\">{</span>\n\tstring text<span class=\"token punctuation\">;</span>\n\tstring question<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> done<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>condition_variable condition<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>mutex mutex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\ngboolean <span class=\"token function\">alert_dialog_gtk</span><span class=\"token punctuation\">(</span>gpointer userdata<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tTextDialogData <span class=\"token operator\">*</span> dialogData <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>TextDialogData<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>userdata<span class=\"token punctuation\">;</span>\n\tGtkWidget<span class=\"token operator\">*</span> dialog <span class=\"token operator\">=</span> <span class=\"token function\">gtk_message_dialog_new</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>GtkDialogFlags<span class=\"token punctuation\">)</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> GTK_MESSAGE_INFO<span class=\"token punctuation\">,</span> GTK_BUTTONS_OK<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> dialogData<span class=\"token operator\">-</span><span class=\"token operator\">></span>text<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">gtk_widget_grab_focus</span><span class=\"token punctuation\">(</span><span class=\"token function\">gtk_dialog_get_widget_for_response</span><span class=\"token punctuation\">(</span><span class=\"token function\">GTK_DIALOG</span><span class=\"token punctuation\">(</span>dialog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> GTK_RESPONSE_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">gtk_dialog_run</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GTK_DIALOG</span> <span class=\"token punctuation\">(</span>dialog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">gtk_widget_destroy</span> <span class=\"token punctuation\">(</span>dialog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tdialogData<span class=\"token operator\">-</span><span class=\"token operator\">></span>mutex<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tdialogData<span class=\"token operator\">-</span><span class=\"token operator\">></span>condition<span class=\"token punctuation\">.</span><span class=\"token function\">notify_all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tdialogData<span class=\"token operator\">-</span><span class=\"token operator\">></span>done <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\tdialogData<span class=\"token operator\">-</span><span class=\"token operator\">></span>mutex<span class=\"token punctuation\">.</span><span class=\"token function\">unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> G_SOURCE_REMOVE<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\ngboolean <span class=\"token function\">text_dialog_gtk</span><span class=\"token punctuation\">(</span>gpointer userdata<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tTextDialogData <span class=\"token operator\">*</span> dialogData <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>TextDialogData<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>userdata<span class=\"token punctuation\">;</span>\n\tGtkWidget<span class=\"token operator\">*</span> dialog <span class=\"token operator\">=</span> <span class=\"token function\">gtk_message_dialog_new</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>GtkDialogFlags<span class=\"token punctuation\">)</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> GTK_MESSAGE_QUESTION<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>GtkButtonsType<span class=\"token punctuation\">)</span> GTK_BUTTONS_OK_CANCEL<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%s\"</span><span class=\"token punctuation\">,</span> dialogData<span class=\"token operator\">-</span><span class=\"token operator\">></span>question<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tGtkWidget<span class=\"token operator\">*</span> content_area <span class=\"token operator\">=</span> <span class=\"token function\">gtk_dialog_get_content_area</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GTK_DIALOG</span> <span class=\"token punctuation\">(</span>dialog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tGtkWidget<span class=\"token operator\">*</span> textbox <span class=\"token operator\">=</span> <span class=\"token function\">gtk_entry_new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">gtk_entry_set_text</span><span class=\"token punctuation\">(</span><span class=\"token function\">GTK_ENTRY</span><span class=\"token punctuation\">(</span>textbox<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>dialogData<span class=\"token operator\">-</span><span class=\"token operator\">></span>text<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">gtk_container_add</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GTK_CONTAINER</span> <span class=\"token punctuation\">(</span>content_area<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> textbox<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">gtk_widget_show_all</span> <span class=\"token punctuation\">(</span>dialog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">gtk_dialog_run</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GTK_DIALOG</span> <span class=\"token punctuation\">(</span>dialog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>GTK_RESPONSE_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tdialogData<span class=\"token operator\">-</span><span class=\"token operator\">></span>text <span class=\"token operator\">=</span> <span class=\"token function\">gtk_entry_get_text</span><span class=\"token punctuation\">(</span><span class=\"token function\">GTK_ENTRY</span><span class=\"token punctuation\">(</span>textbox<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    dialogData<span class=\"token operator\">-</span><span class=\"token operator\">></span>text <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">gtk_widget_destroy</span> <span class=\"token punctuation\">(</span>dialog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tdialogData<span class=\"token operator\">-</span><span class=\"token operator\">></span>mutex<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tdialogData<span class=\"token operator\">-</span><span class=\"token operator\">></span>condition<span class=\"token punctuation\">.</span><span class=\"token function\">notify_all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tdialogData<span class=\"token operator\">-</span><span class=\"token operator\">></span>done <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\tdialogData<span class=\"token operator\">-</span><span class=\"token operator\">></span>mutex<span class=\"token punctuation\">.</span><span class=\"token function\">unlock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> G_SOURCE_REMOVE<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initGTK</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> initialized <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>initialized<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> !defined(TARGET_RASPBERRY_PI_LEGACY)</span>\n\t\t<span class=\"token function\">XInitThreads</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token keyword\">int</span> argc<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">gtk_init</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>argc<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">startGstMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tinitialized <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> string <span class=\"token function\">gtkFileDialog</span><span class=\"token punctuation\">(</span>GtkFileChooserAction action<span class=\"token punctuation\">,</span>string windowTitle<span class=\"token punctuation\">,</span>string defaultName<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">initGTK</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tFileDialogData dialogData<span class=\"token punctuation\">;</span>\n\tdialogData<span class=\"token punctuation\">.</span>action <span class=\"token operator\">=</span> action<span class=\"token punctuation\">;</span>\n\tdialogData<span class=\"token punctuation\">.</span>windowTitle <span class=\"token operator\">=</span> windowTitle<span class=\"token punctuation\">;</span>\n\tdialogData<span class=\"token punctuation\">.</span>defaultName <span class=\"token operator\">=</span> defaultName<span class=\"token punctuation\">;</span>\n\tdialogData<span class=\"token punctuation\">.</span>done <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">g_main_context_invoke</span><span class=\"token punctuation\">(</span><span class=\"token function\">g_main_loop_get_context</span><span class=\"token punctuation\">(</span>ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">getGstMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>file_dialog_gtk<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dialogData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>dialogData<span class=\"token punctuation\">.</span>done<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tstd<span class=\"token operator\">::</span>unique_lock<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>mutex<span class=\"token operator\">></span> <span class=\"token function\">lck</span><span class=\"token punctuation\">(</span>dialogData<span class=\"token punctuation\">.</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdialogData<span class=\"token punctuation\">.</span>condition<span class=\"token punctuation\">.</span><span class=\"token function\">wait</span><span class=\"token punctuation\">(</span>lck<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> dialogData<span class=\"token punctuation\">.</span>results<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">resetLocale</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>locale locale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">try</span><span class=\"token punctuation\">{</span>\n\t\tstd<span class=\"token operator\">::</span>locale<span class=\"token operator\">::</span><span class=\"token function\">global</span><span class=\"token punctuation\">(</span>locale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofToLower</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span><span class=\"token function\">locale</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>std<span class=\"token operator\">::</span>string<span class=\"token operator\">::</span>npos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofSystemUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"GTK changes the locale when opening a dialog which can \"</span>\n\t\t\t\t <span class=\"token string\">\"break number parsing. We tried to change back to \"</span> <span class=\"token operator\">&lt;&lt;</span>\n\t\t\t\t locale<span class=\"token punctuation\">.</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span>\n\t\t\t\t <span class=\"token string\">\"but failed some string parsing functions might behave differently \"</span>\n\t\t\t\t <span class=\"token string\">\"after this\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxAndroidUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_EMSCRIPTEN</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;emscripten/emscripten.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------------------</span>\nofFileDialogResult<span class=\"token operator\">::</span><span class=\"token function\">ofFileDialogResult</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tfilePath <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\tfileName <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\tbSuccess <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------------------</span>\nstring ofFileDialogResult<span class=\"token operator\">::</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> fileName<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------------------</span>\nstring ofFileDialogResult<span class=\"token operator\">::</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> filePath<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSystemAlertDialog</span><span class=\"token punctuation\">(</span>string errorMessage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_WIN32</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// we need to convert error message to a wide char message.</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// first, figure out the length and allocate a wchar_t at that length + 1 (the +1 is for a terminating character)</span>\n\t\t<span class=\"token keyword\">int</span> length <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>errorMessage<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">wchar_t</span> <span class=\"token operator\">*</span> widearray <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">wchar_t</span><span class=\"token punctuation\">[</span>length<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>widearray<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">wchar_t</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>length<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// then, call mbstowcs:</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// http://www.cplusplus.com/reference/clibrary/cstdlib/mbstowcs/</span>\n\t\t<span class=\"token function\">mbstowcs</span><span class=\"token punctuation\">(</span>widearray<span class=\"token punctuation\">,</span> errorMessage<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// launch the alert:</span>\n\t\t<span class=\"token function\">MessageBoxW</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> widearray<span class=\"token punctuation\">,</span> L<span class=\"token string\">\"alert\"</span><span class=\"token punctuation\">,</span> MB_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// clear the allocated memory:</span>\n\t\t<span class=\"token keyword\">delete</span> widearray<span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OSX</span>\n\t\t@autoreleasepool <span class=\"token punctuation\">{</span>\n\t\t\tNSAlert<span class=\"token operator\">*</span> alertDialog <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>NSAlert alloc<span class=\"token punctuation\">]</span> init<span class=\"token punctuation\">]</span> autorelease<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\talertDialog<span class=\"token punctuation\">.</span>messageText <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>NSString stringWithUTF8String<span class=\"token operator\">:</span>errorMessage<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">[</span>alertDialog runModal<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">restoreAppWindowFocus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined( TARGET_LINUX ) &amp;&amp; defined (OF_USING_GTK)</span>\n\t\t<span class=\"token keyword\">auto</span> locale <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">locale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">initGTK</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tTextDialogData dialogData<span class=\"token punctuation\">;</span>\n\t\tdialogData<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> errorMessage<span class=\"token punctuation\">;</span>\n\t\tdialogData<span class=\"token punctuation\">.</span>done <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">g_main_context_invoke</span><span class=\"token punctuation\">(</span><span class=\"token function\">g_main_loop_get_context</span><span class=\"token punctuation\">(</span>ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">getGstMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>alert_dialog_gtk<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dialogData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>dialogData<span class=\"token punctuation\">.</span>done<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tstd<span class=\"token operator\">::</span>unique_lock<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>mutex<span class=\"token operator\">></span> <span class=\"token function\">lock</span><span class=\"token punctuation\">(</span>dialogData<span class=\"token punctuation\">.</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tdialogData<span class=\"token punctuation\">.</span>condition<span class=\"token punctuation\">.</span><span class=\"token function\">wait</span><span class=\"token punctuation\">(</span>lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token function\">resetLocale</span><span class=\"token punctuation\">(</span>locale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n\t\t<span class=\"token function\">ofxAndroidAlertBox</span><span class=\"token punctuation\">(</span>errorMessage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_EMSCRIPTEN</span>\n\t\t<span class=\"token function\">emscripten_run_script</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"alert(\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>errorMessage<span class=\"token operator\">+</span><span class=\"token string\">\");\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_WIN32</span>\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> CALLBACK <span class=\"token function\">loadDialogBrowseCallback</span><span class=\"token punctuation\">(</span>\n  HWND hwnd<span class=\"token punctuation\">,</span>\n  UINT uMsg<span class=\"token punctuation\">,</span>\n  LPARAM lParam<span class=\"token punctuation\">,</span>\n  LPARAM lpData\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    string defaultPath <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>string<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>lpData<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>defaultPath<span class=\"token operator\">!=</span><span class=\"token string\">\"\"</span> <span class=\"token operator\">&amp;&amp;</span> uMsg<span class=\"token operator\">==</span>BFFM_INITIALIZED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">wchar_t</span>         wideCharacterBuffer<span class=\"token punctuation\">[</span>MAX_PATH<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">wcscpy</span><span class=\"token punctuation\">(</span>wideCharacterBuffer<span class=\"token punctuation\">,</span> <span class=\"token function\">convertNarrowToWide</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofToDataPath</span><span class=\"token punctuation\">(</span>defaultPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">SendMessage</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span>BFFM_SETSELECTION<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>LPARAM<span class=\"token punctuation\">)</span>wideCharacterBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// OS specific results here.  \"\" = cancel or something bad like can't load, can't save, etc...</span>\nofFileDialogResult <span class=\"token function\">ofSystemLoadDialog</span><span class=\"token punctuation\">(</span>string windowTitle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bFolderSelection<span class=\"token punctuation\">,</span> string defaultPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\tofFileDialogResult results<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------------------       OSX</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OSX</span>\n\t@autoreleasepool <span class=\"token punctuation\">{</span>\n\t\tNSOpenGLContext <span class=\"token operator\">*</span>context <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>NSOpenGLContext currentContext<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t\tNSOpenPanel <span class=\"token operator\">*</span> loadDialog <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>NSOpenPanel openPanel<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">[</span>loadDialog setAllowsMultipleSelection<span class=\"token operator\">:</span>NO<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">[</span>loadDialog setCanChooseDirectories<span class=\"token operator\">:</span>bFolderSelection<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">[</span>loadDialog setCanChooseFiles<span class=\"token operator\">:</span><span class=\"token operator\">!</span>bFolderSelection<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">[</span>loadDialog setResolvesAliases<span class=\"token operator\">:</span>YES<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>windowTitle<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token punctuation\">[</span>loadDialog setTitle<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span>NSString stringWithUTF8String<span class=\"token operator\">:</span>windowTitle<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>defaultPath<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tNSString <span class=\"token operator\">*</span> s <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>NSString stringWithUTF8String<span class=\"token operator\">:</span>defaultPath<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\ts <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>s stringByExpandingTildeInPath<span class=\"token punctuation\">]</span> stringByResolvingSymlinksInPath<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tNSURL <span class=\"token operator\">*</span> defaultPathUrl <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>NSURL fileURLWithPath<span class=\"token operator\">:</span>s<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">[</span>loadDialog setDirectoryURL<span class=\"token operator\">:</span>defaultPathUrl<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\tNSInteger buttonClicked <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>loadDialog runModal<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">[</span>context makeCurrentContext<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">restoreAppWindowFocus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>buttonClicked <span class=\"token operator\">==</span> NSFileHandlingPanelOKButton<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tNSURL <span class=\"token operator\">*</span> selectedFileURL <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>loadDialog URLs<span class=\"token punctuation\">]</span> objectAtIndex<span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tresults<span class=\"token punctuation\">.</span>filePath <span class=\"token operator\">=</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>selectedFileURL path<span class=\"token punctuation\">]</span> UTF8String<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------------------   windoze</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_WIN32</span>\n\twstring windowTitleW<span class=\"token punctuation\">;</span>\n\twindowTitleW<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>windowTitle<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> windowTitle<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bFolderSelection <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n        OPENFILENAME ofn<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">ZeroMemory</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>ofn<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ofn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tofn<span class=\"token punctuation\">.</span>lStructSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ofn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tHWND hwnd <span class=\"token operator\">=</span> <span class=\"token function\">WindowFromDC</span><span class=\"token punctuation\">(</span><span class=\"token function\">wglGetCurrentDC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tofn<span class=\"token punctuation\">.</span>hwndOwner <span class=\"token operator\">=</span> hwnd<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//the file name and path</span>\n\t\t<span class=\"token keyword\">wchar_t</span> szFileName<span class=\"token punctuation\">[</span>MAX_PATH<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>szFileName<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>szFileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//the dir, if specified</span>\n\t\t<span class=\"token keyword\">wchar_t</span> szDir<span class=\"token punctuation\">[</span>MAX_PATH<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//the title if specified</span>\n\t\t<span class=\"token keyword\">wchar_t</span> szTitle<span class=\"token punctuation\">[</span>MAX_PATH<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>defaultPath<span class=\"token operator\">!=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">wcscpy</span><span class=\"token punctuation\">(</span>szDir<span class=\"token punctuation\">,</span><span class=\"token function\">convertNarrowToWide</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofToDataPath</span><span class=\"token punctuation\">(</span>defaultPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tofn<span class=\"token punctuation\">.</span>lpstrInitialDir <span class=\"token operator\">=</span> szDir<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>windowTitle <span class=\"token operator\">!=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">wcscpy</span><span class=\"token punctuation\">(</span>szTitle<span class=\"token punctuation\">,</span> <span class=\"token function\">convertNarrowToWide</span><span class=\"token punctuation\">(</span>windowTitle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tofn<span class=\"token punctuation\">.</span>lpstrTitle <span class=\"token operator\">=</span> szTitle<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\tofn<span class=\"token punctuation\">.</span>lpstrTitle <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\tofn<span class=\"token punctuation\">.</span>lpstrFilter <span class=\"token operator\">=</span> L<span class=\"token string\">\"All\\0\"</span><span class=\"token punctuation\">;</span>\n\t\tofn<span class=\"token punctuation\">.</span>lpstrFile <span class=\"token operator\">=</span> szFileName<span class=\"token punctuation\">;</span>\n\t\tofn<span class=\"token punctuation\">.</span>nMaxFile <span class=\"token operator\">=</span> MAX_PATH<span class=\"token punctuation\">;</span>\n\t\tofn<span class=\"token punctuation\">.</span>Flags <span class=\"token operator\">=</span> OFN_EXPLORER <span class=\"token operator\">|</span> OFN_FILEMUSTEXIST <span class=\"token operator\">|</span> OFN_HIDEREADONLY<span class=\"token punctuation\">;</span>\n\t\tofn<span class=\"token punctuation\">.</span>lpstrDefExt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\tofn<span class=\"token punctuation\">.</span>lpstrTitle <span class=\"token operator\">=</span> windowTitleW<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetOpenFileName</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>ofn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tresults<span class=\"token punctuation\">.</span>filePath <span class=\"token operator\">=</span> <span class=\"token function\">convertWideToNarrow</span><span class=\"token punctuation\">(</span>szFileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//this should throw an error on failure unless its just the user canceling out</span>\n\t\t\tDWORD err <span class=\"token operator\">=</span> <span class=\"token function\">CommDlgExtendedError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\n\t\tBROWSEINFOW      bi<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">wchar_t</span>         wideCharacterBuffer<span class=\"token punctuation\">[</span>MAX_PATH<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">wchar_t</span>\t\t\twideWindowTitle<span class=\"token punctuation\">[</span>MAX_PATH<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\tLPITEMIDLIST    pidl<span class=\"token punctuation\">;</span>\n\t\tLPMALLOC\t\tlpMalloc<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>windowTitle <span class=\"token operator\">!=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">wcscpy</span><span class=\"token punctuation\">(</span>wideWindowTitle<span class=\"token punctuation\">,</span> <span class=\"token function\">convertNarrowToWide</span><span class=\"token punctuation\">(</span>windowTitle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">wcscpy</span><span class=\"token punctuation\">(</span>wideWindowTitle<span class=\"token punctuation\">,</span> L<span class=\"token string\">\"Select Directory\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// Get a pointer to the shell memory allocator</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">SHGetMalloc</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>lpMalloc<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> S_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//TODO: deal with some sort of error here?</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tbi<span class=\"token punctuation\">.</span>hwndOwner        <span class=\"token operator\">=</span>   <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t\tbi<span class=\"token punctuation\">.</span>pidlRoot         <span class=\"token operator\">=</span>   <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t\tbi<span class=\"token punctuation\">.</span>pszDisplayName   <span class=\"token operator\">=</span>   wideCharacterBuffer<span class=\"token punctuation\">;</span>\n\t\tbi<span class=\"token punctuation\">.</span>lpszTitle        <span class=\"token operator\">=</span>   wideWindowTitle<span class=\"token punctuation\">;</span>\n\t\tbi<span class=\"token punctuation\">.</span>ulFlags          <span class=\"token operator\">=</span>   BIF_RETURNFSANCESTORS <span class=\"token operator\">|</span> BIF_RETURNONLYFSDIRS <span class=\"token operator\">|</span> BIF_USENEWUI<span class=\"token punctuation\">;</span>\n\t\tbi<span class=\"token punctuation\">.</span>lpfn             <span class=\"token operator\">=</span>   <span class=\"token operator\">&amp;</span>loadDialogBrowseCallback<span class=\"token punctuation\">;</span>\n\t\tbi<span class=\"token punctuation\">.</span>lParam           <span class=\"token operator\">=</span>   <span class=\"token punctuation\">(</span>LPARAM<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span>defaultPath<span class=\"token punctuation\">;</span>\n\t\tbi<span class=\"token punctuation\">.</span>lpszTitle        <span class=\"token operator\">=</span>   windowTitleW<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pidl <span class=\"token operator\">=</span> <span class=\"token function\">SHBrowseForFolderW</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>bi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// Copy the path directory to the buffer</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">SHGetPathFromIDListW</span><span class=\"token punctuation\">(</span>pidl<span class=\"token punctuation\">,</span>wideCharacterBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tresults<span class=\"token punctuation\">.</span>filePath <span class=\"token operator\">=</span> <span class=\"token function\">convertWideToNarrow</span><span class=\"token punctuation\">(</span>wideCharacterBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\tlpMalloc<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">Free</span><span class=\"token punctuation\">(</span>pidl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tlpMalloc<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">Release</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------------------   windoze</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\n\n\n\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------------------   linux</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined( TARGET_LINUX ) &amp;&amp; defined (OF_USING_GTK)</span>\n\t\t<span class=\"token keyword\">auto</span> locale <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">locale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bFolderSelection<span class=\"token punctuation\">)</span> results<span class=\"token punctuation\">.</span>filePath <span class=\"token operator\">=</span> <span class=\"token function\">gtkFileDialog</span><span class=\"token punctuation\">(</span>GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER<span class=\"token punctuation\">,</span>windowTitle<span class=\"token punctuation\">,</span><span class=\"token function\">ofToDataPath</span><span class=\"token punctuation\">(</span>defaultPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">else</span> results<span class=\"token punctuation\">.</span>filePath <span class=\"token operator\">=</span> <span class=\"token function\">gtkFileDialog</span><span class=\"token punctuation\">(</span>GTK_FILE_CHOOSER_ACTION_OPEN<span class=\"token punctuation\">,</span>windowTitle<span class=\"token punctuation\">,</span><span class=\"token function\">ofToDataPath</span><span class=\"token punctuation\">(</span>defaultPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">resetLocale</span><span class=\"token punctuation\">(</span>locale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n\n\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> results<span class=\"token punctuation\">.</span>filePath<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tresults<span class=\"token punctuation\">.</span>bSuccess <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\tresults<span class=\"token punctuation\">.</span>fileName <span class=\"token operator\">=</span> ofFilePath<span class=\"token operator\">::</span><span class=\"token function\">getFileName</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">.</span>filePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> results<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n\nofFileDialogResult <span class=\"token function\">ofSystemSaveDialog</span><span class=\"token punctuation\">(</span>string defaultName<span class=\"token punctuation\">,</span> string messageName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\tofFileDialogResult results<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------------------       OSX</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OSX</span>\n\t@autoreleasepool <span class=\"token punctuation\">{</span>\n\t\tNSSavePanel <span class=\"token operator\">*</span> saveDialog <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>NSSavePanel savePanel<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\tNSOpenGLContext <span class=\"token operator\">*</span>context <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>NSOpenGLContext currentContext<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">[</span>saveDialog setMessage<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span>NSString stringWithUTF8String<span class=\"token operator\">:</span>messageName<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">[</span>saveDialog setNameFieldStringValue<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span>NSString stringWithUTF8String<span class=\"token operator\">:</span>defaultName<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t\tNSInteger buttonClicked <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>saveDialog runModal<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">restoreAppWindowFocus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">[</span>context makeCurrentContext<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>buttonClicked <span class=\"token operator\">==</span> NSFileHandlingPanelOKButton<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tresults<span class=\"token punctuation\">.</span>filePath <span class=\"token operator\">=</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>saveDialog URL<span class=\"token punctuation\">]</span> path<span class=\"token punctuation\">]</span> UTF8String<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------------------   windoze</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_WIN32</span>\n\n\n\t<span class=\"token keyword\">wchar_t</span> fileName<span class=\"token punctuation\">[</span>MAX_PATH<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> L<span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\tOPENFILENAMEW ofn<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">memset</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>ofn<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>OPENFILENAME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofn<span class=\"token punctuation\">.</span>lStructSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>OPENFILENAME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tHWND hwnd <span class=\"token operator\">=</span> <span class=\"token function\">WindowFromDC</span><span class=\"token punctuation\">(</span><span class=\"token function\">wglGetCurrentDC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofn<span class=\"token punctuation\">.</span>hwndOwner <span class=\"token operator\">=</span> hwnd<span class=\"token punctuation\">;</span>\n\tofn<span class=\"token punctuation\">.</span>hInstance <span class=\"token operator\">=</span> <span class=\"token function\">GetModuleHandle</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofn<span class=\"token punctuation\">.</span>nMaxFileTitle <span class=\"token operator\">=</span> <span class=\"token number\">31</span><span class=\"token punctuation\">;</span>\n\tofn<span class=\"token punctuation\">.</span>lpstrFile <span class=\"token operator\">=</span> fileName<span class=\"token punctuation\">;</span>\n\tofn<span class=\"token punctuation\">.</span>nMaxFile <span class=\"token operator\">=</span> MAX_PATH<span class=\"token punctuation\">;</span>\n\tofn<span class=\"token punctuation\">.</span>lpstrFilter <span class=\"token operator\">=</span> L<span class=\"token string\">\"All Files (*.*)\\0*.*\\0\"</span><span class=\"token punctuation\">;</span>\n\tofn<span class=\"token punctuation\">.</span>lpstrDefExt <span class=\"token operator\">=</span> L<span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\" spellcheck=\"true\">// we could do .rxml here?</span>\n\tofn<span class=\"token punctuation\">.</span>Flags <span class=\"token operator\">=</span> OFN_EXPLORER <span class=\"token operator\">|</span> OFN_PATHMUSTEXIST <span class=\"token operator\">|</span> OFN_OVERWRITEPROMPT <span class=\"token operator\">|</span> OFN_HIDEREADONLY<span class=\"token punctuation\">;</span>\n\tofn<span class=\"token punctuation\">.</span>lpstrTitle <span class=\"token operator\">=</span> L<span class=\"token string\">\"Select Output File\"</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GetSaveFileNameW</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>ofn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tresults<span class=\"token punctuation\">.</span>filePath <span class=\"token operator\">=</span> <span class=\"token function\">convertWideToNarrow</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n\n\n\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------------------   linux</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined( TARGET_LINUX ) &amp;&amp; defined (OF_USING_GTK)</span>\n\t<span class=\"token keyword\">auto</span> locale <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">locale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tresults<span class=\"token punctuation\">.</span>filePath <span class=\"token operator\">=</span> <span class=\"token function\">gtkFileDialog</span><span class=\"token punctuation\">(</span>GTK_FILE_CHOOSER_ACTION_SAVE<span class=\"token punctuation\">,</span> messageName<span class=\"token punctuation\">,</span> <span class=\"token function\">ofToDataPath</span><span class=\"token punctuation\">(</span>defaultName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">resetLocale</span><span class=\"token punctuation\">(</span>locale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------------------------------------</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> results<span class=\"token punctuation\">.</span>filePath<span class=\"token punctuation\">.</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tresults<span class=\"token punctuation\">.</span>bSuccess <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\tresults<span class=\"token punctuation\">.</span>fileName <span class=\"token operator\">=</span> ofFilePath<span class=\"token operator\">::</span><span class=\"token function\">getFileName</span><span class=\"token punctuation\">(</span>results<span class=\"token punctuation\">.</span>filePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> results<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_WIN32</span>\nLRESULT CALLBACK <span class=\"token function\">WndProc</span><span class=\"token punctuation\">(</span>HWND hwnd<span class=\"token punctuation\">,</span> UINT msg<span class=\"token punctuation\">,</span> WPARAM wParam<span class=\"token punctuation\">,</span> LPARAM lParam<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">//switch(msg)</span>\n    <span class=\"token comment\" spellcheck=\"true\">//{</span>\n    <span class=\"token comment\" spellcheck=\"true\">//    case WM_CLOSE:</span>\n    <span class=\"token comment\" spellcheck=\"true\">//        DestroyWindow(hwnd);</span>\n    <span class=\"token comment\" spellcheck=\"true\">//    break;</span>\n    <span class=\"token comment\" spellcheck=\"true\">//    case WM_DESTROY:</span>\n    <span class=\"token comment\" spellcheck=\"true\">//        PostQuitMessage(0);</span>\n    <span class=\"token comment\" spellcheck=\"true\">//    break;</span>\n    <span class=\"token comment\" spellcheck=\"true\">//    default:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token function\">DefWindowProc</span><span class=\"token punctuation\">(</span>hwnd<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">,</span> wParam<span class=\"token punctuation\">,</span> lParam<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">//}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\nstring <span class=\"token function\">ofSystemTextBoxDialog</span><span class=\"token punctuation\">(</span>string question<span class=\"token punctuation\">,</span> string text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined( TARGET_LINUX ) &amp;&amp; defined (OF_USING_GTK)</span>\n\t<span class=\"token keyword\">auto</span> locale <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">locale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">initGTK</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tTextDialogData dialogData<span class=\"token punctuation\">;</span>\n\tdialogData<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> text<span class=\"token punctuation\">;</span>\n\tdialogData<span class=\"token punctuation\">.</span>done <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tdialogData<span class=\"token punctuation\">.</span>question <span class=\"token operator\">=</span> question<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">g_main_context_invoke</span><span class=\"token punctuation\">(</span><span class=\"token function\">g_main_loop_get_context</span><span class=\"token punctuation\">(</span>ofGstUtils<span class=\"token operator\">::</span><span class=\"token function\">getGstMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>text_dialog_gtk<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>dialogData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>dialogData<span class=\"token punctuation\">.</span>done<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tstd<span class=\"token operator\">::</span>unique_lock<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>mutex<span class=\"token operator\">></span> <span class=\"token function\">lock</span><span class=\"token punctuation\">(</span>dialogData<span class=\"token punctuation\">.</span>mutex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdialogData<span class=\"token punctuation\">.</span>condition<span class=\"token punctuation\">.</span><span class=\"token function\">wait</span><span class=\"token punctuation\">(</span>lock<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">resetLocale</span><span class=\"token punctuation\">(</span>locale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ttext <span class=\"token operator\">=</span> dialogData<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OSX</span>\n\t@autoreleasepool <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// create alert dialog</span>\n\t\tNSAlert <span class=\"token operator\">*</span>alert <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>NSAlert alloc<span class=\"token punctuation\">]</span> init<span class=\"token punctuation\">]</span> autorelease<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">[</span>alert addButtonWithTitle<span class=\"token operator\">:</span>@<span class=\"token string\">\"OK\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">[</span>alert addButtonWithTitle<span class=\"token operator\">:</span>@<span class=\"token string\">\"Cancel\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">[</span>alert setMessageText<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span>NSString stringWithCString<span class=\"token operator\">:</span>question<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t\t\t\t\t\t encoding<span class=\"token operator\">:</span>NSUTF8StringEncoding<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// create text field</span>\n\t\tNSTextField<span class=\"token operator\">*</span> label <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>NSTextField alloc<span class=\"token punctuation\">]</span> initWithFrame<span class=\"token operator\">:</span><span class=\"token function\">NSRectFromCGRect</span><span class=\"token punctuation\">(</span><span class=\"token function\">CGRectMake</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> autorelease<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">[</span>label setStringValue<span class=\"token operator\">:</span><span class=\"token punctuation\">[</span>NSString stringWithCString<span class=\"token operator\">:</span>text<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t\t\t\t\t\t encoding<span class=\"token operator\">:</span>NSUTF8StringEncoding<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// add text field to alert dialog</span>\n\t\t<span class=\"token punctuation\">[</span>alert setAccessoryView<span class=\"token operator\">:</span>label<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\tNSInteger returnCode <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>alert runModal<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">restoreAppWindowFocus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// if OK was clicked, assign value to text</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> returnCode <span class=\"token operator\">==</span> NSAlertFirstButtonReturn <span class=\"token punctuation\">)</span>\n\t\t\ttext <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>label stringValue<span class=\"token punctuation\">]</span> UTF8String<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">else</span>\n      text <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_WIN32</span>\n    <span class=\"token comment\" spellcheck=\"true\">// we need to convert error message to a wide char message.</span>\n    <span class=\"token comment\" spellcheck=\"true\">// first, figure out the length and allocate a wchar_t at that length + 1 (the +1 is for a terminating character)</span>\n\n\tWNDCLASSEX wc<span class=\"token punctuation\">;</span>\n\tMSG Msg<span class=\"token punctuation\">;</span>\n\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TMP_STR_CONVERT LPCWSTR</span>\n\n\t\t<span class=\"token keyword\">const</span> LPCWSTR g_szClassName <span class=\"token operator\">=</span> L<span class=\"token string\">\"myWindowClass\\0\"</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//Step 1: Registering the Window Class</span>\n\t\twc<span class=\"token punctuation\">.</span>cbSize        <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>WNDCLASSEX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\twc<span class=\"token punctuation\">.</span>style         <span class=\"token operator\">=</span> CS_HREDRAW <span class=\"token operator\">|</span> CS_VREDRAW<span class=\"token punctuation\">;</span>\n\t\twc<span class=\"token punctuation\">.</span>lpfnWndProc   <span class=\"token operator\">=</span> WndProc<span class=\"token punctuation\">;</span>\n\t\twc<span class=\"token punctuation\">.</span>cbClsExtra    <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\twc<span class=\"token punctuation\">.</span>cbWndExtra    <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\twc<span class=\"token punctuation\">.</span>hInstance     <span class=\"token operator\">=</span> <span class=\"token function\">GetModuleHandle</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\twc<span class=\"token punctuation\">.</span>lpszClassName <span class=\"token operator\">=</span> g_szClassName<span class=\"token punctuation\">;</span>\n\t\twc<span class=\"token punctuation\">.</span>hbrBackground <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>HBRUSH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>COLOR_3DFACE <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\twc<span class=\"token punctuation\">.</span>lpszMenuName  <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t\twc<span class=\"token punctuation\">.</span>hCursor       <span class=\"token operator\">=</span> <span class=\"token function\">LoadCursor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> IDC_ARROW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\twc<span class=\"token punctuation\">.</span>hIcon         <span class=\"token operator\">=</span> <span class=\"token function\">LoadIcon</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> IDI_APPLICATION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\twc<span class=\"token punctuation\">.</span>hIconSm       <span class=\"token operator\">=</span> <span class=\"token function\">LoadIcon</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> IDI_APPLICATION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">RegisterClassEx</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>wc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tDWORD err<span class=\"token operator\">=</span><span class=\"token function\">GetLastError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>err<span class=\"token operator\">==</span>ERROR_CLASS_ALREADY_EXISTS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                <span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// we are ok</span>\n                <span class=\"token comment\" spellcheck=\"true\">// http://stackoverflow.com/questions/5791996/re-registering-user-defined-window-class-c</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"Window Registration Failed!\\0\"</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"Error!\\0\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\tMB_ICONEXCLAMATION <span class=\"token operator\">|</span> MB_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> text<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\tHWND dialog <span class=\"token operator\">=</span> <span class=\"token function\">CreateWindowEx</span><span class=\"token punctuation\">(</span>WS_EX_DLGMODALFRAME<span class=\"token punctuation\">,</span>\n\t\t\tg_szClassName<span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token function\">convertNarrowToWide</span><span class=\"token punctuation\">(</span>question<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\tWS_POPUP <span class=\"token operator\">|</span> WS_CAPTION <span class=\"token operator\">|</span> DS_MODALFRAME <span class=\"token operator\">|</span> WS_SYSMENU<span class=\"token punctuation\">,</span>\n\t\t\tCW_USEDEFAULT<span class=\"token punctuation\">,</span> CW_USEDEFAULT<span class=\"token punctuation\">,</span> <span class=\"token number\">240</span><span class=\"token punctuation\">,</span> <span class=\"token number\">140</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token function\">WindowFromDC</span><span class=\"token punctuation\">(</span><span class=\"token function\">wglGetCurrentDC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> <span class=\"token function\">GetModuleHandle</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>dialog <span class=\"token operator\">==</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\n\t\t\t<span class=\"token function\">MessageBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span>L<span class=\"token string\">\"Window Creation Failed!\\0\"</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"Error!\\0\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\tMB_ICONEXCLAMATION <span class=\"token operator\">|</span> MB_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> text<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token function\">EnableWindow</span><span class=\"token punctuation\">(</span><span class=\"token function\">WindowFromDC</span><span class=\"token punctuation\">(</span><span class=\"token function\">wglGetCurrentDC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> FALSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tHWND hEdit <span class=\"token operator\">=</span> <span class=\"token function\">CreateWindowEx</span><span class=\"token punctuation\">(</span>WS_EX_CLIENTEDGE<span class=\"token punctuation\">,</span> L<span class=\"token string\">\"EDIT\\0\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">convertNarrowToWide</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\tWS_CHILD <span class=\"token operator\">|</span> WS_VISIBLE <span class=\"token operator\">|</span> WS_TABSTOP<span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">210</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">,</span> dialog<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>HMENU<span class=\"token punctuation\">)</span><span class=\"token number\">101</span><span class=\"token punctuation\">,</span> <span class=\"token function\">GetModuleHandle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\t\tHWND okButton <span class=\"token operator\">=</span> <span class=\"token function\">CreateWindowEx</span><span class=\"token punctuation\">(</span>WS_EX_CLIENTEDGE<span class=\"token punctuation\">,</span> L<span class=\"token string\">\"BUTTON\\0\"</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"OK\\0\"</span><span class=\"token punctuation\">,</span>\n\t\t\tWS_CHILD <span class=\"token operator\">|</span> WS_VISIBLE <span class=\"token operator\">|</span> WS_TABSTOP<span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> dialog<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>HMENU<span class=\"token punctuation\">)</span>IDOK<span class=\"token punctuation\">,</span> <span class=\"token function\">GetModuleHandle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tHWND cancelButton <span class=\"token operator\">=</span> <span class=\"token function\">CreateWindowEx</span><span class=\"token punctuation\">(</span>WS_EX_CLIENTEDGE<span class=\"token punctuation\">,</span> L<span class=\"token string\">\"BUTTON\\0\"</span><span class=\"token punctuation\">,</span> L<span class=\"token string\">\"Cancel\\0\"</span><span class=\"token punctuation\">,</span>\n\t\t\tWS_CHILD <span class=\"token operator\">|</span> WS_VISIBLE<span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> dialog<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>HMENU<span class=\"token punctuation\">)</span>IDCANCEL<span class=\"token punctuation\">,</span> <span class=\"token function\">GetModuleHandle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">SetFocus</span><span class=\"token punctuation\">(</span> hEdit <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">ShowWindow</span><span class=\"token punctuation\">(</span>dialog<span class=\"token punctuation\">,</span> SW_SHOWNORMAL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span> bFirstEmpty <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">PeekMessageW</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>Msg<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> PM_REMOVE <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bFirstEmpty<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t <span class=\"token comment\" spellcheck=\"true\">// ShowWindow the first time the queue goes empty</span>\n\t\t\t\t\t <span class=\"token function\">ShowWindow</span><span class=\"token punctuation\">(</span> dialog<span class=\"token punctuation\">,</span> SW_SHOWNORMAL <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t bFirstEmpty <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span>\n\t\t\t\t <span class=\"token punctuation\">}</span>\n\t\t\t\t <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetWindowLongW</span><span class=\"token punctuation\">(</span> dialog<span class=\"token punctuation\">,</span> GWL_STYLE <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> DS_NOIDLEMSG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t <span class=\"token comment\" spellcheck=\"true\">// No message present -> send ENTERIDLE and wait</span>\n\t\t\t\t\t <span class=\"token function\">SendMessageW</span><span class=\"token punctuation\">(</span> <span class=\"token function\">WindowFromDC</span><span class=\"token punctuation\">(</span><span class=\"token function\">wglGetCurrentDC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> WM_ENTERIDLE<span class=\"token punctuation\">,</span> MSGF_DIALOGBOX<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>LPARAM<span class=\"token punctuation\">)</span>dialog <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t <span class=\"token punctuation\">}</span>\n\t\t\t\t <span class=\"token function\">GetMessageW</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>Msg<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token punctuation\">}</span>\n\n\t\t\t <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Msg<span class=\"token punctuation\">.</span>message <span class=\"token operator\">==</span> WM_QUIT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t <span class=\"token function\">PostQuitMessage</span><span class=\"token punctuation\">(</span> Msg<span class=\"token punctuation\">.</span>wParam <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">IsWindow</span><span class=\"token punctuation\">(</span> dialog <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token function\">EnableWindow</span><span class=\"token punctuation\">(</span><span class=\"token function\">WindowFromDC</span><span class=\"token punctuation\">(</span><span class=\"token function\">wglGetCurrentDC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">return</span> text<span class=\"token punctuation\">;</span>\n\t\t\t\t <span class=\"token punctuation\">}</span>\n\t\t\t\t <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token punctuation\">}</span>\n\n\t\t\t <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">IsWindow</span><span class=\"token punctuation\">(</span> dialog <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">EnableWindow</span><span class=\"token punctuation\">(</span><span class=\"token function\">WindowFromDC</span><span class=\"token punctuation\">(</span><span class=\"token function\">wglGetCurrentDC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">return</span> text<span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token punctuation\">}</span>\n\n\t\t\t <span class=\"token function\">TranslateMessage</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>Msg <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token function\">DispatchMessageW</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>Msg <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Msg<span class=\"token punctuation\">.</span>hwnd <span class=\"token operator\">==</span> okButton <span class=\"token operator\">&amp;&amp;</span> Msg<span class=\"token punctuation\">.</span>message<span class=\"token operator\">==</span>WM_LBUTTONUP<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>Msg<span class=\"token punctuation\">.</span>message<span class=\"token operator\">==</span>WM_KEYUP <span class=\"token operator\">&amp;&amp;</span> Msg<span class=\"token punctuation\">.</span>wParam<span class=\"token operator\">==</span><span class=\"token number\">13</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>Msg<span class=\"token punctuation\">.</span>hwnd <span class=\"token operator\">==</span> cancelButton <span class=\"token operator\">&amp;&amp;</span> Msg<span class=\"token punctuation\">.</span>message<span class=\"token operator\">==</span>WM_LBUTTONUP<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>  <span class=\"token punctuation\">(</span>Msg<span class=\"token punctuation\">.</span>message<span class=\"token operator\">==</span>WM_KEYUP <span class=\"token operator\">&amp;&amp;</span> Msg<span class=\"token punctuation\">.</span>wParam<span class=\"token operator\">==</span><span class=\"token number\">27</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t <span class=\"token function\">EnableWindow</span><span class=\"token punctuation\">(</span><span class=\"token function\">WindowFromDC</span><span class=\"token punctuation\">(</span><span class=\"token function\">wglGetCurrentDC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t <span class=\"token function\">DestroyWindow</span><span class=\"token punctuation\">(</span>dialog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token punctuation\">}</span>\n\n\t\t\t <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">IsWindow</span><span class=\"token punctuation\">(</span> dialog <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">EnableWindow</span><span class=\"token punctuation\">(</span><span class=\"token function\">WindowFromDC</span><span class=\"token punctuation\">(</span><span class=\"token function\">wglGetCurrentDC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">return</span> text<span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token punctuation\">}</span>\n\n\t\t\t <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bFirstEmpty <span class=\"token operator\">&amp;&amp;</span> Msg<span class=\"token punctuation\">.</span>message <span class=\"token operator\">==</span> WM_TIMER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t <span class=\"token function\">ShowWindow</span><span class=\"token punctuation\">(</span> dialog<span class=\"token punctuation\">,</span> SW_SHOWNORMAL <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t bFirstEmpty <span class=\"token operator\">=</span> FALSE<span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token punctuation\">}</span>\n\t\t <span class=\"token punctuation\">}</span>\n\n\t\t <span class=\"token keyword\">char</span> buf<span class=\"token punctuation\">[</span><span class=\"token number\">16384</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t <span class=\"token function\">GetDlgItemTextA</span><span class=\"token punctuation\">(</span> dialog<span class=\"token punctuation\">,</span> <span class=\"token number\">101</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">,</span> <span class=\"token number\">16384</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t text <span class=\"token operator\">=</span> buf<span class=\"token punctuation\">;</span>\n\n\t\t <span class=\"token function\">DestroyWindow</span><span class=\"token punctuation\">(</span>dialog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t <span class=\"token function\">EnableWindow</span><span class=\"token punctuation\">(</span><span class=\"token function\">WindowFromDC</span><span class=\"token punctuation\">(</span><span class=\"token function\">wglGetCurrentDC</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n     <span class=\"token function\">ofxAndroidAlertTextBox</span><span class=\"token punctuation\">(</span>question<span class=\"token punctuation\">,</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_EMSCRIPTEN</span>\n     text <span class=\"token operator\">=</span> <span class=\"token function\">emscripten_run_script_string</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"prompt('\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> question <span class=\"token operator\">+</span> <span class=\"token string\">\"','')\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token keyword\">return</span> text<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n","type":"source","static":true}}],"fetch":[]}