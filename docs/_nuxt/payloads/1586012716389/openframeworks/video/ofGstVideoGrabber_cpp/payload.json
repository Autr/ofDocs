{"data":[{"page":{"entry":{"name":"ofGstVideoGrabber.cpp","filename":"ofGstVideoGrabber.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/video/ofGstVideoGrabber.cpp","path":"/openframeworks/video/ofGstVideoGrabber_cpp","route":"/openframeworks/video/ofGstVideoGrabber.cpp","dir":"../libs/openFrameworks/video","ext":"cpp","type":"source","id":333,"parent":323,"breadcrumbs":[323,164],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">/*\n * ofGstVideoGrabber.cpp\n *\n *  Created on: 17/01/2011\n *      Author: arturo\n */</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGstVideoGrabber.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofPixels.h\"</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;gst/video/video.h></span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_LINUX</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/utsname.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------- grabber</span>\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------------</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_LINUX</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> PREFER_RGB_OVER_YUV</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> PREFER_NON_COMPRESSED</span>\n\n<span class=\"token keyword\">extern</span> <span class=\"token string\">\"C\"</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;libudev.h></span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;gst/gst.h></span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">/* for ioctl query */</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;fcntl.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;unistd.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/ioctl.h></span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;linux/version.h></span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,35)</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;linux/videodev2.h></span></span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> VIDIOCGCAP              _IOR('v',1,struct video_capability)     </span><span class=\"token comment\" spellcheck=\"true\">/* Get capabilities */</span>\n\n\t<span class=\"token keyword\">struct</span> video_capability\n\t<span class=\"token punctuation\">{</span>\n\t\t\t <span class=\"token keyword\">char</span> name<span class=\"token punctuation\">[</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token keyword\">int</span> type<span class=\"token punctuation\">;</span>\n\t\t\t <span class=\"token keyword\">int</span> channels<span class=\"token punctuation\">;</span>   <span class=\"token comment\" spellcheck=\"true\">/* Num channels */</span>\n\t\t\t <span class=\"token keyword\">int</span> audios<span class=\"token punctuation\">;</span>     <span class=\"token comment\" spellcheck=\"true\">/* Num audio devices */</span>\n\t\t\t <span class=\"token keyword\">int</span> maxwidth<span class=\"token punctuation\">;</span>   <span class=\"token comment\" spellcheck=\"true\">/* Supported width */</span>\n\t\t\t <span class=\"token keyword\">int</span> maxheight<span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">/* And height */</span>\n\t\t\t <span class=\"token keyword\">int</span> minwidth<span class=\"token punctuation\">;</span>   <span class=\"token comment\" spellcheck=\"true\">/* Supported width */</span>\n\t\t\t <span class=\"token keyword\">int</span> minheight<span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">/* And height */</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;linux/videodev.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">get_video_devices</span> <span class=\"token punctuation\">(</span>ofGstCamData <span class=\"token operator\">&amp;</span> cam_data<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_LINUX</span>\n\t<span class=\"token keyword\">int</span> fd<span class=\"token punctuation\">,</span> ok<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">struct</span> udev <span class=\"token operator\">*</span> my_udev<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">struct</span> udev_enumerate <span class=\"token operator\">*</span> enumerate<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">struct</span> udev_list_entry <span class=\"token operator\">*</span> list<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">struct</span> udev_list_entry <span class=\"token operator\">*</span> entry<span class=\"token punctuation\">;</span>\n\n\tmy_udev <span class=\"token operator\">=</span> <span class=\"token function\">udev_new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tenumerate <span class=\"token operator\">=</span> <span class=\"token function\">udev_enumerate_new</span><span class=\"token punctuation\">(</span>my_udev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">udev_enumerate_scan_devices</span><span class=\"token punctuation\">(</span>enumerate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tlist <span class=\"token operator\">=</span> <span class=\"token function\">udev_enumerate_get_list_entry</span><span class=\"token punctuation\">(</span>enumerate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/*udev_list_entry_foreach(entry,list){\n\t\tconst char * name = udev_list_entry_get_name(entry);\n\t\tstruct udev_device * device = udev_device_new_from_syspath(my_udev, name);\n\t\tconst char * subsystem = udev_device_get_subsystem(device);\n\t\tif(strcmp(subsystem,\"video4linux\")==0){\n\t\t\tnum_devices++;\n\t\t}\n\t}*/</span>\n\n\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Probing devices with udev...\"</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/* Initialize webcam structures */</span>\n\t<span class=\"token function\">udev_list_entry_foreach</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">,</span>list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> name <span class=\"token operator\">=</span> <span class=\"token function\">udev_list_entry_get_name</span><span class=\"token punctuation\">(</span>entry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">struct</span> udev_device <span class=\"token operator\">*</span> device <span class=\"token operator\">=</span> <span class=\"token function\">udev_device_new_from_syspath</span><span class=\"token punctuation\">(</span>my_udev<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tstring subsystem <span class=\"token operator\">=</span> <span class=\"token function\">udev_device_get_subsystem</span><span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>subsystem <span class=\"token operator\">!=</span> <span class=\"token string\">\"video4linux\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span>  <span class=\"token operator\">*</span>gstreamer_src<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>product_name<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">struct</span> v4l2_capability  v2cap<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">struct</span> video_capability v1cap<span class=\"token punctuation\">;</span>\n\t\tstring vendor_id<span class=\"token punctuation\">;</span>\n\t\tstring product_id<span class=\"token punctuation\">;</span>\n\t\tstring serial_id<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> dev_node <span class=\"token operator\">=</span> <span class=\"token function\">udev_device_get_devnode</span><span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">struct</span> udev_list_entry <span class=\"token operator\">*</span> properties <span class=\"token operator\">=</span> <span class=\"token function\">udev_device_get_properties_list_entry</span><span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">struct</span> udev_list_entry <span class=\"token operator\">*</span> property<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">udev_list_entry_foreach</span><span class=\"token punctuation\">(</span>property<span class=\"token punctuation\">,</span>properties<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> name <span class=\"token operator\">=</span> <span class=\"token function\">udev_list_entry_get_name</span><span class=\"token punctuation\">(</span>property<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">strcmp</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span><span class=\"token string\">\"ID_VENDOR_ID\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tvendor_id <span class=\"token operator\">=</span> <span class=\"token function\">udev_list_entry_get_value</span><span class=\"token punctuation\">(</span>property<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">strcmp</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span><span class=\"token string\">\"ID_MODEL_ID\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tproduct_id <span class=\"token operator\">=</span> <span class=\"token function\">udev_list_entry_get_value</span><span class=\"token punctuation\">(</span>property<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">strcmp</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span><span class=\"token string\">\"ID_SERIAL\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tserial_id <span class=\"token operator\">=</span> <span class=\"token function\">udev_list_entry_get_value</span><span class=\"token punctuation\">(</span>property<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token punctuation\">}</span>\n\n\n\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Found device \"</span> <span class=\"token operator\">&lt;&lt;</span> vendor_id <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\":\"</span> <span class=\"token operator\">&lt;&lt;</span> product_id <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", getting capabilities...\"</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">/* vbi devices support capture capability too, but cannot be used,\n\t\t * so detect them by device name */</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">strstr</span> <span class=\"token punctuation\">(</span>dev_node<span class=\"token punctuation\">,</span> <span class=\"token string\">\"vbi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span>  <span class=\"token string\">\"Skipping vbi device: \"</span> <span class=\"token operator\">&lt;&lt;</span> dev_node<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>fd <span class=\"token operator\">=</span> <span class=\"token function\">open</span> <span class=\"token punctuation\">(</span>dev_node<span class=\"token punctuation\">,</span> O_RDONLY <span class=\"token operator\">|</span> O_NONBLOCK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Failed to open \"</span> <span class=\"token operator\">&lt;&lt;</span> dev_node <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">strerror</span> <span class=\"token punctuation\">(</span>errno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\tok <span class=\"token operator\">=</span> <span class=\"token function\">ioctl</span> <span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> VIDIOC_QUERYCAP<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v2cap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ok <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\tok <span class=\"token operator\">=</span> <span class=\"token function\">ioctl</span> <span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">,</span> VIDIOCGCAP<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v1cap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ok <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Error while probing v4l capabilities for \"</span>\n\t\t\t\t\t\t<span class=\"token operator\">&lt;&lt;</span> dev_node <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">strerror</span> <span class=\"token punctuation\">(</span>errno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">close</span> <span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Detected v4l device: \"</span> <span class=\"token operator\">&lt;&lt;</span> v1cap<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"device type: \"</span> <span class=\"token operator\">&lt;&lt;</span> v1cap<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">;</span>\n\t\t\tgstreamer_src <span class=\"token operator\">=</span> <span class=\"token string\">\"v4lsrc\"</span><span class=\"token punctuation\">;</span>\n\t\t\tproduct_name  <span class=\"token operator\">=</span> v1cap<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">else</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\tguint cap <span class=\"token operator\">=</span> v2cap<span class=\"token punctuation\">.</span>capabilities<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"detected v4l2 device: \"</span> <span class=\"token operator\">&lt;&lt;</span> v2cap<span class=\"token punctuation\">.</span>card<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"driver: \"</span> <span class=\"token operator\">&lt;&lt;</span> v2cap<span class=\"token punctuation\">.</span>driver <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", version: \"</span> <span class=\"token operator\">&lt;&lt;</span> v2cap<span class=\"token punctuation\">.</span>version<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">/* g_print (\"Bus info: %s\\n\", v2cap.bus_info); */</span> <span class=\"token comment\" spellcheck=\"true\">/* Doesn't seem anything useful */</span>\n\t\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Capabilities: 0x%08X\"</span><span class=\"token punctuation\">,</span> v2cap<span class=\"token punctuation\">.</span>capabilities<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>cap <span class=\"token operator\">&amp;</span> V4L2_CAP_VIDEO_CAPTURE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"device \"</span> <span class=\"token operator\">&lt;&lt;</span> dev_node <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" seems to not have the capture capability, (radio tuner?)\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"removing it from device list\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">close</span> <span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\tgstreamer_src <span class=\"token operator\">=</span> <span class=\"token string\">\"v4l2src\"</span><span class=\"token punctuation\">;</span>\n\t\t\tproduct_name  <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> v2cap<span class=\"token punctuation\">.</span>card<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\n\t\tofGstDevice gst_device<span class=\"token punctuation\">;</span>\n\t\tgst_device<span class=\"token punctuation\">.</span>video_device <span class=\"token operator\">=</span> dev_node<span class=\"token punctuation\">;</span>\n\t\tgst_device<span class=\"token punctuation\">.</span>gstreamer_src <span class=\"token operator\">=</span> gstreamer_src<span class=\"token punctuation\">;</span>\n\t\tgst_device<span class=\"token punctuation\">.</span>product_name <span class=\"token operator\">=</span> product_name<span class=\"token punctuation\">;</span>\n\t\tgst_device<span class=\"token punctuation\">.</span>serial_id <span class=\"token operator\">=</span> serial_id<span class=\"token punctuation\">;</span>\n\t\tcam_data<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>gst_device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">/*cam_data.webcam_devices[cam_data.num_webcam_devices].video_device      = dev_node;\n\t\tcam_data.webcam_devices[cam_data.num_webcam_devices].gstreamer_src     = gstreamer_src;\n\t\tcam_data.webcam_devices[cam_data.num_webcam_devices].product_name      = product_name;\n\t\tcam_data.webcam_devices[cam_data.num_webcam_devices].num_video_formats = 0;\n\t\tcam_data.webcam_devices[cam_data.num_webcam_devices].supported_resolutions =\n\t\t  g_hash_table_new_full (g_str_hash, g_str_equal, g_free, NULL);\n\t\tcam_data.num_webcam_devices++;*/</span>\n\n\t\t<span class=\"token function\">close</span> <span class=\"token punctuation\">(</span>fd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tcam_data<span class=\"token punctuation\">.</span>bInited<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">get_supported_framerates</span> <span class=\"token punctuation\">(</span>ofGstVideoFormat <span class=\"token operator\">&amp;</span>video_format<span class=\"token punctuation\">,</span> GstStructure <span class=\"token operator\">&amp;</span>structure<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> GValue <span class=\"token operator\">*</span>framerates<span class=\"token punctuation\">;</span>\n\tofGstFramerate framerate<span class=\"token punctuation\">;</span>\n\tframerates <span class=\"token operator\">=</span> <span class=\"token function\">gst_structure_get_value</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>structure<span class=\"token punctuation\">,</span> <span class=\"token string\">\"framerate\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GST_VALUE_HOLDS_FRACTION</span> <span class=\"token punctuation\">(</span>framerates<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tframerate<span class=\"token punctuation\">.</span>numerator   <span class=\"token operator\">=</span> <span class=\"token function\">gst_value_get_fraction_numerator</span> <span class=\"token punctuation\">(</span>framerates<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tframerate<span class=\"token punctuation\">.</span>denominator <span class=\"token operator\">=</span> <span class=\"token function\">gst_value_get_fraction_denominator</span> <span class=\"token punctuation\">(</span>framerates<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tvideo_format<span class=\"token punctuation\">.</span>framerates<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>framerate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofLog</span><span class=\"token punctuation\">(</span>OF_LOG_VERBOSE<span class=\"token punctuation\">,</span><span class=\"token string\">\"%d/%d \"</span><span class=\"token punctuation\">,</span> framerate<span class=\"token punctuation\">.</span>numerator<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\tframerate<span class=\"token punctuation\">.</span>denominator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GST_VALUE_HOLDS_LIST</span> <span class=\"token punctuation\">(</span>framerates<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">int</span> num_framerates <span class=\"token operator\">=</span> <span class=\"token function\">gst_value_list_get_size</span> <span class=\"token punctuation\">(</span>framerates<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> num_framerates<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">const</span> GValue <span class=\"token operator\">*</span>value <span class=\"token operator\">=</span> <span class=\"token function\">gst_value_list_get_value</span> <span class=\"token punctuation\">(</span>framerates<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tframerate<span class=\"token punctuation\">.</span>numerator   <span class=\"token operator\">=</span> <span class=\"token function\">gst_value_get_fraction_numerator</span> <span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tframerate<span class=\"token punctuation\">.</span>denominator <span class=\"token operator\">=</span> <span class=\"token function\">gst_value_get_fraction_denominator</span> <span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tvideo_format<span class=\"token punctuation\">.</span>framerates<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>framerate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">ofLog</span><span class=\"token punctuation\">(</span>OF_LOG_VERBOSE<span class=\"token punctuation\">,</span><span class=\"token string\">\"%d/%d \"</span><span class=\"token punctuation\">,</span> framerate<span class=\"token punctuation\">.</span>numerator<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\tframerate<span class=\"token punctuation\">.</span>denominator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GST_VALUE_HOLDS_FRACTION_RANGE</span> <span class=\"token punctuation\">(</span>framerates<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">int</span>           numerator_min<span class=\"token punctuation\">,</span> denominator_min<span class=\"token punctuation\">,</span> numerator_max<span class=\"token punctuation\">,</span> denominator_max<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">const</span> GValue <span class=\"token operator\">*</span>fraction_range_min<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">const</span> GValue <span class=\"token operator\">*</span>fraction_range_max<span class=\"token punctuation\">;</span>\n\n\t\tfraction_range_min <span class=\"token operator\">=</span> <span class=\"token function\">gst_value_get_fraction_range_min</span> <span class=\"token punctuation\">(</span>framerates<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tnumerator_min      <span class=\"token operator\">=</span> <span class=\"token function\">gst_value_get_fraction_numerator</span> <span class=\"token punctuation\">(</span>fraction_range_min<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdenominator_min    <span class=\"token operator\">=</span> <span class=\"token function\">gst_value_get_fraction_denominator</span> <span class=\"token punctuation\">(</span>fraction_range_min<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tfraction_range_max <span class=\"token operator\">=</span> <span class=\"token function\">gst_value_get_fraction_range_max</span> <span class=\"token punctuation\">(</span>framerates<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tnumerator_max      <span class=\"token operator\">=</span> <span class=\"token function\">gst_value_get_fraction_numerator</span> <span class=\"token punctuation\">(</span>fraction_range_max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdenominator_max    <span class=\"token operator\">=</span> <span class=\"token function\">gst_value_get_fraction_denominator</span> <span class=\"token punctuation\">(</span>fraction_range_max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"get_supported_framerates(): from \"</span>\n\t\t\t\t<span class=\"token operator\">&lt;&lt;</span> numerator_min <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"/\"</span> <span class=\"token operator\">&lt;&lt;</span> denominator_max\n\t\t\t\t<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" to \"</span> <span class=\"token operator\">&lt;&lt;</span> numerator_max <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"/\"</span> <span class=\"token operator\">&lt;&lt;</span> denominator_min<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>denominator_max<span class=\"token operator\">==</span><span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> numerator_max<span class=\"token operator\">></span><span class=\"token number\">1000000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token comment\" spellcheck=\"true\">// workaround for #4647 where some camera seems to</span>\n            <span class=\"token comment\" spellcheck=\"true\">// return a really high value for num_max crashing the app</span>\n            numerator_max <span class=\"token operator\">=</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> numerator_min<span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> numerator_max<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> denominator_min<span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> denominator_max<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tframerate<span class=\"token punctuation\">.</span>numerator <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n\t\t\t\tframerate<span class=\"token punctuation\">.</span>denominator <span class=\"token operator\">=</span> j<span class=\"token punctuation\">;</span>\n\t\t\t\tvideo_format<span class=\"token punctuation\">.</span>framerates<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>framerate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"get_supported_framerates(): unknown GValue type \"</span>\n\t\t\t\t<span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">G_VALUE_TYPE_NAME</span> <span class=\"token punctuation\">(</span>framerates<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" for framerates\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">find_framerate</span> <span class=\"token punctuation\">(</span>ofGstVideoFormat <span class=\"token operator\">&amp;</span>format<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> desired_framerate <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> framerate_numerator   <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> framerate_denominator <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> framerate <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> prevFramerate <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// find nearest to desired framerate</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>desired_framerate<span class=\"token operator\">!=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">float</span> diff <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>format<span class=\"token punctuation\">.</span>framerates<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tframerate <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>format<span class=\"token punctuation\">.</span>framerates<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>numerator <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>format<span class=\"token punctuation\">.</span>framerates<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>denominator<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>desired_framerate <span class=\"token operator\">-</span> framerate<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> diff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tdiff <span class=\"token operator\">=</span> <span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>desired_framerate <span class=\"token operator\">-</span> framerate <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tframerate_numerator   <span class=\"token operator\">=</span> format<span class=\"token punctuation\">.</span>framerates<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>numerator<span class=\"token punctuation\">;</span>\n\t\t\t\tframerate_denominator <span class=\"token operator\">=</span> format<span class=\"token punctuation\">.</span>framerates<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>denominator<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// find fastest</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> format<span class=\"token punctuation\">.</span>framerates<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tprevFramerate <span class=\"token operator\">=</span> framerate<span class=\"token punctuation\">;</span>\n\t\t\tframerate <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>format<span class=\"token punctuation\">.</span>framerates<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>numerator <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>format<span class=\"token punctuation\">.</span>framerates<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>denominator<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>framerate <span class=\"token operator\">></span> prevFramerate <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tframerate_numerator   <span class=\"token operator\">=</span> format<span class=\"token punctuation\">.</span>framerates<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>numerator<span class=\"token punctuation\">;</span>\n\t\t\t\tframerate_denominator <span class=\"token operator\">=</span> format<span class=\"token punctuation\">.</span>framerates<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>denominator<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tformat<span class=\"token punctuation\">.</span>choosen_framerate<span class=\"token punctuation\">.</span>numerator <span class=\"token operator\">=</span> framerate_numerator<span class=\"token punctuation\">;</span>\n\tformat<span class=\"token punctuation\">.</span>choosen_framerate<span class=\"token punctuation\">.</span>denominator <span class=\"token operator\">=</span> framerate_denominator<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">find_resolution</span><span class=\"token punctuation\">(</span>ofGstDevice <span class=\"token operator\">&amp;</span>webcam_device<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>webcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>webcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>width <span class=\"token operator\">==</span> width <span class=\"token operator\">&amp;&amp;</span> webcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>height<span class=\"token operator\">==</span> height<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">return</span> i<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==0</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">add_video_format</span> <span class=\"token punctuation\">(</span>ofGstDevice <span class=\"token operator\">&amp;</span>webcam_device<span class=\"token punctuation\">,</span>\n  ofGstVideoFormat <span class=\"token operator\">&amp;</span>video_format<span class=\"token punctuation\">,</span> GstStructure <span class=\"token operator\">&amp;</span>format_structure<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> desired_framerate<span class=\"token punctuation\">,</span> ofPixelFormat desiredPixelFormat<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\n\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"add_video_format(): \"</span> <span class=\"token operator\">&lt;&lt;</span> video_format<span class=\"token punctuation\">.</span>mimetype<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> video_format<span class=\"token punctuation\">.</span>width <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"x\"</span> <span class=\"token operator\">&lt;&lt;</span> video_format<span class=\"token punctuation\">.</span>height <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" framerates:\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">get_supported_framerates</span> <span class=\"token punctuation\">(</span>video_format<span class=\"token punctuation\">,</span> format_structure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">find_framerate</span> <span class=\"token punctuation\">(</span>video_format<span class=\"token punctuation\">,</span> desired_framerate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token function\">find_resolution</span><span class=\"token punctuation\">(</span>webcam_device<span class=\"token punctuation\">,</span>video_format<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> video_format<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">!=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\" spellcheck=\"true\">// Resolution already added ?</span>\n\t\t<span class=\"token keyword\">float</span> new_framerate <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>video_format<span class=\"token punctuation\">.</span>choosen_framerate<span class=\"token punctuation\">.</span>numerator <span class=\"token operator\">/</span>\n\t\t\t\t\t\t\t\t video_format<span class=\"token punctuation\">.</span>choosen_framerate<span class=\"token punctuation\">.</span>denominator<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span> curr_framerate <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>webcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>choosen_framerate<span class=\"token punctuation\">.</span>numerator <span class=\"token operator\">/</span>\n\t\t\t\t\t\t\t\twebcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>choosen_framerate<span class=\"token punctuation\">.</span>denominator<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>desired_framerate <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>new_framerate <span class=\"token operator\">></span> curr_framerate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"add_video_format(): higher framerate replacing existing format\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\twebcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> video_format<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> PREFER_NON_COMPRESSED</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>webcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">!=</span> <span class=\"token string\">\"video/x-raw-yuv\"</span>\n\t\t\t\t\t<span class=\"token operator\">&amp;&amp;</span> webcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">!=</span> <span class=\"token string\">\"video/x-raw-rgb\"</span>\n\t\t\t\t\t<span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span> video_format<span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">==</span> <span class=\"token string\">\"video/x-raw-yuv\"</span> <span class=\"token operator\">||</span> video_format<span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">==</span> <span class=\"token string\">\"video/x-raw-rgb\"</span> <span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token operator\">&amp;&amp;</span> new_framerate <span class=\"token operator\">==</span> curr_framerate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"add_video_format(): non compressed format with same framerate, replacing existing format\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\twebcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> video_format<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>webcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">==</span> <span class=\"token string\">\"video/x-raw-yuv\"</span>\n\t\t\t\t\t<span class=\"token operator\">||</span> webcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">==</span> <span class=\"token string\">\"video/x-raw-rgb\"</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span> video_format<span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">!=</span> <span class=\"token string\">\"video/x-raw-yuv\"</span> <span class=\"token operator\">&amp;&amp;</span> video_format<span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">!=</span> <span class=\"token string\">\"video/x-raw-rgb\"</span> <span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token operator\">&amp;&amp;</span> new_framerate <span class=\"token operator\">==</span> curr_framerate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"add_video_format(): non compressed format with same framerate, replacing existing format\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\twebcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> video_format<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> PREFER_RGB_OVER_YUV</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>webcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">==</span> <span class=\"token string\">\"video/x-raw-yuv\"</span>\n\t\t\t\t\t<span class=\"token operator\">&amp;&amp;</span> video_format<span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">==</span> <span class=\"token string\">\"video/x-raw-rgb\"</span>\n\t\t\t\t\t<span class=\"token operator\">&amp;&amp;</span> new_framerate <span class=\"token operator\">==</span> curr_framerate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"add_video_format(): rgb format with same framerate as yuv, replacing existing format\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\twebcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> video_format<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>webcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">==</span> <span class=\"token string\">\"video/x-raw-rgb\"</span>\n\t\t\t\t\t<span class=\"token operator\">&amp;&amp;</span> video_format<span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">==</span> <span class=\"token string\">\"video/x-raw-yuv\"</span>\n\t\t\t\t\t<span class=\"token operator\">&amp;&amp;</span> new_framerate <span class=\"token operator\">==</span> curr_framerate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"add_video_format(): rgb format with same framerate as yuv, replacing existing format\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\twebcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> video_format<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLog</span><span class=\"token punctuation\">(</span>OF_LOG_VERBOSE<span class=\"token punctuation\">,</span><span class=\"token string\">\"already added, skipping\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>new_framerate <span class=\"token operator\">-</span> desired_framerate<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>curr_framerate <span class=\"token operator\">-</span> desired_framerate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLog</span><span class=\"token punctuation\">(</span>OF_LOG_VERBOSE<span class=\"token punctuation\">,</span><span class=\"token string\">\"more similar framerate replacing existing format\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\twebcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> video_format<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> PREFER_NON_COMPRESSED</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>webcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">!=</span> <span class=\"token string\">\"video/x-raw-yuv\"</span>\n\t\t\t\t\t<span class=\"token operator\">&amp;&amp;</span> webcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">!=</span> <span class=\"token string\">\"video/x-raw-rgb\"</span>\n\t\t\t\t\t<span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span> video_format<span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">==</span> <span class=\"token string\">\"video/x-raw-yuv\"</span> <span class=\"token operator\">||</span> video_format<span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">==</span> <span class=\"token string\">\"video/x-raw-rgb\"</span> <span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token operator\">&amp;&amp;</span> new_framerate <span class=\"token operator\">==</span> curr_framerate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"add_video_format(): non compressed format with same framerate, replacing existing format\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\twebcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> video_format<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>webcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">==</span> <span class=\"token string\">\"video/x-raw-yuv\"</span>\n\t\t\t\t\t<span class=\"token operator\">||</span> webcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">==</span> <span class=\"token string\">\"video/x-raw-rgb\"</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span> video_format<span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">!=</span> <span class=\"token string\">\"video/x-raw-yuv\"</span> <span class=\"token operator\">&amp;&amp;</span> video_format<span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">!=</span> <span class=\"token string\">\"video/x-raw-rgb\"</span> <span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token operator\">&amp;&amp;</span> new_framerate <span class=\"token operator\">==</span> curr_framerate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"add_video_format(): non compressed format with same framerate, replacing existing format\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\twebcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> video_format<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> PREFER_RGB_OVER_YUV</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>webcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">==</span> <span class=\"token string\">\"video/x-raw-yuv\"</span>\n\t\t\t\t\t<span class=\"token operator\">&amp;&amp;</span> video_format<span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">==</span> <span class=\"token string\">\"video/x-raw-rgb\"</span>\n\t\t\t\t\t<span class=\"token operator\">&amp;&amp;</span> new_framerate <span class=\"token operator\">==</span> curr_framerate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"add_video_format(): rgb format with same framerate as yuv, replacing existing format\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\twebcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> video_format<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>webcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">==</span> <span class=\"token string\">\"video/x-raw-rgb\"</span>\n\t\t\t\t\t<span class=\"token operator\">&amp;&amp;</span> video_format<span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">==</span> <span class=\"token string\">\"video/x-raw-yuv\"</span>\n\t\t\t\t\t<span class=\"token operator\">&amp;&amp;</span> new_framerate <span class=\"token operator\">==</span> curr_framerate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"add_video_format(): rgb format with same framerate as yuv, replacing existing format\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\twebcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> video_format<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"add_video_format(): already added, skipping\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\twebcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>video_format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">add_video_format</span> <span class=\"token punctuation\">(</span>ofGstDevice <span class=\"token operator\">&amp;</span>webcam_device<span class=\"token punctuation\">,</span>\n  ofGstVideoFormat <span class=\"token operator\">&amp;</span>video_format<span class=\"token punctuation\">,</span> GstStructure <span class=\"token operator\">&amp;</span>format_structure<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> desired_framerate<span class=\"token punctuation\">,</span> ofPixelFormat desiredPixelFormat<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\n\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"add_video_format(): \"</span>\n\t\t\t\t\t\t\t<span class=\"token operator\">&lt;&lt;</span> video_format<span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> video_format<span class=\"token punctuation\">.</span>format_name\n\t\t\t\t\t\t\t<span class=\"token operator\">&lt;&lt;</span> video_format<span class=\"token punctuation\">.</span>width <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"x\"</span> <span class=\"token operator\">&lt;&lt;</span> video_format<span class=\"token punctuation\">.</span>height <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span>\n\t\t\t\t\t\t\t<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"videoformat: \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">gst_video_format_from_string</span><span class=\"token punctuation\">(</span>video_format<span class=\"token punctuation\">.</span>format_name<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t\t<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" framerates: \"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">get_supported_framerates</span> <span class=\"token punctuation\">(</span>video_format<span class=\"token punctuation\">,</span> format_structure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">find_framerate</span> <span class=\"token punctuation\">(</span>video_format<span class=\"token punctuation\">,</span> desired_framerate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token function\">find_resolution</span><span class=\"token punctuation\">(</span>webcam_device<span class=\"token punctuation\">,</span>video_format<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> video_format<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">!=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\" spellcheck=\"true\">// Resolution already added ?</span>\n\t\t<span class=\"token keyword\">float</span> new_framerate <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>video_format<span class=\"token punctuation\">.</span>choosen_framerate<span class=\"token punctuation\">.</span>numerator <span class=\"token operator\">/</span>\n\t\t\t\t\t\t\t\t video_format<span class=\"token punctuation\">.</span>choosen_framerate<span class=\"token punctuation\">.</span>denominator<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span> curr_framerate <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>webcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>choosen_framerate<span class=\"token punctuation\">.</span>numerator <span class=\"token operator\">/</span>\n\t\t\t\t\t\t\t\twebcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>choosen_framerate<span class=\"token punctuation\">.</span>denominator<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>desired_framerate <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// choose faster</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>new_framerate <span class=\"token operator\">></span> curr_framerate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"add_video_format(): higher framerate replacing existing format\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\twebcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> video_format<span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>new_framerate <span class=\"token operator\">-</span> desired_framerate<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>curr_framerate <span class=\"token operator\">-</span> desired_framerate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"add_video_format(): more similar framerate replacing existing format\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\twebcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> video_format<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"add_video_format(): already added, skipping\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// with same fps choose non_compressed over compressed</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">gst_video_format_from_string</span><span class=\"token punctuation\">(</span>webcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>format_name<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> GST_VIDEO_FORMAT_ENCODED\n\t\t\t\t<span class=\"token operator\">||</span> <span class=\"token function\">gst_video_format_from_string</span><span class=\"token punctuation\">(</span>webcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>format_name<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> GST_VIDEO_FORMAT_UNKNOWN<span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">gst_video_format_from_string</span><span class=\"token punctuation\">(</span>video_format<span class=\"token punctuation\">.</span>format_name<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> GST_VIDEO_FORMAT_ENCODED <span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">gst_video_format_from_string</span><span class=\"token punctuation\">(</span>video_format<span class=\"token punctuation\">.</span>format_name<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> GST_VIDEO_FORMAT_UNKNOWN <span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token operator\">&amp;&amp;</span> new_framerate <span class=\"token operator\">==</span> curr_framerate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"add_video_format(): non compressed format with same framerate, replacing existing format\"</span><span class=\"token punctuation\">;</span>\n\t\t\twebcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> video_format<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// with same fps choose desiredPixelFormat over other formats to avoid colorspace compression</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">gst_video_format_from_string</span><span class=\"token punctuation\">(</span>webcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>format_name<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> ofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">getGstFormat</span><span class=\"token punctuation\">(</span>desiredPixelFormat<span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">gst_video_format_from_string</span><span class=\"token punctuation\">(</span>video_format<span class=\"token punctuation\">.</span>format_name<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> ofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">getGstFormat</span><span class=\"token punctuation\">(</span>desiredPixelFormat<span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token operator\">&amp;&amp;</span> new_framerate <span class=\"token operator\">==</span> curr_framerate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"add_video_format(): \"</span> <span class=\"token operator\">&lt;&lt;</span> webcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>format_name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" format with same framerate as other format, replacing existing format\"</span><span class=\"token punctuation\">;</span>\n\t\t\twebcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> video_format<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"add_video_format(): already added, skipping\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\twebcam_device<span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>video_format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">// TODO: gets formats for cameras, when a format returns a range it gets</span>\n<span class=\"token comment\" spellcheck=\"true\">// in steps /2 and *2 from min to max and max to min, for format7 it should be free to get any size</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">get_supported_video_formats</span> <span class=\"token punctuation\">(</span>ofGstDevice <span class=\"token operator\">&amp;</span>webcam_device<span class=\"token punctuation\">,</span> GstCaps <span class=\"token operator\">&amp;</span>caps<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> desired_framerate<span class=\"token punctuation\">,</span> ofPixelFormat desiredPixelFormat<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">int</span> num_structures<span class=\"token punctuation\">;</span>\n\n\tnum_structures <span class=\"token operator\">=</span> <span class=\"token function\">gst_caps_get_size</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>caps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> num_structures<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tGstStructure <span class=\"token operator\">*</span>structure<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">const</span> GValue <span class=\"token operator\">*</span>width<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>height<span class=\"token punctuation\">;</span>\n\t\tstructure <span class=\"token operator\">=</span> <span class=\"token function\">gst_caps_get_structure</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>caps<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\twidth  <span class=\"token operator\">=</span> <span class=\"token function\">gst_structure_get_value</span> <span class=\"token punctuation\">(</span>structure<span class=\"token punctuation\">,</span> <span class=\"token string\">\"width\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\theight <span class=\"token operator\">=</span> <span class=\"token function\">gst_structure_get_value</span> <span class=\"token punctuation\">(</span>structure<span class=\"token punctuation\">,</span> <span class=\"token string\">\"height\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">G_VALUE_HOLDS_INT</span> <span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tofGstVideoFormat video_format<span class=\"token punctuation\">;</span>\n\n\t\t\tvideo_format<span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">=</span> <span class=\"token function\">gst_structure_get_name</span> <span class=\"token punctuation\">(</span>structure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">gst_structure_get_int</span> <span class=\"token punctuation\">(</span>structure<span class=\"token punctuation\">,</span> <span class=\"token string\">\"width\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>video_format<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">gst_structure_get_int</span> <span class=\"token punctuation\">(</span>structure<span class=\"token punctuation\">,</span> <span class=\"token string\">\"height\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>video_format<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==1</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">gst_structure_get_string</span><span class=\"token punctuation\">(</span>structure<span class=\"token punctuation\">,</span><span class=\"token string\">\"format\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\tvideo_format<span class=\"token punctuation\">.</span>format_name <span class=\"token operator\">=</span> <span class=\"token function\">gst_structure_get_string</span><span class=\"token punctuation\">(</span>structure<span class=\"token punctuation\">,</span><span class=\"token string\">\"format\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//cout &lt;&lt; gst_structure_to_string(structure) &lt;&lt; endl;;</span>\n\t\t\t<span class=\"token function\">add_video_format</span><span class=\"token punctuation\">(</span>webcam_device<span class=\"token punctuation\">,</span> video_format<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>structure<span class=\"token punctuation\">,</span> desired_framerate<span class=\"token punctuation\">,</span> desiredPixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GST_VALUE_HOLDS_INT_RANGE</span> <span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">int</span> min_width<span class=\"token punctuation\">,</span> max_width<span class=\"token punctuation\">,</span> min_height<span class=\"token punctuation\">,</span> max_height<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">int</span> cur_width<span class=\"token punctuation\">,</span> cur_height<span class=\"token punctuation\">;</span>\n\n\t\t\tmin_width  <span class=\"token operator\">=</span> <span class=\"token function\">gst_value_get_int_range_min</span> <span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmax_width  <span class=\"token operator\">=</span> <span class=\"token function\">gst_value_get_int_range_max</span> <span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmin_height <span class=\"token operator\">=</span> <span class=\"token function\">gst_value_get_int_range_min</span> <span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmax_height <span class=\"token operator\">=</span> <span class=\"token function\">gst_value_get_int_range_max</span> <span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tcur_width  <span class=\"token operator\">=</span> min_width<span class=\"token punctuation\">;</span>\n\t\t\tcur_height <span class=\"token operator\">=</span> min_height<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>cur_width <span class=\"token operator\">&lt;=</span> max_width <span class=\"token operator\">&amp;&amp;</span> cur_height <span class=\"token operator\">&lt;=</span> max_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tofGstVideoFormat video_format<span class=\"token punctuation\">;</span>\n\n\t\t\t\tvideo_format<span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">=</span> <span class=\"token function\">gst_structure_get_name</span> <span class=\"token punctuation\">(</span>structure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tvideo_format<span class=\"token punctuation\">.</span>width    <span class=\"token operator\">=</span> cur_width<span class=\"token punctuation\">;</span>\n\t\t\t\tvideo_format<span class=\"token punctuation\">.</span>height   <span class=\"token operator\">=</span> cur_height<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==1</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">gst_structure_get_string</span><span class=\"token punctuation\">(</span>structure<span class=\"token punctuation\">,</span><span class=\"token string\">\"format\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\tvideo_format<span class=\"token punctuation\">.</span>format_name <span class=\"token operator\">=</span> <span class=\"token function\">gst_structure_get_string</span><span class=\"token punctuation\">(</span>structure<span class=\"token punctuation\">,</span><span class=\"token string\">\"format\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t\t<span class=\"token function\">add_video_format</span><span class=\"token punctuation\">(</span>webcam_device<span class=\"token punctuation\">,</span> video_format<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>structure<span class=\"token punctuation\">,</span> desired_framerate<span class=\"token punctuation\">,</span> desiredPixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tcur_width  <span class=\"token operator\">*</span><span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t\t\t\tcur_height <span class=\"token operator\">*</span><span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\tcur_width  <span class=\"token operator\">=</span> max_width<span class=\"token punctuation\">;</span>\n\t\t\tcur_height <span class=\"token operator\">=</span> max_height<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>cur_width <span class=\"token operator\">></span> min_width <span class=\"token operator\">&amp;&amp;</span> cur_height <span class=\"token operator\">></span> min_height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tofGstVideoFormat video_format<span class=\"token punctuation\">;</span>\n\n\t\t\t\tvideo_format<span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">=</span> <span class=\"token function\">gst_structure_get_name</span> <span class=\"token punctuation\">(</span>structure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tvideo_format<span class=\"token punctuation\">.</span>width    <span class=\"token operator\">=</span> cur_width<span class=\"token punctuation\">;</span>\n\t\t\t\tvideo_format<span class=\"token punctuation\">.</span>height   <span class=\"token operator\">=</span> cur_height<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==1</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">gst_structure_get_string</span><span class=\"token punctuation\">(</span>structure<span class=\"token punctuation\">,</span><span class=\"token string\">\"format\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\tvideo_format<span class=\"token punctuation\">.</span>format_name <span class=\"token operator\">=</span> <span class=\"token function\">gst_structure_get_string</span><span class=\"token punctuation\">(</span>structure<span class=\"token punctuation\">,</span><span class=\"token string\">\"format\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t\t<span class=\"token function\">add_video_format</span><span class=\"token punctuation\">(</span>webcam_device<span class=\"token punctuation\">,</span> video_format<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>structure<span class=\"token punctuation\">,</span> desired_framerate<span class=\"token punctuation\">,</span> desiredPixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tcur_width  <span class=\"token operator\">/</span><span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t\t\t\tcur_height <span class=\"token operator\">/</span><span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLog</span><span class=\"token punctuation\">(</span>OF_LOG_ERROR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"unknown GValue type %s, for resolution width\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">G_VALUE_TYPE_NAME</span> <span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">get_device_data</span> <span class=\"token punctuation\">(</span>ofGstDevice <span class=\"token operator\">&amp;</span>webcam_device<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> desired_framerate<span class=\"token punctuation\">,</span> ofPixelFormat desiredPixelFormat<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tstring pipeline_desc <span class=\"token operator\">=</span> webcam_device<span class=\"token punctuation\">.</span>gstreamer_src <span class=\"token operator\">+</span> <span class=\"token string\">\" name=source device=\"</span> <span class=\"token operator\">+</span>\n\t\t\twebcam_device<span class=\"token punctuation\">.</span>video_device <span class=\"token operator\">+</span> <span class=\"token string\">\" ! fakesink\"</span><span class=\"token punctuation\">;</span>\n\n\tGError <span class=\"token operator\">*</span> err <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\tGstElement <span class=\"token operator\">*</span> pipeline <span class=\"token operator\">=</span> <span class=\"token function\">gst_parse_launch</span> <span class=\"token punctuation\">(</span>pipeline_desc<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pipeline <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>err <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLog</span><span class=\"token punctuation\">(</span>OF_LOG_ERROR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"ofGstUtils: error getting device data: %s\"</span><span class=\"token punctuation\">,</span> err<span class=\"token operator\">-</span><span class=\"token operator\">></span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">g_error_free</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLog</span><span class=\"token punctuation\">(</span>OF_LOG_ERROR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"ofGstUtils: error getting device data, cannot get pipeline\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pipeline<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token function\">gst_object_unref</span> <span class=\"token punctuation\">(</span>pipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// TODO: try to lower seconds,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// Start the pipeline and wait for max. 10 seconds for it to start up</span>\n\t<span class=\"token function\">gst_element_set_state</span> <span class=\"token punctuation\">(</span>pipeline<span class=\"token punctuation\">,</span> GST_STATE_READY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tGstStateChangeReturn ret <span class=\"token operator\">=</span> <span class=\"token function\">gst_element_get_state</span> <span class=\"token punctuation\">(</span>pipeline<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> GST_SECOND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// Check if any error messages were posted on the bus</span>\n\tGstBus <span class=\"token operator\">*</span> bus <span class=\"token operator\">=</span> <span class=\"token function\">gst_element_get_bus</span> <span class=\"token punctuation\">(</span>pipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tGstMessage <span class=\"token operator\">*</span> msg <span class=\"token operator\">=</span> <span class=\"token function\">gst_bus_poll</span> <span class=\"token punctuation\">(</span>bus<span class=\"token punctuation\">,</span> GST_MESSAGE_ERROR<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">gst_object_unref</span> <span class=\"token punctuation\">(</span>bus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>msg <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>ret <span class=\"token operator\">==</span> GST_STATE_CHANGE_SUCCESS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\tGstElement <span class=\"token operator\">*</span>src <span class=\"token operator\">=</span> <span class=\"token function\">gst_bin_get_by_name</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GST_BIN</span> <span class=\"token punctuation\">(</span>pipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"source\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">char</span>       <span class=\"token operator\">*</span>name<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">g_object_get</span> <span class=\"token punctuation\">(</span><span class=\"token function\">G_OBJECT</span> <span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"device-name\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>name<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">ofLog</span><span class=\"token punctuation\">(</span>OF_LOG_VERBOSE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Device: %s (%s)\\n\"</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">==</span><span class=\"token constant\">NULL</span><span class=\"token operator\">?</span><span class=\"token string\">\"\"</span><span class=\"token operator\">:</span>name<span class=\"token punctuation\">,</span> webcam_device<span class=\"token punctuation\">.</span>video_device<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tGstPad     <span class=\"token operator\">*</span>pad  <span class=\"token operator\">=</span> <span class=\"token function\">gst_element_get_static_pad</span> <span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">,</span> <span class=\"token string\">\"src\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tGstCaps    <span class=\"token operator\">*</span>caps <span class=\"token operator\">=</span> <span class=\"token function\">gst_pad_get_allowed_caps</span> <span class=\"token punctuation\">(</span>pad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">gst_object_unref</span> <span class=\"token punctuation\">(</span>pad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">get_supported_video_formats</span> <span class=\"token punctuation\">(</span>webcam_device<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>caps<span class=\"token punctuation\">,</span> desired_framerate<span class=\"token punctuation\">,</span> desiredPixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">gst_caps_unref</span> <span class=\"token punctuation\">(</span>caps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">gst_object_unref</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tgchar <span class=\"token operator\">*</span>debug<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">gst_message_parse_error</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>err<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>debug<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">ofLog</span><span class=\"token punctuation\">(</span>OF_LOG_ERROR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"ofGstUtils: error getting device data; module %s reported: %s\"</span><span class=\"token punctuation\">,</span>\n\t\t\t  <span class=\"token function\">gst_element_get_name</span><span class=\"token punctuation\">(</span><span class=\"token function\">GST_MESSAGE_SRC</span> <span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> err<span class=\"token operator\">-</span><span class=\"token operator\">></span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">g_error_free</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">g_free</span><span class=\"token punctuation\">(</span>debug<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">gst_element_set_state</span> <span class=\"token punctuation\">(</span>pipeline<span class=\"token punctuation\">,</span> GST_STATE_NULL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tret <span class=\"token operator\">=</span> <span class=\"token function\">gst_element_get_state</span> <span class=\"token punctuation\">(</span>pipeline<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> GST_SECOND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">gst_object_unref</span> <span class=\"token punctuation\">(</span>pipeline<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\nofGstVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">ofGstVideoGrabber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbIsCamera\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tcamData<span class=\"token punctuation\">.</span>bInited\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\tdeviceID \t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tattemptFramerate\t<span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\tinternalPixelFormat\t<span class=\"token operator\">=</span> OF_PIXELS_RGB<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofGstVideoGrabber<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofGstVideoGrabber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofGstVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">setPixelFormat</span><span class=\"token punctuation\">(</span>ofPixelFormat pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tinternalPixelFormat <span class=\"token operator\">=</span> pixelFormat<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofPixelFormat ofGstVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">isInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> internalPixelFormat<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">setVerbose</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bVerbose<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bVerbose<span class=\"token punctuation\">)</span> <span class=\"token function\">ofSetLogLevel</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">,</span> OF_LOG_VERBOSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token function\">ofSetLogLevel</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">,</span>OF_LOG_NOTICE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofGstVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">isInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">isInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofPixelFormat <span class=\"token function\">ofPixelFormatFromGstFormat</span><span class=\"token punctuation\">(</span>string format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR>=1</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span><span class=\"token function\">gst_video_format_from_string</span><span class=\"token punctuation\">(</span>format<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> GST_VIDEO_FORMAT_RGB<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> OF_PIXELS_RGB<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> GST_VIDEO_FORMAT_RGBA<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> OF_PIXELS_RGBA<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> GST_VIDEO_FORMAT_BGRA<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> OF_PIXELS_BGRA<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> GST_VIDEO_FORMAT_GRAY8<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> OF_PIXELS_MONO<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> GST_VIDEO_FORMAT_RGB16<span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> OF_PIXELS_RGB565<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> OF_PIXELS_UNKNOWN<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ofPixelFormatFromGstFormat(): only supported for gstreamer 1.0\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> OF_PIXELS_UNKNOWN<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\nvector<span class=\"token operator\">&lt;</span>ofVideoDevice<span class=\"token operator\">></span> ofGstVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">listDevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR>=1</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>camData<span class=\"token punctuation\">.</span>bInited<span class=\"token punctuation\">)</span> <span class=\"token function\">get_video_devices</span><span class=\"token punctuation\">(</span>camData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tvector<span class=\"token operator\">&lt;</span>ofVideoDevice<span class=\"token operator\">></span> <span class=\"token function\">devices</span><span class=\"token punctuation\">(</span>camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tdevices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>id <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n        devices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>bAvailable <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> \n\t\tdevices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>deviceName <span class=\"token operator\">=</span> camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>product_name<span class=\"token punctuation\">;</span>\n\t\tdevices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>hardwareName <span class=\"token operator\">=</span> camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>video_device<span class=\"token punctuation\">;</span>\n\t\tdevices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>serialID <span class=\"token operator\">=</span> camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>serial_id<span class=\"token punctuation\">;</span>\n\t\tdevices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>formats<span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span>camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tdevices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>formats<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>pixelFormat <span class=\"token operator\">=</span> <span class=\"token function\">ofPixelFormatFromGstFormat</span><span class=\"token punctuation\">(</span>camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>format_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tdevices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>formats<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t\t\tdevices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>formats<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\t\t\tdevices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>formats<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>framerates<span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span>camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>framerates<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>k<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>framerates<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tdevices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>formats<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>framerates<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">float</span><span class=\"token punctuation\">(</span>camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>framerates<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>numerator<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">(</span>camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>framerates<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>denominator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"listDevices(): device \"</span> <span class=\"token operator\">&lt;&lt;</span> i <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\": \"</span> <span class=\"token operator\">&lt;&lt;</span> camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>video_device <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\": \"</span> <span class=\"token operator\">&lt;&lt;</span> camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>product_name<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> devices<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"listDevices(): only supported for gstreamer 1.0\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> vector<span class=\"token operator\">&lt;</span>ofVideoDevice<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">setDeviceID</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>camData<span class=\"token punctuation\">.</span>bInited<span class=\"token punctuation\">)</span> <span class=\"token function\">get_video_devices</span><span class=\"token punctuation\">(</span>camData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span>camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tdeviceID <span class=\"token operator\">=</span> id<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setDeviceID(): selected device doesn't exist, selecting device 0\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nofGstVideoFormat <span class=\"token operator\">&amp;</span> ofGstVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">selectFormat</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> desired_framerate<span class=\"token punctuation\">,</span> ofPixelFormat desiredPixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> minDiff<span class=\"token operator\">=</span><span class=\"token number\">999999</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> mostSimilarFormat<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">get_device_data</span> <span class=\"token punctuation\">(</span>camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">[</span>deviceID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> desired_framerate<span class=\"token punctuation\">,</span> desiredPixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">[</span>deviceID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">[</span>deviceID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>width<span class=\"token operator\">==</span>w <span class=\"token operator\">&amp;&amp;</span> camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">[</span>deviceID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>height<span class=\"token operator\">==</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tmostSimilarFormat <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">int</span> diff <span class=\"token operator\">=</span> <span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">[</span>deviceID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>width <span class=\"token operator\">+</span> camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">[</span>deviceID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>height <span class=\"token operator\">-</span> w <span class=\"token operator\">-</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>diff<span class=\"token operator\">&lt;</span>minDiff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tminDiff <span class=\"token operator\">=</span> diff<span class=\"token punctuation\">;</span>\n\t\t\tmostSimilarFormat <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\tcamData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">[</span>deviceID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>current_format <span class=\"token operator\">=</span> mostSimilarFormat<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">[</span>deviceID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>video_formats<span class=\"token punctuation\">[</span>mostSimilarFormat<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofGstVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>camData<span class=\"token punctuation\">.</span>bInited<span class=\"token punctuation\">)</span> <span class=\"token function\">get_video_devices</span><span class=\"token punctuation\">(</span>camData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"initGrabber(): no devices found, exiting without initializing\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tofGstVideoFormat format<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>internalPixelFormat<span class=\"token operator\">!=</span>OF_PIXELS_NATIVE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tformat <span class=\"token operator\">=</span> <span class=\"token function\">selectFormat</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> attemptFramerate<span class=\"token punctuation\">,</span> internalPixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"initGrabber(): selected device: \"</span> <span class=\"token operator\">&lt;&lt;</span> camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">[</span>deviceID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>product_name<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGstVideoGrabber\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"initGrabber(): selected format: \"</span> <span class=\"token operator\">&lt;&lt;</span> format<span class=\"token punctuation\">.</span>width <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"x\"</span> <span class=\"token operator\">&lt;&lt;</span> format<span class=\"token punctuation\">.</span>height\n\t\t\t<span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> format<span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> format<span class=\"token punctuation\">.</span>format_name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" framerate: \"</span> <span class=\"token operator\">&lt;&lt;</span> format<span class=\"token punctuation\">.</span>choosen_framerate<span class=\"token punctuation\">.</span>numerator <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"/\"</span> <span class=\"token operator\">&lt;&lt;</span> format<span class=\"token punctuation\">.</span>choosen_framerate<span class=\"token punctuation\">.</span>denominator<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tbIsCamera <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> GST_VERSION_MAJOR==0</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> decodebin <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>format<span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">==</span> <span class=\"token string\">\"video/x-raw-bayer\"</span><span class=\"token punctuation\">)</span>\n\t\tdecodebin <span class=\"token operator\">=</span> <span class=\"token string\">\"! bayer2rgb \"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>format<span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">!=</span> <span class=\"token string\">\"video/x-raw-yuv\"</span> <span class=\"token operator\">&amp;&amp;</span> format<span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">!=</span> <span class=\"token string\">\"video/x-raw-rgb\"</span><span class=\"token punctuation\">)</span>\n\t\tdecodebin <span class=\"token operator\">=</span> <span class=\"token string\">\"! decodebin2 \"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> scale <span class=\"token operator\">=</span> <span class=\"token string\">\"! ffmpegcolorspace \"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> w<span class=\"token operator\">!=</span>format<span class=\"token punctuation\">.</span>width <span class=\"token operator\">||</span> h<span class=\"token operator\">!=</span>format<span class=\"token punctuation\">.</span>height <span class=\"token punctuation\">)</span>\tscale <span class=\"token operator\">=</span> <span class=\"token string\">\"! ffvideoscale method=2 \"</span><span class=\"token punctuation\">;</span>\n\n\tstring format_str_pipeline <span class=\"token operator\">=</span> <span class=\"token string\">\"%s name=video_source device=%s ! \"</span>\n\t\t\t <span class=\"token string\">\"%s,width=%d,height=%d,framerate=%d/%d \"</span>\n\t\t\t <span class=\"token string\">\"%s %s \"</span><span class=\"token punctuation\">;</span>\n\n\tgchar<span class=\"token operator\">*</span> pipeline_string<span class=\"token operator\">=</span><span class=\"token function\">g_strdup_printf</span> <span class=\"token punctuation\">(</span>\n\t\t      format_str_pipeline<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t      camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">[</span>deviceID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>gstreamer_src<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t      camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">[</span>deviceID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>video_device<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t      format<span class=\"token punctuation\">.</span>mimetype<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t      format<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>\n\t\t      format<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span>\n\t\t      format<span class=\"token punctuation\">.</span>choosen_framerate<span class=\"token punctuation\">.</span>numerator<span class=\"token punctuation\">,</span>\n\t\t      format<span class=\"token punctuation\">.</span>choosen_framerate<span class=\"token punctuation\">.</span>denominator<span class=\"token punctuation\">,</span>\n\t\t      decodebin<span class=\"token punctuation\">,</span> scale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\tstring pipeline_string<span class=\"token punctuation\">;</span>\n\tstring format_str_pipeline<span class=\"token punctuation\">;</span>\n\tstring fix_v4l2_316<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_LINUX) &amp;&amp; !defined(OF_USE_GST_GL) &amp;&amp; GST_VERSION_MAJOR>0 &amp;&amp; GST_VERSION_MINOR>2 &amp;&amp; GST_VERSION_MINOR&lt;5</span>\n\tvideoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">setCopyPixels</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>internalPixelFormat<span class=\"token operator\">!=</span>OF_PIXELS_NATIVE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tstring decodebin<span class=\"token punctuation\">,</span> scale<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>format<span class=\"token punctuation\">.</span>mimetype <span class=\"token operator\">==</span> <span class=\"token string\">\"video/x-bayer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tdecodebin <span class=\"token operator\">=</span> <span class=\"token string\">\"! bayer2rgb \"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">gst_video_format_from_string</span><span class=\"token punctuation\">(</span>format<span class=\"token punctuation\">.</span>format_name<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> GST_VIDEO_FORMAT_ENCODED <span class=\"token operator\">||</span> <span class=\"token function\">gst_video_format_from_string</span><span class=\"token punctuation\">(</span>format<span class=\"token punctuation\">.</span>format_name<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span>GST_VIDEO_FORMAT_UNKNOWN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tdecodebin <span class=\"token operator\">=</span> <span class=\"token string\">\"! decodebin \"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>format<span class=\"token punctuation\">.</span>format_name<span class=\"token operator\">!=</span>ofGstVideoUtils<span class=\"token operator\">::</span><span class=\"token function\">getGstFormatName</span><span class=\"token punctuation\">(</span>internalPixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tscale <span class=\"token operator\">=</span> <span class=\"token string\">\"! videoconvert \"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> w<span class=\"token operator\">!=</span>format<span class=\"token punctuation\">.</span>width <span class=\"token operator\">||</span> h<span class=\"token operator\">!=</span>format<span class=\"token punctuation\">.</span>height <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tscale <span class=\"token operator\">=</span> <span class=\"token string\">\"! videoscale method=2 \"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>format<span class=\"token punctuation\">.</span>format_name<span class=\"token operator\">==</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tformat_str_pipeline <span class=\"token operator\">=</span> <span class=\"token string\">\"%s name=video_source device=%s ! \"</span>\n\t\t\t\t\t\t\t\t\t <span class=\"token string\">\"%s,width=%d,height=%d,framerate=%d/%d \"</span>\n\t\t\t\t\t\t\t\t\t <span class=\"token string\">\"%s %s \"</span><span class=\"token punctuation\">;</span>\n\n\t\t\tpipeline_string<span class=\"token operator\">=</span><span class=\"token function\">g_strdup_printf</span> <span class=\"token punctuation\">(</span>\n\t\t\t\t\t\t\t  format_str_pipeline<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t  camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">[</span>deviceID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>gstreamer_src<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t  camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">[</span>deviceID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>video_device<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t  format<span class=\"token punctuation\">.</span>mimetype<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t  format<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t  format<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t  format<span class=\"token punctuation\">.</span>choosen_framerate<span class=\"token punctuation\">.</span>numerator<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t  format<span class=\"token punctuation\">.</span>choosen_framerate<span class=\"token punctuation\">.</span>denominator<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t  decodebin<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>scale <span class=\"token operator\">+</span> fix_v4l2_316<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\tformat_str_pipeline <span class=\"token operator\">=</span> <span class=\"token string\">\"%s name=video_source device=%s ! \"</span>\n\t\t\t\t\t\t\t\t\t <span class=\"token string\">\"%s,format=%s,width=%d,height=%d,framerate=%d/%d \"</span>\n\t\t\t\t\t\t\t\t\t <span class=\"token string\">\"%s %s \"</span><span class=\"token punctuation\">;</span>\n\n\t\t\tpipeline_string<span class=\"token operator\">=</span><span class=\"token function\">g_strdup_printf</span> <span class=\"token punctuation\">(</span>\n\t\t\t\t\t\t\t  format_str_pipeline<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t  camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">[</span>deviceID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>gstreamer_src<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t  camData<span class=\"token punctuation\">.</span>webcam_devices<span class=\"token punctuation\">[</span>deviceID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>video_device<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t  format<span class=\"token punctuation\">.</span>mimetype<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t  format<span class=\"token punctuation\">.</span>format_name<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t  format<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t  format<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t  format<span class=\"token punctuation\">.</span>choosen_framerate<span class=\"token punctuation\">.</span>numerator<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t  format<span class=\"token punctuation\">.</span>choosen_framerate<span class=\"token punctuation\">.</span>denominator<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t  decodebin<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>scale <span class=\"token operator\">+</span> fix_v4l2_316<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tformat_str_pipeline <span class=\"token operator\">=</span> <span class=\"token string\">\"v4l2src name=video_source device=/dev/video%d ! video/x-raw,framerate=%d/1 %s\"</span><span class=\"token punctuation\">;</span>\n\t\tpipeline_string<span class=\"token operator\">=</span><span class=\"token function\">g_strdup_printf</span> <span class=\"token punctuation\">(</span>\n\t\t\t\tformat_str_pipeline<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\tdeviceID<span class=\"token punctuation\">,</span>attemptFramerate<span class=\"token punctuation\">,</span>fix_v4l2_316<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\n\n\t<span class=\"token keyword\">return</span> videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">setPipeline</span><span class=\"token punctuation\">(</span>pipeline_string<span class=\"token punctuation\">,</span>internalPixelFormat<span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">startPipeline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">setDesiredFrameRate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> framerate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tattemptFramerate <span class=\"token operator\">=</span> framerate<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofGstVideoUtils <span class=\"token operator\">*</span> ofGstVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">getGstVideoUtils</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>videoUtils<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">void</span> ofGstVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n \tvideoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofGstVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">isFrameNew</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">isFrameNew</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\nofPixels<span class=\"token operator\">&amp;</span> ofGstVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> ofPixels <span class=\"token operator\">&amp;</span> ofGstVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofTexture <span class=\"token operator\">*</span> ofGstVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">getTexturePtr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> ofGstVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> ofGstVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> videoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGstVideoGrabber<span class=\"token operator\">::</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tvideoUtils<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n","type":"source","static":true}}],"fetch":[]}