{"data":[{"page":{"entry":{"name":"ofMatrix3x3.cpp","filename":"ofMatrix3x3.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/math/ofMatrix3x3.cpp","path":"/openframeworks/math/ofMatrix3x3_cpp","route":"/openframeworks/math/ofMatrix3x3.cpp","dir":"../libs/openFrameworks/math","ext":"cpp","type":"source","id":257,"parent":253,"breadcrumbs":[253,164],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofMatrix3x3.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iomanip></span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\nofMatrix3x3<span class=\"token operator\">::</span><span class=\"token function\">ofMatrix3x3</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> _a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> _b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> _c<span class=\"token punctuation\">,</span>\n\t\t\t  <span class=\"token keyword\">float</span> _d<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> _e<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> _f<span class=\"token punctuation\">,</span>\n\t\t\t  <span class=\"token keyword\">float</span> _g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> _h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> _i <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\ta <span class=\"token operator\">=</span> _a<span class=\"token punctuation\">;</span>\n\tb <span class=\"token operator\">=</span> _b<span class=\"token punctuation\">;</span>\n\tc <span class=\"token operator\">=</span> _c<span class=\"token punctuation\">;</span>\n\td <span class=\"token operator\">=</span> _d<span class=\"token punctuation\">;</span>\n\te <span class=\"token operator\">=</span> _e<span class=\"token punctuation\">;</span>\n\tf <span class=\"token operator\">=</span> _f<span class=\"token punctuation\">;</span>\n\tg <span class=\"token operator\">=</span> _g<span class=\"token punctuation\">;</span>\n\th <span class=\"token operator\">=</span> _h<span class=\"token punctuation\">;</span>\n\ti <span class=\"token operator\">=</span> _i<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n\n<span class=\"token keyword\">void</span> ofMatrix3x3<span class=\"token operator\">::</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> _a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> _b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> _c<span class=\"token punctuation\">,</span>\n\t\t  <span class=\"token keyword\">float</span> _d<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> _e<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> _f<span class=\"token punctuation\">,</span>\n\t\t  <span class=\"token keyword\">float</span> _g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> _h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> _i <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\ta <span class=\"token operator\">=</span> _a<span class=\"token punctuation\">;</span>\n\tb <span class=\"token operator\">=</span> _b<span class=\"token punctuation\">;</span>\n\tc <span class=\"token operator\">=</span> _c<span class=\"token punctuation\">;</span>\n\td <span class=\"token operator\">=</span> _d<span class=\"token punctuation\">;</span>\n\te <span class=\"token operator\">=</span> _e<span class=\"token punctuation\">;</span>\n\tf <span class=\"token operator\">=</span> _f<span class=\"token punctuation\">;</span>\n\tg <span class=\"token operator\">=</span> _g<span class=\"token punctuation\">;</span>\n\th <span class=\"token operator\">=</span> _h<span class=\"token punctuation\">;</span>\n\ti <span class=\"token operator\">=</span> _i<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">float</span><span class=\"token operator\">&amp;</span> ofMatrix3x3<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> index <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span>  <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span>  <span class=\"token keyword\">return</span> b<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span>  <span class=\"token keyword\">return</span> c<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">3</span><span class=\"token operator\">:</span>  <span class=\"token keyword\">return</span> d<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">4</span><span class=\"token operator\">:</span>  <span class=\"token keyword\">return</span> e<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">5</span><span class=\"token operator\">:</span>  <span class=\"token keyword\">return</span> f<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">6</span><span class=\"token operator\">:</span>  <span class=\"token keyword\">return</span> g<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">7</span><span class=\"token operator\">:</span>  <span class=\"token keyword\">return</span> h<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">8</span><span class=\"token operator\">:</span>  <span class=\"token keyword\">return</span> i<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/*\n * Transpose:\n * This changes the matrix.\n * [ a b c ]T    [ a d g ]\n * [ d e f ]  =  [ b e h ]\n * [ g h i ]     [ c f i ]\n */</span>\n\n<span class=\"token keyword\">void</span> ofMatrix3x3<span class=\"token operator\">::</span><span class=\"token function\">transpose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tb <span class=\"token operator\">+</span><span class=\"token operator\">=</span> d<span class=\"token punctuation\">;</span> d <span class=\"token operator\">=</span> b <span class=\"token operator\">-</span> d<span class=\"token punctuation\">;</span> b <span class=\"token operator\">-</span><span class=\"token operator\">=</span> d<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//swap b and d</span>\n\tc <span class=\"token operator\">+</span><span class=\"token operator\">=</span> g<span class=\"token punctuation\">;</span> g <span class=\"token operator\">=</span> c <span class=\"token operator\">-</span> g<span class=\"token punctuation\">;</span> c <span class=\"token operator\">-</span><span class=\"token operator\">=</span> g<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//swap c and g</span>\n\tf <span class=\"token operator\">+</span><span class=\"token operator\">=</span> h<span class=\"token punctuation\">;</span> h <span class=\"token operator\">=</span> f <span class=\"token operator\">-</span> h<span class=\"token punctuation\">;</span> f <span class=\"token operator\">-</span><span class=\"token operator\">=</span> h<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//swap f and h</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/*\n* Transpose without changing the matrix.\n* Uses the \"swap\" method with additions and subtractions to swap the elements that aren't on the main diagonal.\n* @return transposed matrix.\n*/</span>\n\nofMatrix3x3 ofMatrix3x3<span class=\"token operator\">::</span><span class=\"token function\">transpose</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofMatrix3x3<span class=\"token operator\">&amp;</span> A<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tofMatrix3x3 result <span class=\"token operator\">=</span> A<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span><span class=\"token function\">transpose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">/*\n* Determinant: http://mathworld.wolfram.com/Determinant.html\n*/</span>\n\n<span class=\"token keyword\">float</span> ofMatrix3x3<span class=\"token operator\">::</span><span class=\"token function\">determinant</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">float</span> det <span class=\"token operator\">=</span> a <span class=\"token operator\">*</span> e <span class=\"token operator\">*</span> i\n\t\t\t   <span class=\"token operator\">+</span> b <span class=\"token operator\">*</span> f <span class=\"token operator\">*</span> g\n\t\t\t   <span class=\"token operator\">+</span> d <span class=\"token operator\">*</span> h <span class=\"token operator\">*</span> c\n\t\t\t   <span class=\"token operator\">-</span> g <span class=\"token operator\">*</span> e <span class=\"token operator\">*</span> c\n\t\t\t   <span class=\"token operator\">-</span> d <span class=\"token operator\">*</span> b <span class=\"token operator\">*</span> i\n\t\t\t   <span class=\"token operator\">-</span> h <span class=\"token operator\">*</span> f <span class=\"token operator\">*</span> a<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> det<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> ofMatrix3x3<span class=\"token operator\">::</span><span class=\"token function\">determinant</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofMatrix3x3<span class=\"token operator\">&amp;</span> A<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> A<span class=\"token punctuation\">.</span><span class=\"token function\">determinant</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">/*\n* Inverse of a 3x3 matrix\n  the inverse is the adjoint divided through the determinant\n  find the matrix of minors (minor = determinant of 2x2 matrix of the 2 rows/colums current element is NOT in)\n  turn them in cofactors (= change some of the signs)\n  find the adjoint by transposing the matrix of cofactors\n  divide this through the determinant to get the inverse\n*/</span>\n\n<span class=\"token keyword\">void</span> ofMatrix3x3<span class=\"token operator\">::</span><span class=\"token function\">invert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t <span class=\"token keyword\">float</span> det <span class=\"token operator\">=</span> <span class=\"token function\">determinant</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t ofMatrix3x3 B<span class=\"token punctuation\">;</span>\n\n\t <span class=\"token comment\" spellcheck=\"true\">//included in these calculations: minor, cofactor (changed signs), transpose (by the order of \"=\"), division through determinant</span>\n\t B<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> e <span class=\"token operator\">*</span> i <span class=\"token operator\">-</span> h <span class=\"token operator\">*</span> f<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> det<span class=\"token punctuation\">;</span>\n\t B<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>b <span class=\"token operator\">*</span> i <span class=\"token operator\">+</span> h <span class=\"token operator\">*</span> c<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> det<span class=\"token punctuation\">;</span>\n\t B<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> b <span class=\"token operator\">*</span> f <span class=\"token operator\">-</span> e <span class=\"token operator\">*</span> c<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> det<span class=\"token punctuation\">;</span>\n\t B<span class=\"token punctuation\">.</span>d <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>d <span class=\"token operator\">*</span> i <span class=\"token operator\">+</span> g <span class=\"token operator\">*</span> f<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> det<span class=\"token punctuation\">;</span>\n\t B<span class=\"token punctuation\">.</span>e <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> a <span class=\"token operator\">*</span> i <span class=\"token operator\">-</span> g <span class=\"token operator\">*</span> c<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> det<span class=\"token punctuation\">;</span>\n\t B<span class=\"token punctuation\">.</span>f <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>a <span class=\"token operator\">*</span> f <span class=\"token operator\">+</span> d <span class=\"token operator\">*</span> c<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> det<span class=\"token punctuation\">;</span>\n\t B<span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> d <span class=\"token operator\">*</span> h <span class=\"token operator\">-</span> g <span class=\"token operator\">*</span> e<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> det<span class=\"token punctuation\">;</span>\n\t B<span class=\"token punctuation\">.</span>h <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>a <span class=\"token operator\">*</span> h <span class=\"token operator\">+</span> g <span class=\"token operator\">*</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> det<span class=\"token punctuation\">;</span>\n\t B<span class=\"token punctuation\">.</span>i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> a <span class=\"token operator\">*</span> e <span class=\"token operator\">-</span> d <span class=\"token operator\">*</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> det<span class=\"token punctuation\">;</span>\n\n\t <span class=\"token operator\">*</span><span class=\"token keyword\">this</span> <span class=\"token operator\">=</span> B<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofMatrix3x3 ofMatrix3x3<span class=\"token operator\">::</span><span class=\"token function\">inverse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofMatrix3x3<span class=\"token operator\">&amp;</span> A<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tofMatrix3x3 result <span class=\"token operator\">=</span> A<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span><span class=\"token function\">invert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">/*\n* Add two matrices\n*/</span>\nofMatrix3x3 ofMatrix3x3<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofMatrix3x3<span class=\"token operator\">&amp;</span> B<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tofMatrix3x3 result<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> B<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> b <span class=\"token operator\">+</span> B<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> c <span class=\"token operator\">+</span> B<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>d <span class=\"token operator\">=</span> d <span class=\"token operator\">+</span> B<span class=\"token punctuation\">.</span>d<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>e <span class=\"token operator\">=</span> e <span class=\"token operator\">+</span> B<span class=\"token punctuation\">.</span>e<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>f <span class=\"token operator\">=</span> f <span class=\"token operator\">+</span> B<span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> g <span class=\"token operator\">+</span> B<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>h <span class=\"token operator\">=</span> h <span class=\"token operator\">+</span> B<span class=\"token punctuation\">.</span>h<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>i <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> B<span class=\"token punctuation\">.</span>i<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofMatrix3x3<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">+</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofMatrix3x3<span class=\"token operator\">&amp;</span> B<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\ta <span class=\"token operator\">+</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">;</span>\n\tb <span class=\"token operator\">+</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">;</span>\n\tc <span class=\"token operator\">+</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">;</span>\n\td <span class=\"token operator\">+</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>d<span class=\"token punctuation\">;</span>\n\te <span class=\"token operator\">+</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>e<span class=\"token punctuation\">;</span>\n\tf <span class=\"token operator\">+</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">;</span>\n\tg <span class=\"token operator\">+</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">;</span>\n\th <span class=\"token operator\">+</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>h<span class=\"token punctuation\">;</span>\n\ti <span class=\"token operator\">+</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>i<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/*\n* Subtract two matrices\n*/</span>\nofMatrix3x3 ofMatrix3x3<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofMatrix3x3<span class=\"token operator\">&amp;</span> B<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tofMatrix3x3 result<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> a <span class=\"token operator\">-</span> B<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> b <span class=\"token operator\">-</span> B<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> c <span class=\"token operator\">-</span> B<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>d <span class=\"token operator\">=</span> d <span class=\"token operator\">-</span> B<span class=\"token punctuation\">.</span>d<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>e <span class=\"token operator\">=</span> e <span class=\"token operator\">-</span> B<span class=\"token punctuation\">.</span>e<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>f <span class=\"token operator\">=</span> f <span class=\"token operator\">-</span> B<span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> g <span class=\"token operator\">-</span> B<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>h <span class=\"token operator\">=</span> h <span class=\"token operator\">-</span> B<span class=\"token punctuation\">.</span>h<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>i <span class=\"token operator\">=</span> i <span class=\"token operator\">-</span> B<span class=\"token punctuation\">.</span>i<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofMatrix3x3<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">-</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofMatrix3x3<span class=\"token operator\">&amp;</span> B<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\ta <span class=\"token operator\">-</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">;</span>\n\tb <span class=\"token operator\">-</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">;</span>\n\tc <span class=\"token operator\">-</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">;</span>\n\td <span class=\"token operator\">-</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>d<span class=\"token punctuation\">;</span>\n\te <span class=\"token operator\">-</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>e<span class=\"token punctuation\">;</span>\n\tf <span class=\"token operator\">-</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">;</span>\n\tg <span class=\"token operator\">-</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">;</span>\n\th <span class=\"token operator\">-</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>h<span class=\"token punctuation\">;</span>\n\ti <span class=\"token operator\">-</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>i<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/*\n* Multiply a matrix with a scalar\n*/</span>\nofMatrix3x3 ofMatrix3x3<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> scalar<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tofMatrix3x3 result<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> a <span class=\"token operator\">*</span> scalar<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> b <span class=\"token operator\">*</span> scalar<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> c <span class=\"token operator\">*</span> scalar<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>d <span class=\"token operator\">=</span> d <span class=\"token operator\">*</span> scalar<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>e <span class=\"token operator\">=</span> e <span class=\"token operator\">*</span> scalar<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>f <span class=\"token operator\">=</span> f <span class=\"token operator\">*</span> scalar<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> g <span class=\"token operator\">*</span> scalar<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>h <span class=\"token operator\">=</span> h <span class=\"token operator\">*</span> scalar<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>i <span class=\"token operator\">=</span> i <span class=\"token operator\">*</span> scalar<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">void</span> ofMatrix3x3<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">*</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofMatrix3x3<span class=\"token operator\">&amp;</span> B<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">*</span><span class=\"token keyword\">this</span> <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token operator\">*</span>B<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofMatrix3x3 ofMatrix3x3<span class=\"token operator\">::</span><span class=\"token function\">entrywiseTimes</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofMatrix3x3<span class=\"token operator\">&amp;</span> B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  ofMatrix3x3 C <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\tC<span class=\"token punctuation\">.</span>a <span class=\"token operator\">*</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">;</span>\n\tC<span class=\"token punctuation\">.</span>b <span class=\"token operator\">*</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">;</span>\n\tC<span class=\"token punctuation\">.</span>c <span class=\"token operator\">*</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">;</span>\n\tC<span class=\"token punctuation\">.</span>d <span class=\"token operator\">*</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>d<span class=\"token punctuation\">;</span>\n\tC<span class=\"token punctuation\">.</span>e <span class=\"token operator\">*</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>e<span class=\"token punctuation\">;</span>\n\tC<span class=\"token punctuation\">.</span>f <span class=\"token operator\">*</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">;</span>\n\tC<span class=\"token punctuation\">.</span>g <span class=\"token operator\">*</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">;</span>\n\tC<span class=\"token punctuation\">.</span>h <span class=\"token operator\">*</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>h<span class=\"token punctuation\">;</span>\n\tC<span class=\"token punctuation\">.</span>i <span class=\"token operator\">*</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>i<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> C<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofMatrix3x3<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">*</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> scalar<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\ta <span class=\"token operator\">*</span><span class=\"token operator\">=</span> scalar<span class=\"token punctuation\">;</span>\n\tb <span class=\"token operator\">*</span><span class=\"token operator\">=</span> scalar<span class=\"token punctuation\">;</span>\n\tc <span class=\"token operator\">*</span><span class=\"token operator\">=</span> scalar<span class=\"token punctuation\">;</span>\n\td <span class=\"token operator\">*</span><span class=\"token operator\">=</span> scalar<span class=\"token punctuation\">;</span>\n\te <span class=\"token operator\">*</span><span class=\"token operator\">=</span> scalar<span class=\"token punctuation\">;</span>\n\tf <span class=\"token operator\">*</span><span class=\"token operator\">=</span> scalar<span class=\"token punctuation\">;</span>\n\tg <span class=\"token operator\">*</span><span class=\"token operator\">=</span> scalar<span class=\"token punctuation\">;</span>\n\th <span class=\"token operator\">*</span><span class=\"token operator\">=</span> scalar<span class=\"token punctuation\">;</span>\n\ti <span class=\"token operator\">*</span><span class=\"token operator\">=</span> scalar<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n <span class=\"token comment\" spellcheck=\"true\">/*\n * Multiply a 3x3 matrix with a 3x3 matrix\n */</span>\nofMatrix3x3 ofMatrix3x3<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofMatrix3x3<span class=\"token operator\">&amp;</span> B<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tofMatrix3x3 C<span class=\"token punctuation\">;</span>\n\tC<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> a <span class=\"token operator\">*</span> B<span class=\"token punctuation\">.</span>a <span class=\"token operator\">+</span> b <span class=\"token operator\">*</span> B<span class=\"token punctuation\">.</span>d <span class=\"token operator\">+</span> c <span class=\"token operator\">*</span> B<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">;</span>\n\tC<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> a <span class=\"token operator\">*</span> B<span class=\"token punctuation\">.</span>b <span class=\"token operator\">+</span> b <span class=\"token operator\">*</span> B<span class=\"token punctuation\">.</span>e <span class=\"token operator\">+</span> c <span class=\"token operator\">*</span> B<span class=\"token punctuation\">.</span>h<span class=\"token punctuation\">;</span>\n\tC<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> a <span class=\"token operator\">*</span> B<span class=\"token punctuation\">.</span>c <span class=\"token operator\">+</span> b <span class=\"token operator\">*</span> B<span class=\"token punctuation\">.</span>f <span class=\"token operator\">+</span> c <span class=\"token operator\">*</span> B<span class=\"token punctuation\">.</span>i<span class=\"token punctuation\">;</span>\n\tC<span class=\"token punctuation\">.</span>d <span class=\"token operator\">=</span> d <span class=\"token operator\">*</span> B<span class=\"token punctuation\">.</span>a <span class=\"token operator\">+</span> e <span class=\"token operator\">*</span> B<span class=\"token punctuation\">.</span>d <span class=\"token operator\">+</span> f <span class=\"token operator\">*</span> B<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">;</span>\n\tC<span class=\"token punctuation\">.</span>e <span class=\"token operator\">=</span> d <span class=\"token operator\">*</span> B<span class=\"token punctuation\">.</span>b <span class=\"token operator\">+</span> e <span class=\"token operator\">*</span> B<span class=\"token punctuation\">.</span>e <span class=\"token operator\">+</span> f <span class=\"token operator\">*</span> B<span class=\"token punctuation\">.</span>h<span class=\"token punctuation\">;</span>\n\tC<span class=\"token punctuation\">.</span>f <span class=\"token operator\">=</span> d <span class=\"token operator\">*</span> B<span class=\"token punctuation\">.</span>c <span class=\"token operator\">+</span> e <span class=\"token operator\">*</span> B<span class=\"token punctuation\">.</span>f <span class=\"token operator\">+</span> f <span class=\"token operator\">*</span> B<span class=\"token punctuation\">.</span>i<span class=\"token punctuation\">;</span>\n\tC<span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> g <span class=\"token operator\">*</span> B<span class=\"token punctuation\">.</span>a <span class=\"token operator\">+</span> h <span class=\"token operator\">*</span> B<span class=\"token punctuation\">.</span>d <span class=\"token operator\">+</span> i <span class=\"token operator\">*</span> B<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">;</span>\n\tC<span class=\"token punctuation\">.</span>h <span class=\"token operator\">=</span> g <span class=\"token operator\">*</span> B<span class=\"token punctuation\">.</span>b <span class=\"token operator\">+</span> h <span class=\"token operator\">*</span> B<span class=\"token punctuation\">.</span>e <span class=\"token operator\">+</span> i <span class=\"token operator\">*</span> B<span class=\"token punctuation\">.</span>h<span class=\"token punctuation\">;</span>\n\tC<span class=\"token punctuation\">.</span>i <span class=\"token operator\">=</span> g <span class=\"token operator\">*</span> B<span class=\"token punctuation\">.</span>c <span class=\"token operator\">+</span> h <span class=\"token operator\">*</span> B<span class=\"token punctuation\">.</span>f <span class=\"token operator\">+</span> i <span class=\"token operator\">*</span> B<span class=\"token punctuation\">.</span>i<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> C<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/*\n* Divide a matrix through a scalar\n*/</span>\nofMatrix3x3 ofMatrix3x3<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> scalar<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tofMatrix3x3 result<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> a <span class=\"token operator\">/</span> scalar<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> b <span class=\"token operator\">/</span> scalar<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>c <span class=\"token operator\">=</span> c <span class=\"token operator\">/</span> scalar<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>d <span class=\"token operator\">=</span> d <span class=\"token operator\">/</span> scalar<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>e <span class=\"token operator\">=</span> e <span class=\"token operator\">/</span> scalar<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>f <span class=\"token operator\">=</span> f <span class=\"token operator\">/</span> scalar<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> g <span class=\"token operator\">/</span> scalar<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>h <span class=\"token operator\">=</span> h <span class=\"token operator\">/</span> scalar<span class=\"token punctuation\">;</span>\n\tresult<span class=\"token punctuation\">.</span>i <span class=\"token operator\">=</span> i <span class=\"token operator\">/</span> scalar<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">void</span> ofMatrix3x3<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">/</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofMatrix3x3<span class=\"token operator\">&amp;</span> B<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\ta <span class=\"token operator\">/</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">;</span>\n\tb <span class=\"token operator\">/</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">;</span>\n\tc <span class=\"token operator\">/</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">;</span>\n\td <span class=\"token operator\">/</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>d<span class=\"token punctuation\">;</span>\n\te <span class=\"token operator\">/</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>e<span class=\"token punctuation\">;</span>\n\tf <span class=\"token operator\">/</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">;</span>\n\tg <span class=\"token operator\">/</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">;</span>\n\th <span class=\"token operator\">/</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>h<span class=\"token punctuation\">;</span>\n\ti <span class=\"token operator\">/</span><span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>i<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofMatrix3x3<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">/</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> scalar<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\ta <span class=\"token operator\">/</span><span class=\"token operator\">=</span> scalar<span class=\"token punctuation\">;</span>\n\tb <span class=\"token operator\">/</span><span class=\"token operator\">=</span> scalar<span class=\"token punctuation\">;</span>\n\tc <span class=\"token operator\">/</span><span class=\"token operator\">=</span> scalar<span class=\"token punctuation\">;</span>\n\td <span class=\"token operator\">/</span><span class=\"token operator\">=</span> scalar<span class=\"token punctuation\">;</span>\n\te <span class=\"token operator\">/</span><span class=\"token operator\">=</span> scalar<span class=\"token punctuation\">;</span>\n\tf <span class=\"token operator\">/</span><span class=\"token operator\">=</span> scalar<span class=\"token punctuation\">;</span>\n\tg <span class=\"token operator\">/</span><span class=\"token operator\">=</span> scalar<span class=\"token punctuation\">;</span>\n\th <span class=\"token operator\">/</span><span class=\"token operator\">=</span> scalar<span class=\"token punctuation\">;</span>\n\ti <span class=\"token operator\">/</span><span class=\"token operator\">=</span> scalar<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\nostream<span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>ostream<span class=\"token operator\">&amp;</span> os<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofMatrix3x3<span class=\"token operator\">&amp;</span> M<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> w <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\tos\t<span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">setw</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">&lt;&lt;</span> M<span class=\"token punctuation\">.</span>a <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">setw</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">&lt;&lt;</span> M<span class=\"token punctuation\">.</span>b <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">setw</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">&lt;&lt;</span> M<span class=\"token punctuation\">.</span>c <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n\n\tos\t<span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">setw</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">&lt;&lt;</span> M<span class=\"token punctuation\">.</span>d <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">setw</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">&lt;&lt;</span> M<span class=\"token punctuation\">.</span>e <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">setw</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">&lt;&lt;</span> M<span class=\"token punctuation\">.</span>f <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n\n\tos\t<span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">setw</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">&lt;&lt;</span> M<span class=\"token punctuation\">.</span>g <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">setw</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">&lt;&lt;</span> M<span class=\"token punctuation\">.</span>h <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">setw</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">&lt;&lt;</span> M<span class=\"token punctuation\">.</span>i<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> os<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nistream<span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>istream<span class=\"token operator\">&amp;</span> is<span class=\"token punctuation\">,</span> ofMatrix3x3<span class=\"token operator\">&amp;</span> M<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tis <span class=\"token operator\">>></span> M<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">;</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">ignore</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tis <span class=\"token operator\">>></span> M<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">;</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">ignore</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tis <span class=\"token operator\">>></span> M<span class=\"token punctuation\">.</span>c<span class=\"token punctuation\">;</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">ignore</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tis <span class=\"token operator\">>></span> M<span class=\"token punctuation\">.</span>d<span class=\"token punctuation\">;</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">ignore</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tis <span class=\"token operator\">>></span> M<span class=\"token punctuation\">.</span>e<span class=\"token punctuation\">;</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">ignore</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tis <span class=\"token operator\">>></span> M<span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">;</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">ignore</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tis <span class=\"token operator\">>></span> M<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">;</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">ignore</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tis <span class=\"token operator\">>></span> M<span class=\"token punctuation\">.</span>h<span class=\"token punctuation\">;</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">ignore</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tis <span class=\"token operator\">>></span> M<span class=\"token punctuation\">.</span>i<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> is<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n","type":"source","static":true}}],"fetch":[]}