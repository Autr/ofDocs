{"data":[{"page":{"entry":{"name":"ofSoundPlayer.h","filename":"ofSoundPlayer.h","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/sound/ofSoundPlayer.h","path":"/openframeworks/sound/ofSoundPlayer_h","route":"/openframeworks/sound/ofSoundPlayer.h","dir":"../libs/openFrameworks/sound","ext":"h","type":"source","id":281,"parent":269,"breadcrumbs":[269,164],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofSoundBaseTypes.h\"</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Stops all active sound players on FMOD-based systems (windows, osx).</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSoundStopAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Cleans up FMOD (windows, osx).</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSoundShutdown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Sets global volume for FMOD-based sound players (windows, osx).</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param vol range is 0 to 1.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSoundSetVolume</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> vol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Call in your app's update() to update FMOD-based sound players.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSoundUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Gets a frequency spectrum sample, taking all current sound players into account.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Each band will be represented as a float between 0 and 1.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\warning This isn't implemented on mobile &amp; embedded platforms.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param nBands number of spectrum bands to return, max 512.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\return pointer to an FFT sample, sample size is equal to the nBands parameter.</span>\n<span class=\"token keyword\">float</span> <span class=\"token operator\">*</span> <span class=\"token function\">ofSoundGetSpectrum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> nBands<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_SOUND_PLAYER_QUICKTIME</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofQuicktimeSoundPlayer.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_SOUND_PLAYER_TYPE ofQuicktimeSoundPlayer</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_SOUND_PLAYER_FMOD</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofFmodSoundPlayer.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_SOUND_PLAYER_TYPE ofFmodSoundPlayer</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_SOUND_PLAYER_OPENAL</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofOpenALSoundPlayer.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_SOUND_PLAYER_TYPE ofOpenALSoundPlayer</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OF_IOS</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxiOSSoundPlayer.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_SOUND_PLAYER_TYPE ofxiOSSoundPlayer</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxAndroidSoundPlayer.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_SOUND_PLAYER_TYPE ofxAndroidSoundPlayer</span>\n<span class=\"token keyword\">inline</span> <span class=\"token keyword\">void</span> <span class=\"token function\">ofSoundShutdown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_SOUND_PLAYER_EMSCRIPTEN</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxEmscriptenSoundPlayer.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_SOUND_PLAYER_TYPE ofxEmscriptenSoundPlayer</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_LINUX_ARM</span>\n<span class=\"token keyword\">inline</span> <span class=\"token keyword\">void</span> <span class=\"token function\">ofSoundShutdown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\class ofSoundPlayer</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Plays sound files.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// ofSoundPlayer handles simple playback of sound files, with controls for</span>\n<span class=\"token comment\" spellcheck=\"true\">/// volume, pan, speed, seeking and multiplay.  This is a common cross-platform</span>\n<span class=\"token comment\" spellcheck=\"true\">/// sound player interface which is inherited by each of the platform-specific</span>\n<span class=\"token comment\" spellcheck=\"true\">/// sound player implementations.</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofSoundPlayer</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofBaseSoundPlayer <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n    <span class=\"token function\">ofSoundPlayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setPlayer</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofBaseSoundPlayer<span class=\"token operator\">></span> newPlayer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofBaseSoundPlayer<span class=\"token operator\">></span> <span class=\"token function\">getPlayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Tells the sound player which file to play.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// Codec support varies by platform but wav, aif, and mp3 are safe.</span>\n    <span class=\"token comment\" spellcheck=\"true\">///</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param fileName Path to the sound file, relative to your app's data folder.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param stream set \"true\" to enable streaming from disk (for large files).</span>\n    <span class=\"token keyword\">bool</span> <span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path<span class=\"token operator\">&amp;</span> fileName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> stream <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use load\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">bool</span> <span class=\"token function\">loadSound</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string fileName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> stream <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Stops and unloads the current sound.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">unload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use load\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token function\">unloadSound</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Starts playback.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Stops playback.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Sets playback volume.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param vol range is 0 to 1.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setVolume</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> vol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Sets stereo pan.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param pan range is -1 to 1 (-1 is full left, 1 is full right).</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setPan</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> pan<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Sets playback speed.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param speed set > 1 for faster playback, &lt; 1 for slower playback.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setSpeed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Enables pause / resume.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param paused \"true\" to pause, \"false\" to resume.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setPaused</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> paused<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Sets whether to loop once the end of the file is reached.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param loop \"true\" to loop, default is false.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setLoop</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> loop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Enables playing multiple simultaneous copies of the sound.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param multiplay \"true\" to enable, default is false.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setMultiPlay</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> multiplay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Sets position of the playhead within the file (aka \"seeking\").</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param percent range is 0 (beginning of file) to 1 (end of file).</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> percent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Sets position of the playhead within the file (aka \"seeking\").</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\param ms number of milliseconds from the start of the file.</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setPositionMS</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> ms<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Gets position of the playhead.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\return playhead position in milliseconds.</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">getPositionMS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Gets position of the playhead.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\return playhead position as a float between 0 and 1.</span>\n    <span class=\"token keyword\">float</span> <span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Gets current playback state.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\return true if the player is currently playing a file.</span>\n    <span class=\"token keyword\">bool</span> <span class=\"token function\">isPlaying</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use isPlaying\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">bool</span> <span class=\"token function\">getIsPlaying</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Gets playback speed.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\return playback speed (see ofSoundPlayer::setSpeed()).</span>\n    <span class=\"token keyword\">float</span> <span class=\"token function\">getSpeed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Gets stereo pan.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\return stereo pan in the range -1 to 1.</span>\n    <span class=\"token keyword\">float</span> <span class=\"token function\">getPan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Gets current volume.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\return current volume in the range 0 to 1.</span>\n    <span class=\"token keyword\">float</span> <span class=\"token function\">getVolume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// \\brief Queries the player to see if its file was loaded successfully.</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// \\return whether or not the player is ready to begin playback.</span>\n    <span class=\"token keyword\">bool</span> <span class=\"token function\">isLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n    std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofBaseSoundPlayer<span class=\"token operator\">></span> player<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n","type":"source","static":true}}],"fetch":[]}