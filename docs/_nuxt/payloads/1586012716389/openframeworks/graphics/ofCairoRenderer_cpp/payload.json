{"data":[{"page":{"entry":{"name":"ofCairoRenderer.cpp","filename":"ofCairoRenderer.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/graphics/ofCairoRenderer.cpp","path":"/openframeworks/graphics/ofCairoRenderer_cpp","route":"/openframeworks/graphics/ofCairoRenderer.cpp","dir":"../libs/openFrameworks/graphics","ext":"cpp","type":"source","id":233,"parent":228,"breadcrumbs":[228,164],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofCairoRenderer.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofMesh.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofImage.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofTrueTypeFont.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGraphics.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofVideoBaseTypes.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"cairo-features.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"cairo-pdf.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"cairo-svg.h\"</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> string ofCairoRenderer<span class=\"token operator\">::</span>TYPE<span class=\"token operator\">=</span><span class=\"token string\">\"cairo\"</span><span class=\"token punctuation\">;</span>\n\n_cairo_status ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">stream_function</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>closure<span class=\"token punctuation\">,</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>data<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ofCairoRenderer<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>closure<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>streamBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>data<span class=\"token punctuation\">,</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> CAIRO_STATUS_SUCCESS<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">ofCairoRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">:</span><span class=\"token function\">graphics3d</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">projection</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">modelView</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\ttype <span class=\"token operator\">=</span> PDF<span class=\"token punctuation\">;</span>\n\tsurface <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\tcr <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\tbBackgroundAuto <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\tpage <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tmultiPage <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tb3D <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tcurrentMatrixMode<span class=\"token operator\">=</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofCairoRenderer<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofCairoRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>string _filename<span class=\"token punctuation\">,</span> Type _type<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> multiPage_<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> b3D_<span class=\"token punctuation\">,</span> ofRectangle outputsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> outputsize<span class=\"token punctuation\">.</span>width <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> outputsize<span class=\"token punctuation\">.</span>height <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\toutputsize<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetViewportWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetViewportHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tfilename <span class=\"token operator\">=</span> _filename<span class=\"token punctuation\">;</span>\n\ttype <span class=\"token operator\">=</span> _type<span class=\"token punctuation\">;</span>\n\tstreamBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>type <span class=\"token operator\">==</span> FROM_FILE_EXTENSION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tstring ext <span class=\"token operator\">=</span> ofFilePath<span class=\"token operator\">::</span><span class=\"token function\">getFileExt</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofToLower</span><span class=\"token punctuation\">(</span>ext<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token string\">\"svg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\ttype <span class=\"token operator\">=</span> SVG<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofToLower</span><span class=\"token punctuation\">(</span>ext<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token string\">\"pdf\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\ttype <span class=\"token operator\">=</span> PDF<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span> <span class=\"token comment\" spellcheck=\"true\">// default to image</span>\n\t\t\ttype <span class=\"token operator\">=</span> IMAGE<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>filename <span class=\"token operator\">!=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">case</span> PDF<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> SVG<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">case</span> IMAGE<span class=\"token operator\">:</span>\n\t\t\t\tofFilePath<span class=\"token operator\">::</span><span class=\"token function\">createEnclosingDirectory</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> FROM_FILE_EXTENSION<span class=\"token operator\">:</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> PDF<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>filename<span class=\"token operator\">==</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tsurface <span class=\"token operator\">=</span> <span class=\"token function\">cairo_pdf_surface_create_for_stream</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>ofCairoRenderer<span class=\"token operator\">::</span>stream_function<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>outputsize<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> outputsize<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\tsurface <span class=\"token operator\">=</span> <span class=\"token function\">cairo_pdf_surface_create</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofToDataPath</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>outputsize<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> outputsize<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> SVG<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>filename<span class=\"token operator\">==</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tsurface <span class=\"token operator\">=</span> <span class=\"token function\">cairo_svg_surface_create_for_stream</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>ofCairoRenderer<span class=\"token operator\">::</span>stream_function<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>outputsize<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> outputsize<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\tsurface <span class=\"token operator\">=</span> <span class=\"token function\">cairo_svg_surface_create</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofToDataPath</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>outputsize<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> outputsize<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> IMAGE<span class=\"token operator\">:</span>\n\t\timageBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>outputsize<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> outputsize<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> OF_PIXELS_BGRA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\timageBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tsurface <span class=\"token operator\">=</span> <span class=\"token function\">cairo_image_surface_create_for_data</span><span class=\"token punctuation\">(</span>imageBuffer<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>CAIRO_FORMAT_ARGB32<span class=\"token punctuation\">,</span>outputsize<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> outputsize<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span>outputsize<span class=\"token punctuation\">.</span>width<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> FROM_FILE_EXTENSION<span class=\"token operator\">:</span>\n\t\t<span class=\"token function\">ofLogFatalError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofCairoRenderer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setup(): couldn't determine type from extension for filename: \\\"\"</span> <span class=\"token operator\">&lt;&lt;</span> _filename <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"!\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofCairoRenderer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setup(): encountered unknown type for filename \\\"\"</span> <span class=\"token operator\">&lt;&lt;</span> _filename <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tcr <span class=\"token operator\">=</span> <span class=\"token function\">cairo_create</span><span class=\"token punctuation\">(</span>surface<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_set_antialias</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>CAIRO_ANTIALIAS_SUBPIXEL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tviewportRect <span class=\"token operator\">=</span> outputsize<span class=\"token punctuation\">;</span>\n\toriginalViewport <span class=\"token operator\">=</span> outputsize<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span>viewportRect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tpage <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tb3D <span class=\"token operator\">=</span> b3D_<span class=\"token punctuation\">;</span>\n\tmultiPage <span class=\"token operator\">=</span> multiPage_<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">setupMemoryOnly</span><span class=\"token punctuation\">(</span>Type _type<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> multiPage_<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> b3D_<span class=\"token punctuation\">,</span> ofRectangle outputsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>_type<span class=\"token punctuation\">,</span>multiPage_<span class=\"token punctuation\">,</span>b3D_<span class=\"token punctuation\">,</span>outputsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">flush</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>surface<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">cairo_surface_flush</span><span class=\"token punctuation\">(</span>surface<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>surface<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">cairo_surface_flush</span><span class=\"token punctuation\">(</span>surface<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>type<span class=\"token operator\">==</span>IMAGE <span class=\"token operator\">&amp;&amp;</span> filename<span class=\"token operator\">!=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofSaveImage</span><span class=\"token punctuation\">(</span>imageBuffer<span class=\"token punctuation\">,</span>filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token function\">cairo_surface_finish</span><span class=\"token punctuation\">(</span>surface<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">cairo_surface_destroy</span><span class=\"token punctuation\">(</span>surface<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tsurface <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">cairo_destroy</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tcr <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">startRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setStyle</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>page<span class=\"token operator\">==</span><span class=\"token number\">0</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>multiPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tpage<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tpage<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">getBackgroundAuto</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">cairo_show_page</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">cairo_copy_page</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">finishRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">cairo_surface_flush</span><span class=\"token punctuation\">(</span>surface<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">setStyle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofStyle <span class=\"token operator\">&amp;</span> style<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//color</span>\n\t<span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>style<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>style<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>style<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>style<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//bg color</span>\n\t<span class=\"token function\">setBackgroundColor</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span>bgColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//circle resolution - don't worry it only recalculates the display list if the res has changed</span>\n\t<span class=\"token function\">setCircleResolution</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span>circleResolution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">setSphereResolution</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span>sphereResolution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">setCurveResolution</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span>curveResolution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//line width - finally!</span>\n\t<span class=\"token function\">setLineWidth</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span>lineWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//rect mode: corner/center</span>\n\t<span class=\"token function\">setRectMode</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span>rectMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//poly mode: winding type</span>\n\t<span class=\"token function\">setPolyMode</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span>polyMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//fill</span>\n\t<span class=\"token function\">setFillMode</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span>bFill<span class=\"token operator\">?</span>OF_FILLED<span class=\"token operator\">:</span>OF_OUTLINE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//smoothing</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//setSmoothingEnabled(style.smoothing);</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//blending</span>\n\t<span class=\"token function\">setBlendMode</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span>blendingMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//bitmap draw mode</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//setDrawBitmapMode(style.drawBitmapMode);</span>\n\tcurrentStyle <span class=\"token operator\">=</span> style<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">setCurveResolution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> resolution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcurrentStyle<span class=\"token punctuation\">.</span>curveResolution <span class=\"token operator\">=</span> resolution<span class=\"token punctuation\">;</span>\n\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setCurveResolution</span><span class=\"token punctuation\">(</span>resolution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPath <span class=\"token operator\">&amp;</span> shape<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">cairo_new_path</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> vector<span class=\"token operator\">&lt;</span>ofPath<span class=\"token operator\">::</span>Command<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> commands <span class=\"token operator\">=</span> shape<span class=\"token punctuation\">.</span><span class=\"token function\">getCommands</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>commands<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>commands<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tcairo_fill_rule_t cairo_poly_mode<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">.</span><span class=\"token function\">getWindingMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>OF_POLY_WINDING_ODD<span class=\"token punctuation\">)</span> cairo_poly_mode<span class=\"token operator\">=</span>CAIRO_FILL_RULE_EVEN_ODD<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">else</span> cairo_poly_mode<span class=\"token operator\">=</span>CAIRO_FILL_RULE_WINDING<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">cairo_set_fill_rule</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>cairo_poly_mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\tofColor prevColor<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">.</span><span class=\"token function\">getUseShapeColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tprevColor <span class=\"token operator\">=</span> currentStyle<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">.</span><span class=\"token function\">isFilled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">.</span><span class=\"token function\">getUseShapeColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tofColor c <span class=\"token operator\">=</span> shape<span class=\"token punctuation\">.</span><span class=\"token function\">getFillColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tc<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> shape<span class=\"token punctuation\">.</span><span class=\"token function\">getFillColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">cairo_set_source_rgba</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>c<span class=\"token punctuation\">.</span>r<span class=\"token operator\">/</span><span class=\"token number\">255.0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>c<span class=\"token punctuation\">.</span>g<span class=\"token operator\">/</span><span class=\"token number\">255.0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>c<span class=\"token punctuation\">.</span>b<span class=\"token operator\">/</span><span class=\"token number\">255.0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>c<span class=\"token punctuation\">.</span>a<span class=\"token operator\">/</span><span class=\"token number\">255.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">.</span><span class=\"token function\">hasOutline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">cairo_fill_preserve</span><span class=\"token punctuation\">(</span> cr <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">cairo_fill</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">.</span><span class=\"token function\">hasOutline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">float</span> lineWidth <span class=\"token operator\">=</span> currentStyle<span class=\"token punctuation\">.</span>lineWidth<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">.</span><span class=\"token function\">getUseShapeColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tofColor c <span class=\"token operator\">=</span> shape<span class=\"token punctuation\">.</span><span class=\"token function\">getStrokeColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tc<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> shape<span class=\"token punctuation\">.</span><span class=\"token function\">getStrokeColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">cairo_set_source_rgba</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>c<span class=\"token punctuation\">.</span>r<span class=\"token operator\">/</span><span class=\"token number\">255.0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>c<span class=\"token punctuation\">.</span>g<span class=\"token operator\">/</span><span class=\"token number\">255.0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>c<span class=\"token punctuation\">.</span>b<span class=\"token operator\">/</span><span class=\"token number\">255.0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>c<span class=\"token punctuation\">.</span>a<span class=\"token operator\">/</span><span class=\"token number\">255.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token function\">cairo_set_line_width</span><span class=\"token punctuation\">(</span> cr<span class=\"token punctuation\">,</span> shape<span class=\"token punctuation\">.</span><span class=\"token function\">getStrokeWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">cairo_stroke</span><span class=\"token punctuation\">(</span> cr <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">cairo_set_line_width</span><span class=\"token punctuation\">(</span> cr<span class=\"token punctuation\">,</span> lineWidth <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">.</span><span class=\"token function\">getUseShapeColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofCairoRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>prevColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPolyline <span class=\"token operator\">&amp;</span> poly<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">cairo_new_path</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>poly<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">cairo_line_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>poly<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>poly<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>poly<span class=\"token punctuation\">.</span><span class=\"token function\">isClosed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">cairo_close_path</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_stroke</span><span class=\"token punctuation\">(</span> cr <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> vector<span class=\"token operator\">&lt;</span>glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> vertexData<span class=\"token punctuation\">,</span> ofPrimitiveMode drawMode<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\tofCairoRenderer <span class=\"token operator\">*</span> mut_this <span class=\"token operator\">=</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofCairoRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmut_this<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tcairo_matrix_t matrix<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_matrix_init_identity</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>matrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_new_path</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//if(indices.getNumIndices()){</span>\n\n\t\t<span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">auto</span> v <span class=\"token operator\">=</span> <span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tglm<span class=\"token operator\">::</span>vec3 v2<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">cairo_move_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>drawMode<span class=\"token operator\">==</span>OF_PRIMITIVE_TRIANGLE_STRIP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tv <span class=\"token operator\">=</span> <span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">cairo_line_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tv <span class=\"token operator\">=</span> <span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">cairo_line_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\ti<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tv <span class=\"token operator\">=</span> <span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>drawMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">case</span><span class=\"token punctuation\">(</span>OF_PRIMITIVE_TRIANGLES<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">3</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token function\">cairo_line_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tv2 <span class=\"token operator\">=</span> <span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">[</span>i<span class=\"token number\">-2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">cairo_line_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>v2<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>v2<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">cairo_move_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">3</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token function\">cairo_move_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token function\">cairo_line_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span><span class=\"token punctuation\">(</span>OF_PRIMITIVE_TRIANGLE_STRIP<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\t\t\t\t\tv2 <span class=\"token operator\">=</span> <span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">[</span>i<span class=\"token number\">-2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">cairo_line_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">cairo_line_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>v2<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>v2<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">cairo_move_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span><span class=\"token punctuation\">(</span>OF_PRIMITIVE_TRIANGLE_FAN<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\t\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">/*triangles.addIndex((GLuint)0);\n\t\t\t\t\t\ttriangles.addIndex((GLuint)1);\n\t\t\t\t\t\ttriangles.addIndex((GLuint)2);\n\t\t\t\t\t\tfor(int i = 2; i &lt; primitive.getNumVertices()-1;i++){\n\t\t\t\t\t\t\ttriangles.addIndex((GLuint)0);\n\t\t\t\t\t\t\ttriangles.addIndex((GLuint)i);\n\t\t\t\t\t\t\ttriangles.addIndex((GLuint)i+1);\n\t\t\t\t\t\t}*/</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">cairo_move_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>vertexData<span class=\"token punctuation\">[</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>vertexData<span class=\"token punctuation\">[</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_stroke</span><span class=\"token punctuation\">(</span> cr <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmut_this<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">popMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\nglm<span class=\"token operator\">::</span>vec3 ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span>vec3 vec<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>b3D<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> vec<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> vec4 <span class=\"token operator\">=</span> projection <span class=\"token operator\">*</span> modelView <span class=\"token operator\">*</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec4</span><span class=\"token punctuation\">(</span>vec<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tvec <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>vec4<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> vec4<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//vec.set(vec.x/vec.z*viewportRect.width*0.5-ofGetWidth()*0.5-viewportRect.x,vec.y/vec.z*viewportRect.height*0.5-ofGetHeight()*0.5-viewportRect.y);</span>\n\tvec <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>vec<span class=\"token punctuation\">.</span>x<span class=\"token operator\">/</span>vec<span class=\"token punctuation\">.</span>z<span class=\"token operator\">*</span>viewportRect<span class=\"token punctuation\">.</span>width<span class=\"token operator\">*</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> vec<span class=\"token punctuation\">.</span>y<span class=\"token operator\">/</span>vec<span class=\"token punctuation\">.</span>z<span class=\"token operator\">*</span>viewportRect<span class=\"token punctuation\">.</span>height<span class=\"token operator\">*</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> vec<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofMesh <span class=\"token operator\">&amp;</span> primitive<span class=\"token punctuation\">,</span> ofPolyRenderMode mode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> useColors<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> useTextures<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> useNormals<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>useColors <span class=\"token operator\">||</span> useTextures <span class=\"token operator\">||</span> useNormals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofCairoRenderer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"draw(): cairo mesh rendering doesn't support colors, textures, or normals. drawing wireframe ...\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>primitive<span class=\"token punctuation\">.</span><span class=\"token function\">getNumVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>primitive<span class=\"token punctuation\">.</span><span class=\"token function\">getNumIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tofMesh indexedMesh <span class=\"token operator\">=</span> primitive<span class=\"token punctuation\">;</span>\n\t\tindexedMesh<span class=\"token punctuation\">.</span><span class=\"token function\">setupIndicesAuto</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>indexedMesh<span class=\"token punctuation\">,</span> mode<span class=\"token punctuation\">,</span> useColors<span class=\"token punctuation\">,</span> useTextures<span class=\"token punctuation\">,</span> useNormals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">cairo_new_path</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tcairo_matrix_t matrix<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_matrix_init_identity</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>matrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_new_path</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tstd<span class=\"token operator\">::</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> v <span class=\"token operator\">=</span> <span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>primitive<span class=\"token punctuation\">.</span><span class=\"token function\">getVertex</span><span class=\"token punctuation\">(</span>primitive<span class=\"token punctuation\">.</span><span class=\"token function\">getIndex</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tglm<span class=\"token operator\">::</span>vec3 v2<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_move_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>primitive<span class=\"token punctuation\">.</span><span class=\"token function\">getMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>OF_PRIMITIVE_TRIANGLE_STRIP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tv <span class=\"token operator\">=</span> <span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>primitive<span class=\"token punctuation\">.</span><span class=\"token function\">getVertex</span><span class=\"token punctuation\">(</span>primitive<span class=\"token punctuation\">.</span><span class=\"token function\">getIndex</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">cairo_line_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tv <span class=\"token operator\">=</span> <span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>primitive<span class=\"token punctuation\">.</span><span class=\"token function\">getVertex</span><span class=\"token punctuation\">(</span>primitive<span class=\"token punctuation\">.</span><span class=\"token function\">getIndex</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">cairo_line_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\ti<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>primitive<span class=\"token punctuation\">.</span><span class=\"token function\">getNumIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tv <span class=\"token operator\">=</span> <span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>primitive<span class=\"token punctuation\">.</span><span class=\"token function\">getVertex</span><span class=\"token punctuation\">(</span>primitive<span class=\"token punctuation\">.</span><span class=\"token function\">getIndex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>primitive<span class=\"token punctuation\">.</span><span class=\"token function\">getMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span><span class=\"token punctuation\">(</span>OF_PRIMITIVE_TRIANGLES<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">3</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">cairo_line_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tv2 <span class=\"token operator\">=</span> <span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>primitive<span class=\"token punctuation\">.</span><span class=\"token function\">getVertex</span><span class=\"token punctuation\">(</span>primitive<span class=\"token punctuation\">.</span><span class=\"token function\">getIndex</span><span class=\"token punctuation\">(</span>i<span class=\"token number\">-2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">cairo_line_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>v2<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>v2<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">cairo_move_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">3</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">cairo_move_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">cairo_line_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span><span class=\"token punctuation\">(</span>OF_PRIMITIVE_TRIANGLE_STRIP<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\t\t\t\tv2 <span class=\"token operator\">=</span> <span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>primitive<span class=\"token punctuation\">.</span><span class=\"token function\">getVertex</span><span class=\"token punctuation\">(</span>primitive<span class=\"token punctuation\">.</span><span class=\"token function\">getIndex</span><span class=\"token punctuation\">(</span>i<span class=\"token number\">-2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">cairo_line_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">cairo_line_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>v2<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>v2<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">cairo_move_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span><span class=\"token punctuation\">(</span>OF_PRIMITIVE_TRIANGLE_FAN<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">/*triangles.addIndex((GLuint)0);\n\t\t\t\t\ttriangles.addIndex((GLuint)1);\n\t\t\t\t\ttriangles.addIndex((GLuint)2);\n\t\t\t\t\tfor(int i = 2; i &lt; primitive.getNumVertices()-1;i++){\n\t\t\t\t\t\ttriangles.addIndex((GLuint)0);\n\t\t\t\t\t\ttriangles.addIndex((GLuint)i);\n\t\t\t\t\t\ttriangles.addIndex((GLuint)i+1);\n\t\t\t\t\t}*/</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span><span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">cairo_move_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>primitive<span class=\"token punctuation\">.</span><span class=\"token function\">getVertex</span><span class=\"token punctuation\">(</span>primitive<span class=\"token punctuation\">.</span><span class=\"token function\">getIndex</span><span class=\"token punctuation\">(</span>primitive<span class=\"token punctuation\">.</span><span class=\"token function\">getNumIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>primitive<span class=\"token punctuation\">.</span><span class=\"token function\">getVertex</span><span class=\"token punctuation\">(</span>primitive<span class=\"token punctuation\">.</span><span class=\"token function\">getIndex</span><span class=\"token punctuation\">(</span>primitive<span class=\"token punctuation\">.</span><span class=\"token function\">getNumIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>lineWidth<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t<span class=\"token function\">cairo_stroke</span><span class=\"token punctuation\">(</span> cr <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> of3dPrimitive<span class=\"token operator\">&amp;</span> model<span class=\"token punctuation\">,</span> ofPolyRenderMode renderType  <span class=\"token punctuation\">)</span>  <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofCairoRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofCairoRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">multMatrix</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span><span class=\"token function\">getGlobalTransformMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> ofMesh<span class=\"token operator\">&amp;</span> mesh <span class=\"token operator\">=</span> model<span class=\"token punctuation\">.</span><span class=\"token function\">getMesh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span> mesh<span class=\"token punctuation\">,</span> renderType <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofCairoRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">popMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofNode<span class=\"token operator\">&amp;</span> node<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofCairoRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofCairoRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">multMatrix</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">getGlobalTransformMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tnode<span class=\"token punctuation\">.</span><span class=\"token function\">customDraw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofCairoRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">popMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPath<span class=\"token operator\">::</span>Command <span class=\"token operator\">&amp;</span> command<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>surface <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>cr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\tofCairoRenderer <span class=\"token operator\">*</span> mut_this <span class=\"token operator\">=</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofCairoRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> ofPath<span class=\"token operator\">::</span>Command<span class=\"token operator\">::</span>moveTo<span class=\"token operator\">:</span>\n\t\tcurvePoints<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">cairo_move_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">case</span> ofPath<span class=\"token operator\">::</span>Command<span class=\"token operator\">::</span>lineTo<span class=\"token operator\">:</span>\n\t\tcurvePoints<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">cairo_line_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token keyword\">case</span> ofPath<span class=\"token operator\">::</span>Command<span class=\"token operator\">::</span>curveTo<span class=\"token operator\">:</span>\n\t\tcurvePoints<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//code adapted from ofxVectorGraphics to convert catmull rom to bezier</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>curvePoints<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">auto</span> p1<span class=\"token operator\">=</span>curvePoints<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">auto</span> p2<span class=\"token operator\">=</span>curvePoints<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">auto</span> p3<span class=\"token operator\">=</span>curvePoints<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">auto</span> p4<span class=\"token operator\">=</span>curvePoints<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//SUPER WEIRD MAGIC CONSTANT = 1/6 (this works 100% can someone explain it?)</span>\n\t\t\t<span class=\"token keyword\">auto</span> cp1 <span class=\"token operator\">=</span> p2 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span> p3 <span class=\"token operator\">-</span> p1 <span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0f</span><span class=\"token operator\">/</span><span class=\"token number\">6</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">auto</span> cp2 <span class=\"token operator\">=</span> p3 <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span> p2 <span class=\"token operator\">-</span> p4 <span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0f</span><span class=\"token operator\">/</span><span class=\"token number\">6</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token function\">cairo_curve_to</span><span class=\"token punctuation\">(</span> cr<span class=\"token punctuation\">,</span> cp1<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> cp1<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> cp2<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> cp2<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> p3<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> p3<span class=\"token punctuation\">.</span>y <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tcurvePoints<span class=\"token punctuation\">.</span><span class=\"token function\">pop_front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token keyword\">case</span> ofPath<span class=\"token operator\">::</span>Command<span class=\"token operator\">::</span>bezierTo<span class=\"token operator\">:</span>\n\t\tcurvePoints<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">cairo_curve_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>cp1<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>cp1<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>cp2<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>cp2<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">case</span> ofPath<span class=\"token operator\">::</span>Command<span class=\"token operator\">::</span>quadBezierTo<span class=\"token operator\">:</span>\n\t\tcurvePoints<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">cairo_curve_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>cp1<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>cp1<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>cp2<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>cp2<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token keyword\">case</span> ofPath<span class=\"token operator\">::</span>Command<span class=\"token operator\">::</span>arc<span class=\"token operator\">:</span>\n\t\tcurvePoints<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// elliptic arcs not directly supported in cairo, lets scale y</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">.</span>radiusX<span class=\"token operator\">!=</span>command<span class=\"token punctuation\">.</span>radiusY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">float</span> ellipse_ratio <span class=\"token operator\">=</span> command<span class=\"token punctuation\">.</span>radiusY<span class=\"token operator\">/</span>command<span class=\"token punctuation\">.</span>radiusX<span class=\"token punctuation\">;</span>\n\t\t\tmut_this<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmut_this<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>command<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>y<span class=\"token operator\">*</span>ellipse_ratio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmut_this<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>ellipse_ratio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmut_this<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>y<span class=\"token operator\">/</span>ellipse_ratio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">cairo_arc</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>radiusX<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>angleBegin<span class=\"token operator\">*</span>DEG_TO_RAD<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>angleEnd<span class=\"token operator\">*</span>DEG_TO_RAD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//cairo_set_matrix(cr,&amp;stored_matrix);</span>\n\t\t\tmut_this<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">popMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">cairo_arc</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>radiusX<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>angleBegin<span class=\"token operator\">*</span>DEG_TO_RAD<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>angleEnd<span class=\"token operator\">*</span>DEG_TO_RAD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">case</span> ofPath<span class=\"token operator\">::</span>Command<span class=\"token operator\">::</span>arcNegative<span class=\"token operator\">:</span>\n\t\tcurvePoints<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// elliptic arcs not directly supported in cairo, lets scale y</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">.</span>radiusX<span class=\"token operator\">!=</span>command<span class=\"token punctuation\">.</span>radiusY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">float</span> ellipse_ratio <span class=\"token operator\">=</span> command<span class=\"token punctuation\">.</span>radiusY<span class=\"token operator\">/</span>command<span class=\"token punctuation\">.</span>radiusX<span class=\"token punctuation\">;</span>\n\t\t\tmut_this<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmut_this<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>command<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>y<span class=\"token operator\">*</span>ellipse_ratio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmut_this<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>ellipse_ratio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmut_this<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>y<span class=\"token operator\">/</span>ellipse_ratio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">cairo_arc_negative</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>radiusX<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>angleBegin<span class=\"token operator\">*</span>DEG_TO_RAD<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>angleEnd<span class=\"token operator\">*</span>DEG_TO_RAD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//cairo_set_matrix(cr,&amp;stored_matrix);</span>\n\t\t\tmut_this<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">popMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">cairo_arc_negative</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>radiusX<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>angleBegin<span class=\"token operator\">*</span>DEG_TO_RAD<span class=\"token punctuation\">,</span>command<span class=\"token punctuation\">.</span>angleEnd<span class=\"token operator\">*</span>DEG_TO_RAD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">case</span> ofPath<span class=\"token operator\">::</span>Command<span class=\"token operator\">::</span>close<span class=\"token operator\">:</span>\n\t\t<span class=\"token function\">cairo_close_path</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPixels <span class=\"token operator\">&amp;</span> raw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sh<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">bool</span> shouldCrop <span class=\"token operator\">=</span> sx <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> sy <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> sw <span class=\"token operator\">!=</span> w <span class=\"token operator\">||</span> sh <span class=\"token operator\">!=</span> h<span class=\"token punctuation\">;</span>\n\tofPixels cropped<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>shouldCrop<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tcropped<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>sw<span class=\"token punctuation\">,</span> sh<span class=\"token punctuation\">,</span> raw<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\traw<span class=\"token punctuation\">.</span><span class=\"token function\">cropTo</span><span class=\"token punctuation\">(</span>cropped<span class=\"token punctuation\">,</span> sx<span class=\"token punctuation\">,</span> sy<span class=\"token punctuation\">,</span> sw<span class=\"token punctuation\">,</span> sh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">const</span> ofPixels <span class=\"token operator\">&amp;</span> pix <span class=\"token operator\">=</span> shouldCrop <span class=\"token operator\">?</span> cropped <span class=\"token operator\">:</span> raw<span class=\"token punctuation\">;</span>\n\n\tofCairoRenderer <span class=\"token operator\">*</span> mut_this <span class=\"token operator\">=</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofCairoRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmut_this<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmut_this<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmut_this<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>w<span class=\"token operator\">/</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>h<span class=\"token operator\">/</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcairo_surface_t <span class=\"token operator\">*</span>image<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> stride<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> picsize <span class=\"token operator\">=</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>imgPix <span class=\"token operator\">=</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tvector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">></span> swapPixels<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getImageType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> OF_IMAGE_COLOR<span class=\"token operator\">:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_LITTLE_ENDIAN</span>\n\t\tswapPixels<span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span>picsize <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> p<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">&lt;</span>picsize<span class=\"token punctuation\">;</span> p<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tswapPixels<span class=\"token punctuation\">[</span>p<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> imgPix<span class=\"token punctuation\">[</span>p<span class=\"token operator\">*</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tswapPixels<span class=\"token punctuation\">[</span>p<span class=\"token operator\">*</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> imgPix<span class=\"token punctuation\">[</span>p<span class=\"token operator\">*</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tswapPixels<span class=\"token punctuation\">[</span>p<span class=\"token operator\">*</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> imgPix<span class=\"token punctuation\">[</span>p<span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\tswapPixels<span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span>picsize <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> p<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">&lt;</span>picsize<span class=\"token punctuation\">;</span> p<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tswapPixels<span class=\"token punctuation\">[</span>p<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> imgPix<span class=\"token punctuation\">[</span>p<span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tswapPixels<span class=\"token punctuation\">[</span>p<span class=\"token operator\">*</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> imgPix<span class=\"token punctuation\">[</span>p<span class=\"token operator\">*</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tswapPixels<span class=\"token punctuation\">[</span>p<span class=\"token operator\">*</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> imgPix<span class=\"token punctuation\">[</span>p<span class=\"token operator\">*</span><span class=\"token number\">3</span> <span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\tstride <span class=\"token operator\">=</span> <span class=\"token function\">cairo_format_stride_for_width</span> <span class=\"token punctuation\">(</span>CAIRO_FORMAT_RGB24<span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\timage <span class=\"token operator\">=</span> <span class=\"token function\">cairo_image_surface_create_for_data</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>swapPixels<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> CAIRO_FORMAT_RGB24<span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> stride<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_IMAGE_COLOR_ALPHA<span class=\"token operator\">:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_LITTLE_ENDIAN</span>\n\t\tswapPixels<span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span>picsize <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> p<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">&lt;</span>picsize<span class=\"token punctuation\">;</span> p<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tswapPixels<span class=\"token punctuation\">[</span>p<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> imgPix<span class=\"token punctuation\">[</span>p<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tswapPixels<span class=\"token punctuation\">[</span>p<span class=\"token operator\">*</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> imgPix<span class=\"token punctuation\">[</span>p<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tswapPixels<span class=\"token punctuation\">[</span>p<span class=\"token operator\">*</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> imgPix<span class=\"token punctuation\">[</span>p<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tswapPixels<span class=\"token punctuation\">[</span>p<span class=\"token operator\">*</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> imgPix<span class=\"token punctuation\">[</span>p<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tstride <span class=\"token operator\">=</span> <span class=\"token function\">cairo_format_stride_for_width</span> <span class=\"token punctuation\">(</span>CAIRO_FORMAT_ARGB32<span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\timage <span class=\"token operator\">=</span> <span class=\"token function\">cairo_image_surface_create_for_data</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>swapPixels<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> CAIRO_FORMAT_ARGB32<span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> stride<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\tstride <span class=\"token operator\">=</span> <span class=\"token function\">cairo_format_stride_for_width</span> <span class=\"token punctuation\">(</span>CAIRO_FORMAT_ARGB32<span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\timage <span class=\"token operator\">=</span> <span class=\"token function\">cairo_image_surface_create_for_data</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> CAIRO_FORMAT_ARGB32<span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> stride<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_IMAGE_GRAYSCALE<span class=\"token operator\">:</span>\n\t\tswapPixels<span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span>picsize <span class=\"token operator\">*</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> p<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">&lt;</span>picsize<span class=\"token punctuation\">;</span> p<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tswapPixels<span class=\"token punctuation\">[</span>p<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> imgPix<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tswapPixels<span class=\"token punctuation\">[</span>p<span class=\"token operator\">*</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> imgPix<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tswapPixels<span class=\"token punctuation\">[</span>p<span class=\"token operator\">*</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> imgPix<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tstride <span class=\"token operator\">=</span> <span class=\"token function\">cairo_format_stride_for_width</span> <span class=\"token punctuation\">(</span>CAIRO_FORMAT_RGB24<span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\timage <span class=\"token operator\">=</span> <span class=\"token function\">cairo_image_surface_create_for_data</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>swapPixels<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> CAIRO_FORMAT_RGB24<span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pix<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> stride<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_IMAGE_UNDEFINED<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofCairoRenderer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"draw(): trying to draw undefined image type \"</span>\n\t\t\t<span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>pix<span class=\"token punctuation\">.</span><span class=\"token function\">getImageType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmut_this<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">popMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">cairo_set_source_surface</span> <span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span> image<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_paint</span> <span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_surface_flush</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_surface_destroy</span> <span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmut_this<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">popMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofImage <span class=\"token operator\">&amp;</span> img<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sh<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>sx<span class=\"token punctuation\">,</span>sy<span class=\"token punctuation\">,</span>sw<span class=\"token punctuation\">,</span>sh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFloatImage <span class=\"token operator\">&amp;</span> image<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sh<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tofPixels tmp <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>sx<span class=\"token punctuation\">,</span>sy<span class=\"token punctuation\">,</span>sw<span class=\"token punctuation\">,</span>sh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofShortImage <span class=\"token operator\">&amp;</span> image<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sh<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tofPixels tmp <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>sx<span class=\"token punctuation\">,</span>sy<span class=\"token punctuation\">,</span>sw<span class=\"token punctuation\">,</span>sh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofBaseVideoDraws <span class=\"token operator\">&amp;</span> video<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofPath <span class=\"token operator\">&amp;</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> path<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">setRectMode</span><span class=\"token punctuation\">(</span>ofRectMode mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcurrentStyle<span class=\"token punctuation\">.</span>rectMode <span class=\"token operator\">=</span> mode<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\nofRectMode ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">getRectMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> currentStyle<span class=\"token punctuation\">.</span>rectMode<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">setFillMode</span><span class=\"token punctuation\">(</span>ofFillFlag fill<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcurrentStyle<span class=\"token punctuation\">.</span>bFill <span class=\"token operator\">=</span> fill<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>bFill<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setFilled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setStrokeWidth</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setFilled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setStrokeWidth</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>lineWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\nofFillFlag ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">getFillMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>bFill<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> OF_FILLED<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> OF_OUTLINE<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">setLineWidth</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> lineWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcurrentStyle<span class=\"token punctuation\">.</span>lineWidth <span class=\"token operator\">=</span> lineWidth<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>currentStyle<span class=\"token punctuation\">.</span>bFill<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setStrokeWidth</span><span class=\"token punctuation\">(</span>lineWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">cairo_set_line_width</span><span class=\"token punctuation\">(</span> cr<span class=\"token punctuation\">,</span> lineWidth <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">setDepthTest</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> depthTest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// cairo does not do any depth testing</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">setBlendMode</span><span class=\"token punctuation\">(</span>ofBlendMode blendMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>blendMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> OF_BLENDMODE_ALPHA<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">cairo_set_operator</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>CAIRO_OPERATOR_OVER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_BLENDMODE_ADD<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">cairo_set_operator</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>CAIRO_OPERATOR_ADD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> (CAIRO_VERSION_MAJOR==1 &amp;&amp; CAIRO_VERSION_MINOR>=10) || CAIRO_VERSION_MAJOR>1</span>\n\t\t<span class=\"token keyword\">case</span> OF_BLENDMODE_MULTIPLY<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">cairo_set_operator</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>CAIRO_OPERATOR_MULTIPLY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_BLENDMODE_SCREEN<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">cairo_set_operator</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>CAIRO_OPERATOR_SCREEN<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_BLENDMODE_SUBTRACT<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">cairo_set_operator</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>CAIRO_OPERATOR_DIFFERENCE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">setLineSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> smooth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">// color options</span>\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">cairo_set_source_rgba</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>r<span class=\"token operator\">/</span><span class=\"token number\">255.0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>g<span class=\"token operator\">/</span><span class=\"token number\">255.0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>b<span class=\"token operator\">/</span><span class=\"token number\">255.0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>a<span class=\"token operator\">/</span><span class=\"token number\">255.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcurrentStyle<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> _a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">,</span>_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> gray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>gray<span class=\"token punctuation\">,</span>gray<span class=\"token punctuation\">,</span>gray<span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">setHexColor</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> hexColor <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> r <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>hexColor <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> g <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>hexColor <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>hexColor <span class=\"token operator\">>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">// transformations</span>\n<span class=\"token comment\" spellcheck=\"true\">//our openGL wrappers</span>\nglm<span class=\"token operator\">::</span>mat4 ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">getCurrentMatrix</span><span class=\"token punctuation\">(</span>ofMatrixMode matrixMode_<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getCurrentMatrix not yet implemented for Cairo Renderer.\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> glm<span class=\"token operator\">::</span><span class=\"token function\">mat4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>surface <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>cr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\tcairo_matrix_t matrix<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_get_matrix</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>matrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>b3D<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\tmodelViewStack<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">popMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>surface <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>cr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_set_matrix</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">top</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>b3D<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\tmodelView <span class=\"token operator\">=</span> modelViewStack<span class=\"token punctuation\">.</span><span class=\"token function\">top</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmodelViewStack<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>surface <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>cr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\tcairo_matrix_t matrix<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_get_matrix</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>matrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_matrix_translate</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>matrix<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_set_matrix</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>matrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>b3D<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> xAmnt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> yAmnt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> zAmnt <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>surface <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>cr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\tcairo_matrix_t matrix<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_get_matrix</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>matrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_matrix_scale</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>matrix<span class=\"token punctuation\">,</span>xAmnt<span class=\"token punctuation\">,</span>yAmnt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_set_matrix</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>matrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>b3D<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>xAmnt<span class=\"token punctuation\">,</span>yAmnt<span class=\"token punctuation\">,</span>zAmnt<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>ofMatrixMode mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcurrentMatrixMode <span class=\"token operator\">=</span> mode<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">loadIdentityMatrix</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>surface <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>cr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentMatrixMode<span class=\"token operator\">==</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tcairo_matrix_t matrix<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">cairo_matrix_init_identity</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>matrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">cairo_set_matrix</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>matrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>b3D<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentMatrixMode<span class=\"token operator\">==</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">mat4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentMatrixMode<span class=\"token operator\">==</span>OF_MATRIX_PROJECTION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tprojection <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">mat4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">loadMatrix</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>surface <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>cr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>b3D<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentMatrixMode<span class=\"token operator\">==</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tmodelView <span class=\"token operator\">=</span> m<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentMatrixMode<span class=\"token operator\">==</span>OF_MATRIX_PROJECTION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tprojection <span class=\"token operator\">=</span> m<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">loadMatrix</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">loadMatrix</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">make_mat4</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">multMatrix</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>surface <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>cr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>b3D<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentMatrixMode<span class=\"token operator\">==</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tmodelView <span class=\"token operator\">=</span> m <span class=\"token operator\">*</span> modelView<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentMatrixMode<span class=\"token operator\">==</span>OF_MATRIX_PROJECTION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tprojection <span class=\"token operator\">=</span> m <span class=\"token operator\">*</span> projection<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">multMatrix</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">multMatrix</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">make_mat4</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">rotateRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radians<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecY<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecZ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>surface <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>cr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// we can only do Z-axis rotations via cairo_matrix_rotate.</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vecZ <span class=\"token operator\">==</span> <span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    \tcairo_matrix_t matrix<span class=\"token punctuation\">;</span>\n    \t<span class=\"token function\">cairo_get_matrix</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>matrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">cairo_matrix_rotate</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>matrix<span class=\"token punctuation\">,</span>radians<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">cairo_set_matrix</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>matrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>b3D<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> radians<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>vecX<span class=\"token punctuation\">,</span>vecY<span class=\"token punctuation\">,</span>vecZ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">rotateXRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radians<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">rotateRad</span><span class=\"token punctuation\">(</span>radians<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">rotateYRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radians<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">rotateRad</span><span class=\"token punctuation\">(</span>radians<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">rotateZRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radians<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">rotateRad</span><span class=\"token punctuation\">(</span>radians<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">rotateRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radians<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">rotateZRad</span><span class=\"token punctuation\">(</span>radians<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">setupScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>surface <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>cr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">setupScreenPerspective</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\" spellcheck=\"true\">// assume defaults</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">// screen coordinate things / default gl values</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">pushView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tviewportStack<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>viewportRect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">popView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tviewportRect <span class=\"token operator\">=</span> viewportStack<span class=\"token punctuation\">.</span><span class=\"token function\">top</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tviewportStack<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">// setup matrices and viewport (upto you to push and pop view before and after)</span>\n<span class=\"token comment\" spellcheck=\"true\">// if width or height are 0, assume windows dimensions (ofGetWidth(), ofGetHeight())</span>\n<span class=\"token comment\" spellcheck=\"true\">// if nearDist or farDist are 0 assume defaults (calculated based on width / height)</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span>ofRectangle v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> invertY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>width <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> width <span class=\"token operator\">=</span> originalViewport<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>height <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> height <span class=\"token operator\">=</span> originalViewport<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofCairoRenderer::viewport\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Setting viewport to:\"</span> <span class=\"token operator\">&lt;&lt;</span> width <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">&lt;&lt;</span> height<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>invertY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\ty <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>y<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\n\tviewportRect<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">cairo_reset_clip</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_new_path</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_move_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>viewportRect<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>viewportRect<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_line_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>viewportRect<span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span>viewportRect<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>viewportRect<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_line_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>viewportRect<span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span>viewportRect<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>viewportRect<span class=\"token punctuation\">.</span>y<span class=\"token operator\">+</span>viewportRect<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_line_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>viewportRect<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>viewportRect<span class=\"token punctuation\">.</span>y<span class=\"token operator\">+</span>viewportRect<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_clip</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">setupScreenPerspective</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> fov<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> nearDist<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> farDist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>b3D<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>width <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> width <span class=\"token operator\">=</span> originalViewport<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>height <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> height <span class=\"token operator\">=</span> originalViewport<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\tofOrientation orientation <span class=\"token operator\">=</span> <span class=\"token function\">ofGetOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">float</span> viewW <span class=\"token operator\">=</span> originalViewport<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> viewH <span class=\"token operator\">=</span> originalViewport<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">float</span> eyeX <span class=\"token operator\">=</span> viewW <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> eyeY <span class=\"token operator\">=</span> viewH <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> halfFov <span class=\"token operator\">=</span> PI <span class=\"token operator\">*</span> fov <span class=\"token operator\">/</span> <span class=\"token number\">360</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> theTan <span class=\"token operator\">=</span> <span class=\"token function\">tanf</span><span class=\"token punctuation\">(</span>halfFov<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> dist <span class=\"token operator\">=</span> eyeY <span class=\"token operator\">/</span> theTan<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> aspect <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span> viewW <span class=\"token operator\">/</span> viewH<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>nearDist <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> nearDist <span class=\"token operator\">=</span> dist <span class=\"token operator\">/</span> <span class=\"token number\">10.0f</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>farDist <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> farDist <span class=\"token operator\">=</span> dist <span class=\"token operator\">*</span> <span class=\"token number\">10.0f</span><span class=\"token punctuation\">;</span>\n\n\tprojection <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">perspective</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofDegToRad</span><span class=\"token punctuation\">(</span>fov<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>aspect<span class=\"token punctuation\">,</span>nearDist<span class=\"token punctuation\">,</span>farDist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>eyeX<span class=\"token punctuation\">,</span>eyeY<span class=\"token punctuation\">,</span>dist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>eyeX<span class=\"token punctuation\">,</span>eyeY<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>orientation<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> OF_ORIENTATION_180<span class=\"token operator\">:</span>\n\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>glm<span class=\"token operator\">::</span>pi<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>height<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_ORIENTATION_90_RIGHT<span class=\"token operator\">:</span>\n\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>glm<span class=\"token operator\">::</span>half_pi<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>width<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>height<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_ORIENTATION_90_LEFT<span class=\"token operator\">:</span>\n\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span>glm<span class=\"token operator\">::</span>half_pi<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>height<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_ORIENTATION_DEFAULT<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>width<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>height<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">setupScreenOrtho</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> nearDist<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> farDist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>b3D<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>width <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> width <span class=\"token operator\">=</span> viewportRect<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>height <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> height <span class=\"token operator\">=</span> viewportRect<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\tofOrientation orientation <span class=\"token operator\">=</span> <span class=\"token function\">ofGetOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">float</span> viewW <span class=\"token operator\">=</span> viewportRect<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> viewH <span class=\"token operator\">=</span> viewportRect<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">ofSetCoordHandedness</span><span class=\"token punctuation\">(</span>OF_RIGHT_HANDED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofSetCoordHandedness</span><span class=\"token punctuation\">(</span>OF_LEFT_HANDED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tprojection <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">ortho</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> viewW<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> viewH<span class=\"token punctuation\">,</span> nearDist<span class=\"token punctuation\">,</span> farDist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">mat4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>orientation<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> OF_ORIENTATION_180<span class=\"token operator\">:</span>\n\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>glm<span class=\"token operator\">::</span>pi<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>height<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_ORIENTATION_90_RIGHT<span class=\"token operator\">:</span>\n\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>glm<span class=\"token operator\">::</span>half_pi<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>width<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>height<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_ORIENTATION_90_LEFT<span class=\"token operator\">:</span>\n\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span>glm<span class=\"token operator\">::</span>half_pi<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>height<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_ORIENTATION_DEFAULT<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>width<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>height<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofRectangle ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">getCurrentViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> viewportRect<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofRectangle ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">getNativeViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> viewportRect<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">getViewportWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> viewportRect<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">getViewportHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> viewportRect<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">setOrientation</span><span class=\"token punctuation\">(</span>ofOrientation orientation<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> vFlip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofCairoRenderer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"orientation not supported yet\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">loadViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofCairoRenderer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"view matrix not supported yet\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">multViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofCairoRenderer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"view matrix not supported yet\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nglm<span class=\"token operator\">::</span>mat4 ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">getCurrentViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofCairoRenderer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"view matrix not supported yet\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> glm<span class=\"token operator\">::</span><span class=\"token function\">mat4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nglm<span class=\"token operator\">::</span>mat4 ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">getCurrentNormalMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofCairoRenderer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"normal matrix not supported yet\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> glm<span class=\"token operator\">::</span><span class=\"token function\">mat4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nglm<span class=\"token operator\">::</span>mat4 ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">getCurrentOrientationMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofCairoRenderer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"orientation matrix not supported yet\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> glm<span class=\"token operator\">::</span><span class=\"token function\">mat4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">setCircleResolution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">setPolyMode</span><span class=\"token punctuation\">(</span>ofPolyWindingMode mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcurrentStyle<span class=\"token punctuation\">.</span>polyMode <span class=\"token operator\">=</span> mode<span class=\"token punctuation\">;</span>\n\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setPolyWindingMode</span><span class=\"token punctuation\">(</span>mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">setCoordHandedness</span><span class=\"token punctuation\">(</span>ofHandednessType handedness<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofHandednessType ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">getCoordHandedness</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> OF_LEFT_HANDED<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">setupGraphicDefaults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setStyle</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setMode</span><span class=\"token punctuation\">(</span>ofPath<span class=\"token operator\">::</span>COMMANDS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setUseShapeColor</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>surface <span class=\"token operator\">||</span> <span class=\"token operator\">!</span> cr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_set_source_rgba</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>currentStyle<span class=\"token punctuation\">.</span>bgColor<span class=\"token punctuation\">.</span>r<span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> currentStyle<span class=\"token punctuation\">.</span>bgColor<span class=\"token punctuation\">.</span>g<span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> currentStyle<span class=\"token punctuation\">.</span>bgColor<span class=\"token punctuation\">.</span>b<span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> currentStyle<span class=\"token punctuation\">.</span>bgColor<span class=\"token punctuation\">.</span>a<span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_paint</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>surface <span class=\"token operator\">||</span> <span class=\"token operator\">!</span> cr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_set_source_rgba</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>r<span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> g<span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> b<span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> a<span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_paint</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> brightness<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">clear</span><span class=\"token punctuation\">(</span>brightness<span class=\"token punctuation\">,</span> brightness<span class=\"token punctuation\">,</span> brightness<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">clearAlpha</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">setBitmapTextMode</span><span class=\"token punctuation\">(</span>ofDrawBitmapMode mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcurrentStyle<span class=\"token punctuation\">.</span>drawBitmapMode <span class=\"token operator\">=</span> mode<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofStyle ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">getStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> currentStyle<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">pushStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tstyleHistory<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//if we are over the max number of styles we have set, then delete the oldest styles.</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> styleHistory<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> OF_MAX_STYLE_HISTORY <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tstyleHistory<span class=\"token punctuation\">.</span><span class=\"token function\">pop_front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//should we warn here?</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGraphics\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ofPushStyle(): maximum number of style pushes &lt;&lt; \"</span> <span class=\"token operator\">&lt;&lt;</span> OF_MAX_STYLE_HISTORY <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" reached, did you forget to pop somewhere?\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">popStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> styleHistory<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setStyle</span><span class=\"token punctuation\">(</span>styleHistory<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tstyleHistory<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">setBackgroundAuto</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bAuto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbBackgroundAuto <span class=\"token operator\">=</span> bAuto<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">getBackgroundAuto</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> bBackgroundAuto<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">setBackgroundColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcurrentStyle<span class=\"token punctuation\">.</span>bgColor <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofColor ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">getBackgroundColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> currentStyle<span class=\"token punctuation\">.</span>bgColor<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">background</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setBackgroundColor</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">clear</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">background</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> brightness<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">background</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofColor</span><span class=\"token punctuation\">(</span>brightness<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">background</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> hexColor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> _a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">background</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>hexColor <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>hexColor <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>hexColor <span class=\"token operator\">>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">,</span> _a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">background</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">background</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofColor</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawLine</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">cairo_new_path</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_move_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>x1<span class=\"token punctuation\">,</span>y1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_line_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>x2<span class=\"token punctuation\">,</span>y2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">cairo_stroke</span><span class=\"token punctuation\">(</span> cr <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawRectangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token function\">cairo_new_path</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>rectMode <span class=\"token operator\">==</span> OF_RECTMODE_CORNER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">cairo_move_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">cairo_line_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>x<span class=\"token operator\">+</span>w<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">cairo_line_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>x<span class=\"token operator\">+</span>w<span class=\"token punctuation\">,</span> y<span class=\"token operator\">+</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">cairo_line_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span> y<span class=\"token operator\">+</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">cairo_move_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>x<span class=\"token operator\">-</span>w<span class=\"token operator\">/</span><span class=\"token number\">2.0f</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">-</span>h<span class=\"token operator\">/</span><span class=\"token number\">2.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">cairo_line_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>x<span class=\"token operator\">+</span>w<span class=\"token operator\">/</span><span class=\"token number\">2.0f</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">-</span>h<span class=\"token operator\">/</span><span class=\"token number\">2.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">cairo_line_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>x<span class=\"token operator\">+</span>w<span class=\"token operator\">/</span><span class=\"token number\">2.0f</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">+</span>h<span class=\"token operator\">/</span><span class=\"token number\">2.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">cairo_line_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>x<span class=\"token operator\">-</span>w<span class=\"token operator\">/</span><span class=\"token number\">2.0f</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">+</span>h<span class=\"token operator\">/</span><span class=\"token number\">2.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">cairo_close_path</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>bFill<span class=\"token operator\">==</span>OF_FILLED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">cairo_fill</span><span class=\"token punctuation\">(</span> cr <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">cairo_stroke</span><span class=\"token punctuation\">(</span> cr <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawTriangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z3<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">cairo_new_path</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">cairo_move_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span> x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_line_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span> x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_line_to</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span> x3<span class=\"token punctuation\">,</span> y3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token function\">cairo_close_path</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>bFill<span class=\"token operator\">==</span>OF_FILLED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">cairo_fill</span><span class=\"token punctuation\">(</span> cr <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">cairo_stroke</span><span class=\"token punctuation\">(</span> cr <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawCircle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">cairo_new_path</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_arc</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>radius<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>PI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">cairo_close_path</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>bFill<span class=\"token operator\">==</span>OF_FILLED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">cairo_fill</span><span class=\"token punctuation\">(</span> cr <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">cairo_stroke</span><span class=\"token punctuation\">(</span> cr <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">enableAntiAliasing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">cairo_set_antialias</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>CAIRO_ANTIALIAS_SUBPIXEL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">disableAntiAliasing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">cairo_set_antialias</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>CAIRO_ANTIALIAS_NONE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawEllipse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tofCairoRenderer <span class=\"token operator\">*</span> mutThis <span class=\"token operator\">=</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofCairoRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_new_path</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> ellipse_ratio <span class=\"token operator\">=</span> height<span class=\"token operator\">/</span>width<span class=\"token punctuation\">;</span>\n\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>y<span class=\"token operator\">*</span>ellipse_ratio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>ellipse_ratio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">/</span>ellipse_ratio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_arc</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>width<span class=\"token operator\">*</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>PI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">popMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">cairo_close_path</span><span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>bFill<span class=\"token operator\">==</span>OF_FILLED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">cairo_fill</span><span class=\"token punctuation\">(</span> cr <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">cairo_stroke</span><span class=\"token punctuation\">(</span> cr <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawString</span><span class=\"token punctuation\">(</span>string text<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">cairo_select_font_face</span> <span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Mono\"</span><span class=\"token punctuation\">,</span> CAIRO_FONT_SLANT_NORMAL<span class=\"token punctuation\">,</span> CAIRO_FONT_WEIGHT_NORMAL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cairo_set_font_size</span> <span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tvector<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> lines <span class=\"token operator\">=</span> <span class=\"token function\">ofSplitString</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>lines<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">cairo_move_to</span> <span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token operator\">+</span>i<span class=\"token operator\">*</span><span class=\"token number\">14.3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">cairo_show_text</span> <span class=\"token punctuation\">(</span>cr<span class=\"token punctuation\">,</span> lines<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofTrueTypeFont <span class=\"token operator\">&amp;</span> font<span class=\"token punctuation\">,</span> string text<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tfont<span class=\"token punctuation\">.</span><span class=\"token function\">drawStringAsShapes</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\ncairo_t <span class=\"token operator\">*</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">getCairoContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> cr<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\ncairo_surface_t <span class=\"token operator\">*</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">getCairoSurface</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> surface<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofPixels <span class=\"token operator\">&amp;</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">getImageSurfacePixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>type<span class=\"token operator\">!=</span>IMAGE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofCairoRenderer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getImageSurfacePixels(): can only get pixels from image surface\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> imageBuffer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofBuffer <span class=\"token operator\">&amp;</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">getContentBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>filename<span class=\"token operator\">!=</span><span class=\"token string\">\"\"</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>type<span class=\"token operator\">!=</span>SVG <span class=\"token operator\">&amp;&amp;</span> type<span class=\"token operator\">!=</span>PDF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofCairoRenderer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getContentBuffer(): can only get buffer from memory allocated renderer for svg or pdf\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> streamBuffer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> of3dGraphics <span class=\"token operator\">&amp;</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> graphics3d<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nof3dGraphics <span class=\"token operator\">&amp;</span> ofCairoRenderer<span class=\"token operator\">::</span><span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> graphics3d<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n","type":"source","static":true}}],"fetch":[]}