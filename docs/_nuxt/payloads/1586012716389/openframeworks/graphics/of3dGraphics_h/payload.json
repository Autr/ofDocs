{"data":[{"page":{"entry":{"name":"of3dGraphics.h","filename":"of3dGraphics.h","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/graphics/of3dGraphics.h","path":"/openframeworks/graphics/of3dGraphics_h","route":"/openframeworks/graphics/of3dGraphics.h","dir":"../libs/openFrameworks/graphics","ext":"h","type":"source","id":230,"parent":228,"breadcrumbs":[228,164],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token comment\" spellcheck=\"true\">//  of3dGraphics.h</span>\n<span class=\"token comment\" spellcheck=\"true\">//  openFrameworksLib</span>\n<span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token comment\" spellcheck=\"true\">//  Created by Nick Hardeman on 9/14/12.</span>\n<span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token comment\" spellcheck=\"true\">//</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"of3dPrimitives.h\"</span></span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\section Planes</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the resolution to use when drawing planes.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param columns The number of columns to use when drawing planes with the</span>\n<span class=\"token comment\" spellcheck=\"true\">///        current renderer.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param rows The number of rows to use when drawing planes with the current</span>\n<span class=\"token comment\" spellcheck=\"true\">///        renderer.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofDrawPlane()</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetPlaneResolution</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> columns<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> rows <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get the current renderer's plane resolution as a vector.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\returns A vector whose x property describes column resolution and</span>\n<span class=\"token comment\" spellcheck=\"true\">///          y property describes row resolution.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofDrawPlane()</span>\nglm<span class=\"token operator\">::</span>vec2 <span class=\"token function\">ofGetPlaneResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a plane with the current renderer.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Planes are drawn with their x, y, and z coordinates specifying the center of</span>\n<span class=\"token comment\" spellcheck=\"true\">/// the plane. This function draws the plane with a default origin z value of 0.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate of the plane's centroid.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate of the plane's centroid.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param width The width of the plane.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height of the plane.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawPlane</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a plane with the current renderer.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Planes are drawn with their x, y, and z coordinates specifying the center of</span>\n<span class=\"token comment\" spellcheck=\"true\">/// the plane.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate of the plane's centroid.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate of the plane's centroid.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param z The z coordinate of the plane's centroid.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param width The width of the plane.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height of the plane.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawPlane</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a plane with the current renderer.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Planes are drawn with their position coordinates specifying the center of</span>\n<span class=\"token comment\" spellcheck=\"true\">/// the plane.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param position A 3D point specifying the plane's centroid.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param width The width of the plane.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height of the plane.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawPlane</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a plane with the current renderer at the origin.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param width The width of the plane.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height of the plane.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawPlane</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\section Spheres</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the sphere resolution for the current renderer.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// The sphere resolution describes how many facets (cross-sections)</span>\n<span class=\"token comment\" spellcheck=\"true\">/// will be used when drawing spheres. A higher resolution will produce a</span>\n<span class=\"token comment\" spellcheck=\"true\">/// smoother looking sphere at the cost of using more vertices to do so.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param res The resolution to use when drawing spheres.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofDrawSphere()</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetSphereResolution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get the sphere resolution used by the current renderer.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\returns The sphere resolution used by the current renderer.</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofGetSphereResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a sphere with the current renderer.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Spheres are drawn with x, y, and z coordinates representing the center</span>\n<span class=\"token comment\" spellcheck=\"true\">/// of the sphere. This function draws the sphere with a default origin z value</span>\n<span class=\"token comment\" spellcheck=\"true\">/// of 0.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate of the sphere's centroid.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate of the sphere's centroid.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius of the sphere.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a sphere with the current renderer.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Spheres are drawn with their x, y, and z coordinates representing the center</span>\n<span class=\"token comment\" spellcheck=\"true\">/// of the sphere.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate of the sphere's centroid.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate of the sphere's centroid.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param z The z coordinate of the sphere's centroid.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius of the sphere.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a sphere with the current renderer.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Spheres are drawn with their position representing the center of the sphere.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param position A 3D point specifying the sphere's centroid.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius of the sphere.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a sphere with the current renderer at the coordinate system's</span>\n<span class=\"token comment\" spellcheck=\"true\">/// origin.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Spheres are drawn with their position representing the center of the sphere.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// This function draws a sphere at the coordinate system origin of 0, 0, 0.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius of the sphere.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawSphere instead.\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">ofSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawSphere instead.\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">ofSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawSphere instead.\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">ofSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawSphere instead.\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">ofSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the icosphere resolution for the current renderer.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// A higher resolution will produce a smoother looking sphere at the cost of</span>\n<span class=\"token comment\" spellcheck=\"true\">/// using more vertices to do so.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param res The resolution to use when drawing icospheres.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\sa ofDrawIcoSphere()</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetIcoSphereResolution</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> res <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get the icosphere resolution used by the current renderer.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\returns The icosphere resolution used by the current renderer.</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofGetIcoSphereResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw an icosphere with the current renderer.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Icospheres are drawn with their x, y, and z coordinates representing the</span>\n<span class=\"token comment\" spellcheck=\"true\">/// center of the sphere.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate of the sphere's centroid.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate of the sphere's centroid.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param z The z coordinate of the sphere's centroid.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius of the sphere.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawIcoSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw an icosphere with the current renderer.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Icospheres are drawn with their x, y, and z coordinates representing the</span>\n<span class=\"token comment\" spellcheck=\"true\">/// center of the sphere. This function draws the sphere with a default origin z</span>\n<span class=\"token comment\" spellcheck=\"true\">/// value of 0.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate of the sphere's centroid.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate of the sphere's centroid.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius of the sphere.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawIcoSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw an icosphere with the current renderer.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Icospheres are drawn with their position coordinates representing the center</span>\n<span class=\"token comment\" spellcheck=\"true\">/// of the sphere.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param position A 3D point specifying the sphere's centroid.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius of the sphere.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawIcoSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw an icosphere with the current renderer at the origin.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Icospheres are drawn with their position coordinates representing the center</span>\n<span class=\"token comment\" spellcheck=\"true\">/// of the sphere. This function draws a sphere at the coordinate system origin</span>\n<span class=\"token comment\" spellcheck=\"true\">/// (0, 0, 0).</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius of the sphere.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawIcoSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\section Cylinders</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the cylinder resolution for the current renderer.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param radiusSegments The number of facets (subdivisions) around the</span>\n<span class=\"token comment\" spellcheck=\"true\">///                       cylinder's circular footprint. A larger number yields</span>\n<span class=\"token comment\" spellcheck=\"true\">///                       a higher resolution.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param heightSegments The number of horizontal subdivisions from the</span>\n<span class=\"token comment\" spellcheck=\"true\">///        cylinder's top to bottom.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param capSegments The number of annular (ring-shaped) subdivisions of</span>\n<span class=\"token comment\" spellcheck=\"true\">///        the cylinder's endcap. Defaults to 2.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetCylinderResolution</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> radiusSegments<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> heightSegments<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> capSegments<span class=\"token operator\">=</span><span class=\"token number\">2</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get the current renderer's cylinder resolution as a 3D vector.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// The resulting vector's x, y, and z properties correspond to the radius</span>\n<span class=\"token comment\" spellcheck=\"true\">/// segments, height segments, and cap segments of the current renderer's</span>\n<span class=\"token comment\" spellcheck=\"true\">/// cylinder resolution respectively.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\returns A 3D vector representing the current renderer's cylinder</span>\n<span class=\"token comment\" spellcheck=\"true\">/// resolution.</span>\nglm<span class=\"token operator\">::</span>vec3 <span class=\"token function\">ofGetCylinderResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cylinder with the current renderer.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Cyliners are drawn with x, y, and z coordinates representing the</span>\n<span class=\"token comment\" spellcheck=\"true\">/// centroid of the cylinder. This function doesn't specify a cylinder's z value</span>\n<span class=\"token comment\" spellcheck=\"true\">/// so it defaults to 0.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate to use when drawing this cylinder.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate to use when drawing this cylinder.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this cylinder's circular</span>\n<span class=\"token comment\" spellcheck=\"true\">///        footprint.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing this cylinder.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawCylinder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cylinder with the current renderer.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Cylinders are drawn with x, y, and z coordinates representing the</span>\n<span class=\"token comment\" spellcheck=\"true\">/// centroid of the cylinder.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate to use when drawing this cylinder.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate to use when drawing this cylinder.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param z The z coordinate to use when drawing this cylinder.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this cylinder's circular</span>\n<span class=\"token comment\" spellcheck=\"true\">///        footprint.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing this cylinder.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawCylinder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cylinder with the current renderer.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Cyliners are drawn with x, y, and z coordinates representing the</span>\n<span class=\"token comment\" spellcheck=\"true\">/// centroid of the cylinder.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param position The 3D point to use as a position coordinate when</span>\n<span class=\"token comment\" spellcheck=\"true\">/// drawing this cylinder.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this cylinder's circular</span>\n<span class=\"token comment\" spellcheck=\"true\">///        footprint.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing this cylinder.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawCylinder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cylinder at the origin using radius and height.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// A cylinder drawn in this way will be positioned at the coordinate system</span>\n<span class=\"token comment\" spellcheck=\"true\">/// origin (0, 0, 0).</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this cylinder's circular</span>\n<span class=\"token comment\" spellcheck=\"true\">///        footprint.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawCylinder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\section Cones</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the cone resolution for the current renderer.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Allows you to set the polygonization resolution of any cones you</span>\n<span class=\"token comment\" spellcheck=\"true\">/// subsequently draw with ofDrawCone().</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param radiusSegments The number of facets (subdivisions) around the cone's</span>\n<span class=\"token comment\" spellcheck=\"true\">///        circular footprint.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param heightSegments The number of subdivisions from the cone's top to bottom. </span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param capSegments The number of annular (ring-shaped) subdivisions of the</span>\n<span class=\"token comment\" spellcheck=\"true\">///        cone's endcap. Defaults to 2.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetConeResolution</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> radiusSegments<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> heightSegments<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> capSegments<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get the current cone resolution.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Allows you to fetch the resolution with which cones are polygonized.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Returns a glm::vec3 containing the following data:</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Encoded as \"x\": radiusSegments, the number of facets (subdivisions) around</span>\n<span class=\"token comment\" spellcheck=\"true\">/// the cone's circular footprint.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Encoded as \"y\": heightSegments, the number of subdivisions from the cone's</span>\n<span class=\"token comment\" spellcheck=\"true\">/// top to bottom.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Encoded as \"z\": capSegments, the number of annular (ring-shaped)</span>\n<span class=\"token comment\" spellcheck=\"true\">/// subdivisions of the cone's endcap.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\returns A 3D vector containing radiusSegments, heightSegments, capSegments</span>\n<span class=\"token comment\" spellcheck=\"true\">/// for cone polygonization as x, y, and z properties respectively.</span>\nglm<span class=\"token operator\">::</span>vec3 <span class=\"token function\">ofGetConeResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cone with the current renderer.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Cones are drawn with x, y, and z coordinates representing the centroid</span>\n<span class=\"token comment\" spellcheck=\"true\">/// of the cone.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate to use when drawing this cone.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate to use when drawing this cone.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param z The z coordinate to use when drawing this cone.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this cone's circular</span>\n<span class=\"token comment\" spellcheck=\"true\">///        footprint.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing this cone.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawCone</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cone with the current renderer.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Cones are drawn with x, y, and z coordinates representing the centroid</span>\n<span class=\"token comment\" spellcheck=\"true\">/// of the cylinder. This function draws a cone with a z position property of 0.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate to use when drawing this cone.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate to use when drawing this cone.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this cone's circular</span>\n<span class=\"token comment\" spellcheck=\"true\">///        footprint.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing this cone.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawCone</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cone with the current renderer.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// Cones are drawn with x, y, and z coordinates representing the centroid</span>\n<span class=\"token comment\" spellcheck=\"true\">/// of the cone.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param position The 3D point representing this cone's position.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this cone's circular</span>\n<span class=\"token comment\" spellcheck=\"true\">///        footprint.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing this cone.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawCone</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cone at the origin using radius and height.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// This cone will be drawn with its position at the coordinate system's</span>\n<span class=\"token comment\" spellcheck=\"true\">/// origin (0, 0, 0).</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this cone's circular</span>\n<span class=\"token comment\" spellcheck=\"true\">///        footprint.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing this cone.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawCone</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawCone instead.\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">ofCone</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawCone instead.\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">ofCone</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawCone instead.\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">ofCone</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawCone instead.\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">ofCone</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\section Boxes</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the resolution the current renderer uses when drawing boxes.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param res The number of subdivisions to use for box widths, heights, and</span>\n<span class=\"token comment\" spellcheck=\"true\">///            depths.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetBoxResolution</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> res <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the current box resolution.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param resWidth The number of subdivisions to use when drawing box widths.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param resHeight The number of subdivisions to use when drawing box heights.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param resDepth The number of subdivisions to use when drawing box depths.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetBoxResolution</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> resWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> resHeight<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> resDepth <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get the current renderer's box resolution as a 3D vector.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// The returned vector's x, y, and z properties represent the current</span>\n<span class=\"token comment\" spellcheck=\"true\">/// renderer's resolution width, resolution height, and resolution depth</span>\n<span class=\"token comment\" spellcheck=\"true\">/// respectively.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\returns This renderer's current box resolution as a 3D vector.</span>\nglm<span class=\"token operator\">::</span>vec3 <span class=\"token function\">ofGetBoxResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cube with the current renderer.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// A box is a rectangular solid: an extruded rectangle.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// It is drawn starting from a 3D reference coordinate. </span>\n<span class=\"token comment\" spellcheck=\"true\">/// It has a width (in x), a height (in y), and a depth (in z).</span>\n<span class=\"token comment\" spellcheck=\"true\">/// The box is drawn with the current color, e.g. set with ofSetColor().</span>\n<span class=\"token comment\" spellcheck=\"true\">/// The box is drawn filled by default; change this with ofFill();</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x-coordinate of the box's origin. </span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y-coordinate of the box's origin. </span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param z The z-coordinate of the box's origin. </span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param width The width of the box. </span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height of the box.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param depth The depth of the box.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawBox</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> depth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cube with the current renderer.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// A cube is a rectangular solid bounded by six square faces of equal size.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// It is also known as a regular hexahedron, a square parallelepiped, an</span>\n<span class=\"token comment\" spellcheck=\"true\">/// equilateral cuboid and a right rhombohedron. It is a regular square prism in</span>\n<span class=\"token comment\" spellcheck=\"true\">/// three orientations.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// It is drawn starting from a 3D reference coordinate, with the specified</span>\n<span class=\"token comment\" spellcheck=\"true\">/// size. The cube is drawn with the current color, e.g. set with ofSetColor().</span>\n<span class=\"token comment\" spellcheck=\"true\">/// The cube is drawn filled by default; change this with ofFill();</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x-coordinate of the cube's origin. </span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y-coordinate of the cube's origin. </span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param z The z-coordinate of the cube's origin. </span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param size The size of the cube. </span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws a cube with the current renderer.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// A box is a rectangular solid: an extruded rectangle. </span>\n<span class=\"token comment\" spellcheck=\"true\">/// It is drawn starting from a 3D reference coordinate. </span>\n<span class=\"token comment\" spellcheck=\"true\">/// It has a width (in x), a height (in y), and a depth (in z).</span>\n<span class=\"token comment\" spellcheck=\"true\">/// The box is drawn with the current color, e.g. set with ofSetColor().</span>\n<span class=\"token comment\" spellcheck=\"true\">/// The box is drawn filled by default; change this with ofFill();</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param position a glm::vec3 which contains the (x,y,z) coordinates for the</span>\n<span class=\"token comment\" spellcheck=\"true\">///        box's reference corner.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param width The width of the box. </span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height of the box.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param depth The depth of the box.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> depth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws a cube with the current renderer.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// A cube is drawn starting from a 3D reference position, with the specified</span>\n<span class=\"token comment\" spellcheck=\"true\">/// size.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// The cube is drawn with the current color, e.g. set with ofSetColor().</span>\n<span class=\"token comment\" spellcheck=\"true\">/// The cube is drawn filled by default; change this with ofFill();</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param position a glm::vec3 which contains the (x,y,z) coordinates for the</span>\n<span class=\"token comment\" spellcheck=\"true\">///        cube's reference corner.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param size The size of the cube. </span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws a cube with the current renderer, starting from the origin.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// The cube is drawn with the current color, e.g. set with ofSetColor().</span>\n<span class=\"token comment\" spellcheck=\"true\">/// The cube is drawn filled by default; change this with ofFill();</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param size The size of the cube. </span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draws a cube with the current renderer, starting from</span>\n<span class=\"token comment\" spellcheck=\"true\">/// the origin.</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// A box is a rectangular solid: an extruded rectangle. </span>\n<span class=\"token comment\" spellcheck=\"true\">/// It is drawn starting from the origin of the current reference frame. </span>\n<span class=\"token comment\" spellcheck=\"true\">/// It has a width (in x), a height (in y), and a depth (in z).</span>\n<span class=\"token comment\" spellcheck=\"true\">/// The box is drawn with the current color, e.g. set with ofSetColor().</span>\n<span class=\"token comment\" spellcheck=\"true\">/// The box is drawn filled by default; change this with ofFill();</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param width The width of the box. </span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height of the box.</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\param depth The depth of the box.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDrawBox</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> depth <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// deprecated methods //</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawBox instead.\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">ofBox</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> depth<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawBox instead.\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">ofBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> size<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawBox instead.\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">ofBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> depth<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawBox instead.\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">ofBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> size<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawBox instead.\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">ofBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> size<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofDrawBox instead.\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">ofBox</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> depth <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">of3dGraphics</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Construct a of3dGraphics object.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param renderer A pointer to the base renderer.</span>\n\t<span class=\"token function\">of3dGraphics</span><span class=\"token punctuation\">(</span>ofBaseRenderer <span class=\"token operator\">*</span> renderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\section Planes</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the plane resolution using \\p column and \\p rows.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param columns The number of columns to use when drawing planes.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param rows The number of rows to use when drawing planes.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setPlaneResolution</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> columns<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> rows <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get the current plane resolution as a 2D vector.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The resulting vector's x and y values corresponds to the current column</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// and row resolutions respectively.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns A 2D vector representing the current plane resolution in</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// columns and rows.</span>\n\tglm<span class=\"token operator\">::</span>vec2 <span class=\"token function\">getPlaneResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a plane using x, y, width, and height.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Planes are drawn with their x, y, and z coordinates specifying the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// center of the plane. This function draws a plane with a z coordinate of</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// 0.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate to use when drawing the plane.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate to use when drawing the plane.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param width The width to use when drawing the plane.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing the plane.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawPlane</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a plane using x, y, z, width, and height.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Planes are drawn with their x, y, and z coordinates specifying the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// center of the plane.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate to use when drawing the plane.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate to use when drawing the plane.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param z The z coordinate to use when drawing the plane.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param width The width to use when drawing the plane.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing the plane.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawPlane</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a plane a position vector, width, and height.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Planes are drawn with their position coordinates specifying the center</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// of the plane.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param position A 3D point specifying the plane's centroid.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param width The width to use when drawing the plane.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing the plane.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawPlane</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a plane at the coordinate system's origin.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// This function draws a plane with a centroid at the coordinate system</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// origin (0, 0, 0).</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param width The width of the plane.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height of the plane.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawPlane</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height <span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\section Spheres</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the resolution to use when drawing spheres.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The sphere resolution describes how many facets (cross-sections)</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// will be used when drawing spheres. A higher resolution will produce a</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// smoother looking sphere at the cost of using more vertices to do so.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param res The resolution to use when drawing spheres.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa getSphereResolution()</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa drawSphere()</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setSphereResolution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get the current sphere resolution.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns The current sphere resolution.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa setSphereResolution()</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">getSphereResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a sphere.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Spheres are drawn with x, y, and z coordinates representing the center</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// of the sphere. This function draws the sphere with a default origin z</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// value of 0.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate of the sphere's centroid.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate of the sphere's centroid.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius of the sphere.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a sphere.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Spheres are drawn with their x, y, and z coordinates representing the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// center of the sphere.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate of the sphere's centroid.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a sphere.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Spheres are drawn with their position representing the center of the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// sphere.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param position A 3D point specifying the sphere's centroid.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius of the sphere.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a sphere at the coordinate system's origin.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Spheres are drawn with their position representing the center of the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// 0, 0, 0.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius of the sphere.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the resolution to use when drawing icospheres.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// A higher resolution will produce a smoother looking sphere at the cost</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// of using more vertices to do so.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param res The resolution to use when drawing icospheres.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa getIcoSphereResolution()</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa drawIcoSphere()</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setIcoSphereResolution</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> res <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get the current icosphere resolution.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns The current icosphere resolution.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa setIcoSphereResolution()</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">getIcoSphereResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw an icosphere.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Icospheres are drawn with their x, y, and z coordinates representing the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// center of the sphere.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate of the sphere's centroid.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate of the sphere's centroid.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param z The z coordinate of the sphere's centroid.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius of the sphere.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawIcoSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw an icosphere.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Icospheres are drawn with their x, y, and z coordinates representing the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// center of the sphere. This function draws the sphere with a default</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// origin z value of 0.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate of the sphere's centroid.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate of the sphere's centroid.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius of the sphere.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawIcoSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw an icosphere.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Icospheres are drawn with their position coordinates representing the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// center of the sphere.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param position A 3D point specifying the sphere's centroid.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius of the sphere.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawIcoSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw an icosphere at the coordinate system's origin.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Icospheres are drawn with their position coordinates representing the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// center of the sphere. This function draws a sphere at the coordinate</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// system origin (0, 0, 0).</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius of the sphere.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawIcoSphere</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\section Cylinders</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the resolution to use when drawing cylinders.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radiusSegments The number of facets (subdivisions) around the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///        cylinder's circular footprint. A larger number yields a higher</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///        resolution.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param heightSegments The number of horizontal subdivisions from the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///        cylinder's top to bottom.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param capSegments The number of annular (ring-shaped) subdivisions of</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///        the cylinder's endcap. Defaults to 2.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setCylinderResolution</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> radiusSegments<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> heightSegments<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> capSegments<span class=\"token operator\">=</span><span class=\"token number\">2</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get the current cylinder resolution as a 3D vector.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The resulting vector's x, y, and z properties correspond to the radius</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// segments, height segments, and cap segments of the current cylinder</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// resolution respectively.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns A 3D vector representing the current cylinder resolution.</span>\n\tglm<span class=\"token operator\">::</span>vec3 <span class=\"token function\">getCylinderResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cylinder using x, y, radius, and height.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Cylinders are drawn with x, y, and z coordinates representing the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// centroid of the cylinder. This function doesn't specify a cylinder's z</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// value so it defaults to 0.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate to use when drawing this cylinder.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate to use when drawing this cylinder.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this cylinder's circular</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///        footprint.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing this cylinder.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawCylinder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cylinder using x, y, z, radius, and height.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Cylinders are drawn with x, y, and z coordinates representing the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// centroid of the cylinder.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate to use when drawing this cylinder.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate to use when drawing this cylinder.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param z The z coordinate to use when drawing this cylinder.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this cylinder's circular</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///        footprint.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing this cylinder.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawCylinder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cylinder using position, radius, and height.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Cyliners are drawn with x, y, and z coordinates representing the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// centroid of the cylinder.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param position The 3D point to use as a position coordinate when</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// drawing this cylinder.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this cylinder's circular</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///        footprint.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing this cylinder.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawCylinder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cylinder at the origin using radius and height.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// A cylinder drawn in this way will be positioned at the coordinate system</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// origin (0, 0, 0).</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this cylinder's circular</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///        footprint.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing this cylinder.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawCylinder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\section Cones</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the resolution to use when drawing cones.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radiusSegments The number of facets (subdivisions) around the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///        cone's circular footprint.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param heightSegments The number of subdivisions from the cone's top to</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///        bottom.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param capSegments The number of annular (ring-shaped) subdivisions of</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///        the cone's endcap.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setConeResolution</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> radiusSegments<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> heightSegments<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> capSegments<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get the cone resolution.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Allows you to fetch the resolution with which cones are polygonized.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Returns a glm::vec3 containing the following data:</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Encoded as \"x\": radiusSegments, the number of facets (subdivisions)</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// around the cone's circular footprint.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Encoded as \"y\": heightSegments, the number of subdivisions from the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// cone's top to bottom.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Encoded as \"z\": capSegments, the number of annular (ring-shaped)</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// subdivisions of the cone's endcap.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns A 3D vector containing radiusSegments, heightSegments,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// capSegments for cone polygonization as x, y, and z properties</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// respectively.</span>\n\tglm<span class=\"token operator\">::</span>vec3 <span class=\"token function\">getConeResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cone.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Cones are drawn with x, y, and z coordinates representing the centroid</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// of the cone.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate to use when drawing this cone.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate to use when drawing this cone.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param z The z coordinate to use when drawing this cone.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this cone's circular</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///        footprint.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing this cone.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawCone</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cone.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Cones are drawn with x, y, and z coordinates representing the centroid</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// of the cylinder. This function draws a cone with a z position property</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// of 0.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x coordinate to use when drawing this cone.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y coordinate to use when drawing this cone.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this cone's circular</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///        footprint.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing this cone.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawCone</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cone using x, y, z, radius, and height.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Cones are drawn with x, y, and z coordinates representing the centroid</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// of the cone.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param position The 3D point representing this cone's position.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this cone's circular</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///        footprint.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing this cone.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawCone</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cone at the origin using radius and height.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// This cone will be drawn with its position at the coordinate system's</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// origin (0, 0, 0).</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to use when drawing this cone's circular</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///        footprint.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height to use when drawing this cone.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawCone</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\section Boxes</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the resolution to use when drawing boxes.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param res The number of subdivisions to use for box width, height,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///        and depth.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setBoxResolution</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> res <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Set the resolution to use when drawing boxes.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param resWidth The number of subdivisions to use when drawing box</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///        widths.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param resHeight The number of subdivisions to use when drawing box</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///        heights.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param resDepth The number of subdivisions to use when drawing box</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setBoxResolution</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> resWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> resHeight<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> resDepth <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Get the current box resolution as a 3D vector.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The returned vector's x, y, and z properties represent the current</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// resolution width, resolution height, and resolution depth</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// respectively.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// returns a 3D vector representing the resolution in each dimension.</span>\n\tglm<span class=\"token operator\">::</span>vec3 <span class=\"token function\">getBoxResolution</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cube.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// A box is a rectangular solid: an extruded rectangle.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// It is drawn starting from a 3D reference coordinate.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// It has a width (in x), a height (in y), and a depth (in z).</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The box is drawn with the current color, e.g. set with ofSetColor().</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The box is drawn filled by default; change this with ofFill();</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x-coordinate of the box's origin.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y-coordinate of the box's origin.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param z The z-coordinate of the box's origin.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param width The width of the box.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height of the box.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param depth The depth of the box.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawBox</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> depth<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cube.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// A cube is a rectangular solid bounded by six square faces of equal size.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// It is also known as a regular hexahedron, a square parallelepiped, an</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// equilateral cuboid and a right rhombohedron. It is a regular square</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// prism in three orientations.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// It is drawn starting from a 3D reference coordinate, with the specified</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// size.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The cube is drawn with the current color, e.g. set with ofSetColor().</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The cube is drawn filled by default; change this with ofFill();</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x The x-coordinate of the cube's origin.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y The y-coordinate of the cube's origin.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param z The z-coordinate of the cube's origin.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param size The size of the cube.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> size<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cube.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// A box is a rectangular solid: an extruded rectangle.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// It is drawn starting from a 3D reference coordinate.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// It has a width (in x), a height (in y), and a depth (in z).</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The box is drawn with the current color, e.g. set with ofSetColor().</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The box is drawn filled by default; change this with ofFill();</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param position a glm::vec3 which contains the (x,y,z) coordinates for the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///        box's reference corner.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param width The width of the box.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height of the box.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param depth The depth of the box.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> depth<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cube.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// A cube is drawn starting from a 3D reference position, with the specified</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// size.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The cube is drawn with the current color, e.g. set with ofSetColor().</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The cube is drawn filled by default; change this with ofFill();</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param position a glm::vec3 which contains the (x,y,z) coordinates for the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///        cube's reference corner.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param size The size of the cube.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> position<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> size<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cube.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The cube is drawn with the current color, e.g. set with ofSetColor().</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The cube is drawn filled by default; change this with ofFill();</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param size The size of the cube.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> size<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a cube.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// A box is a rectangular solid: an extruded rectangle.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// It is drawn starting from the origin of the current reference frame.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// It has a width (in x), a height (in y), and a depth (in z).</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The box is drawn with the current color, e.g. set with ofSetColor().</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// The box is drawn filled by default; change this with ofFill();</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param width The width of the box.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param height The height of the box.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param depth The depth of the box.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawBox</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> depth <span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw the coordinate system's axes.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// This draws a red, green, and blue lines for the x, y, and z axes</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// respectively. This can be helpful when trying to orient other objects</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// in respect to the coordinate system.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param size The length to draw each axis line.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawAxis</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> size<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw the coordinate system's axes as a grid.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param stepSize The size of each row/column in each axis grid.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param numberOfSteps The number of rows/columns in each axis grid.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param labels True to draw the name and values of the axis as a bitmap</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// string.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param x True to draw the x axis.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param y True to draw the y axis.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param z True to draw the z axis.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawGrid</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> stepSize<span class=\"token punctuation\">,</span> size_t numberOfSteps<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> labels<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> z<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw a coordinate system plane using the y and z axes.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param stepSize The size of each row/column on the axis grid.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param numberOfSteps The number of rows/columns on the axis grid.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param labels True to draw the names and values of the axes.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawGridPlane</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> stepSize<span class=\"token punctuation\">,</span> size_t numberOfSteps<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> labels<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw an arrow between two 3D points.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param start The 3D vector to use as the first point.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param end The 3D vector to use as the second point.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param headSize The size of the arrowhead.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawArrow</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> start<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> end<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> headSize<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Draw the coordinate system's rotation axes.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// This draws red, green, and blue lines for the x, y, and z rotation</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// axes respectively. This can be helpful when trying to orient other</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// object's rotation in respect to the coordinate system.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param radius The radius to draw the rotation axes with.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param stripWidth The width of each axis line.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param circleRes The circle resolution to use when drawing the axes.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">drawRotationAxes</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> stripWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> circleRes<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">renderCached3dPrimitive</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> of3dPrimitive<span class=\"token operator\">&amp;</span> model <span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">mutable</span> ofBaseRenderer <span class=\"token operator\">*</span> renderer<span class=\"token punctuation\">;</span>\n\tofPlanePrimitive plane<span class=\"token punctuation\">;</span>\n\tofSpherePrimitive sphere<span class=\"token punctuation\">;</span>\n\tofIcoSpherePrimitive icoSphere<span class=\"token punctuation\">;</span>\n\tofBoxPrimitive box<span class=\"token punctuation\">;</span>\n\tofConePrimitive cone<span class=\"token punctuation\">;</span>\n\tofCylinderPrimitive cylinder<span class=\"token punctuation\">;</span>\n\tofBoxPrimitive boxWireframe<span class=\"token punctuation\">;</span>\n\tof3dPrimitive axis<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n","type":"source","static":true}}],"fetch":[]}