{"data":[{"page":{"entry":{"name":"ofBufferObject.h","filename":"ofBufferObject.h","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/gl/ofBufferObject.h","path":"/openframeworks/gl/ofBufferObject_h","route":"/openframeworks/gl/ofBufferObject.h","dir":"../libs/openFrameworks/gl","ext":"h","type":"source","id":206,"parent":204,"breadcrumbs":[204,164],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofPixels_</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofBufferObject</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">ofBufferObject</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// creates a buffer without allocating any memory yet</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// glGenBuffers, allocates a GL buffer</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// creates a buffer and allocates the required number of bytes</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// glGenBuffers + glNamedBufferData: https://www.opengl.org/sdk/docs/man4/html/glBufferData.xhtml</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// before GL 4.5 emulates glNamedBufferData by binding to last known target</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// for this buffer uploading data to that target and unbinding again</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>GLsizeiptr bytes<span class=\"token punctuation\">,</span> GLenum usage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>GLsizeiptr bytes<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> data<span class=\"token punctuation\">,</span> GLenum usage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>T<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> data<span class=\"token punctuation\">,</span> GLenum usage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>T<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>usage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPixels_<span class=\"token operator\">&lt;</span>T<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> data<span class=\"token punctuation\">,</span> GLenum usage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>T<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>usage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// true if allocate was called before</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// glBindBuffer: https://www.opengl.org/sdk/docs/man4/html/glBindBuffer.xhtml</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>GLenum target<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// binds the passed target to buffer 0</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span>GLenum target<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// glBindBufferBase: https://www.opengl.org/sdk/docs/man4/html/glBindBufferBase.xhtml</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">bindBase</span><span class=\"token punctuation\">(</span>GLenum target<span class=\"token punctuation\">,</span>GLuint index<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// binds the given target and index to buffer 0</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">unbindBase</span><span class=\"token punctuation\">(</span>GLenum target<span class=\"token punctuation\">,</span>GLuint index<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// glBindBufferRange: https://www.opengl.org/sdk/docs/man4/html/glBindBufferRange.xhtml</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">bindRange</span><span class=\"token punctuation\">(</span>GLenum target<span class=\"token punctuation\">,</span>GLuint index<span class=\"token punctuation\">,</span> GLintptr offset<span class=\"token punctuation\">,</span> GLsizeiptr size<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// binds the given target and index to 0</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">unbindRange</span><span class=\"token punctuation\">(</span>GLenum target<span class=\"token punctuation\">,</span>GLuint index<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// returns the id of the buffer if it's allocated or 0 otherwise</span>\n\tGLuint <span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// glNamedBufferData: https://www.opengl.org/sdk/docs/man4/html/glBufferData.xhtml</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// before GL 4.5 emulates glNamedBufferData by binding to last known target</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// for this buffer uploading data to that target and unbinding again</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setData</span><span class=\"token punctuation\">(</span>GLsizeiptr bytes<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> data<span class=\"token punctuation\">,</span> GLenum usage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// glNamedBufferSubData: https://www.opengl.org/sdk/docs/man4/html/glBufferSubData.xhtml</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// before GL 4.5 emulates glNamedBufferSubData by binding to last known target</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// for this buffer uploading data to that target and unbinding again</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">updateData</span><span class=\"token punctuation\">(</span>GLintptr offset<span class=\"token punctuation\">,</span> GLsizeiptr bytes<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">updateData</span><span class=\"token punctuation\">(</span>GLsizeiptr bytes<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// typed version of setData, same functionality but guesses the size from the size</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// of the passed vector and size of the type</span>\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>T<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> data<span class=\"token punctuation\">,</span> GLenum usage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setData</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>T<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>usage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPixels_<span class=\"token operator\">&lt;</span>T<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> data<span class=\"token punctuation\">,</span> GLenum usage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setData</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>T<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>usage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// typed version of updateData, same functionality but guesses the size from the size</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// of the passed vector and size of the type</span>\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">updateData</span><span class=\"token punctuation\">(</span>GLintptr offset<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>T<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">updateData</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>T<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/// typed version of updateData, same functionality but guesses the size from the size</span>\n    <span class=\"token comment\" spellcheck=\"true\">/// of the passed vector and size of the type</span>\n    <span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">updateData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>T<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">updateData</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>T<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// glMapNamedBuffer: https://www.opengl.org/sdk/docs/man4/html/glMapBuffer.xhtml</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// before GL 4.5 emulates glMapNamedBuffer by binding to last known target</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// for this buffer and mapping that target</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> <span class=\"token function\">map</span><span class=\"token punctuation\">(</span>GLenum access<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// glUnmapNamedBuffer: https://www.opengl.org/sdk/docs/man4/html/glUnmapBuffer.xhtml</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// before GL 4.5 emulates glUnmapNamedBuffer by unmapping and unbinding</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// the last known target for this buffer</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">unmap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// typed version of map, returns an array of T when used like:</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// buffer.map&lt;Type>(access)</span>\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\n\tT <span class=\"token operator\">*</span> <span class=\"token function\">map</span><span class=\"token punctuation\">(</span>GLenum access<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">static_cast</span><span class=\"token operator\">&lt;</span>T<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>access<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// glMapNamedBufferRange: https://www.opengl.org/sdk/docs/man4/html/glMapBufferRange.xhtml</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// before GL 4.5 emulates glMapNamedBufferRange by binding to last known target</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// for this buffer and mapping that target</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> <span class=\"token function\">mapRange</span><span class=\"token punctuation\">(</span>GLintptr offset<span class=\"token punctuation\">,</span> GLsizeiptr length<span class=\"token punctuation\">,</span> GLenum access<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// same as unmap, just to make the api more clear</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">unmapRange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// typed version of mapRange, returns an array of T when used like:</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// buffer.mapRange&lt;Type>(access)</span>\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\n\tT <span class=\"token operator\">*</span> <span class=\"token function\">mapRange</span><span class=\"token punctuation\">(</span>GLintptr offset<span class=\"token punctuation\">,</span> GLsizeiptr length<span class=\"token punctuation\">,</span> GLenum access<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">static_cast</span><span class=\"token operator\">&lt;</span>T<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token function\">mapRange</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">,</span>length<span class=\"token punctuation\">,</span>access<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">copyTo</span><span class=\"token punctuation\">(</span>ofBufferObject <span class=\"token operator\">&amp;</span> dstBuffer<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">copyTo</span><span class=\"token punctuation\">(</span>ofBufferObject <span class=\"token operator\">&amp;</span> dstBuffer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> readOffset<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> writeOffset<span class=\"token punctuation\">,</span> size_t size<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">invalidate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\tGLsizeiptr <span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">struct</span> Data<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">Data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token operator\">~</span><span class=\"token function\">Data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tGLuint id<span class=\"token punctuation\">;</span>\n\t\tGLsizeiptr size<span class=\"token punctuation\">;</span>\n\t\tGLenum lastTarget<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span> isBound<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span> isDSA<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>Data<span class=\"token operator\">></span> data<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n","type":"source","static":true}}],"fetch":[]}