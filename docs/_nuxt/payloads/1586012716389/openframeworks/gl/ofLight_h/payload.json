{"data":[{"page":{"entry":{"name":"ofLight.h","filename":"ofLight.h","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/gl/ofLight.h","path":"/openframeworks/gl/ofLight_h","route":"/openframeworks/gl/ofLight.h","dir":"../libs/openFrameworks/gl","ext":"h","type":"source","id":217,"parent":204,"breadcrumbs":[204,164],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">/*\n *  ofLight.h\n *  openFrameworksLib\n *\n *  Created by Memo Akten on 14/01/2011.\n *  Copyright 2011 MSA Visuals Ltd. All rights reserved.\n *\n */</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// TODO:</span>\n\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofNode.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofColor.h\"</span></span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofBaseGLRenderer</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">enum</span> ofLightType <span class=\"token punctuation\">{</span>\n\tOF_LIGHT_POINT<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\tOF_LIGHT_DIRECTIONAL<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n\tOF_LIGHT_SPOT<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n\tOF_LIGHT_AREA<span class=\"token operator\">=</span><span class=\"token number\">3</span> <span class=\"token comment\" spellcheck=\"true\">// Only programmable renderer</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofEnableLighting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDisableLighting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofEnableSeparateSpecularLight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofDisableSeparateSpecularLight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofGetLightingEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetSmoothLighting</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetGlobalAmbientColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFloatColor<span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> ofFloatColor <span class=\"token operator\">&amp;</span> <span class=\"token function\">ofGetGlobalAmbientColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">// Use the public API of ofNode for all transformations</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofLight</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofNode <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">ofLight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">getIsEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setDirectional</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">getIsDirectional</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setSpotlight</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> spotCutOff<span class=\"token operator\">=</span><span class=\"token number\">45</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> exponent<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">getIsSpotlight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setSpotlightCutOff</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> spotCutOff <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> <span class=\"token function\">getSpotlightCutOff</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setSpotConcentration</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> exponent <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> <span class=\"token function\">getSpotConcentration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setPointLight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">getIsPointLight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setAttenuation</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> constant<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> linear<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> quadratic<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> <span class=\"token function\">getAttenuationConstant</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> <span class=\"token function\">getAttenuationLinear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> <span class=\"token function\">getAttenuationQuadratic</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setAreaLight</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">bool</span> <span class=\"token function\">getIsAreaLight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setAmbientColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFloatColor<span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setDiffuseColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFloatColor<span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setSpecularColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFloatColor<span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\tofFloatColor <span class=\"token function\">getAmbientColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\tofFloatColor <span class=\"token function\">getDiffuseColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\tofFloatColor <span class=\"token function\">getSpecularColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">getLightID</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">Data</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token function\">Data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token operator\">~</span><span class=\"token function\">Data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tofFloatColor ambientColor<span class=\"token punctuation\">;</span>\n\t\tofFloatColor diffuseColor<span class=\"token punctuation\">;</span>\n\t\tofFloatColor specularColor<span class=\"token punctuation\">;</span>\n\n\t    <span class=\"token keyword\">float</span> attenuation_constant<span class=\"token punctuation\">;</span>\n\t    <span class=\"token keyword\">float</span> attenuation_linear<span class=\"token punctuation\">;</span>\n\t    <span class=\"token keyword\">float</span> attenuation_quadratic<span class=\"token punctuation\">;</span>\n\n\t\tofLightType lightType<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">int</span> glIndex<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> isEnabled<span class=\"token punctuation\">;</span>\n\t    <span class=\"token keyword\">float</span> spotCutOff<span class=\"token punctuation\">;</span>\n\t    <span class=\"token keyword\">float</span> exponent<span class=\"token punctuation\">;</span>\n\t\tglm<span class=\"token operator\">::</span>vec4 position<span class=\"token punctuation\">;</span>\n\t\tglm<span class=\"token operator\">::</span>vec3 direction<span class=\"token punctuation\">;</span>\n\n\t    <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">;</span>\n\t    <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">;</span>\n\t\tglm<span class=\"token operator\">::</span>vec3 up<span class=\"token punctuation\">;</span>\n\t\tglm<span class=\"token operator\">::</span>vec3 right<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">/// weak link back to renderer for which this light was created/setup</span>\n\t\tstd<span class=\"token operator\">::</span>weak_ptr<span class=\"token operator\">&lt;</span>ofBaseGLRenderer<span class=\"token operator\">></span> rendererP<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">customDraw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofBaseRenderer <span class=\"token operator\">*</span> renderer<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>Data<span class=\"token operator\">></span> data<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// update opengl light </span>\n\t<span class=\"token comment\" spellcheck=\"true\">// this method overrides ofNode to catch the changes and update glLightv(GL_POSITION)</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onPositionChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onOrientationChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\nstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>weak_ptr<span class=\"token operator\">&lt;</span>ofLight<span class=\"token operator\">::</span>Data<span class=\"token operator\">></span> <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token function\">ofLightsData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n","type":"source","static":true}}],"fetch":[]}