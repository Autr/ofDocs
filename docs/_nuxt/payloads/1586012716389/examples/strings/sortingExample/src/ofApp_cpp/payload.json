{"data":[{"page":{"entry":{"name":"ofApp.cpp","filename":"ofApp.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/examples/strings/sortingExample/src/ofApp.cpp","path":"/examples/strings/sortingExample/src/ofApp_cpp","route":"/examples/strings/sortingExample/src/ofApp.cpp","dir":"../examples/strings/sortingExample/src","ext":"cpp","type":"source","id":1695,"parent":1693,"breadcrumbs":[1693,1690,1670,514],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofApp.h\"</span></span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">// sort on abc's</span>\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">sortOnABC</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> LyricWord <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> LyricWord <span class=\"token operator\">&amp;</span>b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">.</span>word <span class=\"token operator\">&lt;</span> b<span class=\"token punctuation\">.</span>word<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// sort on word length</span>\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">sortOnLength</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> LyricWord <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> LyricWord <span class=\"token operator\">&amp;</span>b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>a<span class=\"token punctuation\">.</span>word<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>b<span class=\"token punctuation\">.</span>word<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// sort on occurrences</span>\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">sortOnOccurrences</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> LyricWord <span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> LyricWord <span class=\"token operator\">&amp;</span>b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">.</span>occurrences <span class=\"token operator\">></span> b<span class=\"token punctuation\">.</span>occurrences<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">// remove runction</span>\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">removeWordIf</span><span class=\"token punctuation\">(</span>LyricWord <span class=\"token operator\">&amp;</span>wrd<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">bool</span> bRemove <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">static</span> string ignoreWords<span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"the\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"to\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"of\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"and\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"i\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"it\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"if\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"is\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"in\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"be\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// if this word empty</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>wrd<span class=\"token punctuation\">.</span>word<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> bRemove <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// are we a word that we do now want</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span><span class=\"token number\">11</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>wrd<span class=\"token punctuation\">.</span>word <span class=\"token operator\">==</span> ignoreWords<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            bRemove <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> bRemove<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    ofTrueTypeFont<span class=\"token operator\">::</span><span class=\"token function\">setGlobalDpi</span><span class=\"token punctuation\">(</span><span class=\"token number\">96</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// load the font</span>\n\tfont<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sans-serif\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    sortTypeInfo <span class=\"token operator\">=</span> <span class=\"token string\">\"no sort\"</span><span class=\"token punctuation\">;</span>\n    words<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// load the txt document into a ofBuffer</span>\n    ofBuffer buffer <span class=\"token operator\">=</span> <span class=\"token function\">ofBufferFromFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"freshprince.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    string   content <span class=\"token operator\">=</span> buffer<span class=\"token punctuation\">.</span><span class=\"token function\">getText</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token comment\" spellcheck=\"true\">// take the content and split it up by spaces</span>\n    <span class=\"token comment\" spellcheck=\"true\">// we need to also turn new lines into spaces so we can seperate words on new lines as well</span>\n    <span class=\"token function\">ofStringReplace</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\r\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">ofStringReplace</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    vector <span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> splitString <span class=\"token operator\">=</span> <span class=\"token function\">ofSplitString</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">,</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// copy over the words to our object</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>splitString<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        LyricWord wrd<span class=\"token punctuation\">;</span>\n        wrd<span class=\"token punctuation\">.</span>occurrences <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        wrd<span class=\"token punctuation\">.</span>word <span class=\"token operator\">=</span> <span class=\"token function\">ofToLower</span><span class=\"token punctuation\">(</span> splitString<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        words<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>wrd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// clean up the words removing any</span>\n    <span class=\"token comment\" spellcheck=\"true\">// characters that we do not want</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>words<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\" spellcheck=\"true\">// run throught this ignore list and replace</span>\n        <span class=\"token comment\" spellcheck=\"true\">// that char with nothing</span>\n        <span class=\"token keyword\">char</span> ignoreList<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">','</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'('</span><span class=\"token punctuation\">,</span> <span class=\"token string\">')'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'?'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'!'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">':'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\"'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\\''</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\\t'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span><span class=\"token number\">12</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n            <span class=\"token comment\" spellcheck=\"true\">// make string from char</span>\n            string removeStr<span class=\"token punctuation\">;</span>\n            removeStr <span class=\"token operator\">+</span><span class=\"token operator\">=</span> ignoreList<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token comment\" spellcheck=\"true\">// remove and of the chars found</span>\n            <span class=\"token function\">ofStringReplace</span><span class=\"token punctuation\">(</span>words<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>word<span class=\"token punctuation\">,</span> removeStr<span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n\n    <span class=\"token comment\" spellcheck=\"true\">// count the amount of times that we see a word</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>words<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span>words<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>words<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>word <span class=\"token operator\">==</span> words<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>word<span class=\"token punctuation\">)</span> c <span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        words<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>occurrences <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// remove duplicates of the words</span>\n    vector<span class=\"token operator\">&lt;</span>LyricWord<span class=\"token operator\">></span>tempWord<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>words<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">bool</span> bAdd <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span>tempWord<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>words<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>word <span class=\"token operator\">==</span> tempWord<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>word<span class=\"token punctuation\">)</span> bAdd <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bAdd<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            tempWord<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>words<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    words <span class=\"token operator\">=</span> tempWord<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// remove word we do not want</span>\n    <span class=\"token function\">ofRemove</span><span class=\"token punctuation\">(</span>words<span class=\"token punctuation\">,</span> ofApp<span class=\"token operator\">::</span>removeWordIf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">ofPushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">ofTranslate</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">float</span> radius <span class=\"token operator\">=</span> <span class=\"token number\">350</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>words<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">float</span> t <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>HALF_PI <span class=\"token operator\">+</span> <span class=\"token function\">ofMap</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>words<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> TWO_PI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">float</span> x <span class=\"token operator\">=</span> <span class=\"token function\">cos</span><span class=\"token punctuation\">(</span> t <span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> radius<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">float</span> y <span class=\"token operator\">=</span> <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span> t <span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> radius<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">float</span> a <span class=\"token operator\">=</span> <span class=\"token function\">ofRadToDeg</span><span class=\"token punctuation\">(</span><span class=\"token function\">atan2</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">ofPushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">ofTranslate</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">ofRotateZDeg</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">float</span> scl <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">glScalef</span><span class=\"token punctuation\">(</span>scl<span class=\"token punctuation\">,</span> scl<span class=\"token punctuation\">,</span> scl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        font<span class=\"token punctuation\">.</span><span class=\"token function\">drawString</span><span class=\"token punctuation\">(</span>words<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>word<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">ofPopMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    font<span class=\"token punctuation\">.</span><span class=\"token function\">drawString</span><span class=\"token punctuation\">(</span>sortTypeInfo<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>font<span class=\"token punctuation\">.</span><span class=\"token function\">stringWidth</span><span class=\"token punctuation\">(</span>sortTypeInfo<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">ofPopMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token comment\" spellcheck=\"true\">// instruction</span>\n    <span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">ofDrawBitmapString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nPress 1 for no sort\\nPress 2 for alphabetical\\nPress 3 for word length\\nPress 4 for word occurrence\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">keyPressed</span>  <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// sort raw</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span>     <span class=\"token punctuation\">{</span>\n        sortTypeInfo <span class=\"token operator\">=</span> <span class=\"token string\">\"no sort\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// sort alphabetically</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> <span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        sortTypeInfo <span class=\"token operator\">=</span> <span class=\"token string\">\"sorting alphabetically\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">ofSort</span><span class=\"token punctuation\">(</span>words<span class=\"token punctuation\">,</span> ofApp<span class=\"token operator\">::</span>sortOnABC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// sort by length of word</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> <span class=\"token string\">'3'</span><span class=\"token punctuation\">)</span>     <span class=\"token punctuation\">{</span>\n        sortTypeInfo <span class=\"token operator\">=</span> <span class=\"token string\">\"sorting on word length\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">ofSort</span><span class=\"token punctuation\">(</span>words<span class=\"token punctuation\">,</span> ofApp<span class=\"token operator\">::</span>sortOnLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// sort by length of word</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> <span class=\"token string\">'4'</span><span class=\"token punctuation\">)</span>     <span class=\"token punctuation\">{</span>\n        sortTypeInfo <span class=\"token operator\">=</span> <span class=\"token string\">\"sorting on word occurrences\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">ofSort</span><span class=\"token punctuation\">(</span>words<span class=\"token punctuation\">,</span> ofApp<span class=\"token operator\">::</span>sortOnOccurrences<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">keyReleased</span>  <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseMoved</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseDragged</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mousePressed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseReleased</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseEntered</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseExited</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">windowResized</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">gotMessage</span><span class=\"token punctuation\">(</span>ofMessage msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">dragEvent</span><span class=\"token punctuation\">(</span>ofDragInfo dragInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>","type":"source","static":true}}],"fetch":[]}