{"data":[{"page":{"entry":{"name":"ofApp.mm","filename":"ofApp.mm","absolute":"/Users/Gilbert/Code/openFrameworks/examples/ios/audioOutputExample/src/ofApp.mm","path":"/examples/ios/audioOutputExample/src/ofApp_mm","route":"/examples/ios/audioOutputExample/src/ofApp.mm","dir":"../examples/ios/audioOutputExample/src","ext":"mm","type":"source","id":1307,"parent":1304,"breadcrumbs":[1304,1301,1271,514],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofApp.h\"</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// IMPORTANT!!! if your sound doesn't work in the simulator - read this post - which requires you set the output stream to 24bit </span>\n\t<span class=\"token comment\" spellcheck=\"true\">//\thttp://www.cocos2d-iphone.org/forum/topic/4159</span>\n\n\t<span class=\"token function\">ofSetOrientation</span><span class=\"token punctuation\">(</span>OF_ORIENTATION_90_RIGHT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//Set iOS to Orientation Landscape Right</span>\n\n\t<span class=\"token function\">ofBackground</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// 2 output channels,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// 0 input channels</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// 44100 samples per second</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// 512 samples per buffer</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// 4 num buffers (latency)</span>\n\n\tsampleRate <span class=\"token operator\">=</span> <span class=\"token number\">44100</span><span class=\"token punctuation\">;</span>\n\tphase <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tphaseAdder <span class=\"token operator\">=</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">;</span>\n\tphaseAdderTarget <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n\tvolume <span class=\"token operator\">=</span> <span class=\"token number\">0.15f</span><span class=\"token punctuation\">;</span>\n\tpan <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n\tbNoise <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//for some reason on the iphone simulator 256 doesn't work - it comes in as 512!</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//so we do 512 - otherwise we crash</span>\n\tinitialBufferSize <span class=\"token operator\">=</span> <span class=\"token number\">512</span><span class=\"token punctuation\">;</span>\n\t\n\tlAudio <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">float</span><span class=\"token punctuation\">[</span>initialBufferSize<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\trAudio <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">float</span><span class=\"token punctuation\">[</span>initialBufferSize<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>lAudio<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> initialBufferSize <span class=\"token operator\">*</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">memset</span><span class=\"token punctuation\">(</span>rAudio<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> initialBufferSize <span class=\"token operator\">*</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//we do this because we don't have a mouse move function to work with:</span>\n\ttargetFrequency <span class=\"token operator\">=</span> <span class=\"token number\">444.0</span><span class=\"token punctuation\">;</span>\n\tphaseAdderTarget <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>targetFrequency <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>sampleRate<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> TWO_PI<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// This call will allow your app's sound to mix with any others that are creating sound</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// in the background (e.g. the Music app). It should be done before the call to</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// ofSoundStreamSetup. It sets a category of \"play and record\" with the \"mix with others\"</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// option turned on. There are many other combinations of categories &amp; options that might</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// suit your app's needs better. See Apple's guide on \"Configuring Your Audio Session\".</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// ofxiOSSoundStream::setMixWithOtherApps(true);</span>\n\t\n\t<span class=\"token function\">ofSoundStreamSetup</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> sampleRate<span class=\"token punctuation\">,</span> initialBufferSize<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofSetFrameRate</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">float</span> boxW <span class=\"token operator\">=</span> <span class=\"token number\">200.0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> boxH <span class=\"token operator\">=</span> boxW <span class=\"token operator\">*</span> <span class=\"token number\">0.75</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">float</span> topY <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> leftX <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> rightX <span class=\"token operator\">=</span> leftX <span class=\"token operator\">+</span> boxW <span class=\"token operator\">+</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// draw the left:</span>\n\t<span class=\"token function\">ofSetHexColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x333333</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofDrawRectangle</span><span class=\"token punctuation\">(</span>leftX<span class=\"token punctuation\">,</span> topY<span class=\"token punctuation\">,</span> boxW<span class=\"token punctuation\">,</span> boxH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofSetHexColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xFFFFFF</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> initialBufferSize<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">float</span> x <span class=\"token operator\">=</span> <span class=\"token function\">ofMap</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> initialBufferSize<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> boxW<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofDrawLine</span><span class=\"token punctuation\">(</span>leftX <span class=\"token operator\">+</span> x<span class=\"token punctuation\">,</span>topY <span class=\"token operator\">+</span> boxH <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>leftX <span class=\"token operator\">+</span> x<span class=\"token punctuation\">,</span> topY <span class=\"token operator\">+</span> boxH <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> lAudio<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> boxH <span class=\"token operator\">*</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// draw the right:</span>\n\t<span class=\"token function\">ofSetHexColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x333333</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofDrawRectangle</span><span class=\"token punctuation\">(</span>rightX<span class=\"token punctuation\">,</span> topY<span class=\"token punctuation\">,</span> boxW<span class=\"token punctuation\">,</span> boxH<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofSetHexColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xFFFFFF</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> initialBufferSize<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">float</span> x <span class=\"token operator\">=</span> <span class=\"token function\">ofMap</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> initialBufferSize<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> boxW<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\t\t<span class=\"token function\">ofDrawLine</span><span class=\"token punctuation\">(</span>rightX <span class=\"token operator\">+</span> x<span class=\"token punctuation\">,</span> topY <span class=\"token operator\">+</span> boxH <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> rightX <span class=\"token operator\">+</span> x<span class=\"token punctuation\">,</span> topY <span class=\"token operator\">+</span> boxH <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> rAudio<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> boxH <span class=\"token operator\">*</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">ofSetHexColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x333333</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tstringstream reportString<span class=\"token punctuation\">;</span>\n    reportString <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"volume: (\"</span> <span class=\"token operator\">&lt;&lt;</span> volume <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\") \\npan: (\"</span> <span class=\"token operator\">&lt;&lt;</span> pan <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\")\\nsynthesis: \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span> bNoise <span class=\"token operator\">?</span> <span class=\"token string\">\"noise\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"sine wave\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    reportString <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" (\"</span> <span class=\"token operator\">&lt;&lt;</span> targetFrequency <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"hz)\\n\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofDrawBitmapString</span><span class=\"token punctuation\">(</span>reportString<span class=\"token punctuation\">.</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> leftX<span class=\"token punctuation\">,</span> topY <span class=\"token operator\">+</span> boxH <span class=\"token operator\">+</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">audioOut</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> <span class=\"token operator\">*</span> output<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> bufferSize<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> nChannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> initialBufferSize <span class=\"token operator\">&lt;</span> bufferSize <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLog</span><span class=\"token punctuation\">(</span>OF_LOG_ERROR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"your buffer size was set to %i - but the stream needs a buffer size of %i\"</span><span class=\"token punctuation\">,</span> initialBufferSize<span class=\"token punctuation\">,</span> bufferSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\t\n\n\t<span class=\"token keyword\">float</span> leftScale <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> pan<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> rightScale <span class=\"token operator\">=</span> pan<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// sin (n) seems to have trouble when n is very large, so we</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// keep phase in the range of 0-TWO_PI like this:</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>phase <span class=\"token operator\">></span> TWO_PI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tphase <span class=\"token operator\">-</span><span class=\"token operator\">=</span> TWO_PI<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bNoise <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// ---------------------- noise --------------</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> bufferSize<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tlAudio<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> output<span class=\"token punctuation\">[</span>i <span class=\"token operator\">*</span> nChannels<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">ofRandomf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> volume <span class=\"token operator\">*</span> leftScale<span class=\"token punctuation\">;</span>\n\t\t\trAudio<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> output<span class=\"token punctuation\">[</span>i <span class=\"token operator\">*</span> nChannels <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">ofRandomf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> volume <span class=\"token operator\">*</span> rightScale<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\tphaseAdder <span class=\"token operator\">=</span> <span class=\"token number\">0.95f</span> <span class=\"token operator\">*</span> phaseAdder <span class=\"token operator\">+</span> <span class=\"token number\">0.05f</span> <span class=\"token operator\">*</span> phaseAdderTarget<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> bufferSize<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tphase <span class=\"token operator\">+</span><span class=\"token operator\">=</span> phaseAdder<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">float</span> sample <span class=\"token operator\">=</span> <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>phase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tlAudio<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> output<span class=\"token punctuation\">[</span>i <span class=\"token operator\">*</span> nChannels<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> sample <span class=\"token operator\">*</span> volume <span class=\"token operator\">*</span> leftScale<span class=\"token punctuation\">;</span>\n\t\t\trAudio<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> output<span class=\"token punctuation\">[</span>i <span class=\"token operator\">*</span> nChannels <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> sample <span class=\"token operator\">*</span> volume <span class=\"token operator\">*</span> rightScale<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">touchDown</span><span class=\"token punctuation\">(</span>ofTouchEventArgs <span class=\"token operator\">&amp;</span> touch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbNoise <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">touchMoved</span><span class=\"token punctuation\">(</span>ofTouchEventArgs <span class=\"token operator\">&amp;</span> touch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>touch<span class=\"token punctuation\">.</span>id <span class=\"token operator\">==</span>  <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">int</span> width <span class=\"token operator\">=</span> <span class=\"token function\">ofGetWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tpan <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>touch<span class=\"token punctuation\">.</span>x <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>width<span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">int</span> height <span class=\"token operator\">=</span> <span class=\"token function\">ofGetHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        targetFrequency <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>touch<span class=\"token punctuation\">.</span>y <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>height<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n        phaseAdderTarget <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>targetFrequency <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>sampleRate<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> TWO_PI<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">touchUp</span><span class=\"token punctuation\">(</span>ofTouchEventArgs <span class=\"token operator\">&amp;</span> touch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbNoise <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">touchDoubleTap</span><span class=\"token punctuation\">(</span>ofTouchEventArgs <span class=\"token operator\">&amp;</span> touch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">touchCancelled</span><span class=\"token punctuation\">(</span>ofTouchEventArgs <span class=\"token operator\">&amp;</span> touch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbNoise <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">lostFocus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">gotFocus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">gotMemoryWarning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">deviceOrientationChanged</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> newOrientation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span>\n","type":"source","static":true}}],"fetch":[]}