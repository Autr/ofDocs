{"data":[{"page":{"entry":{"name":"ofApp.cpp","filename":"ofApp.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/examples/input_output/fileOpenSaveDialogExample/src/ofApp.cpp","path":"/examples/input_output/fileOpenSaveDialogExample/src/ofApp_cpp","route":"/examples/input_output/fileOpenSaveDialogExample/src/ofApp.cpp","dir":"../examples/input_output/fileOpenSaveDialogExample/src","ext":"cpp","type":"source","id":1182,"parent":1180,"breadcrumbs":[1180,1177,1147,514],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofApp.h\"</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofSetLogLevel</span><span class=\"token punctuation\">(</span>OF_LOG_VERBOSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofDrawBitmapString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Press spacebar to open an image, \\\"s\\\" to save the processed output\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>loadedImages<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tloadedImages<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>processedImages<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tprocessedImages<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>processedImages<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">keyPressed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">keyReleased</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">//Open the Open File Dialog</span>\n\t\tofFileDialogResult openFileResult<span class=\"token operator\">=</span> <span class=\"token function\">ofSystemLoadDialog</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Select a jpg or png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">//Check if the user opened a file</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>openFileResult<span class=\"token punctuation\">.</span>bSuccess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\n\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"User selected a file\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//We have a file, check it and process it</span>\n\t\t\t<span class=\"token function\">processOpenFileSelection</span><span class=\"token punctuation\">(</span>openFileResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"User hit cancel\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> <span class=\"token string\">'s'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>processedImages<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//User is trying to save without anything to output - bail</span>\n\t\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t\tofFileDialogResult saveFileResult <span class=\"token operator\">=</span> <span class=\"token function\">ofSystemSaveDialog</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetTimestampString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\".\"</span> <span class=\"token operator\">+</span> <span class=\"token function\">ofToLower</span><span class=\"token punctuation\">(</span>originalFileExtension<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Save your file\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>saveFileResult<span class=\"token punctuation\">.</span>bSuccess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tprocessedImages<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>saveFileResult<span class=\"token punctuation\">.</span>filePath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//Sort function for stl::sort http://www.cplusplus.com/reference/algorithm/sort/</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">sortColorFunction</span> <span class=\"token punctuation\">(</span>ofColor i<span class=\"token punctuation\">,</span>ofColor j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span><span class=\"token function\">getBrightness</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span>j<span class=\"token punctuation\">.</span><span class=\"token function\">getBrightness</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">processOpenFileSelection</span><span class=\"token punctuation\">(</span>ofFileDialogResult openFileResult<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\n\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getName(): \"</span>  <span class=\"token operator\">+</span> openFileResult<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"getPath(): \"</span>  <span class=\"token operator\">+</span> openFileResult<span class=\"token punctuation\">.</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\tofFile <span class=\"token function\">file</span> <span class=\"token punctuation\">(</span>openFileResult<span class=\"token punctuation\">.</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">exists</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//Limiting this example to one image so we delete previous ones</span>\n\t\tprocessedImages<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tloadedImages<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The file exists - now checking the type via file extension\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tstring fileExtension <span class=\"token operator\">=</span> <span class=\"token function\">ofToUpper</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">getExtension</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">//We only want images</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fileExtension <span class=\"token operator\">==</span> <span class=\"token string\">\"JPG\"</span> <span class=\"token operator\">||</span> fileExtension <span class=\"token operator\">==</span> <span class=\"token string\">\"PNG\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//Save the file extension to use when we save out</span>\n\t\t\toriginalFileExtension <span class=\"token operator\">=</span> fileExtension<span class=\"token punctuation\">;</span>\n\t\t\t\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//Load the selected image</span>\n\t\t\tofImage image<span class=\"token punctuation\">;</span>\n\t\t\timage<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>openFileResult<span class=\"token punctuation\">.</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token function\">ofGetWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> image<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token function\">ofGetHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n\t\t\t<span class=\"token punctuation\">{</span>\n\t\t\t\timage<span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> image<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\tloadedImages<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//Make some short variables </span>\n\t\t\t<span class=\"token keyword\">int</span> w <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">int</span> h <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//Make a new image to save manipulation by copying the source</span>\n\t\t\tofImage processedImage <span class=\"token operator\">=</span> image<span class=\"token punctuation\">;</span>\n\t\t\t\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//Walk through the pixels</span>\n\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">&lt;</span> h<span class=\"token punctuation\">;</span> y<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//Create a vector to store and sort the colors</span>\n\t\t\t\tvector<span class=\"token operator\">&lt;</span>ofColor<span class=\"token operator\">></span> colorsToSort<span class=\"token punctuation\">;</span>\n\t\t\t\t\n\t\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> w<span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t\n\t\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//Capture the colors for the row</span>\n\t\t\t\t\tofColor color <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span><span class=\"token function\">getColor</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n\t\t\t\t\tcolorsToSort<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//Sort the colors for the row</span>\n\t\t\t\t<span class=\"token function\">sort</span> <span class=\"token punctuation\">(</span>colorsToSort<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> colorsToSort<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> sortColorFunction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\n\t\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">&lt;</span> w<span class=\"token punctuation\">;</span> x<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//Put the sorted colors back in the new image</span>\n\t\t\t\t\tprocessedImage<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> colorsToSort<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//Store the processed image</span>\n\t\t\tprocessedImages<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>processedImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseMoved</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseDragged</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mousePressed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseReleased</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseEntered</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseExited</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">windowResized</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">gotMessage</span><span class=\"token punctuation\">(</span>ofMessage msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">dragEvent</span><span class=\"token punctuation\">(</span>ofDragInfo dragInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> \n\t\n<span class=\"token punctuation\">}</span>\n","type":"source","static":true}}],"fetch":[]}