{"data":[{"page":{"entry":{"name":"gtxvector_query (functions)","filename":"gtx_vector_query_functions.markdown","absolute":"/Users/Gilbert/Code/openFrameworks/ofSite/documentation/glm/gtx_vector_query_functions.markdown","path":"/documentation/glm/gtx_vector_query_functions","route":"/documentation/glm/gtx_vector_query_functions.markdown","dir":"../ofSite/documentation/glm","ext":"markdown","type":"page","id":2321,"parent":2235,"breadcrumbs":[2235,1968],"siblings":[],"translations":{}},"description":{},"methods":[null,{"short":"<p>Check whether two vectors are collinears.</p>\n<p><strong>See also</strong>: gtx_vector_query extensions.</p>\n","desc":""},{"short":"<p>Check whether two vectors are orthogonals.</p>\n<p><strong>See also</strong>: gtx_vector_query extensions.</p>\n","desc":""},{"short":"<p>Check whether two vectors are orthonormal.</p>\n<p><strong>See also</strong>: gtx_vector_query extensions.</p>\n","desc":""},{"short":"<p>Check whether a each component of a vector is null.</p>\n<p><strong>See also</strong>: gtx_vector_query extensions.</p>\n","desc":""},{"short":"<p>Check whether a vector is normalized.</p>\n<p><strong>See also</strong>: gtx_vector_query extensions.</p>\n","desc":""},{"short":"<p>Check whether a vector is null.</p>\n<p><strong>See also</strong>: gtx_vector_query extensions.</p>\n","desc":""},{}],"document":"<p>#functions</p>\n<!--\n_visible: True_\n_advanced: False_\n-->\n<p>##Description</p>\n<!----------------------------------------------------------------------------->\n<p>###bool glm::areCollinear(T, &amp;v0 = P, T, &amp;v1 = P, &amp;epsilon)</p>\n<!--\n_syntax: glm::areCollinear(T, &v0 = P, T, &v1 = P, &epsilon)_\n_name: glm::areCollinear_\n_returns: bool_\n_returns_description: _\n_parameters: const vecType< T, P > &v0=P, const vecType< T, P > &v1=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Check whether two vectors are collinears.</p>\n<p><strong>See also</strong>: gtx_vector_query extensions.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool glm::areOrthogonal(T, &amp;v0 = P, T, &amp;v1 = P, &amp;epsilon)</p>\n<!--\n_syntax: glm::areOrthogonal(T, &v0 = P, T, &v1 = P, &epsilon)_\n_name: glm::areOrthogonal_\n_returns: bool_\n_returns_description: _\n_parameters: const vecType< T, P > &v0=P, const vecType< T, P > &v1=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Check whether two vectors are orthogonals.</p>\n<p><strong>See also</strong>: gtx_vector_query extensions.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool glm::areOrthonormal(T, &amp;v0 = P, T, &amp;v1 = P, &amp;epsilon)</p>\n<!--\n_syntax: glm::areOrthonormal(T, &v0 = P, T, &v1 = P, &epsilon)_\n_name: glm::areOrthonormal_\n_returns: bool_\n_returns_description: _\n_parameters: const vecType< T, P > &v0=P, const vecType< T, P > &v1=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Check whether two vectors are orthonormal.</p>\n<p><strong>See also</strong>: gtx_vector_query extensions.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###vecType&lt; bool, P &gt; glm::isCompNull(T, &amp;v = P, &amp;epsilon)</p>\n<!--\n_syntax: glm::isCompNull(T, &v = P, &epsilon)_\n_name: glm::isCompNull_\n_returns: vecType< bool, P >_\n_returns_description: _\n_parameters: const vecType< T, P > &v=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Check whether a each component of a vector is null.</p>\n<p><strong>See also</strong>: gtx_vector_query extensions.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool glm::isNormalized(T, &amp;v = P, &amp;epsilon)</p>\n<!--\n_syntax: glm::isNormalized(T, &v = P, &epsilon)_\n_name: glm::isNormalized_\n_returns: bool_\n_returns_description: _\n_parameters: const vecType< T, P > &v=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Check whether a vector is normalized.</p>\n<p><strong>See also</strong>: gtx_vector_query extensions.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool glm::isNull(T, &amp;v = P, &amp;epsilon)</p>\n<!--\n_syntax: glm::isNull(T, &v = P, &epsilon)_\n_name: glm::isNull_\n_returns: bool_\n_returns_description: _\n_parameters: const vecType< T, P > &v=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Check whether a vector is null.</p>\n<p><strong>See also</strong>: gtx_vector_query extensions.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n","raw":"#functions\n\n\n<!--\n_visible: True_\n_advanced: False_\n-->\n\n##Description\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool glm::areCollinear(T, &v0 = P, T, &v1 = P, &epsilon)\n\n<!--\n_syntax: glm::areCollinear(T, &v0 = P, T, &v1 = P, &epsilon)_\n_name: glm::areCollinear_\n_returns: bool_\n_returns_description: _\n_parameters: const vecType< T, P > &v0=P, const vecType< T, P > &v1=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Check whether two vectors are collinears.\n\n**See also**: gtx_vector_query extensions.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool glm::areOrthogonal(T, &v0 = P, T, &v1 = P, &epsilon)\n\n<!--\n_syntax: glm::areOrthogonal(T, &v0 = P, T, &v1 = P, &epsilon)_\n_name: glm::areOrthogonal_\n_returns: bool_\n_returns_description: _\n_parameters: const vecType< T, P > &v0=P, const vecType< T, P > &v1=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Check whether two vectors are orthogonals.\n\n**See also**: gtx_vector_query extensions.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool glm::areOrthonormal(T, &v0 = P, T, &v1 = P, &epsilon)\n\n<!--\n_syntax: glm::areOrthonormal(T, &v0 = P, T, &v1 = P, &epsilon)_\n_name: glm::areOrthonormal_\n_returns: bool_\n_returns_description: _\n_parameters: const vecType< T, P > &v0=P, const vecType< T, P > &v1=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Check whether two vectors are orthonormal.\n\n**See also**: gtx_vector_query extensions.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###vecType< bool, P > glm::isCompNull(T, &v = P, &epsilon)\n\n<!--\n_syntax: glm::isCompNull(T, &v = P, &epsilon)_\n_name: glm::isCompNull_\n_returns: vecType< bool, P >_\n_returns_description: _\n_parameters: const vecType< T, P > &v=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Check whether a each component of a vector is null.\n\n**See also**: gtx_vector_query extensions.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool glm::isNormalized(T, &v = P, &epsilon)\n\n<!--\n_syntax: glm::isNormalized(T, &v = P, &epsilon)_\n_name: glm::isNormalized_\n_returns: bool_\n_returns_description: _\n_parameters: const vecType< T, P > &v=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Check whether a vector is normalized.\n\n**See also**: gtx_vector_query extensions.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool glm::isNull(T, &v = P, &epsilon)\n\n<!--\n_syntax: glm::isNull(T, &v = P, &epsilon)_\n_name: glm::isNull_\n_returns: bool_\n_returns_description: _\n_parameters: const vecType< T, P > &v=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Check whether a vector is null.\n\n**See also**: gtx_vector_query extensions.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page","static":true}}],"fetch":[]}