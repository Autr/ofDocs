{"data":[{"page":{"entry":{"name":"gtxmatrix_operation (functions)","filename":"gtx_matrix_operation_functions.markdown","absolute":"/Users/Gilbert/Code/openFrameworks/ofSite/documentation/glm/gtx_matrix_operation_functions.markdown","path":"/documentation/glm/gtx_matrix_operation_functions","route":"/documentation/glm/gtx_matrix_operation_functions.markdown","dir":"../ofSite/documentation/glm","ext":"markdown","type":"page","id":2300,"parent":2235,"breadcrumbs":[2235,1968],"siblings":[],"translations":{}},"description":{},"methods":[null,{"syntax":"glm::diagonal2x2(&v = P)","name":"glm::diagonal2x2","returns":"glm::mat2","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span>v<span class=\"token operator\">=</span>P","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Build a diagonal matrix.\nFrom GLM_GTX_matrix_operation extension.</p>\n","desc":"","counter":0},{"syntax":"glm::diagonal2x3(&v = P)","name":"glm::diagonal2x3","returns":"glm::mat2x3","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span>v<span class=\"token operator\">=</span>P","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Build a diagonal matrix.\nFrom GLM_GTX_matrix_operation extension.</p>\n","desc":"","counter":0},{"syntax":"glm::diagonal2x4(&v = P)","name":"glm::diagonal2x4","returns":"glm::mat2x4","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span>v<span class=\"token operator\">=</span>P","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Build a diagonal matrix.\nFrom GLM_GTX_matrix_operation extension.</p>\n","desc":"","counter":0},{"syntax":"glm::diagonal3x2(&v = P)","name":"glm::diagonal3x2","returns":"glm::mat3x2","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span>v<span class=\"token operator\">=</span>P","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Build a diagonal matrix.\nFrom GLM_GTX_matrix_operation extension.</p>\n","desc":"","counter":0},{"syntax":"glm::diagonal3x3(&v = P)","name":"glm::diagonal3x3","returns":"glm::mat3","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span>v<span class=\"token operator\">=</span>P","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Build a diagonal matrix.\nFrom GLM_GTX_matrix_operation extension.</p>\n","desc":"","counter":0},{"syntax":"glm::diagonal3x4(&v = P)","name":"glm::diagonal3x4","returns":"glm::mat3x4","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span>v<span class=\"token operator\">=</span>P","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Build a diagonal matrix.\nFrom GLM_GTX_matrix_operation extension.</p>\n","desc":"","counter":0},{"syntax":"glm::diagonal4x2(&v = P)","name":"glm::diagonal4x2","returns":"glm::mat4x2","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span>v<span class=\"token operator\">=</span>P","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Build a diagonal matrix.\nFrom GLM_GTX_matrix_operation extension.</p>\n","desc":"","counter":0},{"syntax":"glm::diagonal4x3(&v = P)","name":"glm::diagonal4x3","returns":"glm::mat4x3","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span>v<span class=\"token operator\">=</span>P","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Build a diagonal matrix.\nFrom GLM_GTX_matrix_operation extension.</p>\n","desc":"","counter":0},{"syntax":"glm::diagonal4x4(&v = P)","name":"glm::diagonal4x4","returns":"glm::mat4","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec4 <span class=\"token operator\">&amp;</span>v<span class=\"token operator\">=</span>P","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Build a diagonal matrix.\nFrom GLM_GTX_matrix_operation extension.</p>\n","desc":"","counter":0},{}],"document":"<p>#functions</p>\n<!--\n_visible: True_\n_advanced: False_\n-->\n<p>##Description</p>\n<!----------------------------------------------------------------------------->\n<p>###glm::mat2 glm::diagonal2x2(&amp;v = P)</p>\n<!--\n_syntax: glm::diagonal2x2(&v = P)_\n_name: glm::diagonal2x2_\n_returns: glm::mat2_\n_returns_description: _\n_parameters: const glm::vec2 &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Build a diagonal matrix.\nFrom GLM_GTX_matrix_operation extension.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###glm::mat2x3 glm::diagonal2x3(&amp;v = P)</p>\n<!--\n_syntax: glm::diagonal2x3(&v = P)_\n_name: glm::diagonal2x3_\n_returns: glm::mat2x3_\n_returns_description: _\n_parameters: const glm::vec2 &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Build a diagonal matrix.\nFrom GLM_GTX_matrix_operation extension.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###glm::mat2x4 glm::diagonal2x4(&amp;v = P)</p>\n<!--\n_syntax: glm::diagonal2x4(&v = P)_\n_name: glm::diagonal2x4_\n_returns: glm::mat2x4_\n_returns_description: _\n_parameters: const glm::vec2 &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Build a diagonal matrix.\nFrom GLM_GTX_matrix_operation extension.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###glm::mat3x2 glm::diagonal3x2(&amp;v = P)</p>\n<!--\n_syntax: glm::diagonal3x2(&v = P)_\n_name: glm::diagonal3x2_\n_returns: glm::mat3x2_\n_returns_description: _\n_parameters: const glm::vec2 &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Build a diagonal matrix.\nFrom GLM_GTX_matrix_operation extension.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###glm::mat3 glm::diagonal3x3(&amp;v = P)</p>\n<!--\n_syntax: glm::diagonal3x3(&v = P)_\n_name: glm::diagonal3x3_\n_returns: glm::mat3_\n_returns_description: _\n_parameters: const glm::vec3 &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Build a diagonal matrix.\nFrom GLM_GTX_matrix_operation extension.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###glm::mat3x4 glm::diagonal3x4(&amp;v = P)</p>\n<!--\n_syntax: glm::diagonal3x4(&v = P)_\n_name: glm::diagonal3x4_\n_returns: glm::mat3x4_\n_returns_description: _\n_parameters: const glm::vec3 &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Build a diagonal matrix.\nFrom GLM_GTX_matrix_operation extension.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###glm::mat4x2 glm::diagonal4x2(&amp;v = P)</p>\n<!--\n_syntax: glm::diagonal4x2(&v = P)_\n_name: glm::diagonal4x2_\n_returns: glm::mat4x2_\n_returns_description: _\n_parameters: const glm::vec2 &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Build a diagonal matrix.\nFrom GLM_GTX_matrix_operation extension.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###glm::mat4x3 glm::diagonal4x3(&amp;v = P)</p>\n<!--\n_syntax: glm::diagonal4x3(&v = P)_\n_name: glm::diagonal4x3_\n_returns: glm::mat4x3_\n_returns_description: _\n_parameters: const glm::vec3 &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Build a diagonal matrix.\nFrom GLM_GTX_matrix_operation extension.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###glm::mat4 glm::diagonal4x4(&amp;v = P)</p>\n<!--\n_syntax: glm::diagonal4x4(&v = P)_\n_name: glm::diagonal4x4_\n_returns: glm::mat4_\n_returns_description: _\n_parameters: const glm::vec4 &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Build a diagonal matrix.\nFrom GLM_GTX_matrix_operation extension.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n","raw":"#functions\n\n\n<!--\n_visible: True_\n_advanced: False_\n-->\n\n##Description\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::mat2 glm::diagonal2x2(&v = P)\n\n<!--\n_syntax: glm::diagonal2x2(&v = P)_\n_name: glm::diagonal2x2_\n_returns: glm::mat2_\n_returns_description: _\n_parameters: const glm::vec2 &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Build a diagonal matrix.\n From GLM_GTX_matrix_operation extension.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::mat2x3 glm::diagonal2x3(&v = P)\n\n<!--\n_syntax: glm::diagonal2x3(&v = P)_\n_name: glm::diagonal2x3_\n_returns: glm::mat2x3_\n_returns_description: _\n_parameters: const glm::vec2 &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Build a diagonal matrix.\n From GLM_GTX_matrix_operation extension.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::mat2x4 glm::diagonal2x4(&v = P)\n\n<!--\n_syntax: glm::diagonal2x4(&v = P)_\n_name: glm::diagonal2x4_\n_returns: glm::mat2x4_\n_returns_description: _\n_parameters: const glm::vec2 &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Build a diagonal matrix.\n From GLM_GTX_matrix_operation extension.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::mat3x2 glm::diagonal3x2(&v = P)\n\n<!--\n_syntax: glm::diagonal3x2(&v = P)_\n_name: glm::diagonal3x2_\n_returns: glm::mat3x2_\n_returns_description: _\n_parameters: const glm::vec2 &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Build a diagonal matrix.\n From GLM_GTX_matrix_operation extension.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::mat3 glm::diagonal3x3(&v = P)\n\n<!--\n_syntax: glm::diagonal3x3(&v = P)_\n_name: glm::diagonal3x3_\n_returns: glm::mat3_\n_returns_description: _\n_parameters: const glm::vec3 &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Build a diagonal matrix.\n From GLM_GTX_matrix_operation extension.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::mat3x4 glm::diagonal3x4(&v = P)\n\n<!--\n_syntax: glm::diagonal3x4(&v = P)_\n_name: glm::diagonal3x4_\n_returns: glm::mat3x4_\n_returns_description: _\n_parameters: const glm::vec3 &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Build a diagonal matrix.\n From GLM_GTX_matrix_operation extension.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::mat4x2 glm::diagonal4x2(&v = P)\n\n<!--\n_syntax: glm::diagonal4x2(&v = P)_\n_name: glm::diagonal4x2_\n_returns: glm::mat4x2_\n_returns_description: _\n_parameters: const glm::vec2 &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Build a diagonal matrix.\n From GLM_GTX_matrix_operation extension.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::mat4x3 glm::diagonal4x3(&v = P)\n\n<!--\n_syntax: glm::diagonal4x3(&v = P)_\n_name: glm::diagonal4x3_\n_returns: glm::mat4x3_\n_returns_description: _\n_parameters: const glm::vec3 &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Build a diagonal matrix.\n From GLM_GTX_matrix_operation extension.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::mat4 glm::diagonal4x4(&v = P)\n\n<!--\n_syntax: glm::diagonal4x4(&v = P)_\n_name: glm::diagonal4x4_\n_returns: glm::mat4_\n_returns_description: _\n_parameters: const glm::vec4 &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Build a diagonal matrix.\n From GLM_GTX_matrix_operation extension.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page","static":true}}],"fetch":[]}