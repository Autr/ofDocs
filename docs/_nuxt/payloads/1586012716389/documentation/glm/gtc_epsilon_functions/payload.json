{"data":[{"page":{"entry":{"name":"gtcepsilon (functions)","filename":"gtc_epsilon_functions.markdown","absolute":"/Users/Gilbert/Code/openFrameworks/ofSite/documentation/glm/gtc_epsilon_functions.markdown","path":"/documentation/glm/gtc_epsilon_functions","route":"/documentation/glm/gtc_epsilon_functions.markdown","dir":"../ofSite/documentation/glm","ext":"markdown","type":"page","id":2262,"parent":2235,"breadcrumbs":[2235,1968],"siblings":[],"translations":{}},"description":{},"methods":[null,{"syntax":"glm::epsilonEqual(&x, &y, &epsilon)","name":"glm::epsilonEqual","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>epsilon","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Returns the component-wise comparison of |x - y| &lt; epsilon.\nTrue if this expression is satisfied.</p>\n<p><strong>See also</strong>: gtc_epsilon</p>\n","desc":"","counter":0},{"short":"<p>Returns the component-wise comparison of |x - y| &lt; epsilon.\nTrue if this expression is satisfied.</p>\n<p><strong>See also</strong>: gtc_epsilon</p>\n","desc":""},{"syntax":"glm::epsilonNotEqual(&x, &y, &epsilon)","name":"glm::epsilonNotEqual","returns":"typename genType::boolType","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">typename</span> genType<span class=\"token operator\">::</span>value_type <span class=\"token operator\">&amp;</span>epsilon","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Returns the component-wise comparison of |x - y| &lt; epsilon.\nTrue if this expression is not satisfied.</p>\n<p><strong>See also</strong>: gtc_epsilon</p>\n","desc":"","counter":1},{"syntax":"glm::epsilonNotEqual(&x, &y, &epsilon)","name":"glm::epsilonNotEqual","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>epsilon","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","desc":""},{}],"document":"<p>#functions</p>\n<!--\n_visible: True_\n_advanced: False_\n-->\n<p>##Description</p>\n<!----------------------------------------------------------------------------->\n<p>###bool glm::epsilonEqual(&amp;x, &amp;y, &amp;epsilon)</p>\n<!--\n_syntax: glm::epsilonEqual(&x, &y, &epsilon)_\n_name: glm::epsilonEqual_\n_returns: bool_\n_returns_description: _\n_parameters: const genType &x, const genType &y, const genType &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Returns the component-wise comparison of |x - y| &lt; epsilon.\nTrue if this expression is satisfied.</p>\n<p><strong>See also</strong>: gtc_epsilon</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###vecType&lt; bool, P &gt; glm::epsilonEqual(T, &amp;x = P, T, &amp;y = P, &amp;epsilon)</p>\n<!--\n_syntax: glm::epsilonEqual(T, &x = P, T, &y = P, &epsilon)_\n_name: glm::epsilonEqual_\n_returns: vecType< bool, P >_\n_returns_description: _\n_parameters: const vecType< T, P > &x=P, const vecType< T, P > &y=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Returns the component-wise comparison of |x - y| &lt; epsilon.\nTrue if this expression is satisfied.</p>\n<p><strong>See also</strong>: gtc_epsilon</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###typename genType::boolType glm::epsilonNotEqual(&amp;x, &amp;y, &amp;epsilon)</p>\n<!--\n_syntax: glm::epsilonNotEqual(&x, &y, &epsilon)_\n_name: glm::epsilonNotEqual_\n_returns: typename genType::boolType_\n_returns_description: _\n_parameters: const genType &x, const genType &y, const typename genType::value_type &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Returns the component-wise comparison of |x - y| &lt; epsilon.\nTrue if this expression is not satisfied.</p>\n<p><strong>See also</strong>: gtc_epsilon</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool glm::epsilonNotEqual(&amp;x, &amp;y, &amp;epsilon)</p>\n<!--\n_syntax: glm::epsilonNotEqual(&x, &y, &epsilon)_\n_name: glm::epsilonNotEqual_\n_returns: bool_\n_returns_description: _\n_parameters: const genType &x, const genType &y, const genType &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Returns the component-wise comparison of |x - y| &gt;= epsilon.\nTrue if this expression is not satisfied.</p>\n<p><strong>See also</strong>: gtc_epsilon</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n","raw":"#functions\n\n\n<!--\n_visible: True_\n_advanced: False_\n-->\n\n##Description\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool glm::epsilonEqual(&x, &y, &epsilon)\n\n<!--\n_syntax: glm::epsilonEqual(&x, &y, &epsilon)_\n_name: glm::epsilonEqual_\n_returns: bool_\n_returns_description: _\n_parameters: const genType &x, const genType &y, const genType &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nReturns the component-wise comparison of |x - y| < epsilon.\nTrue if this expression is satisfied.\n\n\n**See also**: gtc_epsilon\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###vecType< bool, P > glm::epsilonEqual(T, &x = P, T, &y = P, &epsilon)\n\n<!--\n_syntax: glm::epsilonEqual(T, &x = P, T, &y = P, &epsilon)_\n_name: glm::epsilonEqual_\n_returns: vecType< bool, P >_\n_returns_description: _\n_parameters: const vecType< T, P > &x=P, const vecType< T, P > &y=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nReturns the component-wise comparison of |x - y| < epsilon.\nTrue if this expression is satisfied.\n\n\n**See also**: gtc_epsilon\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###typename genType::boolType glm::epsilonNotEqual(&x, &y, &epsilon)\n\n<!--\n_syntax: glm::epsilonNotEqual(&x, &y, &epsilon)_\n_name: glm::epsilonNotEqual_\n_returns: typename genType::boolType_\n_returns_description: _\n_parameters: const genType &x, const genType &y, const typename genType::value_type &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nReturns the component-wise comparison of |x - y| < epsilon.\nTrue if this expression is not satisfied.\n\n\n**See also**: gtc_epsilon\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool glm::epsilonNotEqual(&x, &y, &epsilon)\n\n<!--\n_syntax: glm::epsilonNotEqual(&x, &y, &epsilon)_\n_name: glm::epsilonNotEqual_\n_returns: bool_\n_returns_description: _\n_parameters: const genType &x, const genType &y, const genType &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nReturns the component-wise comparison of |x - y| >= epsilon.\nTrue if this expression is not satisfied.\n\n\n**See also**: gtc_epsilon\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page","static":true}}],"fetch":[]}