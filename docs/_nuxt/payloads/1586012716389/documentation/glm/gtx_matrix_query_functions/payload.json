{"data":[{"page":{"entry":{"name":"gtxmatrix_query (functions)","filename":"gtx_matrix_query_functions.markdown","absolute":"/Users/Gilbert/Code/openFrameworks/ofSite/documentation/glm/gtx_matrix_query_functions.markdown","path":"/documentation/glm/gtx_matrix_query_functions","route":"/documentation/glm/gtx_matrix_query_functions.markdown","dir":"../ofSite/documentation/glm","ext":"markdown","type":"page","id":2301,"parent":2235,"breadcrumbs":[2235,1968],"siblings":[],"translations":{}},"description":{},"methods":[null,{"short":"<p>Return whether a matrix is an identity matrix.\nFrom GLM_GTX_matrix_query extension.</p>\n","desc":""},{"syntax":"glm::isNormalized(&m = P, &epsilon)","name":"glm::isNormalized","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat2 <span class=\"token operator\">&amp;</span>m<span class=\"token operator\">=</span>P<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> T <span class=\"token operator\">&amp;</span>epsilon","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Return whether a matrix is a normalized matrix.\nFrom GLM_GTX_matrix_query extension.</p>\n","desc":"","counter":2},{"syntax":"glm::isNormalized(&m = P, &epsilon)","name":"glm::isNormalized","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat3 <span class=\"token operator\">&amp;</span>m<span class=\"token operator\">=</span>P<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> T <span class=\"token operator\">&amp;</span>epsilon","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Return whether a matrix is a normalized matrix.\nFrom GLM_GTX_matrix_query extension.</p>\n","desc":""},{"syntax":"glm::isNormalized(&m = P, &epsilon)","name":"glm::isNormalized","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span>m<span class=\"token operator\">=</span>P<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> T <span class=\"token operator\">&amp;</span>epsilon","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Return whether a matrix is a normalized matrix.\nFrom GLM_GTX_matrix_query extension.</p>\n","desc":""},{"syntax":"glm::isNull(&m = P, &epsilon)","name":"glm::isNull","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat2 <span class=\"token operator\">&amp;</span>m<span class=\"token operator\">=</span>P<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> T <span class=\"token operator\">&amp;</span>epsilon","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Return whether a matrix a null matrix.\nFrom GLM_GTX_matrix_query extension.</p>\n","desc":"","counter":2},{"syntax":"glm::isNull(&m = P, &epsilon)","name":"glm::isNull","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat3 <span class=\"token operator\">&amp;</span>m<span class=\"token operator\">=</span>P<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> T <span class=\"token operator\">&amp;</span>epsilon","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Return whether a matrix a null matrix.\nFrom GLM_GTX_matrix_query extension.</p>\n","desc":""},{"syntax":"glm::isNull(&m = P, &epsilon)","name":"glm::isNull","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span>m<span class=\"token operator\">=</span>P<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> T <span class=\"token operator\">&amp;</span>epsilon","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Return whether a matrix is a null matrix.\nFrom GLM_GTX_matrix_query extension.</p>\n","desc":""},{"short":"<p>Return whether a matrix is an orthonormalized matrix.\nFrom GLM_GTX_matrix_query extension.</p>\n","desc":""},{}],"document":"<p>#functions</p>\n<!--\n_visible: True_\n_advanced: False_\n-->\n<p>##Description</p>\n<!----------------------------------------------------------------------------->\n<p>###bool glm::isIdentity(T, &amp;m = P, &amp;epsilon)</p>\n<!--\n_syntax: glm::isIdentity(T, &m = P, &epsilon)_\n_name: glm::isIdentity_\n_returns: bool_\n_returns_description: _\n_parameters: const matType< T, P > &m=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Return whether a matrix is an identity matrix.\nFrom GLM_GTX_matrix_query extension.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool glm::isNormalized(&amp;m = P, &amp;epsilon)</p>\n<!--\n_syntax: glm::isNormalized(&m = P, &epsilon)_\n_name: glm::isNormalized_\n_returns: bool_\n_returns_description: _\n_parameters: const glm::mat2 &m=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Return whether a matrix is a normalized matrix.\nFrom GLM_GTX_matrix_query extension.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool glm::isNormalized(&amp;m = P, &amp;epsilon)</p>\n<!--\n_syntax: glm::isNormalized(&m = P, &epsilon)_\n_name: glm::isNormalized_\n_returns: bool_\n_returns_description: _\n_parameters: const glm::mat3 &m=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Return whether a matrix is a normalized matrix.\nFrom GLM_GTX_matrix_query extension.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool glm::isNormalized(&amp;m = P, &amp;epsilon)</p>\n<!--\n_syntax: glm::isNormalized(&m = P, &epsilon)_\n_name: glm::isNormalized_\n_returns: bool_\n_returns_description: _\n_parameters: const glm::mat4 &m=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Return whether a matrix is a normalized matrix.\nFrom GLM_GTX_matrix_query extension.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool glm::isNull(&amp;m = P, &amp;epsilon)</p>\n<!--\n_syntax: glm::isNull(&m = P, &epsilon)_\n_name: glm::isNull_\n_returns: bool_\n_returns_description: _\n_parameters: const glm::mat2 &m=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Return whether a matrix a null matrix.\nFrom GLM_GTX_matrix_query extension.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool glm::isNull(&amp;m = P, &amp;epsilon)</p>\n<!--\n_syntax: glm::isNull(&m = P, &epsilon)_\n_name: glm::isNull_\n_returns: bool_\n_returns_description: _\n_parameters: const glm::mat3 &m=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Return whether a matrix a null matrix.\nFrom GLM_GTX_matrix_query extension.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool glm::isNull(&amp;m = P, &amp;epsilon)</p>\n<!--\n_syntax: glm::isNull(&m = P, &epsilon)_\n_name: glm::isNull_\n_returns: bool_\n_returns_description: _\n_parameters: const glm::mat4 &m=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Return whether a matrix is a null matrix.\nFrom GLM_GTX_matrix_query extension.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool glm::isOrthogonal(T, &amp;m = P, &amp;epsilon)</p>\n<!--\n_syntax: glm::isOrthogonal(T, &m = P, &epsilon)_\n_name: glm::isOrthogonal_\n_returns: bool_\n_returns_description: _\n_parameters: const matType< T, P > &m=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Return whether a matrix is an orthonormalized matrix.\nFrom GLM_GTX_matrix_query extension.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n","raw":"#functions\n\n\n<!--\n_visible: True_\n_advanced: False_\n-->\n\n##Description\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool glm::isIdentity(T, &m = P, &epsilon)\n\n<!--\n_syntax: glm::isIdentity(T, &m = P, &epsilon)_\n_name: glm::isIdentity_\n_returns: bool_\n_returns_description: _\n_parameters: const matType< T, P > &m=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nReturn whether a matrix is an identity matrix.\nFrom GLM_GTX_matrix_query extension.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool glm::isNormalized(&m = P, &epsilon)\n\n<!--\n_syntax: glm::isNormalized(&m = P, &epsilon)_\n_name: glm::isNormalized_\n_returns: bool_\n_returns_description: _\n_parameters: const glm::mat2 &m=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nReturn whether a matrix is a normalized matrix.\nFrom GLM_GTX_matrix_query extension.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool glm::isNormalized(&m = P, &epsilon)\n\n<!--\n_syntax: glm::isNormalized(&m = P, &epsilon)_\n_name: glm::isNormalized_\n_returns: bool_\n_returns_description: _\n_parameters: const glm::mat3 &m=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nReturn whether a matrix is a normalized matrix.\nFrom GLM_GTX_matrix_query extension.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool glm::isNormalized(&m = P, &epsilon)\n\n<!--\n_syntax: glm::isNormalized(&m = P, &epsilon)_\n_name: glm::isNormalized_\n_returns: bool_\n_returns_description: _\n_parameters: const glm::mat4 &m=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nReturn whether a matrix is a normalized matrix.\nFrom GLM_GTX_matrix_query extension.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool glm::isNull(&m = P, &epsilon)\n\n<!--\n_syntax: glm::isNull(&m = P, &epsilon)_\n_name: glm::isNull_\n_returns: bool_\n_returns_description: _\n_parameters: const glm::mat2 &m=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nReturn whether a matrix a null matrix.\nFrom GLM_GTX_matrix_query extension.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool glm::isNull(&m = P, &epsilon)\n\n<!--\n_syntax: glm::isNull(&m = P, &epsilon)_\n_name: glm::isNull_\n_returns: bool_\n_returns_description: _\n_parameters: const glm::mat3 &m=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nReturn whether a matrix a null matrix.\nFrom GLM_GTX_matrix_query extension.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool glm::isNull(&m = P, &epsilon)\n\n<!--\n_syntax: glm::isNull(&m = P, &epsilon)_\n_name: glm::isNull_\n_returns: bool_\n_returns_description: _\n_parameters: const glm::mat4 &m=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nReturn whether a matrix is a null matrix.\nFrom GLM_GTX_matrix_query extension.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool glm::isOrthogonal(T, &m = P, &epsilon)\n\n<!--\n_syntax: glm::isOrthogonal(T, &m = P, &epsilon)_\n_name: glm::isOrthogonal_\n_returns: bool_\n_returns_description: _\n_parameters: const matType< T, P > &m=P, const T &epsilon_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nReturn whether a matrix is an orthonormalized matrix.\nFrom GLM_GTX_matrix_query extension.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page","static":true}}],"fetch":[]}