{"data":[{"page":{"entry":{"name":"detailfunc_exponential (functions)","filename":"detail_func_exponential_functions.markdown","absolute":"/Users/Gilbert/Code/openFrameworks/ofSite/documentation/glm/detail_func_exponential_functions.markdown","path":"/documentation/glm/detail_func_exponential_functions","route":"/documentation/glm/detail_func_exponential_functions.markdown","dir":"../ofSite/documentation/glm","ext":"markdown","type":"page","id":2237,"parent":2235,"breadcrumbs":[2235,1968],"siblings":[],"translations":{}},"description":{},"methods":[null,{"desc":""},{"desc":""},{"desc":""},{"desc":""},{"desc":""},{"desc":""},{"short":"","desc":""},{}],"document":"<p>#functions</p>\n<!--\n_visible: True_\n_advanced: False_\n-->\n<p>##Description</p>\n<!----------------------------------------------------------------------------->\n<p>###vecType&lt; T, P &gt; glm::exp(T, &amp;v = P)</p>\n<!--\n_syntax: glm::exp(T, &v = P)_\n_name: glm::exp_\n_returns: vecType< T, P >_\n_returns_description: _\n_parameters: const vecType< T, P > &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Returns the natural exponentiation of x, i.e., e^x.</p>\n<p><strong>Parameters:</strong></p>\n<p>v exp function is defined for input values of v defined in the range (inf-, inf+) in the limit of the type precision.</p>\n<p><strong>Type parameters:</strong></p>\n<p>genType Floating-point scalar or vector types.</p>\n<p><strong>See also</strong>: <a href=\"http://www.opengl.org/sdk/docs/manglsl/xhtml/exp.xml\">GLSL exp man page</a></p>\n<p><strong>See also</strong>: <a href=\"http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf\">GLSL 4.20.8 specification, section 8.2 Exponential Functions</a></p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###vecType&lt; T, P &gt; glm::exp2(T, &amp;v = P)</p>\n<!--\n_syntax: glm::exp2(T, &v = P)_\n_name: glm::exp2_\n_returns: vecType< T, P >_\n_returns_description: _\n_parameters: const vecType< T, P > &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Returns 2 raised to the v power.</p>\n<p><strong>Parameters:</strong></p>\n<p>v exp2 function is defined for input values of v defined in the range (inf-, inf+) in the limit of the type precision.</p>\n<p><strong>Type parameters:</strong></p>\n<p>genType Floating-point scalar or vector types.</p>\n<p><strong>See also</strong>: <a href=\"http://www.opengl.org/sdk/docs/manglsl/xhtml/exp2.xml\">GLSL exp2 man page</a></p>\n<p><strong>See also</strong>: <a href=\"http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf\">GLSL 4.20.8 specification, section 8.2 Exponential Functions</a></p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###vecType&lt; T, P &gt; glm::inversesqrt(T, &amp;v = P)</p>\n<!--\n_syntax: glm::inversesqrt(T, &v = P)_\n_name: glm::inversesqrt_\n_returns: vecType< T, P >_\n_returns_description: _\n_parameters: const vecType< T, P > &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Returns the reciprocal of the positive square root of v.</p>\n<p><strong>Parameters:</strong></p>\n<p>v inversesqrt function is defined for input values of v defined in the range [0, inf+) in the limit of the type precision.</p>\n<p><strong>Type parameters:</strong></p>\n<p>genType Floating-point scalar or vector types.</p>\n<p><strong>See also</strong>: <a href=\"http://www.opengl.org/sdk/docs/manglsl/xhtml/inversesqrt.xml\">GLSL inversesqrt man page</a></p>\n<p><strong>See also</strong>: <a href=\"http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf\">GLSL 4.20.8 specification, section 8.2 Exponential Functions</a></p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###vecType&lt; T, P &gt; glm::log(T, &amp;v = P)</p>\n<!--\n_syntax: glm::log(T, &v = P)_\n_name: glm::log_\n_returns: vecType< T, P >_\n_returns_description: _\n_parameters: const vecType< T, P > &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Returns the natural logarithm of v, i.e.,\nreturns the value y which satisfies the equation x = e^y.\nResults are undefined if v &lt;= 0.</p>\n<p><strong>Parameters:</strong></p>\n<p>v log function is defined for input values of v defined in the range (0, inf+) in the limit of the type precision.</p>\n<p><strong>Type parameters:</strong></p>\n<p>genType Floating-point scalar or vector types.</p>\n<p><strong>See also</strong>: <a href=\"http://www.opengl.org/sdk/docs/manglsl/xhtml/log.xml\">GLSL log man page</a></p>\n<p><strong>See also</strong>: <a href=\"http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf\">GLSL 4.20.8 specification, section 8.2 Exponential Functions</a></p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###vecType&lt; T, P &gt; glm::log2(T, &amp;v = P)</p>\n<!--\n_syntax: glm::log2(T, &v = P)_\n_name: glm::log2_\n_returns: vecType< T, P >_\n_returns_description: _\n_parameters: const vecType< T, P > &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Returns the base 2 log of x, i.e., returns the value y,\nwhich satisfies the equation x = 2 ^ y.</p>\n<p><strong>Parameters:</strong></p>\n<p>v log2 function is defined for input values of v defined in the range (0, inf+) in the limit of the type precision.</p>\n<p><strong>Type parameters:</strong></p>\n<p>genType Floating-point scalar or vector types.</p>\n<p><strong>See also</strong>: <a href=\"http://www.opengl.org/sdk/docs/manglsl/xhtml/log2.xml\">GLSL log2 man page</a></p>\n<p><strong>See also</strong>: <a href=\"http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf\">GLSL 4.20.8 specification, section 8.2 Exponential Functions</a></p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###vecType&lt; T, P &gt; glm::pow(T, &amp;base = P, T, &amp;exponent = P)</p>\n<!--\n_syntax: glm::pow(T, &base = P, T, &exponent = P)_\n_name: glm::pow_\n_returns: vecType< T, P >_\n_returns_description: _\n_parameters: const vecType< T, P > &base=P, const vecType< T, P > &exponent=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Returns 'base' raised to the power 'exponent'.</p>\n<p><strong>Parameters:</strong></p>\n<p>base Floating point value. pow function is defined for input values of 'base' defined in the range (inf-, inf+) in the limit of the type precision.</p>\n<p>exponent Floating point value representing the 'exponent'.</p>\n<p><strong>Type parameters:</strong></p>\n<p>genType Floating-point scalar or vector types.</p>\n<p><strong>See also</strong>: <a href=\"http://www.opengl.org/sdk/docs/manglsl/xhtml/pow.xml\">GLSL pow man page</a></p>\n<p><strong>See also</strong>: <a href=\"http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf\">GLSL 4.20.8 specification, section 8.2 Exponential Functions</a></p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###vecType&lt; T, P &gt; glm::sqrt(T, &amp;v = P)</p>\n<!--\n_syntax: glm::sqrt(T, &v = P)_\n_name: glm::sqrt_\n_returns: vecType< T, P >_\n_returns_description: _\n_parameters: const vecType< T, P > &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n","raw":"#functions\n\n\n<!--\n_visible: True_\n_advanced: False_\n-->\n\n##Description\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###vecType< T, P > glm::exp(T, &v = P)\n\n<!--\n_syntax: glm::exp(T, &v = P)_\n_name: glm::exp_\n_returns: vecType< T, P >_\n_returns_description: _\n_parameters: const vecType< T, P > &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nReturns the natural exponentiation of x, i.e., e^x.\n\n\n**Parameters:**\n\nv exp function is defined for input values of v defined in the range (inf-, inf+) in the limit of the type precision.\n\n**Type parameters:**\n\ngenType Floating-point scalar or vector types.\n\n\n**See also**: <a href=\"http://www.opengl.org/sdk/docs/manglsl/xhtml/exp.xml\">GLSL exp man page</a>\n\n**See also**: <a href=\"http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf\">GLSL 4.20.8 specification, section 8.2 Exponential Functions</a>\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###vecType< T, P > glm::exp2(T, &v = P)\n\n<!--\n_syntax: glm::exp2(T, &v = P)_\n_name: glm::exp2_\n_returns: vecType< T, P >_\n_returns_description: _\n_parameters: const vecType< T, P > &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nReturns 2 raised to the v power.\n\n\n**Parameters:**\n\nv exp2 function is defined for input values of v defined in the range (inf-, inf+) in the limit of the type precision.\n\n**Type parameters:**\n\ngenType Floating-point scalar or vector types.\n\n\n**See also**: <a href=\"http://www.opengl.org/sdk/docs/manglsl/xhtml/exp2.xml\">GLSL exp2 man page</a>\n\n**See also**: <a href=\"http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf\">GLSL 4.20.8 specification, section 8.2 Exponential Functions</a>\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###vecType< T, P > glm::inversesqrt(T, &v = P)\n\n<!--\n_syntax: glm::inversesqrt(T, &v = P)_\n_name: glm::inversesqrt_\n_returns: vecType< T, P >_\n_returns_description: _\n_parameters: const vecType< T, P > &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nReturns the reciprocal of the positive square root of v.\n\n\n**Parameters:**\n\nv inversesqrt function is defined for input values of v defined in the range [0, inf+) in the limit of the type precision.\n\n**Type parameters:**\n\ngenType Floating-point scalar or vector types.\n\n\n**See also**: <a href=\"http://www.opengl.org/sdk/docs/manglsl/xhtml/inversesqrt.xml\">GLSL inversesqrt man page</a>\n\n**See also**: <a href=\"http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf\">GLSL 4.20.8 specification, section 8.2 Exponential Functions</a>\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###vecType< T, P > glm::log(T, &v = P)\n\n<!--\n_syntax: glm::log(T, &v = P)_\n_name: glm::log_\n_returns: vecType< T, P >_\n_returns_description: _\n_parameters: const vecType< T, P > &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nReturns the natural logarithm of v, i.e.,\nreturns the value y which satisfies the equation x = e^y.\nResults are undefined if v <= 0.\n\n\n**Parameters:**\n\nv log function is defined for input values of v defined in the range (0, inf+) in the limit of the type precision.\n\n**Type parameters:**\n\ngenType Floating-point scalar or vector types.\n\n\n**See also**: <a href=\"http://www.opengl.org/sdk/docs/manglsl/xhtml/log.xml\">GLSL log man page</a>\n\n**See also**: <a href=\"http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf\">GLSL 4.20.8 specification, section 8.2 Exponential Functions</a>\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###vecType< T, P > glm::log2(T, &v = P)\n\n<!--\n_syntax: glm::log2(T, &v = P)_\n_name: glm::log2_\n_returns: vecType< T, P >_\n_returns_description: _\n_parameters: const vecType< T, P > &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nReturns the base 2 log of x, i.e., returns the value y,\nwhich satisfies the equation x = 2 ^ y.\n\n\n**Parameters:**\n\nv log2 function is defined for input values of v defined in the range (0, inf+) in the limit of the type precision.\n\n**Type parameters:**\n\ngenType Floating-point scalar or vector types.\n\n\n**See also**: <a href=\"http://www.opengl.org/sdk/docs/manglsl/xhtml/log2.xml\">GLSL log2 man page</a>\n\n**See also**: <a href=\"http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf\">GLSL 4.20.8 specification, section 8.2 Exponential Functions</a>\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###vecType< T, P > glm::pow(T, &base = P, T, &exponent = P)\n\n<!--\n_syntax: glm::pow(T, &base = P, T, &exponent = P)_\n_name: glm::pow_\n_returns: vecType< T, P >_\n_returns_description: _\n_parameters: const vecType< T, P > &base=P, const vecType< T, P > &exponent=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nReturns 'base' raised to the power 'exponent'.\n\n\n**Parameters:**\n\nbase Floating point value. pow function is defined for input values of 'base' defined in the range (inf-, inf+) in the limit of the type precision.\n\nexponent Floating point value representing the 'exponent'.\n\n**Type parameters:**\n\ngenType Floating-point scalar or vector types.\n\n\n**See also**: <a href=\"http://www.opengl.org/sdk/docs/manglsl/xhtml/pow.xml\">GLSL pow man page</a>\n\n**See also**: <a href=\"http://www.opengl.org/registry/doc/GLSLangSpec.4.20.8.pdf\">GLSL 4.20.8 specification, section 8.2 Exponential Functions</a>\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###vecType< T, P > glm::sqrt(T, &v = P)\n\n<!--\n_syntax: glm::sqrt(T, &v = P)_\n_name: glm::sqrt_\n_returns: vecType< T, P >_\n_returns_description: _\n_parameters: const vecType< T, P > &v=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page","static":true}}],"fetch":[]}