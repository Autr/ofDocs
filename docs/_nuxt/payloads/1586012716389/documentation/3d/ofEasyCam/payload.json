{"data":[{"page":{"entry":{"name":"ofEasyCam","filename":"ofEasyCam.markdown","absolute":"/Users/Gilbert/Code/openFrameworks/ofSite/documentation/3d/ofEasyCam.markdown","path":"/documentation/3d/ofEasyCam","route":"/documentation/3d/ofEasyCam.markdown","dir":"../ofSite/documentation/3d","ext":"markdown","type":"page","id":1984,"parent":1967,"breadcrumbs":[1967,1968],"siblings":[],"translations":{}},"description":{"short":"<p>A super simple camera for interacting with objects in 3D space.</p>\n","full":"<p>ofCamera objects useful for viewing 3D scenes. ofEasyCam gives you a very simple to use interactive camera to view your scene. It's based more or less on PeasyCam from Processing.</p>\n<p>It has a few default controls built into it:</p>\n<ul>\n<li>Left click drag = orbit the target</li>\n<li>Right click drag = dolly in and out</li>\n<li>Double click = reset camera position</li>\n</ul>\n<h1></h1>\n"},"config":{"visible":"True","advanced":"False","istemplated":"False","extends":"ofCamera"},"methods":[{"syntax":"addInteraction(type, mouseButton, key)","name":"addInteraction","returns":"void","returns_description":null,"parameters":"ofEasyCam<span class=\"token operator\">::</span>TransformType type<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> mouseButton<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> key","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"begin(&viewport)","name":"begin","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofRectangle <span class=\"token operator\">&amp;</span>viewport","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>}\n\\name Rendering\n{</p>\n","desc":"<p>Begin using the camera, e.g.:</p>\n<pre><code class=\"language-{.cpp}\"><span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    myCamera<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">ofDrawGrid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">//draw rest of scene</span>\n\n    myCamera<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n","counter":1},{"syntax":"begin()","name":"begin","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"clearControlArea()","name":"clearControlArea","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Clears the area bounds for mouse control so that\nthe full viewport is used.</p>\n","desc":"","counter":0},{"syntax":"disableInertia()","name":"disableInertia","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"disableMouseInput()","name":"disableMouseInput","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Disable mouse camera control.</p>\n","desc":"","counter":0},{"syntax":"disableMouseMiddleButton()","name":"disableMouseMiddleButton","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0072","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Disable the mouse's middle button for camera control.</p>\n","desc":"","counter":0},{"syntax":"enableInertia()","name":"enableInertia","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"enableMouseInput()","name":"enableMouseInput","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Enable mouse camera control.</p>\n","desc":"","counter":0},{"syntax":"enableMouseMiddleButton()","name":"enableMouseMiddleButton","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0072","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Enable the mouse's middle button for camera control.</p>\n","desc":"","counter":0},{"syntax":"getControlArea()","name":"getControlArea","returns":"ofRectangle","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Returns the area bounds used for mouse control.</p>\n","desc":"","counter":0},{"syntax":"getDistance()","name":"getDistance","returns":"float","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Get the distance to the target.</p>\n<p><strong>Returns</strong>: the distance to the target.</p>\n","desc":"","counter":0},{"syntax":"getDrag()","name":"getDrag","returns":"float","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Get the camera's drag coefficient.</p>\n<p><strong>Returns</strong>: the camera's drag coefficient.</p>\n","desc":"","counter":0},{"syntax":"getInertiaEnabled()","name":"getInertiaEnabled","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Determine if intertia is enabled.</p>\n","desc":"","counter":0},{"syntax":"getMouseInputEnabled()","name":"getMouseInputEnabled","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Determine if mouse camera control is enabled.\n\\todo Rename to isMouseInputEnabled().</p>\n<p><strong>Returns</strong>: true iff mouse camera control is enabled.</p>\n","desc":"","counter":0},{"syntax":"getMouseMiddleButtonEnabled()","name":"getMouseMiddleButtonEnabled","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0072","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Determine if the middle mouse button is enabled.\n\\todo Rename to isMouseMiddleButtonEnabled().</p>\n<p><strong>Returns</strong>: true iff the mouse's middle button is enabled.</p>\n","desc":"","counter":0},{"syntax":"getRelativeYAxis()","name":"getRelativeYAxis","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Determine if the Y axis is set to be relative to the\ncamera orientation</p>\n","desc":"","counter":0},{"syntax":"getTarget()","name":"getTarget","returns":"const ofNode &","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Get the camera's target node reference.</p>\n<p><strong>Returns</strong>: a reference the the camera's target node.</p>\n","desc":"","counter":0},{"syntax":"getTranslationKey()","name":"getTranslationKey","returns":"char","returns_description":null,"parameters":null,"access":"public","version_started":"0072","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Get the current translation key code.</p>\n<p><strong>Returns</strong>: the current translation key code.</p>\n","desc":"","counter":0},{"syntax":"getUpAxis()","name":"getUpAxis","returns":"const glm::vec3 &","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Get the up axis.</p>\n","desc":"","counter":0},{"syntax":"hasInteraction(mouseButton, key)","name":"hasInteraction","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> mouseButton<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> key","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":1},{"syntax":"hasInteraction(type, mouseButton, key)","name":"hasInteraction","returns":"bool","returns_description":null,"parameters":"ofEasyCam<span class=\"token operator\">::</span>TransformType type<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> mouseButton<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> key","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"mousePressed(&mouse)","name":"mousePressed","returns":"void","returns_description":null,"parameters":"ofMouseEventArgs <span class=\"token operator\">&amp;</span>mouse","access":"private","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"mouseReleased(&mouse)","name":"mouseReleased","returns":"void","returns_description":null,"parameters":"ofMouseEventArgs <span class=\"token operator\">&amp;</span>mouse","access":"private","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"mouseScrolled(&mouse)","name":"mouseScrolled","returns":"void","returns_description":null,"parameters":"ofMouseEventArgs <span class=\"token operator\">&amp;</span>mouse","access":"private","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"ofEasyCam()","name":"ofEasyCam","returns":null,"returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Create a default camera.</p>\n","desc":"","counter":0},{"syntax":"removeAllInteractions()","name":"removeAllInteractions","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"removeInteraction(type, mouseButton, key)","name":"removeInteraction","returns":"void","returns_description":null,"parameters":"ofEasyCam<span class=\"token operator\">::</span>TransformType type<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> mouseButton<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> key","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"reset()","name":"reset","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Reset the camera position and orientation.</p>\n","desc":"","counter":0},{"syntax":"setAutoDistance(bAutoDistance)","name":"setAutoDistance","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">bool</span> bAutoDistance","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Enable or disable camera autodistance.</p>\n<p>Allow the camera to attempt to set the distance based on the camera's\ncurrent viewpoirt.</p>\n<p><strong>Parameters:</strong></p>\n<p>bAutoDistance true to enable auto distance.</p>\n","desc":"","counter":0},{"syntax":"setControlArea(&controlArea)","name":"setControlArea","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofRectangle <span class=\"token operator\">&amp;</span>controlArea","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Set the area bounds for mouse control.\nUses the full viewport by default.</p>\n","desc":"","counter":0},{"syntax":"setDistance(distance)","name":"setDistance","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> distance","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Set the camera's distance to the target.</p>\n<p><strong>Parameters:</strong></p>\n<p>distance The distance to the target.</p>\n","desc":"","counter":1},{"syntax":"setDistance(distance, save)","name":"setDistance","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> distance<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> save","access":"private","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setDrag(drag)","name":"setDrag","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> drag","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Set the camera's drag coefficient.</p>\n<p>Drag is affects how quickly the camera starts up and slows down when\na user interacts with its position using a pointer.</p>\n<p><strong>Parameters:</strong></p>\n<p>drag The normalized coefficient value between 0 and 1.</p>\n","desc":"","counter":0},{"syntax":"setEvents(&events)","name":"setEvents","returns":"void","returns_description":null,"parameters":"ofCoreEvents <span class=\"token operator\">&amp;</span>events","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"setRelativeYAxis(relative = true)","name":"setRelativeYAxis","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">bool</span> relative<span class=\"token operator\">=</span><span class=\"token boolean\">true</span>","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Uses Y axis relative to the camera orientation</p>\n<p>By default the Y axis used for interactive rotation\nis vec3(0,1,0) or whatever is set as up axis using\nsetUpAxis</p>\n","desc":"","counter":0},{"syntax":"setRotationSensitivity(&sensitivity)","name":"setRotationSensitivity","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span>sensitivity","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":1},{"syntax":"setRotationSensitivity(x, y, z)","name":"setRotationSensitivity","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Set the input sensitivity of the rotation.\nX and Y axes - when the value is 1.0, moving the mouse from one side to\nthe other of the arcball (min(viewport.width, viewport.height)) will\nrotate 180 degrees. When the value is 0.5, the rotation will be 90\ndegrees.</p>\n<p><strong>Parameters:</strong></p>\n<p>value Scales the xyz axes rotation factor by these values.</p>\n","desc":""},{"syntax":"setTarget(&target)","name":"setTarget","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span>target","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Set the camera's target.</p>\n<p><strong>Parameters:</strong></p>\n<p>target The position of the target.</p>\n","desc":"","counter":1},{"syntax":"setTarget(&target)","name":"setTarget","returns":"void","returns_description":null,"parameters":"ofNode <span class=\"token operator\">&amp;</span>target","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Set the camera's target.</p>\n<p><strong>Parameters:</strong></p>\n<p>target The position of the target.</p>\n","desc":""},{"syntax":"setTranslationKey(key)","name":"setTranslationKey","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">char</span> key","access":"public","version_started":"0072","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Set the key used to switch between camera rotation and translation.</p>\n<p>Translation will only happen when the translation key is pressed.</p>\n<p><strong>Parameters:</strong></p>\n<p>key The key code for the translation key.\n\\todo char is not the right data type for this. Should be int.</p>\n","desc":"","counter":0},{"syntax":"setTranslationSensitivity(&sensitivity)","name":"setTranslationSensitivity","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span>sensitivity","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":1},{"syntax":"setTranslationSensitivity(x, y, z)","name":"setTranslationSensitivity","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Set the input sensitivity of the translation.</p>\n<p><strong>Parameters:</strong></p>\n<p>value Scales the xyz axes translation factor by these values.</p>\n","desc":""},{"syntax":"setUpAxis(&up)","name":"setUpAxis","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span>up","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Set the camera fixed up axis for interactive\nmanipulation.</p>\n","desc":"","counter":0},{"syntax":"up()","name":"up","returns":"glm::vec3","returns_description":null,"parameters":null,"access":"private","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Returns the up axis vector;</p>\n","desc":"","counter":0},{"syntax":"update(&args)","name":"update","returns":"void","returns_description":null,"parameters":"ofEventArgs <span class=\"token operator\">&amp;</span>args","access":"private","version_started":"0072","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"updateMouse(&mouse)","name":"updateMouse","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span>mouse","access":"private","version_started":"0072","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"updateRotation()","name":"updateRotation","returns":"void","returns_description":null,"parameters":null,"access":"private","version_started":"0072","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"updateTranslation()","name":"updateTranslation","returns":"void","returns_description":null,"parameters":null,"access":"private","version_started":"0072","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"name":"bApplyInertia","type":"bool","access":"private","version_started":"0072","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"bAutoDistance","type":"bool","access":"private","version_started":"0073","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"bDistanceSet","type":"bool","access":"private","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"bEnableMouseMiddleButton","type":"bool","access":"private","version_started":"0072","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"bEventsSet","type":"bool","access":"private","version_started":"0.9.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{"name":"bInsideArcball","type":"bool","access":"private","version_started":"0072","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"bIsScrolling","type":"bool","access":"private","version_started":"0.10.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{"name":"bMouseInputEnabled","type":"bool","access":"private","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"bRelativeYAxis","type":"bool","access":"private","version_started":"0.10.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{"name":"controlArea","type":"ofRectangle","access":"private","version_started":"0.10.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"<p>If set, the area mouse control is bound to.</p>\n","desc":""},{"name":"curRot","type":"ofQuaternion","access":"private","version_started":"0072","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"<p>The current rotation quaternion.</p>\n","desc":""},{"name":"currentTransformType","type":"ofEasyCam::TransformType","access":"private","version_started":"0.10.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{"name":"doInertia","type":"bool","access":"private","version_started":"0.10.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{"name":"doTranslationKey","type":"char","access":"private","version_started":"0072","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"<p>The key used to differentiate between translation and rotation.</p>\n","desc":""},{"name":"drag","type":"float","access":"private","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"events","type":"ofCoreEvents *","access":"private","version_started":"0.9.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{"name":"interactions","type":"int","access":"private","version_started":"0.10.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{"name":"lastDistance","type":"float","access":"private","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"lastPressAxisX","type":"int","access":"private","version_started":"0.10.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"<p>\\name On Press cache\n{\ncamera properties when the mouse is pressed.</p>\n","desc":""},{"name":"lastPressAxisY","type":"int","access":"private","version_started":"0.10.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{"name":"lastPressAxisZ","type":"int","access":"private","version_started":"0.10.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{"name":"lastPressMouse","type":"int","access":"private","version_started":"0.10.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{"name":"lastPressOrientation","type":"int","access":"private","version_started":"0.10.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{"name":"lastPressPosition","type":"int","access":"private","version_started":"0.10.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{"name":"lastTap","type":"unsigned long","access":"private","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"<p>The time of the last pointer down event.</p>\n","desc":""},{"name":"listeners","type":"ofEventListeners","access":"private","version_started":"0.10.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{"name":"mouseAtScroll","type":"int","access":"private","version_started":"0.10.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{"name":"mouseVel","type":"ofVec2f","access":"private","version_started":"0072","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"<p>The mouse velocity (mouse position delta).</p>\n","desc":""},{"name":"prevFarClip","type":"float","access":"private","version_started":"0.10.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"<p>previous far and near clip.</p>\n","desc":""},{"name":"prevMouse","type":"ofVec2f","access":"private","version_started":"0.9.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"<p>The previous mouse position.</p>\n","desc":""},{"name":"prevNearClip","type":"float","access":"private","version_started":"0.10.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"<p>previous far and near clip.</p>\n","desc":""},{"name":"rot","type":"int","access":"private","version_started":"0.10.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"<p>rot and translated are used as a temporary values shared between the mouse callbacks and the update method.\nHow much the camera needs to be rotated.</p>\n","desc":""},{"name":"sensitivityRot","type":"float","access":"private","version_started":"0072","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"sensitivityScroll","type":"float","access":"private","version_started":"0.10.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{"name":"sensitivityTranslate","type":"int","access":"private","version_started":"0.10.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"<p>Sensitivity\nThese varibles determine how sensitive is the interaction.\nHigh values mean faster and bigger movements/rotations.\nLow Values mean more presicion.</p>\n","desc":""},{"name":"target","type":"ofNode","access":"private","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"translate","type":"int","access":"private","version_started":"0.10.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"<p>How much the camera needs to be translated.</p>\n","desc":""},{"name":"upAxis","type":"int","access":"private","version_started":"0.10.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{"name":"viewport","type":"ofRectangle","access":"private","version_started":"0072","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"<p>the current viewport.</p>\n","desc":""},{}],"document":"<p>#class ofEasyCam</p>\n<!--\n_visible: True_\n_advanced: False_\n_istemplated: False_\n_extends: ofCamera_\n-->\n<p>##InlineDescription</p>\n<p>A super simple camera for interacting with objects in 3D space.</p>\n<p>##Description</p>\n<p>ofCamera objects useful for viewing 3D scenes. ofEasyCam gives you a very simple to use interactive camera to view your scene. It's based more or less on PeasyCam from Processing.</p>\n<p>It has a few default controls built into it:</p>\n<ul>\n<li>Left click drag = orbit the target</li>\n<li>Right click drag = dolly in and out</li>\n<li>Double click = reset camera position</li>\n</ul>\n<p>##Methods</p>\n<p>###void addInteraction(type, mouseButton, key)</p>\n<!--\n_syntax: addInteraction(type, mouseButton, key)_\n_name: addInteraction_\n_returns: void_\n_returns_description: _\n_parameters: ofEasyCam::TransformType type, int mouseButton, int key_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void begin(&amp;viewport)</p>\n<!--\n_syntax: begin(&viewport)_\n_name: begin_\n_returns: void_\n_returns_description: _\n_parameters: const ofRectangle &viewport_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>}\n\\name Rendering\n{</p>\n<p>_description: _</p>\n<p>Begin using the camera, e.g.:</p>\n<pre><code class=\"language-{.cpp}\"><span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    myCamera<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">ofDrawGrid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">//draw rest of scene</span>\n\n    myCamera<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!----------------------------------------------------------------------------->\n<p>###void begin()</p>\n<!--\n_syntax: begin()_\n_name: begin_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void clearControlArea()</p>\n<!--\n_syntax: clearControlArea()_\n_name: clearControlArea_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Clears the area bounds for mouse control so that\nthe full viewport is used.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void disableInertia()</p>\n<!--\n_syntax: disableInertia()_\n_name: disableInertia_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void disableMouseInput()</p>\n<!--\n_syntax: disableMouseInput()_\n_name: disableMouseInput_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Disable mouse camera control.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void disableMouseMiddleButton()</p>\n<!--\n_syntax: disableMouseMiddleButton()_\n_name: disableMouseMiddleButton_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Disable the mouse's middle button for camera control.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void enableInertia()</p>\n<!--\n_syntax: enableInertia()_\n_name: enableInertia_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void enableMouseInput()</p>\n<!--\n_syntax: enableMouseInput()_\n_name: enableMouseInput_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Enable mouse camera control.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void enableMouseMiddleButton()</p>\n<!--\n_syntax: enableMouseMiddleButton()_\n_name: enableMouseMiddleButton_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Enable the mouse's middle button for camera control.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofRectangle getControlArea()</p>\n<!--\n_syntax: getControlArea()_\n_name: getControlArea_\n_returns: ofRectangle_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Returns the area bounds used for mouse control.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float getDistance()</p>\n<!--\n_syntax: getDistance()_\n_name: getDistance_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Get the distance to the target.</p>\n<p><strong>Returns</strong>: the distance to the target.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float getDrag()</p>\n<!--\n_syntax: getDrag()_\n_name: getDrag_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Get the camera's drag coefficient.</p>\n<p><strong>Returns</strong>: the camera's drag coefficient.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool getInertiaEnabled()</p>\n<!--\n_syntax: getInertiaEnabled()_\n_name: getInertiaEnabled_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Determine if intertia is enabled.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool getMouseInputEnabled()</p>\n<!--\n_syntax: getMouseInputEnabled()_\n_name: getMouseInputEnabled_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Determine if mouse camera control is enabled.\n\\todo Rename to isMouseInputEnabled().</p>\n<p><strong>Returns</strong>: true iff mouse camera control is enabled.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool getMouseMiddleButtonEnabled()</p>\n<!--\n_syntax: getMouseMiddleButtonEnabled()_\n_name: getMouseMiddleButtonEnabled_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Determine if the middle mouse button is enabled.\n\\todo Rename to isMouseMiddleButtonEnabled().</p>\n<p><strong>Returns</strong>: true iff the mouse's middle button is enabled.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool getRelativeYAxis()</p>\n<!--\n_syntax: getRelativeYAxis()_\n_name: getRelativeYAxis_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Determine if the Y axis is set to be relative to the\ncamera orientation</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###const ofNode &amp; getTarget()</p>\n<!--\n_syntax: getTarget()_\n_name: getTarget_\n_returns: const ofNode &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Get the camera's target node reference.</p>\n<p><strong>Returns</strong>: a reference the the camera's target node.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###char getTranslationKey()</p>\n<!--\n_syntax: getTranslationKey()_\n_name: getTranslationKey_\n_returns: char_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Get the current translation key code.</p>\n<p><strong>Returns</strong>: the current translation key code.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###const glm::vec3 &amp; getUpAxis()</p>\n<!--\n_syntax: getUpAxis()_\n_name: getUpAxis_\n_returns: const glm::vec3 &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Get the up axis.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool hasInteraction(mouseButton, key)</p>\n<!--\n_syntax: hasInteraction(mouseButton, key)_\n_name: hasInteraction_\n_returns: bool_\n_returns_description: _\n_parameters: int mouseButton, int key_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool hasInteraction(type, mouseButton, key)</p>\n<!--\n_syntax: hasInteraction(type, mouseButton, key)_\n_name: hasInteraction_\n_returns: bool_\n_returns_description: _\n_parameters: ofEasyCam::TransformType type, int mouseButton, int key_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void mousePressed(&amp;mouse)</p>\n<!--\n_syntax: mousePressed(&mouse)_\n_name: mousePressed_\n_returns: void_\n_returns_description: _\n_parameters: ofMouseEventArgs &mouse_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void mouseReleased(&amp;mouse)</p>\n<!--\n_syntax: mouseReleased(&mouse)_\n_name: mouseReleased_\n_returns: void_\n_returns_description: _\n_parameters: ofMouseEventArgs &mouse_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void mouseScrolled(&amp;mouse)</p>\n<!--\n_syntax: mouseScrolled(&mouse)_\n_name: mouseScrolled_\n_returns: void_\n_returns_description: _\n_parameters: ofMouseEventArgs &mouse_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<h3>ofEasyCam()</h3>\n<!--\n_syntax: ofEasyCam()_\n_name: ofEasyCam_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Create a default camera.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void removeAllInteractions()</p>\n<!--\n_syntax: removeAllInteractions()_\n_name: removeAllInteractions_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void removeInteraction(type, mouseButton, key)</p>\n<!--\n_syntax: removeInteraction(type, mouseButton, key)_\n_name: removeInteraction_\n_returns: void_\n_returns_description: _\n_parameters: ofEasyCam::TransformType type, int mouseButton, int key_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void reset()</p>\n<!--\n_syntax: reset()_\n_name: reset_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Reset the camera position and orientation.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setAutoDistance(bAutoDistance)</p>\n<!--\n_syntax: setAutoDistance(bAutoDistance)_\n_name: setAutoDistance_\n_returns: void_\n_returns_description: _\n_parameters: bool bAutoDistance_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Enable or disable camera autodistance.</p>\n<p>Allow the camera to attempt to set the distance based on the camera's\ncurrent viewpoirt.</p>\n<p><strong>Parameters:</strong></p>\n<p>bAutoDistance true to enable auto distance.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setControlArea(&amp;controlArea)</p>\n<!--\n_syntax: setControlArea(&controlArea)_\n_name: setControlArea_\n_returns: void_\n_returns_description: _\n_parameters: const ofRectangle &controlArea_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Set the area bounds for mouse control.\nUses the full viewport by default.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setDistance(distance)</p>\n<!--\n_syntax: setDistance(distance)_\n_name: setDistance_\n_returns: void_\n_returns_description: _\n_parameters: float distance_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Set the camera's distance to the target.</p>\n<p><strong>Parameters:</strong></p>\n<p>distance The distance to the target.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setDistance(distance, save)</p>\n<!--\n_syntax: setDistance(distance, save)_\n_name: setDistance_\n_returns: void_\n_returns_description: _\n_parameters: float distance, bool save_\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setDrag(drag)</p>\n<!--\n_syntax: setDrag(drag)_\n_name: setDrag_\n_returns: void_\n_returns_description: _\n_parameters: float drag_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Set the camera's drag coefficient.</p>\n<p>Drag is affects how quickly the camera starts up and slows down when\na user interacts with its position using a pointer.</p>\n<p><strong>Parameters:</strong></p>\n<p>drag The normalized coefficient value between 0 and 1.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setEvents(&amp;events)</p>\n<!--\n_syntax: setEvents(&events)_\n_name: setEvents_\n_returns: void_\n_returns_description: _\n_parameters: ofCoreEvents &events_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setRelativeYAxis(relative = true)</p>\n<!--\n_syntax: setRelativeYAxis(relative = true)_\n_name: setRelativeYAxis_\n_returns: void_\n_returns_description: _\n_parameters: bool relative=true_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Uses Y axis relative to the camera orientation</p>\n<p>By default the Y axis used for interactive rotation\nis vec3(0,1,0) or whatever is set as up axis using\nsetUpAxis</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setRotationSensitivity(&amp;sensitivity)</p>\n<!--\n_syntax: setRotationSensitivity(&sensitivity)_\n_name: setRotationSensitivity_\n_returns: void_\n_returns_description: _\n_parameters: const glm::vec3 &sensitivity_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setRotationSensitivity(x, y, z)</p>\n<!--\n_syntax: setRotationSensitivity(x, y, z)_\n_name: setRotationSensitivity_\n_returns: void_\n_returns_description: _\n_parameters: float x, float y, float z_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Set the input sensitivity of the rotation.\nX and Y axes - when the value is 1.0, moving the mouse from one side to\nthe other of the arcball (min(viewport.width, viewport.height)) will\nrotate 180 degrees. When the value is 0.5, the rotation will be 90\ndegrees.</p>\n<p><strong>Parameters:</strong></p>\n<p>value Scales the xyz axes rotation factor by these values.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setTarget(&amp;target)</p>\n<!--\n_syntax: setTarget(&target)_\n_name: setTarget_\n_returns: void_\n_returns_description: _\n_parameters: const glm::vec3 &target_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Set the camera's target.</p>\n<p><strong>Parameters:</strong></p>\n<p>target The position of the target.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setTarget(&amp;target)</p>\n<!--\n_syntax: setTarget(&target)_\n_name: setTarget_\n_returns: void_\n_returns_description: _\n_parameters: ofNode &target_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Set the camera's target.</p>\n<p><strong>Parameters:</strong></p>\n<p>target The position of the target.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setTranslationKey(key)</p>\n<!--\n_syntax: setTranslationKey(key)_\n_name: setTranslationKey_\n_returns: void_\n_returns_description: _\n_parameters: char key_\n_access: public_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Set the key used to switch between camera rotation and translation.</p>\n<p>Translation will only happen when the translation key is pressed.</p>\n<p><strong>Parameters:</strong></p>\n<p>key The key code for the translation key.\n\\todo char is not the right data type for this. Should be int.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setTranslationSensitivity(&amp;sensitivity)</p>\n<!--\n_syntax: setTranslationSensitivity(&sensitivity)_\n_name: setTranslationSensitivity_\n_returns: void_\n_returns_description: _\n_parameters: const glm::vec3 &sensitivity_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setTranslationSensitivity(x, y, z)</p>\n<!--\n_syntax: setTranslationSensitivity(x, y, z)_\n_name: setTranslationSensitivity_\n_returns: void_\n_returns_description: _\n_parameters: float x, float y, float z_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Set the input sensitivity of the translation.</p>\n<p><strong>Parameters:</strong></p>\n<p>value Scales the xyz axes translation factor by these values.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setUpAxis(&amp;up)</p>\n<!--\n_syntax: setUpAxis(&up)_\n_name: setUpAxis_\n_returns: void_\n_returns_description: _\n_parameters: const glm::vec3 &up_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Set the camera fixed up axis for interactive\nmanipulation.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###glm::vec3 up()</p>\n<!--\n_syntax: up()_\n_name: up_\n_returns: glm::vec3_\n_returns_description: _\n_parameters: _\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Returns the up axis vector;</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void update(&amp;args)</p>\n<!--\n_syntax: update(&args)_\n_name: update_\n_returns: void_\n_returns_description: _\n_parameters: ofEventArgs &args_\n_access: private_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void updateMouse(&amp;mouse)</p>\n<!--\n_syntax: updateMouse(&mouse)_\n_name: updateMouse_\n_returns: void_\n_returns_description: _\n_parameters: const glm::vec2 &mouse_\n_access: private_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void updateRotation()</p>\n<!--\n_syntax: updateRotation()_\n_name: updateRotation_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: private_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void updateTranslation()</p>\n<!--\n_syntax: updateTranslation()_\n_name: updateTranslation_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: private_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>##Variables</p>\n<p>###bool bApplyInertia</p>\n<!--\n_name: bApplyInertia_\n_type: bool_\n_access: private_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool bAutoDistance</p>\n<!--\n_name: bAutoDistance_\n_type: bool_\n_access: private_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool bDistanceSet</p>\n<!--\n_name: bDistanceSet_\n_type: bool_\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool bEnableMouseMiddleButton</p>\n<!--\n_name: bEnableMouseMiddleButton_\n_type: bool_\n_access: private_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool bEventsSet</p>\n<!--\n_name: bEventsSet_\n_type: bool_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool bInsideArcball</p>\n<!--\n_name: bInsideArcball_\n_type: bool_\n_access: private_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool bIsScrolling</p>\n<!--\n_name: bIsScrolling_\n_type: bool_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool bMouseInputEnabled</p>\n<!--\n_name: bMouseInputEnabled_\n_type: bool_\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool bRelativeYAxis</p>\n<!--\n_name: bRelativeYAxis_\n_type: bool_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofRectangle controlArea</p>\n<!--\n_name: controlArea_\n_type: ofRectangle_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>If set, the area mouse control is bound to.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofQuaternion curRot</p>\n<!--\n_name: curRot_\n_type: ofQuaternion_\n_access: private_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>The current rotation quaternion.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofEasyCam::TransformType currentTransformType</p>\n<!--\n_name: currentTransformType_\n_type: ofEasyCam::TransformType_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool doInertia</p>\n<!--\n_name: doInertia_\n_type: bool_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###char doTranslationKey</p>\n<!--\n_name: doTranslationKey_\n_type: char_\n_access: private_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>The key used to differentiate between translation and rotation.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float drag</p>\n<!--\n_name: drag_\n_type: float_\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofCoreEvents * events</p>\n<!--\n_name: events_\n_type: ofCoreEvents *_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int interactions</p>\n<!--\n_name: interactions_\n_type: int_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float lastDistance</p>\n<!--\n_name: lastDistance_\n_type: float_\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int lastPressAxisX</p>\n<!--\n_name: lastPressAxisX_\n_type: int_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>\\name On Press cache\n{\ncamera properties when the mouse is pressed.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int lastPressAxisY</p>\n<!--\n_name: lastPressAxisY_\n_type: int_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int lastPressAxisZ</p>\n<!--\n_name: lastPressAxisZ_\n_type: int_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int lastPressMouse</p>\n<!--\n_name: lastPressMouse_\n_type: int_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int lastPressOrientation</p>\n<!--\n_name: lastPressOrientation_\n_type: int_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int lastPressPosition</p>\n<!--\n_name: lastPressPosition_\n_type: int_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###unsigned long lastTap</p>\n<!--\n_name: lastTap_\n_type: unsigned long_\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>The time of the last pointer down event.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofEventListeners listeners</p>\n<!--\n_name: listeners_\n_type: ofEventListeners_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int mouseAtScroll</p>\n<!--\n_name: mouseAtScroll_\n_type: int_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofVec2f mouseVel</p>\n<!--\n_name: mouseVel_\n_type: ofVec2f_\n_access: private_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>The mouse velocity (mouse position delta).</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float prevFarClip</p>\n<!--\n_name: prevFarClip_\n_type: float_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>previous far and near clip.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofVec2f prevMouse</p>\n<!--\n_name: prevMouse_\n_type: ofVec2f_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>The previous mouse position.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float prevNearClip</p>\n<!--\n_name: prevNearClip_\n_type: float_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>previous far and near clip.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int rot</p>\n<!--\n_name: rot_\n_type: int_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>rot and translated are used as a temporary values shared between the mouse callbacks and the update method.\nHow much the camera needs to be rotated.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float sensitivityRot</p>\n<!--\n_name: sensitivityRot_\n_type: float_\n_access: private_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float sensitivityScroll</p>\n<!--\n_name: sensitivityScroll_\n_type: float_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int sensitivityTranslate</p>\n<!--\n_name: sensitivityTranslate_\n_type: int_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>Sensitivity\nThese varibles determine how sensitive is the interaction.\nHigh values mean faster and bigger movements/rotations.\nLow Values mean more presicion.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofNode target</p>\n<!--\n_name: target_\n_type: ofNode_\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int translate</p>\n<!--\n_name: translate_\n_type: int_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>How much the camera needs to be translated.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int upAxis</p>\n<!--\n_name: upAxis_\n_type: int_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofRectangle viewport</p>\n<!--\n_name: viewport_\n_type: ofRectangle_\n_access: private_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>the current viewport.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n","raw":"#class ofEasyCam\n\n\n<!--\n_visible: True_\n_advanced: False_\n_istemplated: False_\n_extends: ofCamera_\n-->\n\n##InlineDescription\n\nA super simple camera for interacting with objects in 3D space.\n\n\n\n\n\n##Description\n\nofCamera objects useful for viewing 3D scenes. ofEasyCam gives you a very simple to use interactive camera to view your scene. It's based more or less on PeasyCam from Processing.\n\nIt has a few default controls built into it:\n\n* Left click drag = orbit the target\n* Right click drag = dolly in and out\n* Double click = reset camera position\n\n\n\n\n\n##Methods\n\n\n\n###void addInteraction(type, mouseButton, key)\n\n<!--\n_syntax: addInteraction(type, mouseButton, key)_\n_name: addInteraction_\n_returns: void_\n_returns_description: _\n_parameters: ofEasyCam::TransformType type, int mouseButton, int key_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void begin(&viewport)\n\n<!--\n_syntax: begin(&viewport)_\n_name: begin_\n_returns: void_\n_returns_description: _\n_parameters: const ofRectangle &viewport_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\\}\n\\name Rendering\n\\{\n\n\n\n\n\n_description: _\n\nBegin using the camera, e.g.:\n\n~~~~{.cpp}\nvoid draw() {\n\n    myCamera.begin();\n\n    ofDrawGrid();\n    //draw rest of scene\n\n    myCamera.end();\n}\n~~~~\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void begin()\n\n<!--\n_syntax: begin()_\n_name: begin_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void clearControlArea()\n\n<!--\n_syntax: clearControlArea()_\n_name: clearControlArea_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nClears the area bounds for mouse control so that\nthe full viewport is used.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void disableInertia()\n\n<!--\n_syntax: disableInertia()_\n_name: disableInertia_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void disableMouseInput()\n\n<!--\n_syntax: disableMouseInput()_\n_name: disableMouseInput_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nDisable mouse camera control.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void disableMouseMiddleButton()\n\n<!--\n_syntax: disableMouseMiddleButton()_\n_name: disableMouseMiddleButton_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nDisable the mouse's middle button for camera control.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void enableInertia()\n\n<!--\n_syntax: enableInertia()_\n_name: enableInertia_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void enableMouseInput()\n\n<!--\n_syntax: enableMouseInput()_\n_name: enableMouseInput_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nEnable mouse camera control.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void enableMouseMiddleButton()\n\n<!--\n_syntax: enableMouseMiddleButton()_\n_name: enableMouseMiddleButton_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nEnable the mouse's middle button for camera control.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofRectangle getControlArea()\n\n<!--\n_syntax: getControlArea()_\n_name: getControlArea_\n_returns: ofRectangle_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nReturns the area bounds used for mouse control.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float getDistance()\n\n<!--\n_syntax: getDistance()_\n_name: getDistance_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nGet the distance to the target.\n\n**Returns**: the distance to the target.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float getDrag()\n\n<!--\n_syntax: getDrag()_\n_name: getDrag_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nGet the camera's drag coefficient.\n\n**Returns**: the camera's drag coefficient.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool getInertiaEnabled()\n\n<!--\n_syntax: getInertiaEnabled()_\n_name: getInertiaEnabled_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nDetermine if intertia is enabled.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool getMouseInputEnabled()\n\n<!--\n_syntax: getMouseInputEnabled()_\n_name: getMouseInputEnabled_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nDetermine if mouse camera control is enabled.\n\\todo Rename to isMouseInputEnabled().\n\n**Returns**: true iff mouse camera control is enabled.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool getMouseMiddleButtonEnabled()\n\n<!--\n_syntax: getMouseMiddleButtonEnabled()_\n_name: getMouseMiddleButtonEnabled_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nDetermine if the middle mouse button is enabled.\n\\todo Rename to isMouseMiddleButtonEnabled().\n\n**Returns**: true iff the mouse's middle button is enabled.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool getRelativeYAxis()\n\n<!--\n_syntax: getRelativeYAxis()_\n_name: getRelativeYAxis_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nDetermine if the Y axis is set to be relative to the\ncamera orientation\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###const ofNode & getTarget()\n\n<!--\n_syntax: getTarget()_\n_name: getTarget_\n_returns: const ofNode &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nGet the camera's target node reference.\n\n**Returns**: a reference the the camera's target node.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###char getTranslationKey()\n\n<!--\n_syntax: getTranslationKey()_\n_name: getTranslationKey_\n_returns: char_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nGet the current translation key code.\n\n**Returns**: the current translation key code.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###const glm::vec3 & getUpAxis()\n\n<!--\n_syntax: getUpAxis()_\n_name: getUpAxis_\n_returns: const glm::vec3 &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nGet the up axis.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool hasInteraction(mouseButton, key)\n\n<!--\n_syntax: hasInteraction(mouseButton, key)_\n_name: hasInteraction_\n_returns: bool_\n_returns_description: _\n_parameters: int mouseButton, int key_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool hasInteraction(type, mouseButton, key)\n\n<!--\n_syntax: hasInteraction(type, mouseButton, key)_\n_name: hasInteraction_\n_returns: bool_\n_returns_description: _\n_parameters: ofEasyCam::TransformType type, int mouseButton, int key_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void mousePressed(&mouse)\n\n<!--\n_syntax: mousePressed(&mouse)_\n_name: mousePressed_\n_returns: void_\n_returns_description: _\n_parameters: ofMouseEventArgs &mouse_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void mouseReleased(&mouse)\n\n<!--\n_syntax: mouseReleased(&mouse)_\n_name: mouseReleased_\n_returns: void_\n_returns_description: _\n_parameters: ofMouseEventArgs &mouse_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void mouseScrolled(&mouse)\n\n<!--\n_syntax: mouseScrolled(&mouse)_\n_name: mouseScrolled_\n_returns: void_\n_returns_description: _\n_parameters: ofMouseEventArgs &mouse_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n### ofEasyCam()\n\n<!--\n_syntax: ofEasyCam()_\n_name: ofEasyCam_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nCreate a default camera.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void removeAllInteractions()\n\n<!--\n_syntax: removeAllInteractions()_\n_name: removeAllInteractions_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void removeInteraction(type, mouseButton, key)\n\n<!--\n_syntax: removeInteraction(type, mouseButton, key)_\n_name: removeInteraction_\n_returns: void_\n_returns_description: _\n_parameters: ofEasyCam::TransformType type, int mouseButton, int key_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void reset()\n\n<!--\n_syntax: reset()_\n_name: reset_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nReset the camera position and orientation.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setAutoDistance(bAutoDistance)\n\n<!--\n_syntax: setAutoDistance(bAutoDistance)_\n_name: setAutoDistance_\n_returns: void_\n_returns_description: _\n_parameters: bool bAutoDistance_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nEnable or disable camera autodistance.\n\nAllow the camera to attempt to set the distance based on the camera's\ncurrent viewpoirt.\n\n\n**Parameters:**\n\nbAutoDistance true to enable auto distance.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setControlArea(&controlArea)\n\n<!--\n_syntax: setControlArea(&controlArea)_\n_name: setControlArea_\n_returns: void_\n_returns_description: _\n_parameters: const ofRectangle &controlArea_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nSet the area bounds for mouse control.\nUses the full viewport by default.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setDistance(distance)\n\n<!--\n_syntax: setDistance(distance)_\n_name: setDistance_\n_returns: void_\n_returns_description: _\n_parameters: float distance_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nSet the camera's distance to the target.\n\n**Parameters:**\n\ndistance The distance to the target.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setDistance(distance, save)\n\n<!--\n_syntax: setDistance(distance, save)_\n_name: setDistance_\n_returns: void_\n_returns_description: _\n_parameters: float distance, bool save_\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setDrag(drag)\n\n<!--\n_syntax: setDrag(drag)_\n_name: setDrag_\n_returns: void_\n_returns_description: _\n_parameters: float drag_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nSet the camera's drag coefficient.\n\nDrag is affects how quickly the camera starts up and slows down when\na user interacts with its position using a pointer.\n\n\n**Parameters:**\n\ndrag The normalized coefficient value between 0 and 1.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setEvents(&events)\n\n<!--\n_syntax: setEvents(&events)_\n_name: setEvents_\n_returns: void_\n_returns_description: _\n_parameters: ofCoreEvents &events_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setRelativeYAxis(relative = true)\n\n<!--\n_syntax: setRelativeYAxis(relative = true)_\n_name: setRelativeYAxis_\n_returns: void_\n_returns_description: _\n_parameters: bool relative=true_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nUses Y axis relative to the camera orientation\n\nBy default the Y axis used for interactive rotation\nis vec3(0,1,0) or whatever is set as up axis using\nsetUpAxis\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setRotationSensitivity(&sensitivity)\n\n<!--\n_syntax: setRotationSensitivity(&sensitivity)_\n_name: setRotationSensitivity_\n_returns: void_\n_returns_description: _\n_parameters: const glm::vec3 &sensitivity_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setRotationSensitivity(x, y, z)\n\n<!--\n_syntax: setRotationSensitivity(x, y, z)_\n_name: setRotationSensitivity_\n_returns: void_\n_returns_description: _\n_parameters: float x, float y, float z_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nSet the input sensitivity of the rotation.\nX and Y axes - when the value is 1.0, moving the mouse from one side to\nthe other of the arcball (min(viewport.width, viewport.height)) will\nrotate 180 degrees. When the value is 0.5, the rotation will be 90\ndegrees.\n\n**Parameters:**\n\nvalue Scales the xyz axes rotation factor by these values.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setTarget(&target)\n\n<!--\n_syntax: setTarget(&target)_\n_name: setTarget_\n_returns: void_\n_returns_description: _\n_parameters: const glm::vec3 &target_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nSet the camera's target.\n\n**Parameters:**\n\ntarget The position of the target.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setTarget(&target)\n\n<!--\n_syntax: setTarget(&target)_\n_name: setTarget_\n_returns: void_\n_returns_description: _\n_parameters: ofNode &target_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nSet the camera's target.\n\n**Parameters:**\n\ntarget The position of the target.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setTranslationKey(key)\n\n<!--\n_syntax: setTranslationKey(key)_\n_name: setTranslationKey_\n_returns: void_\n_returns_description: _\n_parameters: char key_\n_access: public_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nSet the key used to switch between camera rotation and translation.\n\nTranslation will only happen when the translation key is pressed.\n\n\n**Parameters:**\n\nkey The key code for the translation key.\n\\todo char is not the right data type for this. Should be int.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setTranslationSensitivity(&sensitivity)\n\n<!--\n_syntax: setTranslationSensitivity(&sensitivity)_\n_name: setTranslationSensitivity_\n_returns: void_\n_returns_description: _\n_parameters: const glm::vec3 &sensitivity_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setTranslationSensitivity(x, y, z)\n\n<!--\n_syntax: setTranslationSensitivity(x, y, z)_\n_name: setTranslationSensitivity_\n_returns: void_\n_returns_description: _\n_parameters: float x, float y, float z_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nSet the input sensitivity of the translation.\n\n**Parameters:**\n\nvalue Scales the xyz axes translation factor by these values.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setUpAxis(&up)\n\n<!--\n_syntax: setUpAxis(&up)_\n_name: setUpAxis_\n_returns: void_\n_returns_description: _\n_parameters: const glm::vec3 &up_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nSet the camera fixed up axis for interactive\nmanipulation.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::vec3 up()\n\n<!--\n_syntax: up()_\n_name: up_\n_returns: glm::vec3_\n_returns_description: _\n_parameters: _\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nReturns the up axis vector;\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void update(&args)\n\n<!--\n_syntax: update(&args)_\n_name: update_\n_returns: void_\n_returns_description: _\n_parameters: ofEventArgs &args_\n_access: private_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void updateMouse(&mouse)\n\n<!--\n_syntax: updateMouse(&mouse)_\n_name: updateMouse_\n_returns: void_\n_returns_description: _\n_parameters: const glm::vec2 &mouse_\n_access: private_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void updateRotation()\n\n<!--\n_syntax: updateRotation()_\n_name: updateRotation_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: private_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void updateTranslation()\n\n<!--\n_syntax: updateTranslation()_\n_name: updateTranslation_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: private_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n##Variables\n\n\n\n###bool bApplyInertia\n\n<!--\n_name: bApplyInertia_\n_type: bool_\n_access: private_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool bAutoDistance\n\n<!--\n_name: bAutoDistance_\n_type: bool_\n_access: private_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool bDistanceSet\n\n<!--\n_name: bDistanceSet_\n_type: bool_\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool bEnableMouseMiddleButton\n\n<!--\n_name: bEnableMouseMiddleButton_\n_type: bool_\n_access: private_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool bEventsSet\n\n<!--\n_name: bEventsSet_\n_type: bool_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool bInsideArcball\n\n<!--\n_name: bInsideArcball_\n_type: bool_\n_access: private_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool bIsScrolling\n\n<!--\n_name: bIsScrolling_\n_type: bool_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool bMouseInputEnabled\n\n<!--\n_name: bMouseInputEnabled_\n_type: bool_\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool bRelativeYAxis\n\n<!--\n_name: bRelativeYAxis_\n_type: bool_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofRectangle controlArea\n\n<!--\n_name: controlArea_\n_type: ofRectangle_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nIf set, the area mouse control is bound to.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofQuaternion curRot\n\n<!--\n_name: curRot_\n_type: ofQuaternion_\n_access: private_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nThe current rotation quaternion.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofEasyCam::TransformType currentTransformType\n\n<!--\n_name: currentTransformType_\n_type: ofEasyCam::TransformType_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool doInertia\n\n<!--\n_name: doInertia_\n_type: bool_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###char doTranslationKey\n\n<!--\n_name: doTranslationKey_\n_type: char_\n_access: private_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nThe key used to differentiate between translation and rotation.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float drag\n\n<!--\n_name: drag_\n_type: float_\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofCoreEvents * events\n\n<!--\n_name: events_\n_type: ofCoreEvents *_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int interactions\n\n<!--\n_name: interactions_\n_type: int_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float lastDistance\n\n<!--\n_name: lastDistance_\n_type: float_\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int lastPressAxisX\n\n<!--\n_name: lastPressAxisX_\n_type: int_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\\name On Press cache\n\\{\ncamera properties when the mouse is pressed.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int lastPressAxisY\n\n<!--\n_name: lastPressAxisY_\n_type: int_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int lastPressAxisZ\n\n<!--\n_name: lastPressAxisZ_\n_type: int_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int lastPressMouse\n\n<!--\n_name: lastPressMouse_\n_type: int_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int lastPressOrientation\n\n<!--\n_name: lastPressOrientation_\n_type: int_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int lastPressPosition\n\n<!--\n_name: lastPressPosition_\n_type: int_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###unsigned long lastTap\n\n<!--\n_name: lastTap_\n_type: unsigned long_\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nThe time of the last pointer down event.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofEventListeners listeners\n\n<!--\n_name: listeners_\n_type: ofEventListeners_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int mouseAtScroll\n\n<!--\n_name: mouseAtScroll_\n_type: int_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofVec2f mouseVel\n\n<!--\n_name: mouseVel_\n_type: ofVec2f_\n_access: private_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nThe mouse velocity (mouse position delta).\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float prevFarClip\n\n<!--\n_name: prevFarClip_\n_type: float_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nprevious far and near clip.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofVec2f prevMouse\n\n<!--\n_name: prevMouse_\n_type: ofVec2f_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nThe previous mouse position.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float prevNearClip\n\n<!--\n_name: prevNearClip_\n_type: float_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nprevious far and near clip.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int rot\n\n<!--\n_name: rot_\n_type: int_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nrot and translated are used as a temporary values shared between the mouse callbacks and the update method.\nHow much the camera needs to be rotated.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float sensitivityRot\n\n<!--\n_name: sensitivityRot_\n_type: float_\n_access: private_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float sensitivityScroll\n\n<!--\n_name: sensitivityScroll_\n_type: float_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int sensitivityTranslate\n\n<!--\n_name: sensitivityTranslate_\n_type: int_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nSensitivity\nThese varibles determine how sensitive is the interaction.\nHigh values mean faster and bigger movements/rotations.\nLow Values mean more presicion.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofNode target\n\n<!--\n_name: target_\n_type: ofNode_\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int translate\n\n<!--\n_name: translate_\n_type: int_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nHow much the camera needs to be translated.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int upAxis\n\n<!--\n_name: upAxis_\n_type: int_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofRectangle viewport\n\n<!--\n_name: viewport_\n_type: ofRectangle_\n_access: private_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nthe current viewport.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page","static":true}}],"fetch":[]}