{"data":[{"page":{"entry":{"name":"ofBoxPrimitive","filename":"ofBoxPrimitive.markdown","absolute":"/Users/Gilbert/Code/openFrameworks/ofSite/documentation/3d/ofBoxPrimitive.markdown","path":"/documentation/3d/ofBoxPrimitive","route":"/documentation/3d/ofBoxPrimitive.markdown","dir":"../ofSite/documentation/3d","ext":"markdown","type":"page","id":1980,"parent":1967,"breadcrumbs":[1967,1968],"siblings":[],"translations":{}},"description":{"short":null,"full":"<p>The ofBoxPrimitive allows you to create cubes and cuboids.</p>\n<p>Like other primitives, it allows you to set its dimensions and position, draw it, etc. As a simple example:</p>\n<pre><code class=\"language-{.cpp}\">\n<span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\n\tbox<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span> boxSize <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// or</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// box.set( boxHeight, boxWidth, boxDepth );</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\n\tbox<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">.</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">.</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbox<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>spinX<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbox<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>spinY<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// get all the faces from the icoSphere, handy when you want to copy</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// individual vertices or tweak them a little ;)</span>\n\tvector<span class=\"token operator\">&lt;</span>ofMeshFace</code></pre>\n"},"config":{"visible":"True","advanced":"False","istemplated":"False","extends":"of3dPrimitive"},"methods":[{"syntax":"getDepth()","name":"getDepth","returns":"float","returns_description":null,"parameters":null,"access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getHeight()","name":"getHeight","returns":"float","returns_description":null,"parameters":null,"access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getResolution()","name":"getResolution","returns":"glm::vec3","returns_description":null,"parameters":null,"access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getResolutionDepth()","name":"getResolutionDepth","returns":"int","returns_description":null,"parameters":null,"access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getResolutionHeight()","name":"getResolutionHeight","returns":"int","returns_description":null,"parameters":null,"access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getResolutionWidth()","name":"getResolutionWidth","returns":"int","returns_description":null,"parameters":null,"access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getSideIndices()","name":"getSideIndices","returns":"int","returns_description":null,"parameters":null,"access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getSideMesh(sideIndex)","name":"getSideMesh","returns":"ofMesh","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> sideIndex","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getSize()","name":"getSize","returns":"glm::vec3","returns_description":null,"parameters":null,"access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getWidth()","name":"getWidth","returns":"float","returns_description":null,"parameters":null,"access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"ofBoxPrimitive()","name":"ofBoxPrimitive","returns":null,"returns_description":null,"parameters":null,"access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":1},{"syntax":"ofBoxPrimitive(width, height, depth, resWidth = 2, resHeight = 2, resDepth = 2)","name":"ofBoxPrimitive","returns":null,"returns_description":null,"parameters":"<span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> depth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> resWidth<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> resHeight<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> resDepth<span class=\"token operator\">=</span><span class=\"token number\">2</span>","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"resizeToTexture(&inTexture)","name":"resizeToTexture","returns":"void","returns_description":null,"parameters":"ofTexture <span class=\"token operator\">&amp;</span>inTexture","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"set(size)","name":"set","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> size","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":2},{"syntax":"set(width, height, depth)","name":"set","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> depth","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"set(width, height, depth, resWidth, resHeight, resDepth)","name":"set","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> depth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> resWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> resHeight<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> resDepth","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setDepth(a_depth)","name":"setDepth","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> a_depth","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"setHeight(a_height)","name":"setHeight","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> a_height","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"setMode(mode)","name":"setMode","returns":"void","returns_description":null,"parameters":"ofPrimitiveMode mode","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"setResolution(res)","name":"setResolution","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> res","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":1},{"syntax":"setResolution(resWidth, resHeight, resDepth)","name":"setResolution","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> resWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> resHeight<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> resDepth","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setResolutionDepth(depthRes)","name":"setResolutionDepth","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> depthRes","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"setResolutionHeight(heightRes)","name":"setResolutionHeight","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> heightRes","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"setResolutionWidth(widthRes)","name":"setResolutionWidth","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> widthRes","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"setSideColor(sideIndex, color)","name":"setSideColor","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> sideIndex<span class=\"token punctuation\">,</span> ofColor color","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"setWidth(a_width)","name":"setWidth","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> a_width","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"~ofBoxPrimitive()","name":"~ofBoxPrimitive","returns":null,"returns_description":null,"parameters":null,"access":"public","version_started":"0073","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"name":"resolution","type":"ofVec3f","access":"protected","version_started":"0073","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"size","type":"ofVec3f","access":"protected","version_started":"0073","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"strides","type":"int","access":"protected","version_started":"0073","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"vertices","type":"int","access":"protected","version_started":"0073","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{}],"document":"<p>#class ofBoxPrimitive</p>\n<!--\n_visible: True_\n_advanced: False_\n_istemplated: False_\n_extends: of3dPrimitive_\n-->\n<p>##InlineDescription</p>\n<p>The ofBoxPrimitive allows you to create cubes and cuboids.</p>\n<p>Like other primitives, it allows you to set its dimensions and position, draw it, etc. As a simple example:</p>\n<pre><code class=\"language-{.cpp}\">\n<span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\n    box<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span> boxSize <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">// or</span>\n    <span class=\"token comment\" spellcheck=\"true\">// box.set( boxHeight, boxWidth, boxDepth );</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\n    box<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">.</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">.</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    box<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>spinX<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    box<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>spinY<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// get all the faces from the icoSphere, handy when you want to copy</span>\n    <span class=\"token comment\" spellcheck=\"true\">// individual vertices or tweak them a little ;)</span>\n    vector<span class=\"token operator\">&lt;</span>ofMeshFace<span class=\"token operator\">></span> triangles <span class=\"token operator\">=</span> box<span class=\"token punctuation\">.</span><span class=\"token function\">getMesh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getUniqueFaces</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// now draw</span>\n    box<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>To draw a texture over any primitive, simply bind the ofTexture instance and then draw your primitive:</p>\n<pre><code class=\"language-{.cpp}\">\ntexture<span class=\"token punctuation\">.</span><span class=\"token function\">getTextureReference</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\" spellcheck=\"true\">// now draw</span>\nbox<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<p>##Description</p>\n<p>The ofBoxPrimitive allows you to create cubes and cuboids.</p>\n<p>Like other primitives, it allows you to set its dimensions and position, draw it, etc. As a simple example:</p>\n<pre><code class=\"language-{.cpp}\">\n<span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\n\tbox<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span> boxSize <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// or</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// box.set( boxHeight, boxWidth, boxDepth );</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\n\tbox<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">.</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">.</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbox<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>spinX<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbox<span class=\"token punctuation\">.</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span>spinY<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// get all the faces from the icoSphere, handy when you want to copy</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// individual vertices or tweak them a little ;)</span>\n\tvector<span class=\"token operator\">&lt;</span>ofMeshFace<span class=\"token operator\">></span> triangles <span class=\"token operator\">=</span> box<span class=\"token punctuation\">.</span><span class=\"token function\">getMesh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getUniqueFaces</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// now draw</span>\n\tbox<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>To draw a texture over any primitive, simply bind the ofTexture instance and then draw your primitive:</p>\n<pre><code class=\"language-{.cpp}\">\ntexture<span class=\"token punctuation\">.</span><span class=\"token function\">getTextureReference</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\" spellcheck=\"true\">// now draw</span>\nbox<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<p>##Methods</p>\n<p>###float getDepth()</p>\n<!--\n_syntax: getDepth()_\n_name: getDepth_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float getHeight()</p>\n<!--\n_syntax: getHeight()_\n_name: getHeight_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###glm::vec3 getResolution()</p>\n<!--\n_syntax: getResolution()_\n_name: getResolution_\n_returns: glm::vec3_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int getResolutionDepth()</p>\n<!--\n_syntax: getResolutionDepth()_\n_name: getResolutionDepth_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int getResolutionHeight()</p>\n<!--\n_syntax: getResolutionHeight()_\n_name: getResolutionHeight_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int getResolutionWidth()</p>\n<!--\n_syntax: getResolutionWidth()_\n_name: getResolutionWidth_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int getSideIndices()</p>\n<!--\n_syntax: getSideIndices()_\n_name: getSideIndices_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofMesh getSideMesh(sideIndex)</p>\n<!--\n_syntax: getSideMesh(sideIndex)_\n_name: getSideMesh_\n_returns: ofMesh_\n_returns_description: _\n_parameters: int sideIndex_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###glm::vec3 getSize()</p>\n<!--\n_syntax: getSize()_\n_name: getSize_\n_returns: glm::vec3_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float getWidth()</p>\n<!--\n_syntax: getWidth()_\n_name: getWidth_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<h3>ofBoxPrimitive()</h3>\n<!--\n_syntax: ofBoxPrimitive()_\n_name: ofBoxPrimitive_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<h3>ofBoxPrimitive(width, height, depth, resWidth = 2, resHeight = 2, resDepth = 2)</h3>\n<!--\n_syntax: ofBoxPrimitive(width, height, depth, resWidth = 2, resHeight = 2, resDepth = 2)_\n_name: ofBoxPrimitive_\n_returns: _\n_returns_description: _\n_parameters: float width, float height, float depth, int resWidth=2, int resHeight=2, int resDepth=2_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void resizeToTexture(&amp;inTexture)</p>\n<!--\n_syntax: resizeToTexture(&inTexture)_\n_name: resizeToTexture_\n_returns: void_\n_returns_description: _\n_parameters: ofTexture &inTexture_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void set(size)</p>\n<!--\n_syntax: set(size)_\n_name: set_\n_returns: void_\n_returns_description: _\n_parameters: float size_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void set(width, height, depth)</p>\n<!--\n_syntax: set(width, height, depth)_\n_name: set_\n_returns: void_\n_returns_description: _\n_parameters: float width, float height, float depth_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void set(width, height, depth, resWidth, resHeight, resDepth)</p>\n<!--\n_syntax: set(width, height, depth, resWidth, resHeight, resDepth)_\n_name: set_\n_returns: void_\n_returns_description: _\n_parameters: float width, float height, float depth, int resWidth, int resHeight, int resDepth_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setDepth(a_depth)</p>\n<!--\n_syntax: setDepth(a_depth)_\n_name: setDepth_\n_returns: void_\n_returns_description: _\n_parameters: float a_depth_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setHeight(a_height)</p>\n<!--\n_syntax: setHeight(a_height)_\n_name: setHeight_\n_returns: void_\n_returns_description: _\n_parameters: float a_height_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setMode(mode)</p>\n<!--\n_syntax: setMode(mode)_\n_name: setMode_\n_returns: void_\n_returns_description: _\n_parameters: ofPrimitiveMode mode_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setResolution(res)</p>\n<!--\n_syntax: setResolution(res)_\n_name: setResolution_\n_returns: void_\n_returns_description: _\n_parameters: int res_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setResolution(resWidth, resHeight, resDepth)</p>\n<!--\n_syntax: setResolution(resWidth, resHeight, resDepth)_\n_name: setResolution_\n_returns: void_\n_returns_description: _\n_parameters: int resWidth, int resHeight, int resDepth_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setResolutionDepth(depthRes)</p>\n<!--\n_syntax: setResolutionDepth(depthRes)_\n_name: setResolutionDepth_\n_returns: void_\n_returns_description: _\n_parameters: int depthRes_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setResolutionHeight(heightRes)</p>\n<!--\n_syntax: setResolutionHeight(heightRes)_\n_name: setResolutionHeight_\n_returns: void_\n_returns_description: _\n_parameters: int heightRes_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setResolutionWidth(widthRes)</p>\n<!--\n_syntax: setResolutionWidth(widthRes)_\n_name: setResolutionWidth_\n_returns: void_\n_returns_description: _\n_parameters: int widthRes_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setSideColor(sideIndex, color)</p>\n<!--\n_syntax: setSideColor(sideIndex, color)_\n_name: setSideColor_\n_returns: void_\n_returns_description: _\n_parameters: int sideIndex, ofColor color_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setWidth(a_width)</p>\n<!--\n_syntax: setWidth(a_width)_\n_name: setWidth_\n_returns: void_\n_returns_description: _\n_parameters: float a_width_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<h3>~ofBoxPrimitive()</h3>\n<!--\n_syntax: ~ofBoxPrimitive()_\n_name: ~ofBoxPrimitive_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>##Variables</p>\n<p>###ofVec3f resolution</p>\n<!--\n_name: resolution_\n_type: ofVec3f_\n_access: protected_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofVec3f size</p>\n<!--\n_name: size_\n_type: ofVec3f_\n_access: protected_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int strides</p>\n<!--\n_name: strides_\n_type: int_\n_access: protected_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int vertices</p>\n<!--\n_name: vertices_\n_type: int_\n_access: protected_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n","raw":"#class ofBoxPrimitive\n\n\n<!--\n_visible: True_\n_advanced: False_\n_istemplated: False_\n_extends: of3dPrimitive_\n-->\n\n##InlineDescription\n\nThe ofBoxPrimitive allows you to create cubes and cuboids.\n\nLike other primitives, it allows you to set its dimensions and position, draw it, etc. As a simple example:\n\n~~~~{.cpp}\n\nvoid setup()\n{\n\n    box.set( boxSize );\n    // or\n    // box.set( boxHeight, boxWidth, boxDepth );\n}\n\nvoid draw()\n{\n\n    box.setPosition(ofGetWidth()*.2, ofGetHeight()*.75, 0);\n    box.rotate(spinX, 1.0, 0.0, 0.0);\n    box.rotate(spinY, 0, 1.0, 0.0);\n\n    // get all the faces from the icoSphere, handy when you want to copy\n    // individual vertices or tweak them a little ;)\n    vector<ofMeshFace> triangles = box.getMesh().getUniqueFaces();\n\n    // now draw\n    box.draw();\n}\n~~~~\n\nTo draw a texture over any primitive, simply bind the ofTexture instance and then draw your primitive:\n\n~~~~{.cpp}\n\ntexture.getTextureReference().bind();\n// now draw\nbox.draw();\n\n~~~~\n\n\n\n\n\n\n##Description\n\nThe ofBoxPrimitive allows you to create cubes and cuboids.\n\nLike other primitives, it allows you to set its dimensions and position, draw it, etc. As a simple example:\n\n~~~~{.cpp}\n\nvoid setup()\n{\n\n\tbox.set( boxSize );\n\t// or\n\t// box.set( boxHeight, boxWidth, boxDepth );\n}\n\nvoid draw()\n{\n\n\tbox.setPosition(ofGetWidth()*.2, ofGetHeight()*.75, 0);\n\tbox.rotate(spinX, 1.0, 0.0, 0.0);\n\tbox.rotate(spinY, 0, 1.0, 0.0);\n\n\t// get all the faces from the icoSphere, handy when you want to copy\n\t// individual vertices or tweak them a little ;)\n\tvector<ofMeshFace> triangles = box.getMesh().getUniqueFaces();\n\n\t// now draw\n\tbox.draw();\n}\n~~~~\n\nTo draw a texture over any primitive, simply bind the ofTexture instance and then draw your primitive:\n\n~~~~{.cpp}\n\ntexture.getTextureReference().bind();\n// now draw\nbox.draw();\n\n~~~~\n\n\n\n\n\n##Methods\n\n\n\n###float getDepth()\n\n<!--\n_syntax: getDepth()_\n_name: getDepth_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float getHeight()\n\n<!--\n_syntax: getHeight()_\n_name: getHeight_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::vec3 getResolution()\n\n<!--\n_syntax: getResolution()_\n_name: getResolution_\n_returns: glm::vec3_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int getResolutionDepth()\n\n<!--\n_syntax: getResolutionDepth()_\n_name: getResolutionDepth_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int getResolutionHeight()\n\n<!--\n_syntax: getResolutionHeight()_\n_name: getResolutionHeight_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int getResolutionWidth()\n\n<!--\n_syntax: getResolutionWidth()_\n_name: getResolutionWidth_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int getSideIndices()\n\n<!--\n_syntax: getSideIndices()_\n_name: getSideIndices_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofMesh getSideMesh(sideIndex)\n\n<!--\n_syntax: getSideMesh(sideIndex)_\n_name: getSideMesh_\n_returns: ofMesh_\n_returns_description: _\n_parameters: int sideIndex_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###glm::vec3 getSize()\n\n<!--\n_syntax: getSize()_\n_name: getSize_\n_returns: glm::vec3_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float getWidth()\n\n<!--\n_syntax: getWidth()_\n_name: getWidth_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n### ofBoxPrimitive()\n\n<!--\n_syntax: ofBoxPrimitive()_\n_name: ofBoxPrimitive_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n### ofBoxPrimitive(width, height, depth, resWidth = 2, resHeight = 2, resDepth = 2)\n\n<!--\n_syntax: ofBoxPrimitive(width, height, depth, resWidth = 2, resHeight = 2, resDepth = 2)_\n_name: ofBoxPrimitive_\n_returns: _\n_returns_description: _\n_parameters: float width, float height, float depth, int resWidth=2, int resHeight=2, int resDepth=2_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void resizeToTexture(&inTexture)\n\n<!--\n_syntax: resizeToTexture(&inTexture)_\n_name: resizeToTexture_\n_returns: void_\n_returns_description: _\n_parameters: ofTexture &inTexture_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void set(size)\n\n<!--\n_syntax: set(size)_\n_name: set_\n_returns: void_\n_returns_description: _\n_parameters: float size_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void set(width, height, depth)\n\n<!--\n_syntax: set(width, height, depth)_\n_name: set_\n_returns: void_\n_returns_description: _\n_parameters: float width, float height, float depth_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void set(width, height, depth, resWidth, resHeight, resDepth)\n\n<!--\n_syntax: set(width, height, depth, resWidth, resHeight, resDepth)_\n_name: set_\n_returns: void_\n_returns_description: _\n_parameters: float width, float height, float depth, int resWidth, int resHeight, int resDepth_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setDepth(a_depth)\n\n<!--\n_syntax: setDepth(a_depth)_\n_name: setDepth_\n_returns: void_\n_returns_description: _\n_parameters: float a_depth_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setHeight(a_height)\n\n<!--\n_syntax: setHeight(a_height)_\n_name: setHeight_\n_returns: void_\n_returns_description: _\n_parameters: float a_height_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setMode(mode)\n\n<!--\n_syntax: setMode(mode)_\n_name: setMode_\n_returns: void_\n_returns_description: _\n_parameters: ofPrimitiveMode mode_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setResolution(res)\n\n<!--\n_syntax: setResolution(res)_\n_name: setResolution_\n_returns: void_\n_returns_description: _\n_parameters: int res_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setResolution(resWidth, resHeight, resDepth)\n\n<!--\n_syntax: setResolution(resWidth, resHeight, resDepth)_\n_name: setResolution_\n_returns: void_\n_returns_description: _\n_parameters: int resWidth, int resHeight, int resDepth_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setResolutionDepth(depthRes)\n\n<!--\n_syntax: setResolutionDepth(depthRes)_\n_name: setResolutionDepth_\n_returns: void_\n_returns_description: _\n_parameters: int depthRes_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setResolutionHeight(heightRes)\n\n<!--\n_syntax: setResolutionHeight(heightRes)_\n_name: setResolutionHeight_\n_returns: void_\n_returns_description: _\n_parameters: int heightRes_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setResolutionWidth(widthRes)\n\n<!--\n_syntax: setResolutionWidth(widthRes)_\n_name: setResolutionWidth_\n_returns: void_\n_returns_description: _\n_parameters: int widthRes_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setSideColor(sideIndex, color)\n\n<!--\n_syntax: setSideColor(sideIndex, color)_\n_name: setSideColor_\n_returns: void_\n_returns_description: _\n_parameters: int sideIndex, ofColor color_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setWidth(a_width)\n\n<!--\n_syntax: setWidth(a_width)_\n_name: setWidth_\n_returns: void_\n_returns_description: _\n_parameters: float a_width_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n### ~ofBoxPrimitive()\n\n<!--\n_syntax: ~ofBoxPrimitive()_\n_name: ~ofBoxPrimitive_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n##Variables\n\n\n\n###ofVec3f resolution\n\n<!--\n_name: resolution_\n_type: ofVec3f_\n_access: protected_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofVec3f size\n\n<!--\n_name: size_\n_type: ofVec3f_\n_access: protected_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int strides\n\n<!--\n_name: strides_\n_type: int_\n_access: protected_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int vertices\n\n<!--\n_name: vertices_\n_type: int_\n_access: protected_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page","static":true}}],"fetch":[]}