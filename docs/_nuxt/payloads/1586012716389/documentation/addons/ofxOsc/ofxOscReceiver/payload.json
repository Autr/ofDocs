{"data":[{"page":{"entry":{"name":"ofxOscReceiver","filename":"ofxOscReceiver.markdown","absolute":"/Users/Gilbert/Code/openFrameworks/ofSite/documentation/addons/ofxOsc/ofxOscReceiver.markdown","path":"/documentation/addons/ofxOsc/ofxOscReceiver","route":"/documentation/addons/ofxOsc/ofxOscReceiver.markdown","dir":"../ofSite/documentation/addons/ofxOsc","ext":"markdown","type":"page","id":2130,"parent":2109,"breadcrumbs":[2109,1993,1968],"siblings":[],"translations":{}},"description":{"short":"<p>OSC message receiver which listens on a network port</p>\n","full":"<h1></h1>\n"},"config":{"visible":"True","advanced":"False","istemplated":"False","extends":null},"methods":[{"syntax":"ProcessMessage(&m, &remoteEndpoint)","name":"ProcessMessage","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">&amp;</span>m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">&amp;</span>remoteEndpoint","access":"protected","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>process an incoming osc message and add it to the queue</p>\n","desc":"","counter":0},{"syntax":"copy(&other)","name":"copy","returns":"ofxOscReceiver &","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofxOscReceiver <span class=\"token operator\">&amp;</span>other","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>for operator= and copy constructor</p>\n","desc":"","counter":0},{"syntax":"getNextMessage(&msg)","name":"getNextMessage","returns":"bool","returns_description":null,"parameters":"ofxOscMessage <span class=\"token operator\">&amp;</span>msg","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>remove a message from the queue and copy it's data into msg\n\\return false if there are no waiting messages, otherwise return true</p>\n","desc":"","counter":0},{"syntax":"getParameter(&parameter)","name":"getParameter","returns":"bool","returns_description":null,"parameters":"ofAbstractParameter <span class=\"token operator\">&amp;</span>parameter","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>try to get waiting message an ofParameter\n\\return true if message was handled by the given parameter</p>\n","desc":"","counter":0},{"syntax":"getPort()","name":"getPort","returns":"int","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>\\return listening port</p>\n","desc":"","counter":0},{"syntax":"getSettings()","name":"getSettings","returns":"const ofxOscReceiverSettings &","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>\\return the current receiver settings</p>\n","desc":"","counter":0},{"syntax":"hasWaitingMessages()","name":"hasWaitingMessages","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>\\return true if there are any messages waiting for collection</p>\n","desc":"","counter":0},{"syntax":"isListening()","name":"isListening","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>\\return true if the receiver is listening</p>\n","desc":"","counter":0},{"syntax":"ofxOscReceiver(&mom)","name":"ofxOscReceiver","returns":null,"returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofxOscReceiver <span class=\"token operator\">&amp;</span>mom","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":1},{"syntax":"ofxOscReceiver()","name":"ofxOscReceiver","returns":null,"returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"operator=(&mom)","name":"operator=","returns":"ofxOscReceiver &","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofxOscReceiver <span class=\"token operator\">&amp;</span>mom","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"setup(&settings)","name":"setup","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofxOscReceiverSettings <span class=\"token operator\">&amp;</span>settings","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>set up the receiver with the given settings</p>\n<p>starts listening if start is true (true by default)</p>\n<p>multiple receivers can share the same port if port reuse is\nenabled (true by default)</p>\n<p>\\return true if listening was started or start was not required</p>\n","desc":"","counter":1},{"syntax":"setup(port)","name":"setup","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> port","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>set up the receiver with the port to listen for messages on\nand start listening</p>\n<p>multiple receivers can share the same port if port reuse is\nenabled (true by default)</p>\n<p>\\return true if listening started</p>\n","desc":""},{"syntax":"start()","name":"start","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>start listening manually using the current settings</p>\n<p>this is not required if you called setup(port)\nor setup(settings) with start set to true</p>\n<p>\\return true if listening started or was already running</p>\n","desc":"","counter":0},{"syntax":"stop()","name":"stop","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>stop listening, does not clear port value</p>\n","desc":"","counter":0},{"syntax":"~ofxOscReceiver()","name":"~ofxOscReceiver","returns":null,"returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"name":"listenThread","type":"thread","access":"private","version_started":"0.10.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"<p>&lt; listener thread</p>\n","desc":""},{"short":"<p>&lt; message passing thread channel</p>\n","desc":""},{"name":"settings","type":"ofxOscReceiverSettings","access":"private","version_started":"0.10.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"<p>&lt; current settings</p>\n","desc":""},{}],"document":"<p>#class ofxOscReceiver</p>\n<!--\n_visible: True_\n_advanced: False_\n_istemplated: False_\n_extends: _\n-->\n<p>##InlineDescription</p>\n<p>OSC message receiver which listens on a network port</p>\n<p>##Description</p>\n<p>##Methods</p>\n<p>###void ProcessMessage(&amp;m, &amp;remoteEndpoint)</p>\n<!--\n_syntax: ProcessMessage(&m, &remoteEndpoint)_\n_name: ProcessMessage_\n_returns: void_\n_returns_description: _\n_parameters: const int &m, const int &remoteEndpoint_\n_access: protected_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>process an incoming osc message and add it to the queue</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofxOscReceiver &amp; copy(&amp;other)</p>\n<!--\n_syntax: copy(&other)_\n_name: copy_\n_returns: ofxOscReceiver &_\n_returns_description: _\n_parameters: const ofxOscReceiver &other_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>for operator= and copy constructor</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool getNextMessage(&amp;msg)</p>\n<!--\n_syntax: getNextMessage(&msg)_\n_name: getNextMessage_\n_returns: bool_\n_returns_description: _\n_parameters: ofxOscMessage &msg_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>remove a message from the queue and copy it's data into msg\n\\return false if there are no waiting messages, otherwise return true</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool getParameter(&amp;parameter)</p>\n<!--\n_syntax: getParameter(&parameter)_\n_name: getParameter_\n_returns: bool_\n_returns_description: _\n_parameters: ofAbstractParameter &parameter_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>try to get waiting message an ofParameter\n\\return true if message was handled by the given parameter</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int getPort()</p>\n<!--\n_syntax: getPort()_\n_name: getPort_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>\\return listening port</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###const ofxOscReceiverSettings &amp; getSettings()</p>\n<!--\n_syntax: getSettings()_\n_name: getSettings_\n_returns: const ofxOscReceiverSettings &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>\\return the current receiver settings</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool hasWaitingMessages()</p>\n<!--\n_syntax: hasWaitingMessages()_\n_name: hasWaitingMessages_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>\\return true if there are any messages waiting for collection</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool isListening()</p>\n<!--\n_syntax: isListening()_\n_name: isListening_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>\\return true if the receiver is listening</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<h3>ofxOscReceiver(&amp;mom)</h3>\n<!--\n_syntax: ofxOscReceiver(&mom)_\n_name: ofxOscReceiver_\n_returns: _\n_returns_description: _\n_parameters: const ofxOscReceiver &mom_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<h3>ofxOscReceiver()</h3>\n<!--\n_syntax: ofxOscReceiver()_\n_name: ofxOscReceiver_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofxOscReceiver &amp; operator=(&amp;mom)</p>\n<!--\n_syntax: operator=(&mom)_\n_name: operator=_\n_returns: ofxOscReceiver &_\n_returns_description: _\n_parameters: const ofxOscReceiver &mom_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool setup(&amp;settings)</p>\n<!--\n_syntax: setup(&settings)_\n_name: setup_\n_returns: bool_\n_returns_description: _\n_parameters: const ofxOscReceiverSettings &settings_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>set up the receiver with the given settings</p>\n<p>starts listening if start is true (true by default)</p>\n<p>multiple receivers can share the same port if port reuse is\nenabled (true by default)</p>\n<p>\\return true if listening was started or start was not required</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool setup(port)</p>\n<!--\n_syntax: setup(port)_\n_name: setup_\n_returns: bool_\n_returns_description: _\n_parameters: int port_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>set up the receiver with the port to listen for messages on\nand start listening</p>\n<p>multiple receivers can share the same port if port reuse is\nenabled (true by default)</p>\n<p>\\return true if listening started</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool start()</p>\n<!--\n_syntax: start()_\n_name: start_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>start listening manually using the current settings</p>\n<p>this is not required if you called setup(port)\nor setup(settings) with start set to true</p>\n<p>\\return true if listening started or was already running</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void stop()</p>\n<!--\n_syntax: stop()_\n_name: stop_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>stop listening, does not clear port value</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<h3>~ofxOscReceiver()</h3>\n<!--\n_syntax: ~ofxOscReceiver()_\n_name: ~ofxOscReceiver_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>##Variables</p>\n<p>###thread listenThread</p>\n<!--\n_name: listenThread_\n_type: thread_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>&lt; listener thread</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofThreadChannel&lt; ofxOscMessage &gt; messagesChannel</p>\n<!--\n_name: messagesChannel_\n_type: ofThreadChannel< ofxOscMessage >_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>&lt; message passing thread channel</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofxOscReceiverSettings settings</p>\n<!--\n_name: settings_\n_type: ofxOscReceiverSettings_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>&lt; current settings</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n","raw":"#class ofxOscReceiver\n\n\n<!--\n_visible: True_\n_advanced: False_\n_istemplated: False_\n_extends: _\n-->\n\n##InlineDescription\n\n\nOSC message receiver which listens on a network port\n\n\n\n\n\n##Description\n\n\n\n\n\n##Methods\n\n\n\n###void ProcessMessage(&m, &remoteEndpoint)\n\n<!--\n_syntax: ProcessMessage(&m, &remoteEndpoint)_\n_name: ProcessMessage_\n_returns: void_\n_returns_description: _\n_parameters: const int &m, const int &remoteEndpoint_\n_access: protected_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nprocess an incoming osc message and add it to the queue\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofxOscReceiver & copy(&other)\n\n<!--\n_syntax: copy(&other)_\n_name: copy_\n_returns: ofxOscReceiver &_\n_returns_description: _\n_parameters: const ofxOscReceiver &other_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nfor operator= and copy constructor\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool getNextMessage(&msg)\n\n<!--\n_syntax: getNextMessage(&msg)_\n_name: getNextMessage_\n_returns: bool_\n_returns_description: _\n_parameters: ofxOscMessage &msg_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nremove a message from the queue and copy it's data into msg\n\\return false if there are no waiting messages, otherwise return true\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool getParameter(&parameter)\n\n<!--\n_syntax: getParameter(&parameter)_\n_name: getParameter_\n_returns: bool_\n_returns_description: _\n_parameters: ofAbstractParameter &parameter_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\ntry to get waiting message an ofParameter\n\\return true if message was handled by the given parameter\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int getPort()\n\n<!--\n_syntax: getPort()_\n_name: getPort_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\\return listening port\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###const ofxOscReceiverSettings & getSettings()\n\n<!--\n_syntax: getSettings()_\n_name: getSettings_\n_returns: const ofxOscReceiverSettings &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\\return the current receiver settings\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool hasWaitingMessages()\n\n<!--\n_syntax: hasWaitingMessages()_\n_name: hasWaitingMessages_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\\return true if there are any messages waiting for collection\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool isListening()\n\n<!--\n_syntax: isListening()_\n_name: isListening_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\\return true if the receiver is listening\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n### ofxOscReceiver(&mom)\n\n<!--\n_syntax: ofxOscReceiver(&mom)_\n_name: ofxOscReceiver_\n_returns: _\n_returns_description: _\n_parameters: const ofxOscReceiver &mom_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n### ofxOscReceiver()\n\n<!--\n_syntax: ofxOscReceiver()_\n_name: ofxOscReceiver_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofxOscReceiver & operator=(&mom)\n\n<!--\n_syntax: operator=(&mom)_\n_name: operator=_\n_returns: ofxOscReceiver &_\n_returns_description: _\n_parameters: const ofxOscReceiver &mom_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool setup(&settings)\n\n<!--\n_syntax: setup(&settings)_\n_name: setup_\n_returns: bool_\n_returns_description: _\n_parameters: const ofxOscReceiverSettings &settings_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nset up the receiver with the given settings\n\nstarts listening if start is true (true by default)\n\nmultiple receivers can share the same port if port reuse is\nenabled (true by default)\n\n\\return true if listening was started or start was not required\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool setup(port)\n\n<!--\n_syntax: setup(port)_\n_name: setup_\n_returns: bool_\n_returns_description: _\n_parameters: int port_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nset up the receiver with the port to listen for messages on\nand start listening\n\nmultiple receivers can share the same port if port reuse is\nenabled (true by default)\n\n\\return true if listening started\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool start()\n\n<!--\n_syntax: start()_\n_name: start_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nstart listening manually using the current settings\n\nthis is not required if you called setup(port)\nor setup(settings) with start set to true\n\n\\return true if listening started or was already running\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void stop()\n\n<!--\n_syntax: stop()_\n_name: stop_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nstop listening, does not clear port value\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n### ~ofxOscReceiver()\n\n<!--\n_syntax: ~ofxOscReceiver()_\n_name: ~ofxOscReceiver_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n##Variables\n\n\n\n###thread listenThread\n\n<!--\n_name: listenThread_\n_type: thread_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< listener thread\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofThreadChannel< ofxOscMessage > messagesChannel\n\n<!--\n_name: messagesChannel_\n_type: ofThreadChannel< ofxOscMessage >_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< message passing thread channel\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofxOscReceiverSettings settings\n\n<!--\n_name: settings_\n_type: ofxOscReceiverSettings_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< current settings\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page","static":true}}],"fetch":[]}