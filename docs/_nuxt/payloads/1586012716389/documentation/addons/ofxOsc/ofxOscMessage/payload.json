{"data":[{"page":{"entry":{"name":"ofxOscMessage","filename":"ofxOscMessage.markdown","absolute":"/Users/Gilbert/Code/openFrameworks/ofSite/documentation/addons/ofxOsc/ofxOscMessage.markdown","path":"/documentation/addons/ofxOsc/ofxOscMessage","route":"/documentation/addons/ofxOsc/ofxOscMessage.markdown","dir":"../ofSite/documentation/addons/ofxOsc","ext":"markdown","type":"page","id":2128,"parent":2109,"breadcrumbs":[2109,1993,1968],"siblings":[],"translations":{}},"description":{"short":"<p>an OSC message with address and arguments</p>\n","full":"<h1></h1>\n"},"config":{"visible":"True","advanced":"False","istemplated":"False","extends":null},"methods":[{"syntax":"addBlobArg(&argument)","name":"addBlobArg","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofBuffer <span class=\"token operator\">&amp;</span>argument","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>add a binary blog</p>\n","desc":"","counter":0},{"syntax":"addBoolArg(argument)","name":"addBoolArg","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">bool</span> argument","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>add a bool\ntrue sends a OFXOSC_TYPE_TRUE &amp; false sends a OFXOSC_TYPE_FALSE</p>\n","desc":"","counter":0},{"syntax":"addCharArg(argument)","name":"addCharArg","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">char</span> argument","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>add a char</p>\n","desc":"","counter":0},{"syntax":"addDoubleArg(argument)","name":"addDoubleArg","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">double</span> argument","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>add a 64-bit double</p>\n","desc":"","counter":0},{"syntax":"addFloatArg(argument)","name":"addFloatArg","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> argument","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>add a 32-bit float</p>\n","desc":"","counter":0},{"syntax":"addImpulseArg()","name":"addImpulseArg","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>add a trigger impulse (has no value)\nalias for addTriggerArg()</p>\n","desc":"","counter":0},{"syntax":"addInfinitumArg()","name":"addInfinitumArg","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>add a trigger impulse (has no value)\nalias for addTriggerArg()</p>\n","desc":"","counter":0},{"syntax":"addInt32Arg(argument)","name":"addInt32Arg","returns":"void","returns_description":null,"parameters":"int32_t argument","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>add a 32-bit integer</p>\n","desc":"","counter":0},{"syntax":"addInt64Arg(argument)","name":"addInt64Arg","returns":"void","returns_description":null,"parameters":"int64_t argument","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>add a 64-bit integer</p>\n","desc":"","counter":0},{"syntax":"addIntArg(argument)","name":"addIntArg","returns":"void","returns_description":null,"parameters":"int32_t argument","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>add a 32-bit integer</p>\n","desc":"","counter":0},{"syntax":"addMidiMessageArg(argument)","name":"addMidiMessageArg","returns":"void","returns_description":null,"parameters":"uint32_t argument","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>add a 4-byte MIDI message</p>\n","desc":"","counter":0},{"syntax":"addNoneArg()","name":"addNoneArg","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>add a none/nil (has no value)</p>\n","desc":"","counter":0},{"syntax":"addRgbaColorArg(argument)","name":"addRgbaColorArg","returns":"void","returns_description":null,"parameters":"uint32_t argument","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>add a 32-bit color</p>\n","desc":"","counter":0},{"syntax":"addStringArg(&argument)","name":"addStringArg","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>argument","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>add a string</p>\n","desc":"","counter":0},{"syntax":"addSymbolArg(&argument)","name":"addSymbolArg","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>argument","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>add a symbol (string)</p>\n","desc":"","counter":0},{"syntax":"addTimetagArg(argument)","name":"addTimetagArg","returns":"void","returns_description":null,"parameters":"uint64_t argument","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>add a 64-bit NTP time tag</p>\n","desc":"","counter":0},{"syntax":"addTriggerArg()","name":"addTriggerArg","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>add a trigger impulse (has no value)</p>\n","desc":"","counter":0},{"syntax":"clear()","name":"clear","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>clear this message</p>\n","desc":"","counter":0},{"syntax":"copy(&other)","name":"copy","returns":"ofxOscMessage &","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofxOscMessage <span class=\"token operator\">&amp;</span>other","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>for operator= and copy constructor</p>\n","desc":"","counter":0},{"syntax":"getAddress()","name":"getAddress","returns":"string","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>\\return the OSC address</p>\n","desc":"","counter":0},{"syntax":"getArgAsBlob(index)","name":"getArgAsBlob","returns":"ofBuffer","returns_description":null,"parameters":"size_t index","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return given argument as a binary blob</p>\n","desc":"","counter":0},{"syntax":"getArgAsBool(index)","name":"getArgAsBool","returns":"bool","returns_description":null,"parameters":"size_t index","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>get argument as a bool, converts numeric types automatically\nthis argument type matches both OFXOSC_TYPE_TRUE &amp; OFXOSC_TYPE_FALSE</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return given argument value as a bool</p>\n","desc":"","counter":0},{"syntax":"getArgAsChar(index)","name":"getArgAsChar","returns":"char","returns_description":null,"parameters":"size_t index","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>get argument as a string, converts numeric types with a warning</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return given argument value as a string</p>\n","desc":"","counter":0},{"syntax":"getArgAsDouble(index)","name":"getArgAsDouble","returns":"double","returns_description":null,"parameters":"size_t index","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>get argument as a double, converts numeric types automatically</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return given argument value as a double</p>\n","desc":"","counter":0},{"syntax":"getArgAsFloat(index)","name":"getArgAsFloat","returns":"float","returns_description":null,"parameters":"size_t index","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>get argument as a float, converts numeric types automatically\nprints a warning when converting higher precision types</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return given argument value as a float</p>\n","desc":"","counter":0},{"syntax":"getArgAsImpulse(index)","name":"getArgAsImpulse","returns":"bool","returns_description":null,"parameters":"size_t index","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>get argument as a trigger impulse\nthis is an alias for getArgAsTrigger()</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return true if argument was a trigger</p>\n","desc":"","counter":0},{"syntax":"getArgAsInfinitum(index)","name":"getArgAsInfinitum","returns":"bool","returns_description":null,"parameters":"size_t index","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>get argument as a trigger impulse\nthis is an alias for getArgAsTrigger()</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return true if argument was a trigger</p>\n","desc":"","counter":0},{"syntax":"getArgAsInt(index)","name":"getArgAsInt","returns":"int32_t","returns_description":null,"parameters":"size_t index","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>get argument as an integer, converts numeric types automatically\nprints a warning when converting higher precision types</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return given argument value as a 32-bit int</p>\n","desc":"","counter":0},{"syntax":"getArgAsInt32(index)","name":"getArgAsInt32","returns":"int32_t","returns_description":null,"parameters":"size_t index","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>get argument as an integer, converts numeric types automatically\nprints a warning when converting higher precision types</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return given argument value as a 32-bit int</p>\n","desc":"","counter":0},{"syntax":"getArgAsInt64(index)","name":"getArgAsInt64","returns":"int64_t","returns_description":null,"parameters":"size_t index","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>get argument as a 64-bit integer, converts numeric types automatically\n\\return given argument value as a 64-bit int</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.</p>\n","desc":"","counter":0},{"syntax":"getArgAsMidiMessage(index)","name":"getArgAsMidiMessage","returns":"uint32_t","returns_description":null,"parameters":"size_t index","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return given argument value as a 4-byte midi message</p>\n","desc":"","counter":0},{"syntax":"getArgAsNone(index)","name":"getArgAsNone","returns":"bool","returns_description":null,"parameters":"size_t index","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>get argument as a none/nil</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return true if argument was a none/nil</p>\n","desc":"","counter":0},{"syntax":"getArgAsRgbaColor(index)","name":"getArgAsRgbaColor","returns":"uint32_t","returns_description":null,"parameters":"size_t index","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>get an argument as an RGBA color, converts int32 automatically</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return given argument as a 32-bit color value</p>\n","desc":"","counter":0},{"syntax":"getArgAsString(index)","name":"getArgAsString","returns":"string","returns_description":null,"parameters":"size_t index","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>get argument as a string, converts numeric types with a warning</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return given argument value as a string</p>\n","desc":"","counter":0},{"syntax":"getArgAsSymbol(index)","name":"getArgAsSymbol","returns":"string","returns_description":null,"parameters":"size_t index","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>get argument as a symbol (string), converts numeric types with a warning</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return given argument value as a symbol (string)</p>\n","desc":"","counter":0},{"syntax":"getArgAsTimetag(index)","name":"getArgAsTimetag","returns":"uint64_t","returns_description":null,"parameters":"size_t index","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return given argument as a 64-bit NTP time tag</p>\n","desc":"","counter":0},{"syntax":"getArgAsTrigger(index)","name":"getArgAsTrigger","returns":"bool","returns_description":null,"parameters":"size_t index","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>get argument as a trigger impulse</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return true if argument was a trigger</p>\n","desc":"","counter":0},{"syntax":"getArgType(index)","name":"getArgType","returns":"ofxOscArgType","returns_description":null,"parameters":"size_t index","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return argument type code for a given index</p>\n","desc":"","counter":0},{"syntax":"getArgTypeName(index)","name":"getArgTypeName","returns":"string","returns_description":null,"parameters":"size_t index","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return argument type tag char as a string</p>\n","desc":"","counter":0},{"syntax":"getNumArgs()","name":"getNumArgs","returns":"size_t","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>\\return number of arguments</p>\n","desc":"","counter":0},{"syntax":"getRemoteHost()","name":"getRemoteHost","returns":"string","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>\\return the remote host name/ip or &quot;&quot; if not set</p>\n","desc":"","counter":0},{"syntax":"getRemotePort()","name":"getRemotePort","returns":"int","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>\\return the remote port or 0 if not set</p>\n","desc":"","counter":0},{"syntax":"getTypeString()","name":"getTypeString","returns":"string","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return type tags for all arguments as a string, 1 char for each argument</p>\n","desc":"","counter":0},{"syntax":"ofxOscMessage(&other)","name":"ofxOscMessage","returns":null,"returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofxOscMessage <span class=\"token operator\">&amp;</span>other","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":1},{"syntax":"ofxOscMessage()","name":"ofxOscMessage","returns":null,"returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"operator=(&other)","name":"operator=","returns":"ofxOscMessage &","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofxOscMessage <span class=\"token operator\">&amp;</span>other","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"setAddress(&address)","name":"setAddress","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>address","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>set the message address, must start with a /</p>\n","desc":"","counter":0},{"syntax":"setRemoteEndpoint(&host, port)","name":"setRemoteEndpoint","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>host<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> port","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>set host and port of the remote endpoint,\nthis is mainly used by ofxOscReceiver</p>\n","desc":"","counter":0},{"syntax":"~ofxOscMessage()","name":"~ofxOscMessage","returns":null,"returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"name":"address","type":"string","access":"private","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"<p>&lt; OSC address, must start with a /</p>\n","desc":""},{"name":"args","type":"ofxOscArg","access":"private","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"<p>&lt; current arguments</p>\n","desc":""},{"name":"remoteHost","type":"string","access":"private","version_started":"0.10.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"<p>&lt; host name/ip the message was sent from</p>\n","desc":""},{"name":"remotePort","type":"int","access":"private","version_started":"0.10.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"<p>&lt; port the message was sent from</p>\n","desc":""},{}],"document":"<p>#class ofxOscMessage</p>\n<!--\n_visible: True_\n_advanced: False_\n_istemplated: False_\n_extends: _\n-->\n<p>##InlineDescription</p>\n<p>an OSC message with address and arguments</p>\n<p>##Description</p>\n<p>##Methods</p>\n<p>###void addBlobArg(&amp;argument)</p>\n<!--\n_syntax: addBlobArg(&argument)_\n_name: addBlobArg_\n_returns: void_\n_returns_description: _\n_parameters: const ofBuffer &argument_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>add a binary blog</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void addBoolArg(argument)</p>\n<!--\n_syntax: addBoolArg(argument)_\n_name: addBoolArg_\n_returns: void_\n_returns_description: _\n_parameters: bool argument_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>add a bool\ntrue sends a OFXOSC_TYPE_TRUE &amp; false sends a OFXOSC_TYPE_FALSE</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void addCharArg(argument)</p>\n<!--\n_syntax: addCharArg(argument)_\n_name: addCharArg_\n_returns: void_\n_returns_description: _\n_parameters: char argument_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>add a char</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void addDoubleArg(argument)</p>\n<!--\n_syntax: addDoubleArg(argument)_\n_name: addDoubleArg_\n_returns: void_\n_returns_description: _\n_parameters: double argument_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>add a 64-bit double</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void addFloatArg(argument)</p>\n<!--\n_syntax: addFloatArg(argument)_\n_name: addFloatArg_\n_returns: void_\n_returns_description: _\n_parameters: float argument_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>add a 32-bit float</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void addImpulseArg()</p>\n<!--\n_syntax: addImpulseArg()_\n_name: addImpulseArg_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>add a trigger impulse (has no value)\nalias for addTriggerArg()</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void addInfinitumArg()</p>\n<!--\n_syntax: addInfinitumArg()_\n_name: addInfinitumArg_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>add a trigger impulse (has no value)\nalias for addTriggerArg()</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void addInt32Arg(argument)</p>\n<!--\n_syntax: addInt32Arg(argument)_\n_name: addInt32Arg_\n_returns: void_\n_returns_description: _\n_parameters: int32_t argument_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>add a 32-bit integer</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void addInt64Arg(argument)</p>\n<!--\n_syntax: addInt64Arg(argument)_\n_name: addInt64Arg_\n_returns: void_\n_returns_description: _\n_parameters: int64_t argument_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>add a 64-bit integer</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void addIntArg(argument)</p>\n<!--\n_syntax: addIntArg(argument)_\n_name: addIntArg_\n_returns: void_\n_returns_description: _\n_parameters: int32_t argument_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>add a 32-bit integer</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void addMidiMessageArg(argument)</p>\n<!--\n_syntax: addMidiMessageArg(argument)_\n_name: addMidiMessageArg_\n_returns: void_\n_returns_description: _\n_parameters: uint32_t argument_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>add a 4-byte MIDI message</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void addNoneArg()</p>\n<!--\n_syntax: addNoneArg()_\n_name: addNoneArg_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>add a none/nil (has no value)</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void addRgbaColorArg(argument)</p>\n<!--\n_syntax: addRgbaColorArg(argument)_\n_name: addRgbaColorArg_\n_returns: void_\n_returns_description: _\n_parameters: uint32_t argument_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>add a 32-bit color</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void addStringArg(&amp;argument)</p>\n<!--\n_syntax: addStringArg(&argument)_\n_name: addStringArg_\n_returns: void_\n_returns_description: _\n_parameters: const string &argument_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>add a string</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void addSymbolArg(&amp;argument)</p>\n<!--\n_syntax: addSymbolArg(&argument)_\n_name: addSymbolArg_\n_returns: void_\n_returns_description: _\n_parameters: const string &argument_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>add a symbol (string)</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void addTimetagArg(argument)</p>\n<!--\n_syntax: addTimetagArg(argument)_\n_name: addTimetagArg_\n_returns: void_\n_returns_description: _\n_parameters: uint64_t argument_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>add a 64-bit NTP time tag</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void addTriggerArg()</p>\n<!--\n_syntax: addTriggerArg()_\n_name: addTriggerArg_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>add a trigger impulse (has no value)</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void clear()</p>\n<!--\n_syntax: clear()_\n_name: clear_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>clear this message</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofxOscMessage &amp; copy(&amp;other)</p>\n<!--\n_syntax: copy(&other)_\n_name: copy_\n_returns: ofxOscMessage &_\n_returns_description: _\n_parameters: const ofxOscMessage &other_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>for operator= and copy constructor</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###string getAddress()</p>\n<!--\n_syntax: getAddress()_\n_name: getAddress_\n_returns: string_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>\\return the OSC address</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofBuffer getArgAsBlob(index)</p>\n<!--\n_syntax: getArgAsBlob(index)_\n_name: getArgAsBlob_\n_returns: ofBuffer_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return given argument as a binary blob</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool getArgAsBool(index)</p>\n<!--\n_syntax: getArgAsBool(index)_\n_name: getArgAsBool_\n_returns: bool_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get argument as a bool, converts numeric types automatically\nthis argument type matches both OFXOSC_TYPE_TRUE &amp; OFXOSC_TYPE_FALSE</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return given argument value as a bool</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###char getArgAsChar(index)</p>\n<!--\n_syntax: getArgAsChar(index)_\n_name: getArgAsChar_\n_returns: char_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get argument as a string, converts numeric types with a warning</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return given argument value as a string</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###double getArgAsDouble(index)</p>\n<!--\n_syntax: getArgAsDouble(index)_\n_name: getArgAsDouble_\n_returns: double_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get argument as a double, converts numeric types automatically</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return given argument value as a double</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float getArgAsFloat(index)</p>\n<!--\n_syntax: getArgAsFloat(index)_\n_name: getArgAsFloat_\n_returns: float_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get argument as a float, converts numeric types automatically\nprints a warning when converting higher precision types</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return given argument value as a float</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool getArgAsImpulse(index)</p>\n<!--\n_syntax: getArgAsImpulse(index)_\n_name: getArgAsImpulse_\n_returns: bool_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get argument as a trigger impulse\nthis is an alias for getArgAsTrigger()</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return true if argument was a trigger</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool getArgAsInfinitum(index)</p>\n<!--\n_syntax: getArgAsInfinitum(index)_\n_name: getArgAsInfinitum_\n_returns: bool_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get argument as a trigger impulse\nthis is an alias for getArgAsTrigger()</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return true if argument was a trigger</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int32_t getArgAsInt(index)</p>\n<!--\n_syntax: getArgAsInt(index)_\n_name: getArgAsInt_\n_returns: int32_t_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get argument as an integer, converts numeric types automatically\nprints a warning when converting higher precision types</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return given argument value as a 32-bit int</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int32_t getArgAsInt32(index)</p>\n<!--\n_syntax: getArgAsInt32(index)_\n_name: getArgAsInt32_\n_returns: int32_t_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get argument as an integer, converts numeric types automatically\nprints a warning when converting higher precision types</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return given argument value as a 32-bit int</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int64_t getArgAsInt64(index)</p>\n<!--\n_syntax: getArgAsInt64(index)_\n_name: getArgAsInt64_\n_returns: int64_t_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get argument as a 64-bit integer, converts numeric types automatically\n\\return given argument value as a 64-bit int</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###uint32_t getArgAsMidiMessage(index)</p>\n<!--\n_syntax: getArgAsMidiMessage(index)_\n_name: getArgAsMidiMessage_\n_returns: uint32_t_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return given argument value as a 4-byte midi message</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool getArgAsNone(index)</p>\n<!--\n_syntax: getArgAsNone(index)_\n_name: getArgAsNone_\n_returns: bool_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get argument as a none/nil</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return true if argument was a none/nil</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###uint32_t getArgAsRgbaColor(index)</p>\n<!--\n_syntax: getArgAsRgbaColor(index)_\n_name: getArgAsRgbaColor_\n_returns: uint32_t_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get an argument as an RGBA color, converts int32 automatically</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return given argument as a 32-bit color value</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###string getArgAsString(index)</p>\n<!--\n_syntax: getArgAsString(index)_\n_name: getArgAsString_\n_returns: string_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get argument as a string, converts numeric types with a warning</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return given argument value as a string</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###string getArgAsSymbol(index)</p>\n<!--\n_syntax: getArgAsSymbol(index)_\n_name: getArgAsSymbol_\n_returns: string_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get argument as a symbol (string), converts numeric types with a warning</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return given argument value as a symbol (string)</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###uint64_t getArgAsTimetag(index)</p>\n<!--\n_syntax: getArgAsTimetag(index)_\n_name: getArgAsTimetag_\n_returns: uint64_t_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return given argument as a 64-bit NTP time tag</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool getArgAsTrigger(index)</p>\n<!--\n_syntax: getArgAsTrigger(index)_\n_name: getArgAsTrigger_\n_returns: bool_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get argument as a trigger impulse</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return true if argument was a trigger</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofxOscArgType getArgType(index)</p>\n<!--\n_syntax: getArgType(index)_\n_name: getArgType_\n_returns: ofxOscArgType_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return argument type code for a given index</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###string getArgTypeName(index)</p>\n<!--\n_syntax: getArgTypeName(index)_\n_name: getArgTypeName_\n_returns: string_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return argument type tag char as a string</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###size_t getNumArgs()</p>\n<!--\n_syntax: getNumArgs()_\n_name: getNumArgs_\n_returns: size_t_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>\\return number of arguments</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###string getRemoteHost()</p>\n<!--\n_syntax: getRemoteHost()_\n_name: getRemoteHost_\n_returns: string_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>\\return the remote host name/ip or &quot;&quot; if not set</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int getRemotePort()</p>\n<!--\n_syntax: getRemotePort()_\n_name: getRemotePort_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>\\return the remote port or 0 if not set</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###string getTypeString()</p>\n<!--\n_syntax: getTypeString()_\n_name: getTypeString_\n_returns: string_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p><strong>Parameters:</strong></p>\n<p>index The index of the queried item.\n\\return type tags for all arguments as a string, 1 char for each argument</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<h3>ofxOscMessage(&amp;other)</h3>\n<!--\n_syntax: ofxOscMessage(&other)_\n_name: ofxOscMessage_\n_returns: _\n_returns_description: _\n_parameters: const ofxOscMessage &other_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<h3>ofxOscMessage()</h3>\n<!--\n_syntax: ofxOscMessage()_\n_name: ofxOscMessage_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofxOscMessage &amp; operator=(&amp;other)</p>\n<!--\n_syntax: operator=(&other)_\n_name: operator=_\n_returns: ofxOscMessage &_\n_returns_description: _\n_parameters: const ofxOscMessage &other_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setAddress(&amp;address)</p>\n<!--\n_syntax: setAddress(&address)_\n_name: setAddress_\n_returns: void_\n_returns_description: _\n_parameters: const string &address_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>set the message address, must start with a /</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setRemoteEndpoint(&amp;host, port)</p>\n<!--\n_syntax: setRemoteEndpoint(&host, port)_\n_name: setRemoteEndpoint_\n_returns: void_\n_returns_description: _\n_parameters: const string &host, int port_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>set host and port of the remote endpoint,\nthis is mainly used by ofxOscReceiver</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<h3>~ofxOscMessage()</h3>\n<!--\n_syntax: ~ofxOscMessage()_\n_name: ~ofxOscMessage_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>##Variables</p>\n<p>###string address</p>\n<!--\n_name: address_\n_type: string_\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>&lt; OSC address, must start with a /</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofxOscArg args</p>\n<!--\n_name: args_\n_type: ofxOscArg_\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>&lt; current arguments</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###string remoteHost</p>\n<!--\n_name: remoteHost_\n_type: string_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>&lt; host name/ip the message was sent from</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int remotePort</p>\n<!--\n_name: remotePort_\n_type: int_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>&lt; port the message was sent from</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n","raw":"#class ofxOscMessage\n\n\n<!--\n_visible: True_\n_advanced: False_\n_istemplated: False_\n_extends: _\n-->\n\n##InlineDescription\n\n\nan OSC message with address and arguments\n\n\n\n\n\n##Description\n\n\n\n\n\n##Methods\n\n\n\n###void addBlobArg(&argument)\n\n<!--\n_syntax: addBlobArg(&argument)_\n_name: addBlobArg_\n_returns: void_\n_returns_description: _\n_parameters: const ofBuffer &argument_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nadd a binary blog\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void addBoolArg(argument)\n\n<!--\n_syntax: addBoolArg(argument)_\n_name: addBoolArg_\n_returns: void_\n_returns_description: _\n_parameters: bool argument_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nadd a bool\ntrue sends a OFXOSC_TYPE_TRUE & false sends a OFXOSC_TYPE_FALSE\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void addCharArg(argument)\n\n<!--\n_syntax: addCharArg(argument)_\n_name: addCharArg_\n_returns: void_\n_returns_description: _\n_parameters: char argument_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nadd a char\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void addDoubleArg(argument)\n\n<!--\n_syntax: addDoubleArg(argument)_\n_name: addDoubleArg_\n_returns: void_\n_returns_description: _\n_parameters: double argument_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nadd a 64-bit double\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void addFloatArg(argument)\n\n<!--\n_syntax: addFloatArg(argument)_\n_name: addFloatArg_\n_returns: void_\n_returns_description: _\n_parameters: float argument_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nadd a 32-bit float\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void addImpulseArg()\n\n<!--\n_syntax: addImpulseArg()_\n_name: addImpulseArg_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nadd a trigger impulse (has no value)\nalias for addTriggerArg()\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void addInfinitumArg()\n\n<!--\n_syntax: addInfinitumArg()_\n_name: addInfinitumArg_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nadd a trigger impulse (has no value)\nalias for addTriggerArg()\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void addInt32Arg(argument)\n\n<!--\n_syntax: addInt32Arg(argument)_\n_name: addInt32Arg_\n_returns: void_\n_returns_description: _\n_parameters: int32_t argument_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nadd a 32-bit integer\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void addInt64Arg(argument)\n\n<!--\n_syntax: addInt64Arg(argument)_\n_name: addInt64Arg_\n_returns: void_\n_returns_description: _\n_parameters: int64_t argument_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nadd a 64-bit integer\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void addIntArg(argument)\n\n<!--\n_syntax: addIntArg(argument)_\n_name: addIntArg_\n_returns: void_\n_returns_description: _\n_parameters: int32_t argument_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nadd a 32-bit integer\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void addMidiMessageArg(argument)\n\n<!--\n_syntax: addMidiMessageArg(argument)_\n_name: addMidiMessageArg_\n_returns: void_\n_returns_description: _\n_parameters: uint32_t argument_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nadd a 4-byte MIDI message\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void addNoneArg()\n\n<!--\n_syntax: addNoneArg()_\n_name: addNoneArg_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nadd a none/nil (has no value)\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void addRgbaColorArg(argument)\n\n<!--\n_syntax: addRgbaColorArg(argument)_\n_name: addRgbaColorArg_\n_returns: void_\n_returns_description: _\n_parameters: uint32_t argument_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nadd a 32-bit color\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void addStringArg(&argument)\n\n<!--\n_syntax: addStringArg(&argument)_\n_name: addStringArg_\n_returns: void_\n_returns_description: _\n_parameters: const string &argument_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nadd a string\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void addSymbolArg(&argument)\n\n<!--\n_syntax: addSymbolArg(&argument)_\n_name: addSymbolArg_\n_returns: void_\n_returns_description: _\n_parameters: const string &argument_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nadd a symbol (string)\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void addTimetagArg(argument)\n\n<!--\n_syntax: addTimetagArg(argument)_\n_name: addTimetagArg_\n_returns: void_\n_returns_description: _\n_parameters: uint64_t argument_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nadd a 64-bit NTP time tag\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void addTriggerArg()\n\n<!--\n_syntax: addTriggerArg()_\n_name: addTriggerArg_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nadd a trigger impulse (has no value)\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void clear()\n\n<!--\n_syntax: clear()_\n_name: clear_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nclear this message\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofxOscMessage & copy(&other)\n\n<!--\n_syntax: copy(&other)_\n_name: copy_\n_returns: ofxOscMessage &_\n_returns_description: _\n_parameters: const ofxOscMessage &other_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nfor operator= and copy constructor\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###string getAddress()\n\n<!--\n_syntax: getAddress()_\n_name: getAddress_\n_returns: string_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\\return the OSC address\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofBuffer getArgAsBlob(index)\n\n<!--\n_syntax: getArgAsBlob(index)_\n_name: getArgAsBlob_\n_returns: ofBuffer_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n**Parameters:**\n\nindex The index of the queried item.\n\\return given argument as a binary blob\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool getArgAsBool(index)\n\n<!--\n_syntax: getArgAsBool(index)_\n_name: getArgAsBool_\n_returns: bool_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget argument as a bool, converts numeric types automatically\nthis argument type matches both OFXOSC_TYPE_TRUE & OFXOSC_TYPE_FALSE\n\n**Parameters:**\n\nindex The index of the queried item.\n\\return given argument value as a bool\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###char getArgAsChar(index)\n\n<!--\n_syntax: getArgAsChar(index)_\n_name: getArgAsChar_\n_returns: char_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget argument as a string, converts numeric types with a warning\n\n**Parameters:**\n\nindex The index of the queried item.\n\\return given argument value as a string\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###double getArgAsDouble(index)\n\n<!--\n_syntax: getArgAsDouble(index)_\n_name: getArgAsDouble_\n_returns: double_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget argument as a double, converts numeric types automatically\n\n**Parameters:**\n\nindex The index of the queried item.\n\\return given argument value as a double\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float getArgAsFloat(index)\n\n<!--\n_syntax: getArgAsFloat(index)_\n_name: getArgAsFloat_\n_returns: float_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget argument as a float, converts numeric types automatically\nprints a warning when converting higher precision types\n\n**Parameters:**\n\nindex The index of the queried item.\n\\return given argument value as a float\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool getArgAsImpulse(index)\n\n<!--\n_syntax: getArgAsImpulse(index)_\n_name: getArgAsImpulse_\n_returns: bool_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget argument as a trigger impulse\nthis is an alias for getArgAsTrigger()\n\n**Parameters:**\n\nindex The index of the queried item.\n\\return true if argument was a trigger\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool getArgAsInfinitum(index)\n\n<!--\n_syntax: getArgAsInfinitum(index)_\n_name: getArgAsInfinitum_\n_returns: bool_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget argument as a trigger impulse\nthis is an alias for getArgAsTrigger()\n\n**Parameters:**\n\nindex The index of the queried item.\n\\return true if argument was a trigger\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int32_t getArgAsInt(index)\n\n<!--\n_syntax: getArgAsInt(index)_\n_name: getArgAsInt_\n_returns: int32_t_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget argument as an integer, converts numeric types automatically\nprints a warning when converting higher precision types\n\n**Parameters:**\n\nindex The index of the queried item.\n\\return given argument value as a 32-bit int\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int32_t getArgAsInt32(index)\n\n<!--\n_syntax: getArgAsInt32(index)_\n_name: getArgAsInt32_\n_returns: int32_t_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget argument as an integer, converts numeric types automatically\nprints a warning when converting higher precision types\n\n**Parameters:**\n\nindex The index of the queried item.\n\\return given argument value as a 32-bit int\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int64_t getArgAsInt64(index)\n\n<!--\n_syntax: getArgAsInt64(index)_\n_name: getArgAsInt64_\n_returns: int64_t_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget argument as a 64-bit integer, converts numeric types automatically\n\\return given argument value as a 64-bit int\n\n**Parameters:**\n\nindex The index of the queried item.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###uint32_t getArgAsMidiMessage(index)\n\n<!--\n_syntax: getArgAsMidiMessage(index)_\n_name: getArgAsMidiMessage_\n_returns: uint32_t_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n**Parameters:**\n\nindex The index of the queried item.\n\\return given argument value as a 4-byte midi message\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool getArgAsNone(index)\n\n<!--\n_syntax: getArgAsNone(index)_\n_name: getArgAsNone_\n_returns: bool_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget argument as a none/nil\n\n**Parameters:**\n\nindex The index of the queried item.\n\\return true if argument was a none/nil\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###uint32_t getArgAsRgbaColor(index)\n\n<!--\n_syntax: getArgAsRgbaColor(index)_\n_name: getArgAsRgbaColor_\n_returns: uint32_t_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget an argument as an RGBA color, converts int32 automatically\n\n**Parameters:**\n\nindex The index of the queried item.\n\\return given argument as a 32-bit color value\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###string getArgAsString(index)\n\n<!--\n_syntax: getArgAsString(index)_\n_name: getArgAsString_\n_returns: string_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget argument as a string, converts numeric types with a warning\n\n**Parameters:**\n\nindex The index of the queried item.\n\\return given argument value as a string\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###string getArgAsSymbol(index)\n\n<!--\n_syntax: getArgAsSymbol(index)_\n_name: getArgAsSymbol_\n_returns: string_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget argument as a symbol (string), converts numeric types with a warning\n\n**Parameters:**\n\nindex The index of the queried item.\n\\return given argument value as a symbol (string)\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###uint64_t getArgAsTimetag(index)\n\n<!--\n_syntax: getArgAsTimetag(index)_\n_name: getArgAsTimetag_\n_returns: uint64_t_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n**Parameters:**\n\nindex The index of the queried item.\n\\return given argument as a 64-bit NTP time tag\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool getArgAsTrigger(index)\n\n<!--\n_syntax: getArgAsTrigger(index)_\n_name: getArgAsTrigger_\n_returns: bool_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget argument as a trigger impulse\n\n**Parameters:**\n\nindex The index of the queried item.\n\\return true if argument was a trigger\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofxOscArgType getArgType(index)\n\n<!--\n_syntax: getArgType(index)_\n_name: getArgType_\n_returns: ofxOscArgType_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n**Parameters:**\n\nindex The index of the queried item.\n\\return argument type code for a given index\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###string getArgTypeName(index)\n\n<!--\n_syntax: getArgTypeName(index)_\n_name: getArgTypeName_\n_returns: string_\n_returns_description: _\n_parameters: size_t index_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n**Parameters:**\n\nindex The index of the queried item.\n\\return argument type tag char as a string\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###size_t getNumArgs()\n\n<!--\n_syntax: getNumArgs()_\n_name: getNumArgs_\n_returns: size_t_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\\return number of arguments\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###string getRemoteHost()\n\n<!--\n_syntax: getRemoteHost()_\n_name: getRemoteHost_\n_returns: string_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\\return the remote host name/ip or \"\" if not set\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int getRemotePort()\n\n<!--\n_syntax: getRemotePort()_\n_name: getRemotePort_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\\return the remote port or 0 if not set\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###string getTypeString()\n\n<!--\n_syntax: getTypeString()_\n_name: getTypeString_\n_returns: string_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n**Parameters:**\n\nindex The index of the queried item.\n\\return type tags for all arguments as a string, 1 char for each argument\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n### ofxOscMessage(&other)\n\n<!--\n_syntax: ofxOscMessage(&other)_\n_name: ofxOscMessage_\n_returns: _\n_returns_description: _\n_parameters: const ofxOscMessage &other_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n### ofxOscMessage()\n\n<!--\n_syntax: ofxOscMessage()_\n_name: ofxOscMessage_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofxOscMessage & operator=(&other)\n\n<!--\n_syntax: operator=(&other)_\n_name: operator=_\n_returns: ofxOscMessage &_\n_returns_description: _\n_parameters: const ofxOscMessage &other_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setAddress(&address)\n\n<!--\n_syntax: setAddress(&address)_\n_name: setAddress_\n_returns: void_\n_returns_description: _\n_parameters: const string &address_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nset the message address, must start with a /\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setRemoteEndpoint(&host, port)\n\n<!--\n_syntax: setRemoteEndpoint(&host, port)_\n_name: setRemoteEndpoint_\n_returns: void_\n_returns_description: _\n_parameters: const string &host, int port_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nset host and port of the remote endpoint,\nthis is mainly used by ofxOscReceiver\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n### ~ofxOscMessage()\n\n<!--\n_syntax: ~ofxOscMessage()_\n_name: ~ofxOscMessage_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n##Variables\n\n\n\n###string address\n\n<!--\n_name: address_\n_type: string_\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< OSC address, must start with a /\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofxOscArg args\n\n<!--\n_name: args_\n_type: ofxOscArg_\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< current arguments\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###string remoteHost\n\n<!--\n_name: remoteHost_\n_type: string_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< host name/ip the message was sent from\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int remotePort\n\n<!--\n_name: remotePort_\n_type: int_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< port the message was sent from\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page","static":true}}],"fetch":[]}