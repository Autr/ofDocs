{"data":[{"page":{"entry":{"name":"ofxKinect","filename":"ofxKinect.markdown","absolute":"/Users/Gilbert/Code/openFrameworks/ofSite/documentation/addons/ofxKinect/ofxKinect.markdown","path":"/documentation/addons/ofxKinect/ofxKinect","route":"/documentation/addons/ofxKinect/ofxKinect.markdown","dir":"../ofSite/documentation/addons/ofxKinect","ext":"markdown","type":"page","id":2072,"parent":2069,"breadcrumbs":[2069,1993,1968],"siblings":[],"translations":{}},"description":{"short":"<p>wrapper for a freenect kinect device</p>\n<p>references:<a href=\"http://openkinect.org/wiki/Main_Page\">http://openkinect.org/wiki/Main_Page</a><a href=\"https://github.com/OpenKinect/libfreenect/blob/master/include/libfreenect.h\">https://github.com/OpenKinect/libfreenect/blob/master/include/libfreenect.h</a></p>\n","full":"<h1></h1>\n"},"config":{"visible":"True","advanced":"False","istemplated":"False"},"methods":[{"syntax":"clear()","name":"clear","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>clear resources, do not call this while ofxKinect is running!</p>\n","desc":"","counter":0},{"syntax":"close()","name":"close","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>close the connection and stop grabbing images</p>\n","desc":"","counter":0},{"syntax":"draw(x, y, w, h)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>draw the video texture</p>\n","desc":"","counter":3},{"syntax":"draw(x, y)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"draw(&point)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofPoint <span class=\"token operator\">&amp;</span>point","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"draw(&rect)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofRectangle <span class=\"token operator\">&amp;</span>rect","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"drawDepth(x, y, w, h)","name":"drawDepth","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>draw the grayscale depth texture</p>\n","desc":"","counter":3},{"syntax":"drawDepth(x, y)","name":"drawDepth","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"drawDepth(&point)","name":"drawDepth","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofPoint <span class=\"token operator\">&amp;</span>point","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"drawDepth(&rect)","name":"drawDepth","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofRectangle <span class=\"token operator\">&amp;</span>rect","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"enableDepthNearValueWhite(bEnabled = true)","name":"enableDepthNearValueWhite","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">bool</span> bEnabled<span class=\"token operator\">=</span><span class=\"token boolean\">true</span>","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getAccelPitch()","name":"getAccelPitch","returns":"float","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>get the current pitch (x axis) &amp; roll (z axis) of the kinect in degrees</p>\n<p>useful to correct the 3d scene based on the camera inclination</p>\n","desc":"","counter":0},{"syntax":"getAccelRoll()","name":"getAccelRoll","returns":"float","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getColorAt(x, y)","name":"getColorAt","returns":"ofColor","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":1},{"syntax":"getColorAt(&p)","name":"getColorAt","returns":"ofColor","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofPoint <span class=\"token operator\">&amp;</span>p","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getCurrentCameraTiltAngle()","name":"getCurrentCameraTiltAngle","returns":"float","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>get the current angle</p>\n","desc":"","counter":0},{"syntax":"getDepthPixels()","name":"getDepthPixels","returns":"unsigned char *","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>get the pixels of the most recent depth frame</p>\n<p>grayscale values</p>\n","desc":"","counter":0},{"syntax":"getDepthPixelsRef()","name":"getDepthPixelsRef","returns":"ofPixels &","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>get the pixels of the most recent depth frame</p>\n<p>grayscale values</p>\n","desc":"","counter":0},{"syntax":"getDepthTextureReference()","name":"getDepthTextureReference","returns":"ofTexture &","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>get the grayscale depth texture</p>\n","desc":"","counter":0},{"syntax":"getDeviceId()","name":"getDeviceId","returns":"int","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getDistanceAt(x, y)","name":"getDistanceAt","returns":"float","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>get the calulated distance for a depth point</p>\n","desc":"","counter":1},{"syntax":"getDistanceAt(&p)","name":"getDistanceAt","returns":"float","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofPoint <span class=\"token operator\">&amp;</span>p","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getDistancePixels()","name":"getDistancePixels","returns":"float *","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>get the distance in millimeters to a given point as a float array</p>\n","desc":"","counter":0},{"syntax":"getDistancePixelsRef()","name":"getDistancePixelsRef","returns":"ofFloatPixels &","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>get the distance in millimeters to a given point as a float array</p>\n","desc":"","counter":0},{"syntax":"getFarClipping()","name":"getFarClipping","returns":"float","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getHeight()","name":"getHeight","returns":"float","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getMksAccel()","name":"getMksAccel","returns":"ofPoint","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>axis-based gravity adjusted accelerometer values</p>\n<p>from libfreeenect:</p>\n<p>as laid out via the accelerometer data sheet, which is available at</p>\n<p><a href=\"http://www.kionix.com/Product%20Sheets/KXSD9%20Product%20Brief.pdf\">http://www.kionix.com/Product%20Sheets/KXSD9%20Product%20Brief.pdf</a></p>\n","desc":"","counter":0},{"syntax":"getNearClipping()","name":"getNearClipping","returns":"float","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getPixels()","name":"getPixels","returns":"unsigned char *","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getPixelsRef()","name":"getPixelsRef","returns":"ofPixels &","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>get the video pixels reference</p>\n","desc":"","counter":0},{"syntax":"getRawAccel()","name":"getRawAccel","returns":"ofPoint","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>raw axis values</p>\n","desc":"","counter":0},{"syntax":"getRawDepthPixels()","name":"getRawDepthPixels","returns":"unsigned short *","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>raw 11 bit values</p>\n","desc":"","counter":0},{"syntax":"getRawDepthPixelsRef()","name":"getRawDepthPixelsRef","returns":"ofShortPixels &","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>raw 11 bit values</p>\n","desc":"","counter":0},{"syntax":"getSensorCameraDistance()","name":"getSensorCameraDistance","returns":"float","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>get the distance between the IR sensor and the RGB camera in cm</p>\n","desc":"","counter":0},{"syntax":"getSensorEmitterDistance()","name":"getSensorEmitterDistance","returns":"float","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>get the distance between the IR sensor and IR emitter in cm</p>\n","desc":"","counter":0},{"syntax":"getSerial()","name":"getSerial","returns":"string","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","desc":"","counter":0},{"syntax":"getTargetCameraTiltAngle()","name":"getTargetCameraTiltAngle","returns":"float","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>get the target angle (if the camera is currently moving)</p>\n","desc":"","counter":0},{"syntax":"getTextureReference()","name":"getTextureReference","returns":"ofTexture &","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>get the video (ir or rgb) texture</p>\n","desc":"","counter":0},{"syntax":"getWidth()","name":"getWidth","returns":"float","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getWorldCoordinateAt(cx, cy)","name":"getWorldCoordinateAt","returns":"ofVec3f","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> cx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> cy","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>calculates the coordinate in the world for the depth point (perspective calculation)</p>\n<p>center of image is (0.0)</p>\n","desc":"","counter":1},{"syntax":"getWorldCoordinateAt(cx, cy, wz)","name":"getWorldCoordinateAt","returns":"ofVec3f","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> cx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> cy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> wz","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"getZeroPlaneDistance()","name":"getZeroPlaneDistance","returns":"float","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>get the focal length of the IR sensor in mm</p>\n","desc":"","counter":0},{"syntax":"getZeroPlanePixelSize()","name":"getZeroPlanePixelSize","returns":"float","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>get the size of a single pixel on the zero plane in mm</p>\n","desc":"","counter":0},{"syntax":"grabDepthFrame(*dev, *depth, timestamp)","name":"grabDepthFrame","returns":"void","returns_description":null,"parameters":"freenect_device <span class=\"token operator\">*</span>dev<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>depth<span class=\"token punctuation\">,</span> uint32_t timestamp","access":"private","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"True","visible":"True","advanced":"False","short":"<p>libfreenect callbacks</p>\n","desc":"","counter":0},{"syntax":"grabVideoFrame(*dev, *video, timestamp)","name":"grabVideoFrame","returns":"void","returns_description":null,"parameters":"freenect_device <span class=\"token operator\">*</span>dev<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>video<span class=\"token punctuation\">,</span> uint32_t timestamp","access":"private","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"True","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"hasAccelControl()","name":"hasAccelControl","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"hasCamTiltControl()","name":"hasCamTiltControl","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"hasLedControl()","name":"hasLedControl","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"init(infrared = false, video = true, texture = true)","name":"init","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">bool</span> infrared<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> video<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> texture<span class=\"token operator\">=</span><span class=\"token boolean\">true</span>","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"isConnected()","name":"isConnected","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>is the connection currently open?</p>\n","desc":"","counter":0},{"syntax":"isDepthNearValueWhite()","name":"isDepthNearValueWhite","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"isDeviceConnected(id)","name":"isDeviceConnected","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> id","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"True","visible":"True","advanced":"False","short":"<p>is a device already connected?</p>\n","desc":"","counter":1},{"syntax":"isDeviceConnected(serial)","name":"isDeviceConnected","returns":"bool","returns_description":null,"parameters":"string serial","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"True","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"isFrameNew()","name":"isFrameNew","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>is the current frame new?</p>\n","desc":"","counter":0},{"syntax":"isFrameNewDepth()","name":"isFrameNewDepth","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"isFrameNewVideo()","name":"isFrameNewVideo","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"listDevices()","name":"listDevices","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"True","visible":"True","advanced":"False","short":"<p>print the device list</p>\n","desc":"","counter":0},{"syntax":"nextAvailableId()","name":"nextAvailableId","returns":"int","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"True","visible":"True","advanced":"False","short":"<p>get the id of the next available device, returns -1 if nothing found</p>\n","desc":"","counter":0},{"syntax":"nextAvailableSerial()","name":"nextAvailableSerial","returns":"string","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"True","visible":"True","advanced":"False","short":"<p>get the serial number of the next available device, returns an empty string &quot;&quot; if nothing found</p>\n","desc":"","counter":0},{"syntax":"numAvailableDevices()","name":"numAvailableDevices","returns":"int","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"True","visible":"True","advanced":"False","short":"<p>get the number of available devices (not connected)</p>\n","desc":"","counter":0},{"syntax":"numConnectedDevices()","name":"numConnectedDevices","returns":"int","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"True","visible":"True","advanced":"False","short":"<p>get the number of currently connected devices</p>\n","desc":"","counter":0},{"syntax":"numTotalDevices()","name":"numTotalDevices","returns":"int","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"True","visible":"True","advanced":"False","short":"<p>get the total number of devices</p>\n","desc":"","counter":0},{"syntax":"ofxKinect()","name":"ofxKinect","returns":null,"returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"open(id = -1)","name":"open","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> id<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>open the connection and start grabbing images</p>\n<p>set the id to choose a kinect, see numAvailableDevices() if you don't set the id (ie id=-1), the first available kinect will be used</p>\n<p>note: this is the freenct bus id and may change each time the app is run</p>\n","desc":"","counter":1},{"syntax":"open(serial)","name":"open","returns":"bool","returns_description":null,"parameters":"string serial","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","desc":""},{"syntax":"setCameraTiltAngle(angleInDegrees)","name":"setCameraTiltAngle","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> angleInDegrees","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"setDepthClipping(nearClip = 500, farClip = 4000)","name":"setDepthClipping","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> nearClip<span class=\"token operator\">=</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> farClip<span class=\"token operator\">=</span><span class=\"token number\">4000</span>","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","desc":"","counter":0},{"syntax":"setLed(mode)","name":"setLed","returns":"void","returns_description":null,"parameters":"ofxKinect<span class=\"token operator\">::</span>LedMode mode","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>set the current led color and/or blink mode, only applied while the kinect is open</p>\n","desc":"","counter":0},{"syntax":"setRegistration(bUseRegistration = false)","name":"setRegistration","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">bool</span> bUseRegistration<span class=\"token operator\">=</span><span class=\"token boolean\">false</span>","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>calibrates the depth image to align with the rgb image, disabled by default</p>\n<p>call this before open(), has no effect while the connection is running</p>\n<p>note: this calculation uses some cpu, leave off if not needed</p>\n","desc":"","counter":0},{"syntax":"setUseTexture(bUse)","name":"setUseTexture","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">bool</span> bUse","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>enable/disable frame loading into textures on update()</p>\n","desc":"","counter":0},{"syntax":"threadedFunction()","name":"threadedFunction","returns":"void","returns_description":null,"parameters":null,"access":"private","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>thread function</p>\n","desc":"","counter":0},{"syntax":"update()","name":"update","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>updates the pixel buffers and textures</p>\n<p>make sure to call this to update to the latest incoming frames</p>\n","desc":"","counter":0},{"syntax":"updateDepthLookupTable()","name":"updateDepthLookupTable","returns":"void","returns_description":null,"parameters":null,"access":"private","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"updateDepthPixels()","name":"updateDepthPixels","returns":"void","returns_description":null,"parameters":null,"access":"private","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"~ofxKinect()","name":"~ofxKinect","returns":null,"returns_description":null,"parameters":null,"access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"name":"bGotData","type":"bool ","access":"protected","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"bGrabVideo","type":"bool ","access":"private","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"bGrabberInited","type":"bool ","access":"protected","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"bHasMotorControl","type":"bool ","access":"protected","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"bIsFrameNewDepth","type":"bool ","access":"private","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"bIsFrameNewVideo","type":"bool ","access":"private","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"bIsVideoInfrared","type":"bool ","access":"private","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"bLedNeedsApplying","type":"bool ","access":"protected","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"bNearWhite","type":"bool ","access":"private","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"bNeedsUpdateDepth","type":"bool ","access":"private","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"bNeedsUpdateVideo","type":"bool ","access":"private","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"bTiltNeedsApplying","type":"bool ","access":"protected","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"bUseRegistration","type":"bool ","access":"private","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"bUseTexture","type":"bool ","access":"protected","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"currentLed","type":"int ","access":"protected","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"currentTiltAngleDeg","type":"float ","access":"protected","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"desc":""},{"name":"depthPixels","type":"ofPixels ","access":"protected","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"depthPixelsRaw","type":"ofShortPixels ","access":"protected","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"depthPixelsRawBack","type":"ofShortPixels ","access":"private","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"depthPixelsRawIntra","type":"ofShortPixels ","access":"private","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"depthTex","type":"ofTexture ","access":"protected","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"deviceId","type":"int ","access":"protected","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"distancePixels","type":"ofFloatPixels ","access":"protected","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"farClipping","type":"float ","access":"private","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"height","type":"const int ","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"kinectContext","type":"ofxKinectContext","access":"private","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"kinectDevice","type":"freenect_device * ","access":"private","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"lastDeviceId","type":"int ","access":"protected","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"mksAccel","type":"ofPoint ","access":"protected","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"nearClipping","type":"float ","access":"private","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"rawAccel","type":"ofPoint ","access":"protected","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"serial","type":"string ","access":"protected","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"targetTiltAngleDeg","type":"float ","access":"protected","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"timeSinceOpen","type":"float ","access":"protected","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"tryCount","type":"int ","access":"protected","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"videoBytesPerPixel","type":"int ","access":"private","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"videoPixels","type":"ofPixels ","access":"protected","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"videoPixelsBack","type":"ofPixels ","access":"private","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"videoPixelsIntra","type":"ofPixels ","access":"private","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"videoTex","type":"ofTexture ","access":"protected","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{"name":"width","type":"const int ","access":"public","version_started":"0.8.0","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","desc":""},{}],"document":"<p>#class ofxKinect</p>\n<!--\n_visible: True_\n_advanced: False_\n_istemplated: False_\n-->\n<p>##InlineDescription</p>\n<p>wrapper for a freenect kinect device</p>\n<p>references:<a href=\"http://openkinect.org/wiki/Main_Page\">http://openkinect.org/wiki/Main_Page</a><a href=\"https://github.com/OpenKinect/libfreenect/blob/master/include/libfreenect.h\">https://github.com/OpenKinect/libfreenect/blob/master/include/libfreenect.h</a></p>\n<p>##Description</p>\n<p>##Methods</p>\n<p>###void clear()</p>\n<!--\n_syntax: clear()_\n_name: clear_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>clear resources, do not call this while ofxKinect is running!</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void close()</p>\n<!--\n_syntax: close()_\n_name: close_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>close the connection and stop grabbing images</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void draw(x, y, w, h)</p>\n<!--\n_syntax: draw(x, y, w, h)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: float x, float y, float w, float h_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>draw the video texture</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void draw(x, y)</p>\n<!--\n_syntax: draw(x, y)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: float x, float y_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void draw(&amp;point)</p>\n<!--\n_syntax: draw(&point)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: const ofPoint &point_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void draw(&amp;rect)</p>\n<!--\n_syntax: draw(&rect)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: const ofRectangle &rect_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void drawDepth(x, y, w, h)</p>\n<!--\n_syntax: drawDepth(x, y, w, h)_\n_name: drawDepth_\n_returns: void_\n_returns_description: _\n_parameters: float x, float y, float w, float h_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>draw the grayscale depth texture</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void drawDepth(x, y)</p>\n<!--\n_syntax: drawDepth(x, y)_\n_name: drawDepth_\n_returns: void_\n_returns_description: _\n_parameters: float x, float y_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void drawDepth(&amp;point)</p>\n<!--\n_syntax: drawDepth(&point)_\n_name: drawDepth_\n_returns: void_\n_returns_description: _\n_parameters: const ofPoint &point_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void drawDepth(&amp;rect)</p>\n<!--\n_syntax: drawDepth(&rect)_\n_name: drawDepth_\n_returns: void_\n_returns_description: _\n_parameters: const ofRectangle &rect_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void enableDepthNearValueWhite(bEnabled = true)</p>\n<!--\n_syntax: enableDepthNearValueWhite(bEnabled = true)_\n_name: enableDepthNearValueWhite_\n_returns: void_\n_returns_description: _\n_parameters: bool bEnabled=true_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float getAccelPitch()</p>\n<!--\n_syntax: getAccelPitch()_\n_name: getAccelPitch_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get the current pitch (x axis) &amp; roll (z axis) of the kinect in degrees</p>\n<p>useful to correct the 3d scene based on the camera inclination</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float getAccelRoll()</p>\n<!--\n_syntax: getAccelRoll()_\n_name: getAccelRoll_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofColor getColorAt(x, y)</p>\n<!--\n_syntax: getColorAt(x, y)_\n_name: getColorAt_\n_returns: ofColor_\n_returns_description: _\n_parameters: int x, int y_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofColor getColorAt(&amp;p)</p>\n<!--\n_syntax: getColorAt(&p)_\n_name: getColorAt_\n_returns: ofColor_\n_returns_description: _\n_parameters: const ofPoint &p_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float getCurrentCameraTiltAngle()</p>\n<!--\n_syntax: getCurrentCameraTiltAngle()_\n_name: getCurrentCameraTiltAngle_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get the current angle</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###unsigned char * getDepthPixels()</p>\n<!--\n_syntax: getDepthPixels()_\n_name: getDepthPixels_\n_returns: unsigned char *_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get the pixels of the most recent depth frame</p>\n<p>grayscale values</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofPixels &amp; getDepthPixelsRef()</p>\n<!--\n_syntax: getDepthPixelsRef()_\n_name: getDepthPixelsRef_\n_returns: ofPixels &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get the pixels of the most recent depth frame</p>\n<p>grayscale values</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofTexture &amp; getDepthTextureReference()</p>\n<!--\n_syntax: getDepthTextureReference()_\n_name: getDepthTextureReference_\n_returns: ofTexture &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get the grayscale depth texture</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int getDeviceId()</p>\n<!--\n_syntax: getDeviceId()_\n_name: getDeviceId_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float getDistanceAt(x, y)</p>\n<!--\n_syntax: getDistanceAt(x, y)_\n_name: getDistanceAt_\n_returns: float_\n_returns_description: _\n_parameters: int x, int y_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get the calulated distance for a depth point</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float getDistanceAt(&amp;p)</p>\n<!--\n_syntax: getDistanceAt(&p)_\n_name: getDistanceAt_\n_returns: float_\n_returns_description: _\n_parameters: const ofPoint &p_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float * getDistancePixels()</p>\n<!--\n_syntax: getDistancePixels()_\n_name: getDistancePixels_\n_returns: float *_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get the distance in millimeters to a given point as a float array</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofFloatPixels &amp; getDistancePixelsRef()</p>\n<!--\n_syntax: getDistancePixelsRef()_\n_name: getDistancePixelsRef_\n_returns: ofFloatPixels &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get the distance in millimeters to a given point as a float array</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float getFarClipping()</p>\n<!--\n_syntax: getFarClipping()_\n_name: getFarClipping_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float getHeight()</p>\n<!--\n_syntax: getHeight()_\n_name: getHeight_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofPoint getMksAccel()</p>\n<!--\n_syntax: getMksAccel()_\n_name: getMksAccel_\n_returns: ofPoint_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>axis-based gravity adjusted accelerometer values</p>\n<p>from libfreeenect:</p>\n<p>as laid out via the accelerometer data sheet, which is available at</p>\n<p><a href=\"http://www.kionix.com/Product%20Sheets/KXSD9%20Product%20Brief.pdf\">http://www.kionix.com/Product%20Sheets/KXSD9%20Product%20Brief.pdf</a></p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float getNearClipping()</p>\n<!--\n_syntax: getNearClipping()_\n_name: getNearClipping_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###unsigned char * getPixels()</p>\n<!--\n_syntax: getPixels()_\n_name: getPixels_\n_returns: unsigned char *_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofPixels &amp; getPixelsRef()</p>\n<!--\n_syntax: getPixelsRef()_\n_name: getPixelsRef_\n_returns: ofPixels &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get the video pixels reference</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofPoint getRawAccel()</p>\n<!--\n_syntax: getRawAccel()_\n_name: getRawAccel_\n_returns: ofPoint_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>raw axis values</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###unsigned short * getRawDepthPixels()</p>\n<!--\n_syntax: getRawDepthPixels()_\n_name: getRawDepthPixels_\n_returns: unsigned short *_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>raw 11 bit values</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofShortPixels &amp; getRawDepthPixelsRef()</p>\n<!--\n_syntax: getRawDepthPixelsRef()_\n_name: getRawDepthPixelsRef_\n_returns: ofShortPixels &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>raw 11 bit values</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float getSensorCameraDistance()</p>\n<!--\n_syntax: getSensorCameraDistance()_\n_name: getSensorCameraDistance_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get the distance between the IR sensor and the RGB camera in cm</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float getSensorEmitterDistance()</p>\n<!--\n_syntax: getSensorEmitterDistance()_\n_name: getSensorEmitterDistance_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get the distance between the IR sensor and IR emitter in cm</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###string getSerial()</p>\n<!--\n_syntax: getSerial()_\n_name: getSerial_\n_returns: string_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get the unique serial number returns an empty string &quot;&quot; if not connected</p>\n<p>NOTE: currently, libfreenect returns a serial number with all 0s for kinect models &gt; 1414, so this will only work with the original xbox kinect</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float getTargetCameraTiltAngle()</p>\n<!--\n_syntax: getTargetCameraTiltAngle()_\n_name: getTargetCameraTiltAngle_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get the target angle (if the camera is currently moving)</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofTexture &amp; getTextureReference()</p>\n<!--\n_syntax: getTextureReference()_\n_name: getTextureReference_\n_returns: ofTexture &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get the video (ir or rgb) texture</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float getWidth()</p>\n<!--\n_syntax: getWidth()_\n_name: getWidth_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofVec3f getWorldCoordinateAt(cx, cy)</p>\n<!--\n_syntax: getWorldCoordinateAt(cx, cy)_\n_name: getWorldCoordinateAt_\n_returns: ofVec3f_\n_returns_description: _\n_parameters: int cx, int cy_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>calculates the coordinate in the world for the depth point (perspective calculation)</p>\n<p>center of image is (0.0)</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofVec3f getWorldCoordinateAt(cx, cy, wz)</p>\n<!--\n_syntax: getWorldCoordinateAt(cx, cy, wz)_\n_name: getWorldCoordinateAt_\n_returns: ofVec3f_\n_returns_description: _\n_parameters: float cx, float cy, float wz_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float getZeroPlaneDistance()</p>\n<!--\n_syntax: getZeroPlaneDistance()_\n_name: getZeroPlaneDistance_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get the focal length of the IR sensor in mm</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float getZeroPlanePixelSize()</p>\n<!--\n_syntax: getZeroPlanePixelSize()_\n_name: getZeroPlanePixelSize_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get the size of a single pixel on the zero plane in mm</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void grabDepthFrame(*dev, *depth, timestamp)</p>\n<!--\n_syntax: grabDepthFrame(*dev, *depth, timestamp)_\n_name: grabDepthFrame_\n_returns: void_\n_returns_description: _\n_parameters: freenect_device *dev, void *depth, uint32_t timestamp_\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: True_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>libfreenect callbacks</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void grabVideoFrame(*dev, *video, timestamp)</p>\n<!--\n_syntax: grabVideoFrame(*dev, *video, timestamp)_\n_name: grabVideoFrame_\n_returns: void_\n_returns_description: _\n_parameters: freenect_device *dev, void *video, uint32_t timestamp_\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: True_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool hasAccelControl()</p>\n<!--\n_syntax: hasAccelControl()_\n_name: hasAccelControl_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool hasCamTiltControl()</p>\n<!--\n_syntax: hasCamTiltControl()_\n_name: hasCamTiltControl_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool hasLedControl()</p>\n<!--\n_syntax: hasLedControl()_\n_name: hasLedControl_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool init(infrared = false, video = true, texture = true)</p>\n<!--\n_syntax: init(infrared = false, video = true, texture = true)_\n_name: init_\n_returns: bool_\n_returns_description: _\n_parameters: bool infrared=false, bool video=true, bool texture=true_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool isConnected()</p>\n<!--\n_syntax: isConnected()_\n_name: isConnected_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>is the connection currently open?</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool isDepthNearValueWhite()</p>\n<!--\n_syntax: isDepthNearValueWhite()_\n_name: isDepthNearValueWhite_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool isDeviceConnected(id)</p>\n<!--\n_syntax: isDeviceConnected(id)_\n_name: isDeviceConnected_\n_returns: bool_\n_returns_description: _\n_parameters: int id_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: True_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>is a device already connected?</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool isDeviceConnected(serial)</p>\n<!--\n_syntax: isDeviceConnected(serial)_\n_name: isDeviceConnected_\n_returns: bool_\n_returns_description: _\n_parameters: string serial_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: True_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool isFrameNew()</p>\n<!--\n_syntax: isFrameNew()_\n_name: isFrameNew_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>is the current frame new?</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool isFrameNewDepth()</p>\n<!--\n_syntax: isFrameNewDepth()_\n_name: isFrameNewDepth_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool isFrameNewVideo()</p>\n<!--\n_syntax: isFrameNewVideo()_\n_name: isFrameNewVideo_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void listDevices()</p>\n<!--\n_syntax: listDevices()_\n_name: listDevices_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: True_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>print the device list</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int nextAvailableId()</p>\n<!--\n_syntax: nextAvailableId()_\n_name: nextAvailableId_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: True_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get the id of the next available device, returns -1 if nothing found</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###string nextAvailableSerial()</p>\n<!--\n_syntax: nextAvailableSerial()_\n_name: nextAvailableSerial_\n_returns: string_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: True_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get the serial number of the next available device, returns an empty string &quot;&quot; if nothing found</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int numAvailableDevices()</p>\n<!--\n_syntax: numAvailableDevices()_\n_name: numAvailableDevices_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: True_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get the number of available devices (not connected)</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int numConnectedDevices()</p>\n<!--\n_syntax: numConnectedDevices()_\n_name: numConnectedDevices_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: True_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get the number of currently connected devices</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int numTotalDevices()</p>\n<!--\n_syntax: numTotalDevices()_\n_name: numTotalDevices_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: True_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>get the total number of devices</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<h3>ofxKinect()</h3>\n<!--\n_syntax: ofxKinect()_\n_name: ofxKinect_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool open(id = -1)</p>\n<!--\n_syntax: open(id = -1)_\n_name: open_\n_returns: bool_\n_returns_description: _\n_parameters: int id=-1_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>open the connection and start grabbing images</p>\n<p>set the id to choose a kinect, see numAvailableDevices() if you don't set the id (ie id=-1), the first available kinect will be used</p>\n<p>note: this is the freenct bus id and may change each time the app is run</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool open(serial)</p>\n<!--\n_syntax: open(serial)_\n_name: open_\n_returns: bool_\n_returns_description: _\n_parameters: string serial_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>open using a kinect unique serial number</p>\n<p>NOTE: currently, libfreenect returns a serial number with all 0s for kinect models &gt; 1414, so this will only work with the original xbox kinect</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool setCameraTiltAngle(angleInDegrees)</p>\n<!--\n_syntax: setCameraTiltAngle(angleInDegrees)_\n_name: setCameraTiltAngle_\n_returns: bool_\n_returns_description: _\n_parameters: float angleInDegrees_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setDepthClipping(nearClip = 500, farClip = 4000)</p>\n<!--\n_syntax: setDepthClipping(nearClip = 500, farClip = 4000)_\n_name: setDepthClipping_\n_returns: void_\n_returns_description: _\n_parameters: float nearClip=500, float farClip=4000_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>set the clipping planes for the depth calculations in millimeters</p>\n<p>these are used for the depth value (12bit) -&gt; grayscale (1 byte) conversion ie setting a short range will give you greater sensitivity from 0-255</p>\n<p>default is 50cm - 4m note: you won't get any data &lt; 50cm and distances &gt; 4m start to get noisy</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setLed(mode)</p>\n<!--\n_syntax: setLed(mode)_\n_name: setLed_\n_returns: void_\n_returns_description: _\n_parameters: ofxKinect::LedMode mode_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>set the current led color and/or blink mode, only applied while the kinect is open</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setRegistration(bUseRegistration = false)</p>\n<!--\n_syntax: setRegistration(bUseRegistration = false)_\n_name: setRegistration_\n_returns: void_\n_returns_description: _\n_parameters: bool bUseRegistration=false_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>calibrates the depth image to align with the rgb image, disabled by default</p>\n<p>call this before open(), has no effect while the connection is running</p>\n<p>note: this calculation uses some cpu, leave off if not needed</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setUseTexture(bUse)</p>\n<!--\n_syntax: setUseTexture(bUse)_\n_name: setUseTexture_\n_returns: void_\n_returns_description: _\n_parameters: bool bUse_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>enable/disable frame loading into textures on update()</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void threadedFunction()</p>\n<!--\n_syntax: threadedFunction()_\n_name: threadedFunction_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>thread function</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void update()</p>\n<!--\n_syntax: update()_\n_name: update_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>updates the pixel buffers and textures</p>\n<p>make sure to call this to update to the latest incoming frames</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void updateDepthLookupTable()</p>\n<!--\n_syntax: updateDepthLookupTable()_\n_name: updateDepthLookupTable_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void updateDepthPixels()</p>\n<!--\n_syntax: updateDepthPixels()_\n_name: updateDepthPixels_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<h3>~ofxKinect()</h3>\n<!--\n_syntax: ~ofxKinect()_\n_name: ~ofxKinect_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>##Variables</p>\n<p>###bool  bGotData</p>\n<!--\n_name: bGotData_\n_type: bool _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool  bGrabVideo</p>\n<!--\n_name: bGrabVideo_\n_type: bool _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool  bGrabberInited</p>\n<!--\n_name: bGrabberInited_\n_type: bool _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool  bHasMotorControl</p>\n<!--\n_name: bHasMotorControl_\n_type: bool _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool  bIsFrameNewDepth</p>\n<!--\n_name: bIsFrameNewDepth_\n_type: bool _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool  bIsFrameNewVideo</p>\n<!--\n_name: bIsFrameNewVideo_\n_type: bool _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool  bIsVideoInfrared</p>\n<!--\n_name: bIsVideoInfrared_\n_type: bool _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool  bLedNeedsApplying</p>\n<!--\n_name: bLedNeedsApplying_\n_type: bool _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool  bNearWhite</p>\n<!--\n_name: bNearWhite_\n_type: bool _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool  bNeedsUpdateDepth</p>\n<!--\n_name: bNeedsUpdateDepth_\n_type: bool _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool  bNeedsUpdateVideo</p>\n<!--\n_name: bNeedsUpdateVideo_\n_type: bool _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool  bTiltNeedsApplying</p>\n<!--\n_name: bTiltNeedsApplying_\n_type: bool _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool  bUseRegistration</p>\n<!--\n_name: bUseRegistration_\n_type: bool _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool  bUseTexture</p>\n<!--\n_name: bUseTexture_\n_type: bool _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int  currentLed</p>\n<!--\n_name: currentLed_\n_type: int _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float  currentTiltAngleDeg</p>\n<!--\n_name: currentTiltAngleDeg_\n_type: float _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###vector&lt; unsigned char &gt;  depthLookupTable</p>\n<!--\n_name: depthLookupTable_\n_type: vector< unsigned char > _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofPixels  depthPixels</p>\n<!--\n_name: depthPixels_\n_type: ofPixels _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofShortPixels  depthPixelsRaw</p>\n<!--\n_name: depthPixelsRaw_\n_type: ofShortPixels _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofShortPixels  depthPixelsRawBack</p>\n<!--\n_name: depthPixelsRawBack_\n_type: ofShortPixels _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofShortPixels  depthPixelsRawIntra</p>\n<!--\n_name: depthPixelsRawIntra_\n_type: ofShortPixels _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofTexture  depthTex</p>\n<!--\n_name: depthTex_\n_type: ofTexture _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int  deviceId</p>\n<!--\n_name: deviceId_\n_type: int _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofFloatPixels  distancePixels</p>\n<!--\n_name: distancePixels_\n_type: ofFloatPixels _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float  farClipping</p>\n<!--\n_name: farClipping_\n_type: float _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###const int  height</p>\n<!--\n_name: height_\n_type: const int _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofxKinectContext kinectContext</p>\n<!--\n_name: kinectContext_\n_type: ofxKinectContext_\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###freenect_device *  kinectDevice</p>\n<!--\n_name: kinectDevice_\n_type: freenect_device * _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int  lastDeviceId</p>\n<!--\n_name: lastDeviceId_\n_type: int _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofPoint  mksAccel</p>\n<!--\n_name: mksAccel_\n_type: ofPoint _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float  nearClipping</p>\n<!--\n_name: nearClipping_\n_type: float _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofPoint  rawAccel</p>\n<!--\n_name: rawAccel_\n_type: ofPoint _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###string  serial</p>\n<!--\n_name: serial_\n_type: string _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float  targetTiltAngleDeg</p>\n<!--\n_name: targetTiltAngleDeg_\n_type: float _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float  timeSinceOpen</p>\n<!--\n_name: timeSinceOpen_\n_type: float _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int  tryCount</p>\n<!--\n_name: tryCount_\n_type: int _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int  videoBytesPerPixel</p>\n<!--\n_name: videoBytesPerPixel_\n_type: int _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofPixels  videoPixels</p>\n<!--\n_name: videoPixels_\n_type: ofPixels _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofPixels  videoPixelsBack</p>\n<!--\n_name: videoPixelsBack_\n_type: ofPixels _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofPixels  videoPixelsIntra</p>\n<!--\n_name: videoPixelsIntra_\n_type: ofPixels _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofTexture  videoTex</p>\n<!--\n_name: videoTex_\n_type: ofTexture _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###const int  width</p>\n<!--\n_name: width_\n_type: const int _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n","raw":"#class ofxKinect\n\n\n<!--\n_visible: True_\n_advanced: False_\n_istemplated: False_\n-->\n\n##InlineDescription\n\n\nwrapper for a freenect kinect device\n\nreferences:[http://openkinect.org/wiki/Main_Page](http://openkinect.org/wiki/Main_Page)[https://github.com/OpenKinect/libfreenect/blob/master/include/libfreenect.h](https://github.com/OpenKinect/libfreenect/blob/master/include/libfreenect.h) \n\n\n\n\n\n\n##Description\n\n\n\n\n\n##Methods\n\n\n\n###void clear()\n\n<!--\n_syntax: clear()_\n_name: clear_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nclear resources, do not call this while ofxKinect is running! \n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void close()\n\n<!--\n_syntax: close()_\n_name: close_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nclose the connection and stop grabbing images \n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void draw(x, y, w, h)\n\n<!--\n_syntax: draw(x, y, w, h)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: float x, float y, float w, float h_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\ndraw the video texture \n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void draw(x, y)\n\n<!--\n_syntax: draw(x, y)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: float x, float y_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void draw(&point)\n\n<!--\n_syntax: draw(&point)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: const ofPoint &point_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void draw(&rect)\n\n<!--\n_syntax: draw(&rect)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: const ofRectangle &rect_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void drawDepth(x, y, w, h)\n\n<!--\n_syntax: drawDepth(x, y, w, h)_\n_name: drawDepth_\n_returns: void_\n_returns_description: _\n_parameters: float x, float y, float w, float h_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\ndraw the grayscale depth texture \n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void drawDepth(x, y)\n\n<!--\n_syntax: drawDepth(x, y)_\n_name: drawDepth_\n_returns: void_\n_returns_description: _\n_parameters: float x, float y_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void drawDepth(&point)\n\n<!--\n_syntax: drawDepth(&point)_\n_name: drawDepth_\n_returns: void_\n_returns_description: _\n_parameters: const ofPoint &point_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void drawDepth(&rect)\n\n<!--\n_syntax: drawDepth(&rect)_\n_name: drawDepth_\n_returns: void_\n_returns_description: _\n_parameters: const ofRectangle &rect_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void enableDepthNearValueWhite(bEnabled = true)\n\n<!--\n_syntax: enableDepthNearValueWhite(bEnabled = true)_\n_name: enableDepthNearValueWhite_\n_returns: void_\n_returns_description: _\n_parameters: bool bEnabled=true_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float getAccelPitch()\n\n<!--\n_syntax: getAccelPitch()_\n_name: getAccelPitch_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\nget the current pitch (x axis) & roll (z axis) of the kinect in degrees\n\nuseful to correct the 3d scene based on the camera inclination \n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float getAccelRoll()\n\n<!--\n_syntax: getAccelRoll()_\n_name: getAccelRoll_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofColor getColorAt(x, y)\n\n<!--\n_syntax: getColorAt(x, y)_\n_name: getColorAt_\n_returns: ofColor_\n_returns_description: _\n_parameters: int x, int y_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofColor getColorAt(&p)\n\n<!--\n_syntax: getColorAt(&p)_\n_name: getColorAt_\n_returns: ofColor_\n_returns_description: _\n_parameters: const ofPoint &p_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float getCurrentCameraTiltAngle()\n\n<!--\n_syntax: getCurrentCameraTiltAngle()_\n_name: getCurrentCameraTiltAngle_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget the current angle \n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###unsigned char * getDepthPixels()\n\n<!--\n_syntax: getDepthPixels()_\n_name: getDepthPixels_\n_returns: unsigned char *_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget the pixels of the most recent depth frame \n\n\ngrayscale values \n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofPixels & getDepthPixelsRef()\n\n<!--\n_syntax: getDepthPixelsRef()_\n_name: getDepthPixelsRef_\n_returns: ofPixels &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget the pixels of the most recent depth frame \n\n\ngrayscale values \n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofTexture & getDepthTextureReference()\n\n<!--\n_syntax: getDepthTextureReference()_\n_name: getDepthTextureReference_\n_returns: ofTexture &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget the grayscale depth texture \n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int getDeviceId()\n\n<!--\n_syntax: getDeviceId()_\n_name: getDeviceId_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float getDistanceAt(x, y)\n\n<!--\n_syntax: getDistanceAt(x, y)_\n_name: getDistanceAt_\n_returns: float_\n_returns_description: _\n_parameters: int x, int y_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget the calulated distance for a depth point \n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float getDistanceAt(&p)\n\n<!--\n_syntax: getDistanceAt(&p)_\n_name: getDistanceAt_\n_returns: float_\n_returns_description: _\n_parameters: const ofPoint &p_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float * getDistancePixels()\n\n<!--\n_syntax: getDistancePixels()_\n_name: getDistancePixels_\n_returns: float *_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget the distance in millimeters to a given point as a float array \n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofFloatPixels & getDistancePixelsRef()\n\n<!--\n_syntax: getDistancePixelsRef()_\n_name: getDistancePixelsRef_\n_returns: ofFloatPixels &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget the distance in millimeters to a given point as a float array \n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float getFarClipping()\n\n<!--\n_syntax: getFarClipping()_\n_name: getFarClipping_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float getHeight()\n\n<!--\n_syntax: getHeight()_\n_name: getHeight_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofPoint getMksAccel()\n\n<!--\n_syntax: getMksAccel()_\n_name: getMksAccel_\n_returns: ofPoint_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\naxis-based gravity adjusted accelerometer values\n\nfrom libfreeenect:\n\nas laid out via the accelerometer data sheet, which is available at\n\n[http://www.kionix.com/Product%20Sheets/KXSD9%20Product%20Brief.pdf](http://www.kionix.com/Product%20Sheets/KXSD9%20Product%20Brief.pdf) \n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float getNearClipping()\n\n<!--\n_syntax: getNearClipping()_\n_name: getNearClipping_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###unsigned char * getPixels()\n\n<!--\n_syntax: getPixels()_\n_name: getPixels_\n_returns: unsigned char *_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofPixels & getPixelsRef()\n\n<!--\n_syntax: getPixelsRef()_\n_name: getPixelsRef_\n_returns: ofPixels &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget the video pixels reference \n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofPoint getRawAccel()\n\n<!--\n_syntax: getRawAccel()_\n_name: getRawAccel_\n_returns: ofPoint_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nraw axis values \n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###unsigned short * getRawDepthPixels()\n\n<!--\n_syntax: getRawDepthPixels()_\n_name: getRawDepthPixels_\n_returns: unsigned short *_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nraw 11 bit values \n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofShortPixels & getRawDepthPixelsRef()\n\n<!--\n_syntax: getRawDepthPixelsRef()_\n_name: getRawDepthPixelsRef_\n_returns: ofShortPixels &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nraw 11 bit values \n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float getSensorCameraDistance()\n\n<!--\n_syntax: getSensorCameraDistance()_\n_name: getSensorCameraDistance_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget the distance between the IR sensor and the RGB camera in cm \n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float getSensorEmitterDistance()\n\n<!--\n_syntax: getSensorEmitterDistance()_\n_name: getSensorEmitterDistance_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget the distance between the IR sensor and IR emitter in cm \n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###string getSerial()\n\n<!--\n_syntax: getSerial()_\n_name: getSerial_\n_returns: string_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\nget the unique serial number returns an empty string \"\" if not connected\n\nNOTE: currently, libfreenect returns a serial number with all 0s for kinect models > 1414, so this will only work with the original xbox kinect \n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float getTargetCameraTiltAngle()\n\n<!--\n_syntax: getTargetCameraTiltAngle()_\n_name: getTargetCameraTiltAngle_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget the target angle (if the camera is currently moving) \n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofTexture & getTextureReference()\n\n<!--\n_syntax: getTextureReference()_\n_name: getTextureReference_\n_returns: ofTexture &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget the video (ir or rgb) texture \n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float getWidth()\n\n<!--\n_syntax: getWidth()_\n_name: getWidth_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofVec3f getWorldCoordinateAt(cx, cy)\n\n<!--\n_syntax: getWorldCoordinateAt(cx, cy)_\n_name: getWorldCoordinateAt_\n_returns: ofVec3f_\n_returns_description: _\n_parameters: int cx, int cy_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\ncalculates the coordinate in the world for the depth point (perspective calculation)\n\ncenter of image is (0.0) \n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofVec3f getWorldCoordinateAt(cx, cy, wz)\n\n<!--\n_syntax: getWorldCoordinateAt(cx, cy, wz)_\n_name: getWorldCoordinateAt_\n_returns: ofVec3f_\n_returns_description: _\n_parameters: float cx, float cy, float wz_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float getZeroPlaneDistance()\n\n<!--\n_syntax: getZeroPlaneDistance()_\n_name: getZeroPlaneDistance_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget the focal length of the IR sensor in mm \n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float getZeroPlanePixelSize()\n\n<!--\n_syntax: getZeroPlanePixelSize()_\n_name: getZeroPlanePixelSize_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget the size of a single pixel on the zero plane in mm \n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void grabDepthFrame(*dev, *depth, timestamp)\n\n<!--\n_syntax: grabDepthFrame(*dev, *depth, timestamp)_\n_name: grabDepthFrame_\n_returns: void_\n_returns_description: _\n_parameters: freenect_device *dev, void *depth, uint32_t timestamp_\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: True_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nlibfreenect callbacks \n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void grabVideoFrame(*dev, *video, timestamp)\n\n<!--\n_syntax: grabVideoFrame(*dev, *video, timestamp)_\n_name: grabVideoFrame_\n_returns: void_\n_returns_description: _\n_parameters: freenect_device *dev, void *video, uint32_t timestamp_\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: True_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool hasAccelControl()\n\n<!--\n_syntax: hasAccelControl()_\n_name: hasAccelControl_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool hasCamTiltControl()\n\n<!--\n_syntax: hasCamTiltControl()_\n_name: hasCamTiltControl_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool hasLedControl()\n\n<!--\n_syntax: hasLedControl()_\n_name: hasLedControl_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool init(infrared = false, video = true, texture = true)\n\n<!--\n_syntax: init(infrared = false, video = true, texture = true)_\n_name: init_\n_returns: bool_\n_returns_description: _\n_parameters: bool infrared=false, bool video=true, bool texture=true_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool isConnected()\n\n<!--\n_syntax: isConnected()_\n_name: isConnected_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nis the connection currently open? \n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool isDepthNearValueWhite()\n\n<!--\n_syntax: isDepthNearValueWhite()_\n_name: isDepthNearValueWhite_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool isDeviceConnected(id)\n\n<!--\n_syntax: isDeviceConnected(id)_\n_name: isDeviceConnected_\n_returns: bool_\n_returns_description: _\n_parameters: int id_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: True_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nis a device already connected? \n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool isDeviceConnected(serial)\n\n<!--\n_syntax: isDeviceConnected(serial)_\n_name: isDeviceConnected_\n_returns: bool_\n_returns_description: _\n_parameters: string serial_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: True_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool isFrameNew()\n\n<!--\n_syntax: isFrameNew()_\n_name: isFrameNew_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nis the current frame new? \n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool isFrameNewDepth()\n\n<!--\n_syntax: isFrameNewDepth()_\n_name: isFrameNewDepth_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool isFrameNewVideo()\n\n<!--\n_syntax: isFrameNewVideo()_\n_name: isFrameNewVideo_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void listDevices()\n\n<!--\n_syntax: listDevices()_\n_name: listDevices_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: True_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nprint the device list \n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int nextAvailableId()\n\n<!--\n_syntax: nextAvailableId()_\n_name: nextAvailableId_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: True_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\nget the id of the next available device, returns -1 if nothing found \n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###string nextAvailableSerial()\n\n<!--\n_syntax: nextAvailableSerial()_\n_name: nextAvailableSerial_\n_returns: string_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: True_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\nget the serial number of the next available device, returns an empty string \"\" if nothing found \n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int numAvailableDevices()\n\n<!--\n_syntax: numAvailableDevices()_\n_name: numAvailableDevices_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: True_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget the number of available devices (not connected) \n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int numConnectedDevices()\n\n<!--\n_syntax: numConnectedDevices()_\n_name: numConnectedDevices_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: True_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget the number of currently connected devices \n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int numTotalDevices()\n\n<!--\n_syntax: numTotalDevices()_\n_name: numTotalDevices_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: True_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nget the total number of devices \n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n### ofxKinect()\n\n<!--\n_syntax: ofxKinect()_\n_name: ofxKinect_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool open(id = -1)\n\n<!--\n_syntax: open(id = -1)_\n_name: open_\n_returns: bool_\n_returns_description: _\n_parameters: int id=-1_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\nopen the connection and start grabbing images\n\nset the id to choose a kinect, see numAvailableDevices() if you don't set the id (ie id=-1), the first available kinect will be used\n\nnote: this is the freenct bus id and may change each time the app is run \n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool open(serial)\n\n<!--\n_syntax: open(serial)_\n_name: open_\n_returns: bool_\n_returns_description: _\n_parameters: string serial_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\nopen using a kinect unique serial number\n\nNOTE: currently, libfreenect returns a serial number with all 0s for kinect models > 1414, so this will only work with the original xbox kinect \n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool setCameraTiltAngle(angleInDegrees)\n\n<!--\n_syntax: setCameraTiltAngle(angleInDegrees)_\n_name: setCameraTiltAngle_\n_returns: bool_\n_returns_description: _\n_parameters: float angleInDegrees_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setDepthClipping(nearClip = 500, farClip = 4000)\n\n<!--\n_syntax: setDepthClipping(nearClip = 500, farClip = 4000)_\n_name: setDepthClipping_\n_returns: void_\n_returns_description: _\n_parameters: float nearClip=500, float farClip=4000_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\nset the clipping planes for the depth calculations in millimeters\n\nthese are used for the depth value (12bit) -> grayscale (1 byte) conversion ie setting a short range will give you greater sensitivity from 0-255\n\ndefault is 50cm - 4m note: you won't get any data < 50cm and distances > 4m start to get noisy \n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setLed(mode)\n\n<!--\n_syntax: setLed(mode)_\n_name: setLed_\n_returns: void_\n_returns_description: _\n_parameters: ofxKinect::LedMode mode_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\nset the current led color and/or blink mode, only applied while the kinect is open \n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setRegistration(bUseRegistration = false)\n\n<!--\n_syntax: setRegistration(bUseRegistration = false)_\n_name: setRegistration_\n_returns: void_\n_returns_description: _\n_parameters: bool bUseRegistration=false_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\ncalibrates the depth image to align with the rgb image, disabled by default\n\ncall this before open(), has no effect while the connection is running\n\nnote: this calculation uses some cpu, leave off if not needed \n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setUseTexture(bUse)\n\n<!--\n_syntax: setUseTexture(bUse)_\n_name: setUseTexture_\n_returns: void_\n_returns_description: _\n_parameters: bool bUse_\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nenable/disable frame loading into textures on update() \n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void threadedFunction()\n\n<!--\n_syntax: threadedFunction()_\n_name: threadedFunction_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nthread function \n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void update()\n\n<!--\n_syntax: update()_\n_name: update_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\nupdates the pixel buffers and textures\n\nmake sure to call this to update to the latest incoming frames \n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void updateDepthLookupTable()\n\n<!--\n_syntax: updateDepthLookupTable()_\n_name: updateDepthLookupTable_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void updateDepthPixels()\n\n<!--\n_syntax: updateDepthPixels()_\n_name: updateDepthPixels_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n### ~ofxKinect()\n\n<!--\n_syntax: ~ofxKinect()_\n_name: ~ofxKinect_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n##Variables\n\n\n\n###bool  bGotData\n\n<!--\n_name: bGotData_\n_type: bool _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool  bGrabVideo\n\n<!--\n_name: bGrabVideo_\n_type: bool _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool  bGrabberInited\n\n<!--\n_name: bGrabberInited_\n_type: bool _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool  bHasMotorControl\n\n<!--\n_name: bHasMotorControl_\n_type: bool _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool  bIsFrameNewDepth\n\n<!--\n_name: bIsFrameNewDepth_\n_type: bool _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool  bIsFrameNewVideo\n\n<!--\n_name: bIsFrameNewVideo_\n_type: bool _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool  bIsVideoInfrared\n\n<!--\n_name: bIsVideoInfrared_\n_type: bool _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool  bLedNeedsApplying\n\n<!--\n_name: bLedNeedsApplying_\n_type: bool _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool  bNearWhite\n\n<!--\n_name: bNearWhite_\n_type: bool _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool  bNeedsUpdateDepth\n\n<!--\n_name: bNeedsUpdateDepth_\n_type: bool _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool  bNeedsUpdateVideo\n\n<!--\n_name: bNeedsUpdateVideo_\n_type: bool _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool  bTiltNeedsApplying\n\n<!--\n_name: bTiltNeedsApplying_\n_type: bool _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool  bUseRegistration\n\n<!--\n_name: bUseRegistration_\n_type: bool _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool  bUseTexture\n\n<!--\n_name: bUseTexture_\n_type: bool _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int  currentLed\n\n<!--\n_name: currentLed_\n_type: int _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float  currentTiltAngleDeg\n\n<!--\n_name: currentTiltAngleDeg_\n_type: float _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###vector< unsigned char >  depthLookupTable\n\n<!--\n_name: depthLookupTable_\n_type: vector< unsigned char > _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofPixels  depthPixels\n\n<!--\n_name: depthPixels_\n_type: ofPixels _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofShortPixels  depthPixelsRaw\n\n<!--\n_name: depthPixelsRaw_\n_type: ofShortPixels _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofShortPixels  depthPixelsRawBack\n\n<!--\n_name: depthPixelsRawBack_\n_type: ofShortPixels _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofShortPixels  depthPixelsRawIntra\n\n<!--\n_name: depthPixelsRawIntra_\n_type: ofShortPixels _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofTexture  depthTex\n\n<!--\n_name: depthTex_\n_type: ofTexture _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int  deviceId\n\n<!--\n_name: deviceId_\n_type: int _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofFloatPixels  distancePixels\n\n<!--\n_name: distancePixels_\n_type: ofFloatPixels _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float  farClipping\n\n<!--\n_name: farClipping_\n_type: float _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###const int  height\n\n<!--\n_name: height_\n_type: const int _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofxKinectContext kinectContext\n\n<!--\n_name: kinectContext_\n_type: ofxKinectContext_\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###freenect_device *  kinectDevice\n\n<!--\n_name: kinectDevice_\n_type: freenect_device * _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int  lastDeviceId\n\n<!--\n_name: lastDeviceId_\n_type: int _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofPoint  mksAccel\n\n<!--\n_name: mksAccel_\n_type: ofPoint _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float  nearClipping\n\n<!--\n_name: nearClipping_\n_type: float _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofPoint  rawAccel\n\n<!--\n_name: rawAccel_\n_type: ofPoint _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###string  serial\n\n<!--\n_name: serial_\n_type: string _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float  targetTiltAngleDeg\n\n<!--\n_name: targetTiltAngleDeg_\n_type: float _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float  timeSinceOpen\n\n<!--\n_name: timeSinceOpen_\n_type: float _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int  tryCount\n\n<!--\n_name: tryCount_\n_type: int _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int  videoBytesPerPixel\n\n<!--\n_name: videoBytesPerPixel_\n_type: int _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofPixels  videoPixels\n\n<!--\n_name: videoPixels_\n_type: ofPixels _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofPixels  videoPixelsBack\n\n<!--\n_name: videoPixelsBack_\n_type: ofPixels _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofPixels  videoPixelsIntra\n\n<!--\n_name: videoPixelsIntra_\n_type: ofPixels _\n_access: private_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofTexture  videoTex\n\n<!--\n_name: videoTex_\n_type: ofTexture _\n_access: protected_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###const int  width\n\n<!--\n_name: width_\n_type: const int _\n_access: public_\n_version_started: 0.8.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_description: _\n\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page","static":true}}],"fetch":[]}