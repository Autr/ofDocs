{"data":[{"page":{"entry":{"name":"ofLight","filename":"ofLight.markdown","absolute":"/Users/Gilbert/Code/openFrameworks/ofSite/documentation/gl/ofLight.markdown","path":"/documentation/gl/ofLight","route":"/documentation/gl/ofLight.markdown","dir":"../ofSite/documentation/gl","ext":"markdown","type":"page","id":2208,"parent":2192,"breadcrumbs":[2192,1968],"siblings":[],"translations":{}},"description":{"short":"","full":"<p>ofLight is an openGL light for 3D rendering.  It contains four main lighting types:</p>\n<p><strong>Spot light</strong> : Light originates from a single point and spreads outward in a cone of variable diameter and length</p>\n<p><strong>Point light</strong> : Light comes from a single point and spreads outward evenly in all directions</p>\n<p><strong>Directional light</strong> : Light comes evenly from a given direction, as if coming from a plan of infinite size and distance from the lit object</p>\n<p><strong>Ambient light</strong> : Light from a fixed intensity and fixed source that affects all objects equally</p>\n<p><img src=\"../gl/Lights_PointSpot.jpg\" alt=\"PointSpot\">\n<img src=\"../gl/Lights_AmbientDirectional.jpg\" alt=\"AmbientDirectional\"></p>\n<p>Within ofLight, the following properties of each light type can be set individually:</p>\n<p>XYZ orientation</p>\n<p>XYZ position</p>\n<p>RGB color</p>\n<p>Light attenuation / falloff</p>\n<p>Additionally, spot lights have variable control of cone length and diameter.</p>\n<p><img src=\"../gl/spotLight_yellowDiffuse_narrowCone.png\" alt=\"spotLight_yellowDiffuse_narrowCone\"></p>\n<p><em>Spotlight with yellow diffuse reflection, narrow cone</em></p>\n<p><img src=\"../gl/spotLight_yellowDiffuse_wideCone.png\" alt=\"spotLight_yellowDiffuse_wideCone\"></p>\n<p><em>Spotlight with yellow diffuse reflection, wide cone</em></p>\n<p><strong>ofLight and ofMaterial</strong></p>\n<p>GL lighting effects are dependent on both the light and the material being lit.  ofLight interacts strongly with ofMaterial, which has five rendering parameters for materials being lit:</p>\n<p><strong>Specular color</strong> : the color of highlights on a material</p>\n<p><strong>Diffuse color</strong> : the color of the material when it is illuminated</p>\n<p><img src=\"../gl/pointLight_blueSpecular_redDiffuse.png\" alt=\"pointLight_blueSpecular_redDiffuse\"></p>\n<p><em>Point light with blue specular reflection and red diffuse reflection</em></p>\n<p><strong>Ambient color</strong> : the color of the material when it is not illuminated</p>\n<p><img src=\"../gl/spotLight_redDiffuse_noSpec_blueAmbient.png\" alt=\"spotLight_redDiffuse_noSpec_blueAmbient\"></p>\n<p><em>Spotlight with red diffuse reflection, no specular reflection, and blue ambient color</em></p>\n<p><strong>Emissive color</strong> : the color the material illuminated from within</p>\n<p><img src=\"../gl/emissive_green.png\" alt=\"emissive_green\"></p>\n<p><em>Emissive green material coloring, no external lights</em></p>\n<p><strong>Shininess</strong> : the matte or shiny property of the material, which impacts how much specular light vs diffuse light reflects from a surface.</p>\n<p><img src=\"../gl/pointLight_yellowDiffuse_blueSpecular_lowShine.png\" alt=\"pointLight_yellowDiffuse_blueSpecular_lowShine\"></p>\n<p><em>Point light with yellow diffuse and blue specular reflections, high matte</em></p>\n<p><img src=\"../gl/pointLight_yellowDiffuse_blueSpecular_highShine.png\" alt=\"pointLight_yellowDiffuse_blueSpecular_highShine\"></p>\n<p><em>Point light with yellow diffuse and blue specular reflections, high shine</em></p>\n<p><strong>ofLight and cameras</strong></p>\n<p>If an ofLight is drawn within the context of a camera such as ofEasyCam, its position and orientation will be controlled by the camera and it will be oriented relative to the scene focus of the camera.</p>\n<pre><code class=\"language-{.cpp}\">camera<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\" spellcheck=\"true\">//spotlight is drawn in the camera frame and oriented relative to the focus of the camera</span>\nspotlight<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token function\">ofSphere</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nspotlight<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncamera<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>If an ofLight is drawn outside the camera, it will be drawn in the global frame and will affect all objects in the scene equally.</p>\n<pre><code class=\"language-{.cpp}\">spotlight<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//spotlight is in the global frame and not the camera frame</span>\ncamera<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">ofSphere</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncamera<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nspotlight<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>(Examples made using LightsCamera example by Pete Werner https://github.com/petewerner/generative/tree/master/lights_camera)</p>\n<h1></h1>\n"},"config":{"visible":"True","advanced":"False","istemplated":"False","extends":"ofNode"},"methods":[{"syntax":"customDraw(*renderer)","name":"customDraw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofBaseRenderer <span class=\"token operator\">*</span>renderer","access":"private","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"disable()","name":"disable","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"enable()","name":"enable","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getAmbientColor()","name":"getAmbientColor","returns":"ofFloatColor","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getAttenuationConstant()","name":"getAttenuationConstant","returns":"float","returns_description":null,"parameters":null,"access":"public","version_started":"0071","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getAttenuationLinear()","name":"getAttenuationLinear","returns":"float","returns_description":null,"parameters":null,"access":"public","version_started":"0071","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getAttenuationQuadratic()","name":"getAttenuationQuadratic","returns":"float","returns_description":null,"parameters":null,"access":"public","version_started":"0071","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getDiffuseColor()","name":"getDiffuseColor","returns":"ofFloatColor","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getIsAreaLight()","name":"getIsAreaLight","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getIsDirectional()","name":"getIsDirectional","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getIsEnabled()","name":"getIsEnabled","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getIsPointLight()","name":"getIsPointLight","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getIsSpotlight()","name":"getIsSpotlight","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getLightID()","name":"getLightID","returns":"int","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getSpecularColor()","name":"getSpecularColor","returns":"ofFloatColor","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getSpotConcentration()","name":"getSpotConcentration","returns":"float","returns_description":null,"parameters":null,"access":"public","version_started":"0071","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getSpotlightCutOff()","name":"getSpotlightCutOff","returns":"float","returns_description":null,"parameters":null,"access":"public","version_started":"0071","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"getType()","name":"getType","returns":"int","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"ofLight()","name":"ofLight","returns":null,"returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"onOrientationChanged()","name":"onOrientationChanged","returns":"void","returns_description":null,"parameters":null,"access":"private","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"onPositionChanged()","name":"onPositionChanged","returns":"void","returns_description":null,"parameters":null,"access":"private","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"setAmbientColor(&c)","name":"setAmbientColor","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofFloatColor <span class=\"token operator\">&amp;</span>c","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"setAreaLight(width, height)","name":"setAreaLight","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"setAttenuation(constant = 1.f, linear = 0.f, quadratic = 0.f)","name":"setAttenuation","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> constant<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> linear<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> quadratic<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"setDiffuseColor(&c)","name":"setDiffuseColor","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofFloatColor <span class=\"token operator\">&amp;</span>c","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"setDirectional()","name":"setDirectional","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"setPointLight()","name":"setPointLight","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"setSpecularColor(&c)","name":"setSpecularColor","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofFloatColor <span class=\"token operator\">&amp;</span>c","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"setSpotConcentration(exponent)","name":"setSpotConcentration","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> exponent","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"setSpotlight(spotCutOff = 45.f, exponent = 0.f)","name":"setSpotlight","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> spotCutOff<span class=\"token operator\">=</span><span class=\"token number\">45</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> exponent<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"setSpotlightCutOff(spotCutOff)","name":"setSpotlightCutOff","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> spotCutOff","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"syntax":"setup()","name":"setup","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"0071","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"","counter":0},{"short":"","desc":""},{}],"document":"<p>#class ofLight</p>\n<!--\n_visible: True_\n_advanced: False_\n_istemplated: False_\n_extends: ofNode_\n-->\n<p>##InlineDescription</p>\n<p>##Description</p>\n<p>ofLight is an openGL light for 3D rendering.  It contains four main lighting types:</p>\n<p><strong>Spot light</strong> : Light originates from a single point and spreads outward in a cone of variable diameter and length</p>\n<p><strong>Point light</strong> : Light comes from a single point and spreads outward evenly in all directions</p>\n<p><strong>Directional light</strong> : Light comes evenly from a given direction, as if coming from a plan of infinite size and distance from the lit object</p>\n<p><strong>Ambient light</strong> : Light from a fixed intensity and fixed source that affects all objects equally</p>\n<p><img src=\"../gl/Lights_PointSpot.jpg\" alt=\"PointSpot\">\n<img src=\"../gl/Lights_AmbientDirectional.jpg\" alt=\"AmbientDirectional\"></p>\n<p>Within ofLight, the following properties of each light type can be set individually:</p>\n<p>XYZ orientation</p>\n<p>XYZ position</p>\n<p>RGB color</p>\n<p>Light attenuation / falloff</p>\n<p>Additionally, spot lights have variable control of cone length and diameter.</p>\n<p><img src=\"../gl/spotLight_yellowDiffuse_narrowCone.png\" alt=\"spotLight_yellowDiffuse_narrowCone\"></p>\n<p><em>Spotlight with yellow diffuse reflection, narrow cone</em></p>\n<p><img src=\"../gl/spotLight_yellowDiffuse_wideCone.png\" alt=\"spotLight_yellowDiffuse_wideCone\"></p>\n<p><em>Spotlight with yellow diffuse reflection, wide cone</em></p>\n<p><strong>ofLight and ofMaterial</strong></p>\n<p>GL lighting effects are dependent on both the light and the material being lit.  ofLight interacts strongly with ofMaterial, which has five rendering parameters for materials being lit:</p>\n<p><strong>Specular color</strong> : the color of highlights on a material</p>\n<p><strong>Diffuse color</strong> : the color of the material when it is illuminated</p>\n<p><img src=\"../gl/pointLight_blueSpecular_redDiffuse.png\" alt=\"pointLight_blueSpecular_redDiffuse\"></p>\n<p><em>Point light with blue specular reflection and red diffuse reflection</em></p>\n<p><strong>Ambient color</strong> : the color of the material when it is not illuminated</p>\n<p><img src=\"../gl/spotLight_redDiffuse_noSpec_blueAmbient.png\" alt=\"spotLight_redDiffuse_noSpec_blueAmbient\"></p>\n<p><em>Spotlight with red diffuse reflection, no specular reflection, and blue ambient color</em></p>\n<p><strong>Emissive color</strong> : the color the material illuminated from within</p>\n<p><img src=\"../gl/emissive_green.png\" alt=\"emissive_green\"></p>\n<p><em>Emissive green material coloring, no external lights</em></p>\n<p><strong>Shininess</strong> : the matte or shiny property of the material, which impacts how much specular light vs diffuse light reflects from a surface.</p>\n<p><img src=\"../gl/pointLight_yellowDiffuse_blueSpecular_lowShine.png\" alt=\"pointLight_yellowDiffuse_blueSpecular_lowShine\"></p>\n<p><em>Point light with yellow diffuse and blue specular reflections, high matte</em></p>\n<p><img src=\"../gl/pointLight_yellowDiffuse_blueSpecular_highShine.png\" alt=\"pointLight_yellowDiffuse_blueSpecular_highShine\"></p>\n<p><em>Point light with yellow diffuse and blue specular reflections, high shine</em></p>\n<p><strong>ofLight and cameras</strong></p>\n<p>If an ofLight is drawn within the context of a camera such as ofEasyCam, its position and orientation will be controlled by the camera and it will be oriented relative to the scene focus of the camera.</p>\n<pre><code class=\"language-{.cpp}\">camera<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\" spellcheck=\"true\">//spotlight is drawn in the camera frame and oriented relative to the focus of the camera</span>\nspotlight<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token function\">ofSphere</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nspotlight<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncamera<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>If an ofLight is drawn outside the camera, it will be drawn in the global frame and will affect all objects in the scene equally.</p>\n<pre><code class=\"language-{.cpp}\">spotlight<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//spotlight is in the global frame and not the camera frame</span>\ncamera<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">ofSphere</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncamera<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nspotlight<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>(Examples made using LightsCamera example by Pete Werner https://github.com/petewerner/generative/tree/master/lights_camera)</p>\n<p>##Methods</p>\n<p>###void customDraw(*renderer)</p>\n<!--\n_syntax: customDraw(*renderer)_\n_name: customDraw_\n_returns: void_\n_returns_description: _\n_parameters: const ofBaseRenderer *renderer_\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void disable()</p>\n<!--\n_syntax: disable()_\n_name: disable_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void enable()</p>\n<!--\n_syntax: enable()_\n_name: enable_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofFloatColor getAmbientColor()</p>\n<!--\n_syntax: getAmbientColor()_\n_name: getAmbientColor_\n_returns: ofFloatColor_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float getAttenuationConstant()</p>\n<!--\n_syntax: getAttenuationConstant()_\n_name: getAttenuationConstant_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0071_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float getAttenuationLinear()</p>\n<!--\n_syntax: getAttenuationLinear()_\n_name: getAttenuationLinear_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0071_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float getAttenuationQuadratic()</p>\n<!--\n_syntax: getAttenuationQuadratic()_\n_name: getAttenuationQuadratic_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0071_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofFloatColor getDiffuseColor()</p>\n<!--\n_syntax: getDiffuseColor()_\n_name: getDiffuseColor_\n_returns: ofFloatColor_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool getIsAreaLight()</p>\n<!--\n_syntax: getIsAreaLight()_\n_name: getIsAreaLight_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool getIsDirectional()</p>\n<!--\n_syntax: getIsDirectional()_\n_name: getIsDirectional_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool getIsEnabled()</p>\n<!--\n_syntax: getIsEnabled()_\n_name: getIsEnabled_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool getIsPointLight()</p>\n<!--\n_syntax: getIsPointLight()_\n_name: getIsPointLight_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###bool getIsSpotlight()</p>\n<!--\n_syntax: getIsSpotlight()_\n_name: getIsSpotlight_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int getLightID()</p>\n<!--\n_syntax: getLightID()_\n_name: getLightID_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###ofFloatColor getSpecularColor()</p>\n<!--\n_syntax: getSpecularColor()_\n_name: getSpecularColor_\n_returns: ofFloatColor_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float getSpotConcentration()</p>\n<!--\n_syntax: getSpotConcentration()_\n_name: getSpotConcentration_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0071_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###float getSpotlightCutOff()</p>\n<!--\n_syntax: getSpotlightCutOff()_\n_name: getSpotlightCutOff_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0071_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###int getType()</p>\n<!--\n_syntax: getType()_\n_name: getType_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<h3>ofLight()</h3>\n<!--\n_syntax: ofLight()_\n_name: ofLight_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void onOrientationChanged()</p>\n<!--\n_syntax: onOrientationChanged()_\n_name: onOrientationChanged_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void onPositionChanged()</p>\n<!--\n_syntax: onPositionChanged()_\n_name: onPositionChanged_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setAmbientColor(&amp;c)</p>\n<!--\n_syntax: setAmbientColor(&c)_\n_name: setAmbientColor_\n_returns: void_\n_returns_description: _\n_parameters: const ofFloatColor &c_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setAreaLight(width, height)</p>\n<!--\n_syntax: setAreaLight(width, height)_\n_name: setAreaLight_\n_returns: void_\n_returns_description: _\n_parameters: float width, float height_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setAttenuation(constant = 1.f, linear = 0.f, quadratic = 0.f)</p>\n<!--\n_syntax: setAttenuation(constant = 1.f, linear = 0.f, quadratic = 0.f)_\n_name: setAttenuation_\n_returns: void_\n_returns_description: _\n_parameters: float constant=1.f, float linear=0.f, float quadratic=0.f_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setDiffuseColor(&amp;c)</p>\n<!--\n_syntax: setDiffuseColor(&c)_\n_name: setDiffuseColor_\n_returns: void_\n_returns_description: _\n_parameters: const ofFloatColor &c_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setDirectional()</p>\n<!--\n_syntax: setDirectional()_\n_name: setDirectional_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setPointLight()</p>\n<!--\n_syntax: setPointLight()_\n_name: setPointLight_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setSpecularColor(&amp;c)</p>\n<!--\n_syntax: setSpecularColor(&c)_\n_name: setSpecularColor_\n_returns: void_\n_returns_description: _\n_parameters: const ofFloatColor &c_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setSpotConcentration(exponent)</p>\n<!--\n_syntax: setSpotConcentration(exponent)_\n_name: setSpotConcentration_\n_returns: void_\n_returns_description: _\n_parameters: float exponent_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setSpotlight(spotCutOff = 45.f, exponent = 0.f)</p>\n<!--\n_syntax: setSpotlight(spotCutOff = 45.f, exponent = 0.f)_\n_name: setSpotlight_\n_returns: void_\n_returns_description: _\n_parameters: float spotCutOff=45.f, float exponent=0.f_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setSpotlightCutOff(spotCutOff)</p>\n<!--\n_syntax: setSpotlightCutOff(spotCutOff)_\n_name: setSpotlightCutOff_\n_returns: void_\n_returns_description: _\n_parameters: float spotCutOff_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>###void setup()</p>\n<!--\n_syntax: setup()_\n_name: setup_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0071_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n<p>##Variables</p>\n<p>###shared_ptr&lt; ofLight::Data &gt; data</p>\n<!--\n_name: data_\n_type: shared_ptr< ofLight::Data >_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<!----------------------------------------------------------------------------->\n","raw":"#class ofLight\n\n\n<!--\n_visible: True_\n_advanced: False_\n_istemplated: False_\n_extends: ofNode_\n-->\n\n##InlineDescription\n\n\n\n\n\n\n##Description\n\nofLight is an openGL light for 3D rendering.  It contains four main lighting types:\n\n**Spot light** : Light originates from a single point and spreads outward in a cone of variable diameter and length\n\n**Point light** : Light comes from a single point and spreads outward evenly in all directions\n\n**Directional light** : Light comes evenly from a given direction, as if coming from a plan of infinite size and distance from the lit object\n\n**Ambient light** : Light from a fixed intensity and fixed source that affects all objects equally\n\n![PointSpot](../gl/Lights_PointSpot.jpg)\n![AmbientDirectional](../gl/Lights_AmbientDirectional.jpg)\n\nWithin ofLight, the following properties of each light type can be set individually:\n\nXYZ orientation\n\nXYZ position\n\nRGB color\n\nLight attenuation / falloff\n\nAdditionally, spot lights have variable control of cone length and diameter.\n\n![spotLight_yellowDiffuse_narrowCone](../gl/spotLight_yellowDiffuse_narrowCone.png)\n\n*Spotlight with yellow diffuse reflection, narrow cone*\n\n![spotLight_yellowDiffuse_wideCone](../gl/spotLight_yellowDiffuse_wideCone.png)\n\n*Spotlight with yellow diffuse reflection, wide cone*\n\n**ofLight and ofMaterial**\n\nGL lighting effects are dependent on both the light and the material being lit.  ofLight interacts strongly with ofMaterial, which has five rendering parameters for materials being lit:\n\n**Specular color** : the color of highlights on a material\n\n**Diffuse color** : the color of the material when it is illuminated\n\n![pointLight_blueSpecular_redDiffuse](../gl/pointLight_blueSpecular_redDiffuse.png)\n\n*Point light with blue specular reflection and red diffuse reflection*\n\n**Ambient color** : the color of the material when it is not illuminated\n\n![spotLight_redDiffuse_noSpec_blueAmbient](../gl/spotLight_redDiffuse_noSpec_blueAmbient.png)\n\n*Spotlight with red diffuse reflection, no specular reflection, and blue ambient color*\n\n**Emissive color** : the color the material illuminated from within\n\n![emissive_green](../gl/emissive_green.png)\n\n*Emissive green material coloring, no external lights*\n\n**Shininess** : the matte or shiny property of the material, which impacts how much specular light vs diffuse light reflects from a surface.\n\n![pointLight_yellowDiffuse_blueSpecular_lowShine](../gl/pointLight_yellowDiffuse_blueSpecular_lowShine.png)\n\n*Point light with yellow diffuse and blue specular reflections, high matte*\n\n![pointLight_yellowDiffuse_blueSpecular_highShine](../gl/pointLight_yellowDiffuse_blueSpecular_highShine.png)\n\n*Point light with yellow diffuse and blue specular reflections, high shine*\n\n**ofLight and cameras**\n\nIf an ofLight is drawn within the context of a camera such as ofEasyCam, its position and orientation will be controlled by the camera and it will be oriented relative to the scene focus of the camera.\n\n~~~~{.cpp}\ncamera.begin();\n//spotlight is drawn in the camera frame and oriented relative to the focus of the camera\nspotlight.enable(); \nofSphere(0,0,0,100);\nspotlight.disable();\ncamera.end();\n~~~~\n\nIf an ofLight is drawn outside the camera, it will be drawn in the global frame and will affect all objects in the scene equally.\n\n~~~~{.cpp}\nspotlight.enable(); //spotlight is in the global frame and not the camera frame\ncamera.begin();\nofSphere(0,0,0,100);\ncamera.end();\nspotlight.disable();\n~~~~\n\n(Examples made using LightsCamera example by Pete Werner https://github.com/petewerner/generative/tree/master/lights_camera)\n\n\n\n\n\n##Methods\n\n\n\n###void customDraw(*renderer)\n\n<!--\n_syntax: customDraw(*renderer)_\n_name: customDraw_\n_returns: void_\n_returns_description: _\n_parameters: const ofBaseRenderer *renderer_\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void disable()\n\n<!--\n_syntax: disable()_\n_name: disable_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void enable()\n\n<!--\n_syntax: enable()_\n_name: enable_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofFloatColor getAmbientColor()\n\n<!--\n_syntax: getAmbientColor()_\n_name: getAmbientColor_\n_returns: ofFloatColor_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float getAttenuationConstant()\n\n<!--\n_syntax: getAttenuationConstant()_\n_name: getAttenuationConstant_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0071_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float getAttenuationLinear()\n\n<!--\n_syntax: getAttenuationLinear()_\n_name: getAttenuationLinear_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0071_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float getAttenuationQuadratic()\n\n<!--\n_syntax: getAttenuationQuadratic()_\n_name: getAttenuationQuadratic_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0071_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofFloatColor getDiffuseColor()\n\n<!--\n_syntax: getDiffuseColor()_\n_name: getDiffuseColor_\n_returns: ofFloatColor_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool getIsAreaLight()\n\n<!--\n_syntax: getIsAreaLight()_\n_name: getIsAreaLight_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool getIsDirectional()\n\n<!--\n_syntax: getIsDirectional()_\n_name: getIsDirectional_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool getIsEnabled()\n\n<!--\n_syntax: getIsEnabled()_\n_name: getIsEnabled_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool getIsPointLight()\n\n<!--\n_syntax: getIsPointLight()_\n_name: getIsPointLight_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool getIsSpotlight()\n\n<!--\n_syntax: getIsSpotlight()_\n_name: getIsSpotlight_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int getLightID()\n\n<!--\n_syntax: getLightID()_\n_name: getLightID_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofFloatColor getSpecularColor()\n\n<!--\n_syntax: getSpecularColor()_\n_name: getSpecularColor_\n_returns: ofFloatColor_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float getSpotConcentration()\n\n<!--\n_syntax: getSpotConcentration()_\n_name: getSpotConcentration_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0071_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float getSpotlightCutOff()\n\n<!--\n_syntax: getSpotlightCutOff()_\n_name: getSpotlightCutOff_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0071_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int getType()\n\n<!--\n_syntax: getType()_\n_name: getType_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n### ofLight()\n\n<!--\n_syntax: ofLight()_\n_name: ofLight_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void onOrientationChanged()\n\n<!--\n_syntax: onOrientationChanged()_\n_name: onOrientationChanged_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void onPositionChanged()\n\n<!--\n_syntax: onPositionChanged()_\n_name: onPositionChanged_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: private_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setAmbientColor(&c)\n\n<!--\n_syntax: setAmbientColor(&c)_\n_name: setAmbientColor_\n_returns: void_\n_returns_description: _\n_parameters: const ofFloatColor &c_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setAreaLight(width, height)\n\n<!--\n_syntax: setAreaLight(width, height)_\n_name: setAreaLight_\n_returns: void_\n_returns_description: _\n_parameters: float width, float height_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setAttenuation(constant = 1.f, linear = 0.f, quadratic = 0.f)\n\n<!--\n_syntax: setAttenuation(constant = 1.f, linear = 0.f, quadratic = 0.f)_\n_name: setAttenuation_\n_returns: void_\n_returns_description: _\n_parameters: float constant=1.f, float linear=0.f, float quadratic=0.f_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setDiffuseColor(&c)\n\n<!--\n_syntax: setDiffuseColor(&c)_\n_name: setDiffuseColor_\n_returns: void_\n_returns_description: _\n_parameters: const ofFloatColor &c_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setDirectional()\n\n<!--\n_syntax: setDirectional()_\n_name: setDirectional_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setPointLight()\n\n<!--\n_syntax: setPointLight()_\n_name: setPointLight_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setSpecularColor(&c)\n\n<!--\n_syntax: setSpecularColor(&c)_\n_name: setSpecularColor_\n_returns: void_\n_returns_description: _\n_parameters: const ofFloatColor &c_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setSpotConcentration(exponent)\n\n<!--\n_syntax: setSpotConcentration(exponent)_\n_name: setSpotConcentration_\n_returns: void_\n_returns_description: _\n_parameters: float exponent_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setSpotlight(spotCutOff = 45.f, exponent = 0.f)\n\n<!--\n_syntax: setSpotlight(spotCutOff = 45.f, exponent = 0.f)_\n_name: setSpotlight_\n_returns: void_\n_returns_description: _\n_parameters: float spotCutOff=45.f, float exponent=0.f_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setSpotlightCutOff(spotCutOff)\n\n<!--\n_syntax: setSpotlightCutOff(spotCutOff)_\n_name: setSpotlightCutOff_\n_returns: void_\n_returns_description: _\n_parameters: float spotCutOff_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setup()\n\n<!--\n_syntax: setup()_\n_name: setup_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0071_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n##Variables\n\n\n\n###shared_ptr< ofLight::Data > data\n\n<!--\n_name: data_\n_type: shared_ptr< ofLight::Data >_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page","static":true}}],"fetch":[]}