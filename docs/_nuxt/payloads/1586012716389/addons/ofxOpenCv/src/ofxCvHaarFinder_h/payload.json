{"data":[{"page":{"entry":{"name":"ofxCvHaarFinder.h","filename":"ofxCvHaarFinder.h","absolute":"/Users/Gilbert/Code/openFrameworks/addons/ofxOpenCv/src/ofxCvHaarFinder.h","path":"/addons/ofxOpenCv/src/ofxCvHaarFinder_h","route":"/addons/ofxOpenCv/src/ofxCvHaarFinder.h","dir":"../addons/ofxOpenCv/src","ext":"h","type":"source","id":120,"parent":107,"breadcrumbs":[107,108,5],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/*\nOriginally written by charli_e, adapted from code by stefanix.\nCompletely rewritten by kyle mcdonald. opencv hack by theo watson.\n\nSee the discussion for more info:\nhttp://www.openframeworks.cc/forum/viewtopic.php?f=10&amp;t=2006\n\nFor a good documentation discussing the OpenCv haar finder:\nhttp://www.comp.leeds.ac.uk/vision/opencv/opencvref_cv.html#decl_cvHaarDetectObjects\n*/</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofMain.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxOpenCv.h\"</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">// This hack was needed for older versions of OpenCv:</span>\n<span class=\"token comment\" spellcheck=\"true\">//#define HAAR_HACK</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxCvHaarFinder</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\tstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>ofxCvBlob<span class=\"token operator\">></span> blobs<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">ofxCvHaarFinder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofxCvHaarFinder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofxCvHaarFinder<span class=\"token operator\">&amp;</span> finder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">~</span><span class=\"token function\">ofxCvHaarFinder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string haarFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// The default value is 1.2. For accuracy, bring it closer but not equal to 1.0. To make it faster, use a larger value.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setScaleHaar</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> scaleHaar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// How many neighbors can be grouped into a face? Default value is 2. If set to 0, no grouping will be done.</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setNeighbors</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> neighbors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">findHaarObjects</span><span class=\"token punctuation\">(</span>ofImage<span class=\"token operator\">&amp;</span> input<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> minWidth <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> minHeight <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">findHaarObjects</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofxCvGrayscaleImage<span class=\"token operator\">&amp;</span> input<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> minWidth <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> minHeight <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">findHaarObjects</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofxCvGrayscaleImage<span class=\"token operator\">&amp;</span> input<span class=\"token punctuation\">,</span> ofRectangle<span class=\"token operator\">&amp;</span> roi<span class=\"token punctuation\">,</span>\t<span class=\"token keyword\">int</span> minWidth <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> minHeight <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">findHaarObjects</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofxCvGrayscaleImage<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span>\t<span class=\"token keyword\">int</span> minWidth <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> minHeight <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">findHaarObjects</span><span class=\"token punctuation\">(</span>ofPixels<span class=\"token operator\">&amp;</span> input<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> minWidth <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> minHeight <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">float</span> <span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> USE_OLD_CV</span>\n\tCvHaarClassifierCascade<span class=\"token operator\">*</span> cascade<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\tcv<span class=\"token operator\">::</span>CascadeClassifier cascade<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span> </span><span class=\"token comment\" spellcheck=\"true\">//USE_OLD_CV</span>\n\tstd<span class=\"token operator\">::</span>string haarFile<span class=\"token punctuation\">;</span>\n\tofxCvGrayscaleImage img<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> scaleHaar<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">unsigned</span> neighbors<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n","type":"source","static":true}}],"fetch":[]}