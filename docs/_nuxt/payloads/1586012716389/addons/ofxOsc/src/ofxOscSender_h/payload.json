{"data":[{"page":{"entry":{"name":"ofxOscSender.h","filename":"ofxOscSender.h","absolute":"/Users/Gilbert/Code/openFrameworks/addons/ofxOsc/src/ofxOscSender.h","path":"/addons/ofxOsc/src/ofxOscSender_h","route":"/addons/ofxOsc/src/ofxOscSender.h","dir":"../addons/ofxOsc/src","ext":"h","type":"source","id":139,"parent":126,"breadcrumbs":[126,127,5],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">// copyright (c) openFrameworks team 2010-2017</span>\n<span class=\"token comment\" spellcheck=\"true\">// copyright (c) Damian Stewart 2007-2009</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"OscTypes.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"OscOutboundPacketStream.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"UdpSocket.h\"</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxOscBundle.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofParameter.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofParameterGroup.h\"</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\struct ofxOscSenderSettings</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief OSC message sender settings</span>\n<span class=\"token keyword\">struct</span> ofxOscSenderSettings <span class=\"token punctuation\">{</span>\n\tstd<span class=\"token operator\">::</span>string host <span class=\"token operator\">=</span> <span class=\"token string\">\"localhost\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">///&lt; destination host name/ip</span>\n\t<span class=\"token keyword\">int</span> port <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>                   <span class=\"token comment\" spellcheck=\"true\">///&lt; destination port</span>\n\t<span class=\"token keyword\">bool</span> broadcast <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>          <span class=\"token comment\" spellcheck=\"true\">///&lt; broadcast (aka multicast) ip range support?</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\class ofxOscSender</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief OSC message sender which sends to a specific host &amp; port</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxOscSender</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\n\n\t<span class=\"token function\">ofxOscSender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token operator\">~</span><span class=\"token function\">ofxOscSender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofxOscSender</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofxOscSender <span class=\"token operator\">&amp;</span>mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofxOscSender<span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofxOscSender <span class=\"token operator\">&amp;</span>mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// for operator= and copy constructor</span>\n\tofxOscSender<span class=\"token operator\">&amp;</span> <span class=\"token function\">copy</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofxOscSender <span class=\"token operator\">&amp;</span>other<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// set up the sender with the destination host name/ip and port</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return true on success</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span>host<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> port<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// set up the sender with the given settings</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\returns true on success</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofxOscSenderSettings <span class=\"token operator\">&amp;</span>settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// clear the sender, does not clear host or port values</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// send the given message</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// if wrapInBundle is true (default), message sent in a timetagged bundle</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">sendMessage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofxOscMessage <span class=\"token operator\">&amp;</span>message<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> wrapInBundle<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// send the given bundle</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">sendBundle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofxOscBundle <span class=\"token operator\">&amp;</span>bundle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// create &amp; send a message with data from an ofParameter</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">sendParameter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofAbstractParameter <span class=\"token operator\">&amp;</span>parameter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return current host name/ip</span>\n\tstd<span class=\"token operator\">::</span>string <span class=\"token function\">getHost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return current port</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">getPort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return the current sender settings</span>\n\t<span class=\"token keyword\">const</span> ofxOscSenderSettings <span class=\"token operator\">&amp;</span><span class=\"token function\">getSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// output stream operator for string conversion and printing</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return host name/ip and port separated by a space</span>\n\t<span class=\"token keyword\">friend</span> std<span class=\"token operator\">::</span>ostream<span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>ostream <span class=\"token operator\">&amp;</span>os<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofxOscSender <span class=\"token operator\">&amp;</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// helper methods for constructing messages</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">appendBundle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofxOscBundle <span class=\"token operator\">&amp;</span>bundle<span class=\"token punctuation\">,</span> osc<span class=\"token operator\">::</span>OutboundPacketStream <span class=\"token operator\">&amp;</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">appendMessage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofxOscMessage <span class=\"token operator\">&amp;</span>message<span class=\"token punctuation\">,</span> osc<span class=\"token operator\">::</span>OutboundPacketStream <span class=\"token operator\">&amp;</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">appendParameter</span><span class=\"token punctuation\">(</span>ofxOscBundle <span class=\"token operator\">&amp;</span>bundle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofAbstractParameter <span class=\"token operator\">&amp;</span>parameter<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">appendParameter</span><span class=\"token punctuation\">(</span>ofxOscMessage <span class=\"token operator\">&amp;</span>msg<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofAbstractParameter <span class=\"token operator\">&amp;</span>parameter<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span>address<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tofxOscSenderSettings settings<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">///&lt; current settings</span>\n\tstd<span class=\"token operator\">::</span>unique_ptr<span class=\"token operator\">&lt;</span>osc<span class=\"token operator\">::</span>UdpTransmitSocket<span class=\"token operator\">></span> sendSocket<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">///&lt; sender socket</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n","type":"source","static":true}}],"fetch":[]}