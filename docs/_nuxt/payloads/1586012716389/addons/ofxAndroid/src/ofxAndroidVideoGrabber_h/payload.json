{"data":[{"page":{"entry":{"name":"ofxAndroidVideoGrabber.h","filename":"ofxAndroidVideoGrabber.h","absolute":"/Users/Gilbert/Code/openFrameworks/addons/ofxAndroid/src/ofxAndroidVideoGrabber.h","path":"/addons/ofxAndroid/src/ofxAndroidVideoGrabber_h","route":"/addons/ofxAndroid/src/ofxAndroidVideoGrabber.h","dir":"../addons/ofxAndroid/src","ext":"h","type":"source","id":27,"parent":8,"breadcrumbs":[8,9,5],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">/*\n * ofxAndroidVideoGrabber.h\n *\n *  Created on: 17/01/2011\n *      Author: arturo\n */</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofVideoBaseTypes.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofPixels.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofEvents.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofTypes.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofTexture.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;jni.h></span></span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxAndroidVideoGrabber</span><span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofBaseVideoGrabber<span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">ofxAndroidVideoGrabber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">~</span><span class=\"token function\">ofxAndroidVideoGrabber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>ofVideoDevice<span class=\"token operator\">></span>\t<span class=\"token function\">listDevices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">isInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">isFrameNew</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tofPixels<span class=\"token operator\">&amp;</span> <span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> ofPixels<span class=\"token operator\">&amp;</span>\t<span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setUsePixels</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> usePixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">float</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> <span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//should implement!</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setVerbose</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bTalkToMe<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// Set desired frame rate of the camera.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// By default will the camera pick the highest frame rate available</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setDesiredFrameRate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> framerate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// Set specific camera device id.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Must be a value between 0 and numCameras.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Default is first back facing camera</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setDeviceID</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> _deviceID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">videoSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">setPixelFormat</span><span class=\"token punctuation\">(</span>ofPixelFormat pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofPixelFormat <span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// specifics android</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// Get device id of back facing camera.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Returns -1 if no match is found</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">getBackCamera</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// Get device id of front facing (selfie) camera.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Returns -1 if no match is found</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">getFrontCamera</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// Get the physical orientation of the camera. Typically on a phone the camera mounted in</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// landscape mode, this returns 90</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">getCameraOrientation</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> device<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// Get facing of camera.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Leave device = -1 to get selected cameras facing</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// Returns 0 on backfacing camera, and 1 on frontal facing camera.</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">getFacingOfCamera</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> device<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">setAutoFocus</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> autofocus<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tofTexture <span class=\"token operator\">*</span>\t<span class=\"token function\">getTexturePtr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">supportsTextureRendering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">struct</span> Data<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">getCameraFacing</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> facing<span class=\"token punctuation\">)</span><span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// Get number of cameras available</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">getNumCameras</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">initCamera</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// only to be used internally to resize;</span>\n\tofPixelsRef <span class=\"token function\">getAuxBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>Data<span class=\"token operator\">></span> data<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n","type":"source","static":true}}],"fetch":[]}