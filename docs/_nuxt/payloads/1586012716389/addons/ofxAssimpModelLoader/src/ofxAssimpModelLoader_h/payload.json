{"data":[{"page":{"entry":{"name":"ofxAssimpModelLoader.h","filename":"ofxAssimpModelLoader.h","absolute":"/Users/Gilbert/Code/openFrameworks/addons/ofxAssimpModelLoader/src/ofxAssimpModelLoader.h","path":"/addons/ofxAssimpModelLoader/src/ofxAssimpModelLoader_h","route":"/addons/ofxAssimpModelLoader/src/ofxAssimpModelLoader.h","dir":"../addons/ofxAssimpModelLoader/src","ext":"h","type":"source","id":37,"parent":30,"breadcrumbs":[30,31,5],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// ofDevCon</span>\n<span class=\"token comment\" spellcheck=\"true\">// Written by Anton Marini (http://vade.info)</span>\n<span class=\"token comment\" spellcheck=\"true\">// With massive help from Memo Akten for GL optimizing and pushing this faster than I expected</span>\n<span class=\"token comment\" spellcheck=\"true\">// Kyle McDonald and Arturo Castro for C++ nuances</span>\n<span class=\"token comment\" spellcheck=\"true\">// Lukasz Karluk additions Dec 2012.</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// TODO:</span>\n<span class=\"token comment\" spellcheck=\"true\">// 1) Path issues - not all models:</span>\n<span class=\"token comment\" spellcheck=\"true\">//      a) reference images current working dir</span>\n<span class=\"token comment\" spellcheck=\"true\">//      b) properly describe sub-folders</span>\n<span class=\"token comment\" spellcheck=\"true\">//      c) reference absolute paths for images that dont exist.</span>\n<span class=\"token comment\" spellcheck=\"true\">// 2) convert to ofMesh (?) in OF 007 ?</span>\n<span class=\"token comment\" spellcheck=\"true\">// 3) Ability to ease *between* two animations. Maybe later folks.</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxAssimpMeshHelper.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxAssimpAnimation.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxAssimpTexture.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofMesh.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofPoint.h\"</span></span>\n\n<span class=\"token keyword\">struct</span> aiScene<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">struct</span> aiNode<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxAssimpModelLoader</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n        <span class=\"token operator\">~</span><span class=\"token function\">ofxAssimpModelLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">ofxAssimpModelLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">bool</span> <span class=\"token function\">loadModel</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string modelName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> optimize<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">bool</span> <span class=\"token function\">loadModel</span><span class=\"token punctuation\">(</span>ofBuffer <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> optimize<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> extension<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">void</span> <span class=\"token function\">createEmptyModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">void</span> <span class=\"token function\">createLightsFromAiModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">void</span> <span class=\"token function\">optimizeScene</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n        <span class=\"token keyword\">bool</span> <span class=\"token function\">hasAnimations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getAnimationCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ofxAssimpAnimation <span class=\"token operator\">&amp;</span> <span class=\"token function\">getAnimation</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> animationIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">void</span> <span class=\"token function\">playAllAnimations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">void</span> <span class=\"token function\">stopAllAnimations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">void</span> <span class=\"token function\">resetAllAnimations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">void</span> <span class=\"token function\">setPausedForAllAnimations</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> pause<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">void</span> <span class=\"token function\">setLoopStateForAllAnimations</span><span class=\"token punctuation\">(</span>ofLoopType state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">void</span> <span class=\"token function\">setPositionForAllAnimations</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofxAssimpAnimation instead\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setAnimation</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> animationIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofxAssimpAnimation instead\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setNormalizedTime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofxAssimpAnimation instead\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setTime</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use ofxAssimpAnimation instead\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> <span class=\"token function\">getDuration</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> animationIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">bool</span> <span class=\"token function\">hasMeshes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getMeshCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ofxAssimpMeshHelper <span class=\"token operator\">&amp;</span> <span class=\"token function\">getMeshHelper</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> meshIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n        <span class=\"token keyword\">void</span> <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n        <span class=\"token keyword\">void</span> <span class=\"token function\">setScale</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">void</span> <span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">void</span> <span class=\"token function\">setRotation</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> which<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> angle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> rot_x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> rot_y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> r_z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">// Scale the model to the screen automatically.</span>\n        <span class=\"token keyword\">void</span> <span class=\"token function\">setScaleNormalization</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> normalize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">void</span> <span class=\"token function\">setNormalizationFactor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> factor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token operator\">></span> <span class=\"token function\">getMeshNames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getNumMeshes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tofMesh <span class=\"token function\">getMesh</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ofMesh <span class=\"token function\">getMesh</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tofMesh <span class=\"token function\">getCurrentAnimatedMesh</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ofMesh <span class=\"token function\">getCurrentAnimatedMesh</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tofMaterial <span class=\"token function\">getMaterialForMesh</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ofMaterial <span class=\"token function\">getMaterialForMesh</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tofTexture <span class=\"token function\">getTextureForMesh</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ofTexture <span class=\"token function\">getTextureForMesh</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    \t<span class=\"token keyword\">void</span> <span class=\"token function\">drawWireframe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token keyword\">void</span> <span class=\"token function\">drawFaces</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token keyword\">void</span> <span class=\"token function\">drawVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    \t<span class=\"token keyword\">void</span> <span class=\"token function\">enableTextures</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token keyword\">void</span> <span class=\"token function\">disableTextures</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token keyword\">void</span> <span class=\"token function\">enableNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token keyword\">void</span> <span class=\"token function\">enableMaterials</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token keyword\">void</span> <span class=\"token function\">disableNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token keyword\">void</span> <span class=\"token function\">enableColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token keyword\">void</span> <span class=\"token function\">disableColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token keyword\">void</span> <span class=\"token function\">disableMaterials</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>ofPolyRenderMode renderType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\tofPoint <span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tofPoint <span class=\"token function\">getSceneCenter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span> <span class=\"token function\">getNormalizedScale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tofPoint <span class=\"token function\">getScale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        ofMatrix4x4 <span class=\"token function\">getModelMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tofPoint <span class=\"token function\">getSceneMin</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bScaled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tofPoint\t<span class=\"token function\">getSceneMax</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bScaled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\n\t\t<span class=\"token keyword\">int</span>\t<span class=\"token function\">getNumRotations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\" spellcheck=\"true\">// returns the no. of applied rotations</span>\n\t\tofPoint\t<span class=\"token function\">getRotationAxis</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> which<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// gets each rotation axis</span>\n\t\t<span class=\"token keyword\">float</span> <span class=\"token function\">getRotationAngle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> which<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//gets each rotation angle</span>\n\n        <span class=\"token keyword\">void</span> <span class=\"token function\">calculateDimensions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">const</span> aiScene <span class=\"token operator\">*</span> <span class=\"token function\">getAssimpScene</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         \n    <span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">void</span> <span class=\"token function\">updateAnimations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">void</span> <span class=\"token function\">updateMeshes</span><span class=\"token punctuation\">(</span>aiNode <span class=\"token operator\">*</span> node<span class=\"token punctuation\">,</span> ofMatrix4x4 parentMatrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">void</span> <span class=\"token function\">updateBones</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">void</span> <span class=\"token function\">updateModelMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n        <span class=\"token comment\" spellcheck=\"true\">// ai scene setup</span>\n        <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> <span class=\"token function\">initImportProperties</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> optimize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">bool</span> <span class=\"token function\">processScene</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">// Initial VBO creation, etc</span>\n        <span class=\"token keyword\">void</span> <span class=\"token function\">loadGLResources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n        <span class=\"token comment\" spellcheck=\"true\">// updates the *actual GL resources* for the current animation</span>\n        <span class=\"token keyword\">void</span> <span class=\"token function\">updateGLResources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n        <span class=\"token keyword\">void</span> <span class=\"token function\">getBoundingBoxWithMinVector</span><span class=\"token punctuation\">(</span> aiVector3D<span class=\"token operator\">*</span> min<span class=\"token punctuation\">,</span> aiVector3D<span class=\"token operator\">*</span> max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">void</span> <span class=\"token function\">getBoundingBoxForNode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofxAssimpMeshHelper <span class=\"token operator\">&amp;</span> mesh<span class=\"token punctuation\">,</span>  aiVector3D<span class=\"token operator\">*</span> min<span class=\"token punctuation\">,</span> aiVector3D<span class=\"token operator\">*</span> max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        ofFile file<span class=\"token punctuation\">;</span>\n\n        aiVector3D scene_min<span class=\"token punctuation\">,</span> scene_max<span class=\"token punctuation\">,</span> scene_center<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">bool</span> normalizeScale<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">double</span> normalizedScale<span class=\"token punctuation\">;</span>\n\n\t\tstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span> rotAngle<span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>ofPoint<span class=\"token operator\">></span> rotAxis<span class=\"token punctuation\">;</span>\n        ofPoint scale<span class=\"token punctuation\">;</span>\n        ofPoint pos<span class=\"token punctuation\">;</span>\n        ofMatrix4x4 modelMatrix<span class=\"token punctuation\">;</span>\n\n\t\tstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>ofLight<span class=\"token operator\">></span> lights<span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>ofxAssimpTexture<span class=\"token operator\">></span> textures<span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>ofxAssimpMeshHelper<span class=\"token operator\">></span> modelMeshes<span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>ofxAssimpAnimation<span class=\"token operator\">></span> animations<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> currentAnimation<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// DEPRECATED - to be removed with deprecated animation functions.</span>\n\n        <span class=\"token keyword\">bool</span> bUsingTextures<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">bool</span> bUsingNormals<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">bool</span> bUsingColors<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">bool</span> bUsingMaterials<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">float</span> normalizeFactor<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">// the main Asset Import scene that does the magic.</span>\n\t\tstd<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span> aiScene<span class=\"token operator\">></span> scene<span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>aiPropertyStore<span class=\"token operator\">></span> store<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n","type":"source","static":true}}],"fetch":[]}