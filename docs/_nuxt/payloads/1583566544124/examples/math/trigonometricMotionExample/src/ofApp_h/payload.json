{"data":[{"page":{"entry":{"name":"ofApp.h","filename":"ofApp.h","absolute":"/Users/gilbertsinnott/Code/openFrameworks/examples/math/trigonometricMotionExample/src/ofApp.h","path":"/examples/math/trigonometricMotionExample/src/ofApp_h","route":"/examples/math/trigonometricMotionExample/src/ofApp.h","dir":"../examples/math/trigonometricMotionExample/src","ext":"h","type":"source","id":1488,"parent":1485,"breadcrumbs":[1485,1483,1442,436],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">/* Refer to the README.md in the example's root folder for more information on usage */</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofMain.h\"</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//The following defines are called preprocessor directives.</span>\n<span class=\"token comment\" spellcheck=\"true\">//This are just to make the programmers life easier.</span>\n<span class=\"token comment\" spellcheck=\"true\">//This are actually not compiled, instead whenever you use a defined directive it gets replaced by it's associated value in the source code BEFORE it compiles.</span>\n<span class=\"token comment\" spellcheck=\"true\">//So this don't use memory space and if you are using this directives a lot it's easier and faster to change it's value.</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TOP_MARGIN 150</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> LEFT_MARGIN 150</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> WAVEFORM_HISTORY 800</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TAIL_LENGTH 400</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//this is our oscillator class.</span>\n<span class=\"token comment\" spellcheck=\"true\">//This defines how to save, update and draw each oscillators properties and values.</span>\n<span class=\"token keyword\">class</span>  <span class=\"token class-name\">oscillator</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\n\t<span class=\"token keyword\">float</span> freq<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> waveSin<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> waveCos<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> amplitude<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> phase<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">double</span> counter<span class=\"token punctuation\">;</span>\n\n\tglm<span class=\"token operator\">::</span>vec2 pos<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">oscillator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token operator\">~</span><span class=\"token function\">oscillator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token comment\" spellcheck=\"true\">//this function initializes all the properties of the oscillator. It must be called just after creating a new oscillator.</span>\n\n\t\tpos <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec2</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//sets the position of the oscillator using the values passed to the function. In this case is the position where the mouse was clicked.</span>\n\t\tfreq <span class=\"token operator\">=</span> <span class=\"token function\">ofRandom</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0001f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.1f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">// the frequency get's initialized with a random value.</span>\n\n\t\tcounter <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>y<span class=\"token operator\">&lt;</span>TOP_MARGIN<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token comment\" spellcheck=\"true\">//this if is to determine if the oscillator is either an horizontal or vertical oscillator.</span>\n\t\t\tphase <span class=\"token operator\">=</span> <span class=\"token function\">ofMap</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">-</span>LEFT_MARGIN<span class=\"token punctuation\">,</span> LEFT_MARGIN<span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>PI<span class=\"token punctuation\">,</span> PI<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//the phase is defined by to position of the locator.Here it's value gets remaped to the correct range.</span>\n\n\t\t\tamplitude <span class=\"token operator\">=</span> <span class=\"token function\">ofMap</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> TOP_MARGIN<span class=\"token punctuation\">,</span> <span class=\"token number\">0.1f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//Amplitude is defined by the position, and it's value gets remaped to the correct range.</span>\n\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\tphase <span class=\"token operator\">=</span> <span class=\"token function\">ofMap</span><span class=\"token punctuation\">(</span>y<span class=\"token operator\">-</span>TOP_MARGIN<span class=\"token punctuation\">,</span> TOP_MARGIN<span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>PI<span class=\"token punctuation\">,</span> PI<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tamplitude <span class=\"token operator\">=</span> <span class=\"token function\">ofMap</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> LEFT_MARGIN<span class=\"token punctuation\">,</span> <span class=\"token number\">0.1f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tcounter <span class=\"token operator\">+</span><span class=\"token operator\">=</span> freq<span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//the counter is incremented by the value of freq each time the oscillators update methods is called.</span>\n\t\twaveSin <span class=\"token operator\">=</span> <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>counter <span class=\"token operator\">+</span> phase<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> amplitude<span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//Here is where we calulate the sine value for the oscillator.</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//Then is multiplied by amplitude, because the sin() function returns a value between -1 and 1</span>\n\t\twaveCos <span class=\"token operator\">=</span> <span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>counter <span class=\"token operator\">+</span> phase<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> amplitude<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token comment\" spellcheck=\"true\">//here we draw the oscillator</span>\n\t\t<span class=\"token function\">ofFill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofDrawCircle</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> pos<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> amplitude<span class=\"token operator\">/</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofNoFill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofDrawCircle</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> pos<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> amplitude<span class=\"token operator\">/</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofDrawLine</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> pos<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> pos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span>  waveCos<span class=\"token operator\">/</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> pos<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> waveSin<span class=\"token operator\">/</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">checkOver</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token comment\" spellcheck=\"true\">//this is to check if the mouse is over the oscillator.</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">distance</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec2</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> amplitude<span class=\"token operator\">*</span><span class=\"token number\">0.25</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofApp</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofBaseApp<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">keyPressed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">keyReleased</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">mouseMoved</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">mouseDragged</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">mousePressed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">mouseReleased</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">mouseEntered</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">mouseExited</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">windowResized</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">dragEvent</span><span class=\"token punctuation\">(</span>ofDragInfo dragInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">gotMessage</span><span class=\"token punctuation\">(</span>ofMessage msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">setPressedOscilator</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> index<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> isHorizontal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tvector<span class=\"token operator\">&lt;</span>oscillator<span class=\"token operator\">></span>horizontalOscilators<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//In this vector object we're going to save our horizontal oscillators.</span>\n\t\tvector<span class=\"token operator\">&lt;</span>oscillator<span class=\"token operator\">></span>verticalOscilators<span class=\"token punctuation\">;</span>   <span class=\"token comment\" spellcheck=\"true\">//In this vector object we're going to save our vertical oscillators.</span>\n\n\t\tglm<span class=\"token operator\">::</span>vec3 waveHistory <span class=\"token punctuation\">[</span>TAIL_LENGTH<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// This array object is to save the previous positions of the composite wave we're creating, so we can draw its path later.</span>\n\n\t\t<span class=\"token keyword\">float</span> horWaveHistory <span class=\"token punctuation\">[</span>WAVEFORM_HISTORY<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//This and the following array are for saving the wave form history.</span>\n\t\t<span class=\"token keyword\">float</span> vertWaveHistory <span class=\"token punctuation\">[</span>WAVEFORM_HISTORY<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t\tglm<span class=\"token operator\">::</span>vec3 center<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//This is to store the center location for the composite wave .</span>\n\t\t<span class=\"token keyword\">float</span> scale<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// the amount by which the waveforms get scaled.</span>\n\t\t<span class=\"token keyword\">bool</span> bScaleMouse<span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//just to know that you're using the mouse to change the scale.</span>\n\n\t\t<span class=\"token keyword\">float</span> hWaveMult<span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//this are to scale or multiply the vertical and horizontal waveforms.</span>\n\t\t<span class=\"token keyword\">float</span> vWaveMult<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">int</span> selectedOscilator<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//this stores the clicked oscillator position within the vector when it's being pressed.</span>\n\t\t<span class=\"token keyword\">bool</span> bSelectedOscHor<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//when you click over an oscillator this boolean indicates whether it was one of the horizontal oscillators or not.</span>\n\t\t<span class=\"token keyword\">bool</span> bSelectedOscVert<span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//when you click over an oscillator this boolean indicates whether it was one of the vertical oscillators or not.</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n","type":"source"}}],"fetch":[]}