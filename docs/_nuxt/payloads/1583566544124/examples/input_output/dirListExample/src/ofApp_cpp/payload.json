{"data":[{"page":{"entry":{"name":"ofApp.cpp","filename":"ofApp.cpp","absolute":"/Users/gilbertsinnott/Code/openFrameworks/examples/input_output/dirListExample/src/ofApp.cpp","path":"/examples/input_output/dirListExample/src/ofApp_cpp","route":"/examples/input_output/dirListExample/src/ofApp.cpp","dir":"../examples/input_output/dirListExample/src","ext":"cpp","type":"source","id":1081,"parent":1079,"breadcrumbs":[1079,1076,1069,436],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofApp.h\"</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\tdir<span class=\"token punctuation\">.</span><span class=\"token function\">listDir</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"images/of_logos/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tdir<span class=\"token punctuation\">.</span><span class=\"token function\">allowExt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tdir<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// in linux the file system doesn't return file lists ordered in alphabetical order</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//allocate the vector to have as many ofImages as files</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> dir<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\timages<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>dir<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// you can now iterate through the files and load them into the ofImage vector</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>dir<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\timages<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>dir<span class=\"token punctuation\">.</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tcurrentImage <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">ofBackground</span><span class=\"token punctuation\">(</span>ofColor<span class=\"token operator\">::</span>white<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dir<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span>ofColor<span class=\"token operator\">::</span>white<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\timages<span class=\"token punctuation\">[</span>currentImage<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span>ofColor<span class=\"token operator\">::</span>gray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tstring pathInfo <span class=\"token operator\">=</span> dir<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span>currentImage<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">+</span> dir<span class=\"token punctuation\">.</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span>currentImage<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"\\n\\n\"</span> <span class=\"token operator\">+</span>\n\t\t\t<span class=\"token string\">\"press any key to advance current image\\n\\n\"</span> <span class=\"token operator\">+</span>\n\t\t\t<span class=\"token string\">\"many thanks to hikaru furuhashi for the OFs\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofDrawBitmapString</span><span class=\"token punctuation\">(</span>pathInfo<span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> images<span class=\"token punctuation\">[</span>currentImage<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span>ofColor<span class=\"token operator\">::</span>gray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>dir<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> currentImage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span>ofColor<span class=\"token operator\">::</span>red<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\t<span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span>ofColor<span class=\"token operator\">::</span>black<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tstring fileInfo <span class=\"token operator\">=</span> <span class=\"token string\">\"file \"</span> <span class=\"token operator\">+</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\" = \"</span> <span class=\"token operator\">+</span> dir<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofDrawBitmapString</span><span class=\"token punctuation\">(</span>fileInfo<span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span>i <span class=\"token operator\">*</span> <span class=\"token number\">20</span> <span class=\"token operator\">+</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">keyPressed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dir<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tcurrentImage<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\tcurrentImage <span class=\"token operator\">%</span><span class=\"token operator\">=</span> dir<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">keyReleased</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseMoved</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseDragged</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mousePressed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseReleased</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseEntered</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseExited</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">windowResized</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">gotMessage</span><span class=\"token punctuation\">(</span>ofMessage msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">dragEvent</span><span class=\"token punctuation\">(</span>ofDragInfo dragInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n","type":"source"}}],"fetch":[]}