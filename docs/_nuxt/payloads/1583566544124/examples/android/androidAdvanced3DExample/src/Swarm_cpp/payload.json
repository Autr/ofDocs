{"data":[{"page":{"entry":{"name":"Swarm.cpp","filename":"Swarm.cpp","absolute":"/Users/gilbertsinnott/Code/openFrameworks/examples/android/androidAdvanced3DExample/src/Swarm.cpp","path":"/examples/android/androidAdvanced3DExample/src/Swarm_cpp","route":"/examples/android/androidAdvanced3DExample/src/Swarm.cpp","dir":"../examples/android/androidAdvanced3DExample/src","ext":"cpp","type":"source","id":573,"parent":564,"breadcrumbs":[564,565,560,436],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">/*\n *  Swarm.cpp\n *  advanced3dExample\n *\n *  Created by Elliot Woods on 19/01/2011.\n *  Copyright 2011 Kimchi and Chips. All rights reserved.\n *\n */</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Swarm.h\"</span></span>\n\nSwarm<span class=\"token operator\">::</span><span class=\"token function\">Swarm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//constructor, let's set some defaults</span>\n\tnParticles <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\n\tlight<span class=\"token punctuation\">.</span><span class=\"token function\">setAmbientColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> Swarm<span class=\"token operator\">::</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> _nParticles<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> positionDispersion<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> velocityDispersion<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///////////////////////////////////////////</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//if nParticles>0, we must already have</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//initialised our arrays, so let's clear them</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>nParticles <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLog</span><span class=\"token punctuation\">(</span>OF_LOG_WARNING<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Swarm: Already initialised\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">//delete[] = delete array from memory</span>\n\t\t<span class=\"token keyword\">delete</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> positions<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">delete</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> velocities<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">delete</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> colors<span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">//superfluous line of code..</span>\n\t\tnParticles <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///////////////////////////////////////////</span>\n\t\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//Swarm's internal variable set from argument</span>\n\tnParticles <span class=\"token operator\">=</span> _nParticles<span class=\"token punctuation\">;</span>\t\n\t\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">///////////////////////////////////////////</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// SETUP ARRAYS</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///////////////////////////////////////////</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\tpositions <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token punctuation\">[</span>nParticles<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\tvelocities <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token punctuation\">[</span>nParticles<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\tcolors <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> ofColor<span class=\"token punctuation\">[</span>nParticles<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///////////////////////////////////////////</span>\n\t\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">///////////////////////////////////////////</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// INITIALISE VALUES</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///////////////////////////////////////////</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t<span class=\"token function\">ofSeedRandom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span> nParticles<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tpositions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ofRandom</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">*</span> positionDispersion<span class=\"token punctuation\">;</span>\n\t\tpositions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ofRandom</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">*</span> positionDispersion<span class=\"token punctuation\">;</span>\n\t\tpositions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ofRandom</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">*</span> positionDispersion<span class=\"token punctuation\">;</span>\n\t\t\n\t\tvelocities<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ofRandom</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">*</span> velocityDispersion<span class=\"token punctuation\">;</span>\n\t\tvelocities<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ofRandom</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">*</span> velocityDispersion<span class=\"token punctuation\">;</span>\n\t\tvelocities<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ofRandom</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">*</span> velocityDispersion<span class=\"token punctuation\">;</span>\n\t\t\n\t\tcolors<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>r <span class=\"token operator\">=</span> <span class=\"token function\">ofRandom</span><span class=\"token punctuation\">(</span><span class=\"token number\">255.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tcolors<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> <span class=\"token function\">ofRandom</span><span class=\"token punctuation\">(</span><span class=\"token number\">255.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tcolors<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> <span class=\"token number\">150.0f</span><span class=\"token punctuation\">;</span>\n\t\tcolors<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token number\">255.0f</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///////////////////////////////////////////</span>\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> Swarm<span class=\"token operator\">::</span><span class=\"token function\">customDraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///we run the update ourselves manually</span>\n\t<span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//we use the position of the first</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//particle as the position of the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//light</span>\n\t<span class=\"token function\">ofPushStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofEnableLighting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tlight<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tlight<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>positions<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">///////////////////////////////////////////</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// DRAW SPHERES</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///////////////////////////////////////////</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span> nParticles<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofPushStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span>colors<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token function\">ofDrawSphere</span><span class=\"token punctuation\">(</span>positions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token function\">ofPopStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///////////////////////////////////////////</span>\n\t\n\tlight<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofDisableLighting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//render light as white sphere</span>\n\t<span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofDrawSphere</span><span class=\"token punctuation\">(</span>positions<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofSetDrawBitmapMode</span><span class=\"token punctuation\">(</span>OF_BITMAPMODE_MODEL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofDrawBitmapString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" light\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span>vec3<span class=\"token punctuation\">)</span>positions<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofPopStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> Swarm<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//calculate time past per frame</span>\n\t<span class=\"token keyword\">float</span> dt <span class=\"token operator\">=</span> <span class=\"token function\">ofGetElapsedTimef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> timeLastUpdate<span class=\"token punctuation\">;</span>\n\ttimeLastUpdate <span class=\"token operator\">=</span> <span class=\"token function\">ofGetElapsedTimef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//update positions, velocities</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span> nParticles<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">////////////////////////////////</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// </span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//\tMOTION MATHS</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//\t\t'Simple Harmonic Motion'</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">////////////////////////////////</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// (1) integrate the velocity</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//v = dx / dt (*)</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//x = x + dx [every frame]</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//therefore</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//x = x + v * dt (*)</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//velcotity is taken from previous frame</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t\tpositions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span><span class=\"token operator\">=</span> velocities<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> dt<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">/////////////////////////////</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">/////////////////////////////</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// (2) integrate the acceleration</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//a = -k * x</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//a = dv / dt</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//therefore from (*)s above</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//(v = v + dv)</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//v = v + (dt * a)</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//v = v + (dt * -k * x)</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t\tvelocities<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token operator\">-</span> SPRING_CONSTANT <span class=\"token operator\">*</span> positions<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> dt<span class=\"token punctuation\">;</span>\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">/////////////////////////////////</span>\n\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n","type":"source"}}],"fetch":[]}