{"data":[{"page":{"entry":{"name":"ofxCvImage.cpp","filename":"ofxCvImage.cpp","absolute":"/Users/gilbertsinnott/Code/openFrameworks/addons/ofxOpenCv/src/ofxCvImage.cpp","path":"/addons/ofxOpenCv/src/ofxCvImage_cpp","route":"/addons/ofxOpenCv/src/ofxCvImage.cpp","dir":"../addons/ofxOpenCv/src","ext":"cpp","type":"source","id":152,"parent":138,"breadcrumbs":[138,139,36],"siblings":[],"translations":{}},"document":"\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxCvImage.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxCvGrayscaleImage.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxCvColorImage.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxCvFloatImage.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxCvBlob.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\nofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">ofxCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    width\t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    height\t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    bUseTexture\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    bTextureDirty   <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\tbAllocated\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    bPixelsDirty    <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    bRoiPixelsDirty <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    cvImageTemp <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n    bAnchorIsPct <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    cvImage <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n    ipldepth <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    iplchannels <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\nofxCvImage<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofxCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bAllocated <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"allocate(): reallocating\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> w <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> h <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"allocate(): width and height are zero\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tcvImage <span class=\"token operator\">=</span> <span class=\"token function\">cvCreateImage</span><span class=\"token punctuation\">(</span> <span class=\"token function\">cvSize</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ipldepth<span class=\"token punctuation\">,</span> iplchannels <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcvImageTemp\t<span class=\"token operator\">=</span> <span class=\"token function\">cvCreateImage</span><span class=\"token punctuation\">(</span> <span class=\"token function\">cvSize</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ipldepth<span class=\"token punctuation\">,</span> iplchannels <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\twidth <span class=\"token operator\">=</span> w<span class=\"token punctuation\">;</span>\n\theight <span class=\"token operator\">=</span> h<span class=\"token punctuation\">;</span>\n\tbAllocated <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> bUseTexture <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    \t<span class=\"token function\">allocatePixels</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">allocateTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bTextureDirty <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bAllocated <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>width <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> height <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">cvReleaseImage</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>cvImage <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">cvReleaseImage</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>cvImageTemp <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n        pixels<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bPixelsDirty <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        bRoiPixelsDirty <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t\twidth <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\theight <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> bUseTexture <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\ttex<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            bTextureDirty <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\tbAllocated <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">float</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> width<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">float</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> height<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">setUseTexture</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">bool</span> bUse <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tbUseTexture <span class=\"token operator\">=</span> bUse<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">isUsingTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> bUseTexture<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\nofTexture<span class=\"token operator\">&amp;</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> tex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">const</span> ofTexture <span class=\"token operator\">&amp;</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> tex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\nofTexture<span class=\"token operator\">&amp;</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">getTextureReference</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> tex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">const</span> ofTexture <span class=\"token operator\">&amp;</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">getTextureReference</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> tex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    bTextureDirty <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    bPixelsDirty <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    bRoiPixelsDirty <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">// ROI - region of interest</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">setROI</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setROI(): image not allocated\"</span><span class=\"token punctuation\">;</span>\t\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n    x <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token function\">ofClamp</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>width<span class=\"token number\">-1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    y <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token function\">ofClamp</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>height<span class=\"token number\">-1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    w <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token function\">ofClamp</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>width <span class=\"token operator\">-</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    h <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token function\">ofClamp</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>height <span class=\"token operator\">-</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">cvSetImageROI</span><span class=\"token punctuation\">(</span> cvImage<span class=\"token punctuation\">,</span> <span class=\"token function\">cvRect</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">cvSetImageROI</span><span class=\"token punctuation\">(</span> cvImageTemp<span class=\"token punctuation\">,</span> <span class=\"token function\">cvRect</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">setROI</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofRectangle<span class=\"token operator\">&amp;</span> rect <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setROI</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>rect<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>rect<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>rect<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>rect<span class=\"token punctuation\">.</span>height <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\nofRectangle ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    CvRect rect <span class=\"token operator\">=</span> <span class=\"token function\">cvGetImageROI</span><span class=\"token punctuation\">(</span>cvImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">ofRectangle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>rect<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>rect<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>rect<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>rect<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">resetROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">cvResetImageROI</span><span class=\"token punctuation\">(</span> cvImage <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">cvResetImageROI</span><span class=\"token punctuation\">(</span> cvImageTemp <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\nofRectangle ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">getIntersectionROI</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofRectangle<span class=\"token operator\">&amp;</span> r1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofRectangle<span class=\"token operator\">&amp;</span> r2 <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// Calculates the intersection rectangle of two overlapping rectangles.</span>\n    <span class=\"token comment\" spellcheck=\"true\">// The following pattern can be used to do image operation</span>\n    <span class=\"token comment\" spellcheck=\"true\">// on the intersection (overlapping part) of two ROIs</span>\n    <span class=\"token comment\" spellcheck=\"true\">//</span>\n    <span class=\"token comment\" spellcheck=\"true\">// ofRectangle iRoi = img1.getIntersectionROI( img1.getROI(), img2.getROI() );</span>\n    <span class=\"token comment\" spellcheck=\"true\">// if( iRoi.width > 0 &amp;&amp; iRoi.height > 0 ) {</span>\n    <span class=\"token comment\" spellcheck=\"true\">//     img1.pushROI();</span>\n    <span class=\"token comment\" spellcheck=\"true\">//     img1.setROI( iRoi );</span>\n    <span class=\"token comment\" spellcheck=\"true\">//     img2.pushROI();</span>\n    <span class=\"token comment\" spellcheck=\"true\">//     img2.setROI( iRoi );</span>\n    <span class=\"token comment\" spellcheck=\"true\">//</span>\n    <span class=\"token comment\" spellcheck=\"true\">//     // do image operation here</span>\n    <span class=\"token comment\" spellcheck=\"true\">//</span>\n    <span class=\"token comment\" spellcheck=\"true\">//     img1.popROI();</span>\n    <span class=\"token comment\" spellcheck=\"true\">//     img2.popROI();</span>\n    <span class=\"token comment\" spellcheck=\"true\">// }</span>\n    <span class=\"token comment\" spellcheck=\"true\">//</span>\n\n    <span class=\"token keyword\">int</span> r1x1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>r1<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> r1y1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>r1<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> r1x2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>r1<span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span>r1<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> r1y2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>r1<span class=\"token punctuation\">.</span>y<span class=\"token operator\">+</span>r1<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">int</span> r2x1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>r2<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> r2y1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>r2<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> r2x2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>r2<span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span>r2<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> r2y2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>r2<span class=\"token punctuation\">.</span>y<span class=\"token operator\">+</span>r2<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">int</span> r3x1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> r3y1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> r3x2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> r3y2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">bool</span> bIntersect <span class=\"token operator\">=</span>  <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">ofInRange</span><span class=\"token punctuation\">(</span>r2x1<span class=\"token punctuation\">,</span> r1x1<span class=\"token punctuation\">,</span>r1x2<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token function\">ofInRange</span><span class=\"token punctuation\">(</span>r1x1<span class=\"token punctuation\">,</span> r2x1<span class=\"token punctuation\">,</span>r2x2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n                         <span class=\"token punctuation\">(</span> <span class=\"token function\">ofInRange</span><span class=\"token punctuation\">(</span>r2y1<span class=\"token punctuation\">,</span> r1y1<span class=\"token punctuation\">,</span>r1y2<span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token function\">ofInRange</span><span class=\"token punctuation\">(</span>r1y1<span class=\"token punctuation\">,</span> r2y1<span class=\"token punctuation\">,</span>r2y2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> bIntersect <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        r3x1 <span class=\"token operator\">=</span> <span class=\"token function\">MAX</span><span class=\"token punctuation\">(</span> r1x1<span class=\"token punctuation\">,</span> r2x1 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        r3y1 <span class=\"token operator\">=</span> <span class=\"token function\">MAX</span><span class=\"token punctuation\">(</span> r1y1<span class=\"token punctuation\">,</span> r2y1 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        r3x2 <span class=\"token operator\">=</span> <span class=\"token function\">MIN</span><span class=\"token punctuation\">(</span> r1x2<span class=\"token punctuation\">,</span> r2x2 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        r3y2 <span class=\"token operator\">=</span> <span class=\"token function\">MIN</span><span class=\"token punctuation\">(</span> r1y2<span class=\"token punctuation\">,</span> r2y2 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token function\">ofRectangle</span><span class=\"token punctuation\">(</span> r3x1<span class=\"token punctuation\">,</span>r3y1<span class=\"token punctuation\">,</span> r3x2<span class=\"token operator\">-</span>r3x1<span class=\"token punctuation\">,</span>r3y2<span class=\"token operator\">-</span>r3y1 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">ofRectangle</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">// Set Pixel Data</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span>  ofxCvImage<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> IplImage<span class=\"token operator\">*</span> mom <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> mom<span class=\"token operator\">-</span><span class=\"token operator\">></span>width <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> mom<span class=\"token operator\">-</span><span class=\"token operator\">></span>height <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator=: source width and/or height are zero: \"</span>\n\t\t\t<span class=\"token operator\">&lt;&lt;</span> mom<span class=\"token operator\">-</span><span class=\"token operator\">></span>width <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> mom<span class=\"token operator\">-</span><span class=\"token operator\">></span>height<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\t\t\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token operator\">||</span> mom<span class=\"token operator\">-</span><span class=\"token operator\">></span>nChannels <span class=\"token operator\">==</span> cvImage<span class=\"token operator\">-</span><span class=\"token operator\">></span>nChannels <span class=\"token operator\">&amp;&amp;</span> mom<span class=\"token operator\">-</span><span class=\"token operator\">></span>depth <span class=\"token operator\">==</span> cvImage<span class=\"token operator\">-</span><span class=\"token operator\">></span>depth <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> \t<span class=\"token comment\" spellcheck=\"true\">//lets allocate if needed</span>\n\t\t\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>mom<span class=\"token operator\">-</span><span class=\"token operator\">></span>width<span class=\"token punctuation\">,</span> mom<span class=\"token operator\">-</span><span class=\"token operator\">></span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> mom<span class=\"token operator\">-</span><span class=\"token operator\">></span>width <span class=\"token operator\">!=</span> width <span class=\"token operator\">||</span> mom<span class=\"token operator\">-</span><span class=\"token operator\">></span>height <span class=\"token operator\">!=</span> height <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator=: image size mismatch\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token function\">cvCopy</span><span class=\"token punctuation\">(</span> mom<span class=\"token punctuation\">,</span> cvImage <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator=: image channels and/or depth mismatch\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token operator\">-</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> value <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator-=: image not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\t\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">cvSubS</span><span class=\"token punctuation\">(</span> cvImage<span class=\"token punctuation\">,</span> <span class=\"token function\">cvScalar</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cvImageTemp <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">swapTemp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> value <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator-=: image not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\t\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">cvAddS</span><span class=\"token punctuation\">(</span> cvImage<span class=\"token punctuation\">,</span> <span class=\"token function\">cvScalar</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cvImageTemp <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">swapTemp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token operator\">-</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> ofxCvImage<span class=\"token operator\">&amp;</span> mom <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>mom<span class=\"token punctuation\">.</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator-=: source image not allocated\"</span><span class=\"token punctuation\">;</span>\t\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator-=: allocating to match dimensions: \"</span>\n\t\t\t<span class=\"token operator\">&lt;&lt;</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>nChannels <span class=\"token operator\">==</span> cvImage<span class=\"token operator\">-</span><span class=\"token operator\">></span>nChannels <span class=\"token operator\">&amp;&amp;</span>\n        mom<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>depth <span class=\"token operator\">==</span> cvImage<span class=\"token operator\">-</span><span class=\"token operator\">></span>depth <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token function\">matchingROI</span><span class=\"token punctuation\">(</span><span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">cvSub</span><span class=\"token punctuation\">(</span> cvImage<span class=\"token punctuation\">,</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cvImageTemp <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">swapTemp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator-=: region of interest mismatch\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator-=: image type mismatch\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> ofxCvImage<span class=\"token operator\">&amp;</span> mom <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>mom<span class=\"token punctuation\">.</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator+=: source image not allocated\"</span><span class=\"token punctuation\">;</span>\t\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator+=: allocating to match dimensions: \"</span>\n\t\t\t<span class=\"token operator\">&lt;&lt;</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>nChannels <span class=\"token operator\">==</span> cvImage<span class=\"token operator\">-</span><span class=\"token operator\">></span>nChannels <span class=\"token operator\">&amp;&amp;</span>\n        mom<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>depth <span class=\"token operator\">==</span> cvImage<span class=\"token operator\">-</span><span class=\"token operator\">></span>depth <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token function\">matchingROI</span><span class=\"token punctuation\">(</span><span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">cvAdd</span><span class=\"token punctuation\">(</span> cvImage<span class=\"token punctuation\">,</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cvImageTemp <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">swapTemp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator+=: region of interest mismatch\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator+=: image type mismatch\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token operator\">*</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> ofxCvImage<span class=\"token operator\">&amp;</span> mom <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>mom<span class=\"token punctuation\">.</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator*=: mom needs to be allocated\"</span><span class=\"token punctuation\">;</span>\t\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator*=: allocating to match dimensions: \"</span>\n\t\t\t<span class=\"token operator\">&lt;&lt;</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>nChannels <span class=\"token operator\">==</span> cvImage<span class=\"token operator\">-</span><span class=\"token operator\">></span>nChannels <span class=\"token operator\">&amp;&amp;</span>\n        mom<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>depth <span class=\"token operator\">==</span> cvImage<span class=\"token operator\">-</span><span class=\"token operator\">></span>depth <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token function\">matchingROI</span><span class=\"token punctuation\">(</span><span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">float</span> scalef <span class=\"token operator\">=</span> <span class=\"token number\">1.0f</span> <span class=\"token operator\">/</span> <span class=\"token number\">255.0f</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">cvMul</span><span class=\"token punctuation\">(</span> cvImage<span class=\"token punctuation\">,</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cvImageTemp<span class=\"token punctuation\">,</span> scalef <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">swapTemp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator*=: region of interest mismatch\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator*=: images type mismatch\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span> <span class=\"token operator\">&amp;</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> ofxCvImage<span class=\"token operator\">&amp;</span> mom <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>mom<span class=\"token punctuation\">.</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator&amp;=: source image not allocated\"</span><span class=\"token punctuation\">;</span>\t\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator&amp;=: allocating to match dimensions: \"</span>\n\t\t\t<span class=\"token operator\">&lt;&lt;</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" \"</span> <span class=\"token operator\">&lt;&lt;</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>nChannels <span class=\"token operator\">==</span> cvImage<span class=\"token operator\">-</span><span class=\"token operator\">></span>nChannels <span class=\"token operator\">&amp;&amp;</span>\n        mom<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>depth <span class=\"token operator\">==</span> cvImage<span class=\"token operator\">-</span><span class=\"token operator\">></span>depth <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token function\">matchingROI</span><span class=\"token punctuation\">(</span><span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">cvAnd</span><span class=\"token punctuation\">(</span> cvImage<span class=\"token punctuation\">,</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cvImageTemp <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">swapTemp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator&amp;=: region of interest mismatch\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"operator&amp;=: images need to have matching type\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span>  ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">drawBlobIntoMe</span><span class=\"token punctuation\">(</span> ofxCvBlob<span class=\"token operator\">&amp;</span> blob<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> color <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"drawBlobIntoMe(): image not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> blob<span class=\"token punctuation\">.</span>pts<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t   CvPoint<span class=\"token operator\">*</span> pts <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> CvPoint<span class=\"token punctuation\">[</span>blob<span class=\"token punctuation\">.</span>nPts<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t   <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> blob<span class=\"token punctuation\">.</span>nPts <span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t   pts<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>blob<span class=\"token punctuation\">.</span>pts<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\t\t   pts<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>blob<span class=\"token punctuation\">.</span>pts<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\t   <span class=\"token punctuation\">}</span>\n\t   <span class=\"token keyword\">int</span> nPts <span class=\"token operator\">=</span> blob<span class=\"token punctuation\">.</span>nPts<span class=\"token punctuation\">;</span>\n\t   <span class=\"token function\">cvFillPoly</span><span class=\"token punctuation\">(</span> cvImage<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>pts<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>nPts<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n\t               <span class=\"token function\">cvScalar</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">,</span>color<span class=\"token punctuation\">,</span>color<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t   <span class=\"token keyword\">delete</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> pts<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">// Draw Image</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y <span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span> x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPoint <span class=\"token operator\">&amp;</span> point<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> point<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofRectangle <span class=\"token operator\">&amp;</span> rect<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>rect<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> rect<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">updateTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bAllocated<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"updateTexture(): image not allocated\"</span><span class=\"token punctuation\">;</span>\t\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bUseTexture <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> bTextureDirty <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\ttex<span class=\"token punctuation\">.</span><span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span> <span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tbTextureDirty <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h <span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> bUseTexture <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    \tofxCvImage<span class=\"token operator\">*</span> mutImage <span class=\"token operator\">=</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofxCvImage<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \tmutImage<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">updateTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        tex<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">drawROI</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y <span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    ofRectangle roi <span class=\"token operator\">=</span> <span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">drawROI</span><span class=\"token punctuation\">(</span> x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span> roi<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> roi<span class=\"token punctuation\">.</span>height <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">drawROI</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h <span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> bUseTexture <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        ofRectangle roi <span class=\"token operator\">=</span> <span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> bTextureDirty <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            tex<span class=\"token punctuation\">.</span><span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span> <span class=\"token function\">getRoiPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            bTextureDirty <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        tex<span class=\"token punctuation\">.</span><span class=\"token function\">drawSubsection</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>roi<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>roi<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"drawROI(): textureless drawing mode not implemented\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">setAnchorPercent</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> xPct<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> yPct <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> bUseTexture <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    \ttex<span class=\"token punctuation\">.</span><span class=\"token function\">setAnchorPercent</span><span class=\"token punctuation\">(</span>xPct<span class=\"token punctuation\">,</span>yPct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        anchor<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> xPct<span class=\"token punctuation\">;</span>\n        anchor<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> yPct<span class=\"token punctuation\">;</span>\n\n        bAnchorIsPct <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">setAnchorPoint</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> bUseTexture <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    \ttex<span class=\"token punctuation\">.</span><span class=\"token function\">setAnchorPoint</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n        anchor<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n        anchor<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n\n        bAnchorIsPct <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">resetAnchor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> bUseTexture <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    \ttex<span class=\"token punctuation\">.</span><span class=\"token function\">resetAnchor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n        anchor<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bAnchorIsPct <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">// Image Filter Operations</span>\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">dilate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"dilate(): image not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\t\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">cvDilate</span><span class=\"token punctuation\">(</span> cvImage<span class=\"token punctuation\">,</span> cvImageTemp<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">swapTemp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">erode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"erode(): image not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\t\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">cvErode</span><span class=\"token punctuation\">(</span> cvImage<span class=\"token punctuation\">,</span> cvImageTemp<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">swapTemp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">blur</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> value <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"blur(): image not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\t\n\t<span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> value <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"blur(): value \"</span> <span class=\"token operator\">&lt;&lt;</span> value <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" not odd, adding 1\"</span><span class=\"token punctuation\">;</span>\n        value<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">cvSmooth</span><span class=\"token punctuation\">(</span> cvImage<span class=\"token punctuation\">,</span> cvImageTemp<span class=\"token punctuation\">,</span> CV_BLUR <span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">swapTemp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">blurGaussian</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> value <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"blurGaussian(): image not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\t\n\t<span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> value <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"blurGaussian(): value \"</span> <span class=\"token operator\">&lt;&lt;</span> value <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" not odd, adding 1\"</span><span class=\"token punctuation\">;</span>\n        value<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">cvSmooth</span><span class=\"token punctuation\">(</span> cvImage<span class=\"token punctuation\">,</span> cvImageTemp<span class=\"token punctuation\">,</span> CV_GAUSSIAN <span class=\"token punctuation\">,</span>value <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">swapTemp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">invert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"invert(): image not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\t\n\t<span class=\"token punctuation\">}</span>\n    <span class=\"token function\">cvNot</span><span class=\"token punctuation\">(</span>cvImage<span class=\"token punctuation\">,</span> cvImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">// Image Transformation Operations</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">mirror</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">bool</span> bFlipVertically<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> bFlipHorizontally <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"mirror(): image not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\t\n\t<span class=\"token punctuation\">}</span>\t\n\t<span class=\"token keyword\">int</span> flipMode <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> bFlipVertically <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>bFlipHorizontally <span class=\"token punctuation\">)</span> flipMode <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bFlipVertically <span class=\"token operator\">&amp;&amp;</span> bFlipHorizontally <span class=\"token punctuation\">)</span> flipMode <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> bFlipVertically <span class=\"token operator\">&amp;&amp;</span> bFlipHorizontally <span class=\"token punctuation\">)</span> flipMode <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">cvFlip</span><span class=\"token punctuation\">(</span> cvImage<span class=\"token punctuation\">,</span> cvImageTemp<span class=\"token punctuation\">,</span> flipMode <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">swapTemp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"translate(): image not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\t\n\t<span class=\"token punctuation\">}</span>\t\n    <span class=\"token function\">transform</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span>y <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">rotate</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> angle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> centerX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> centerY <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"rotate(): image not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\t\n\t<span class=\"token punctuation\">}</span>\n    <span class=\"token function\">transform</span><span class=\"token punctuation\">(</span> angle<span class=\"token punctuation\">,</span> centerX<span class=\"token punctuation\">,</span> centerY<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> scaleX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> scaleY <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"scale(): image not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\t\n\t<span class=\"token punctuation\">}</span>\n    <span class=\"token function\">transform</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> scaleX<span class=\"token punctuation\">,</span>scaleY<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">transform</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> angle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> centerX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> centerY<span class=\"token punctuation\">,</span>\n                            <span class=\"token keyword\">float</span> scaleX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> scaleY<span class=\"token punctuation\">,</span>\n                            <span class=\"token keyword\">float</span> moveX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> moveY <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"transform(): image not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\t\n\t<span class=\"token punctuation\">}</span>\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n    <span class=\"token keyword\">float</span> sina <span class=\"token operator\">=</span> <span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>angle <span class=\"token operator\">*</span> DEG_TO_RAD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> cosa <span class=\"token operator\">=</span> <span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>angle <span class=\"token operator\">*</span> DEG_TO_RAD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    CvMat<span class=\"token operator\">*</span>  transmat <span class=\"token operator\">=</span> <span class=\"token function\">cvCreateMat</span><span class=\"token punctuation\">(</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> CV_32F <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">cvmSet</span><span class=\"token punctuation\">(</span> transmat<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> scaleX<span class=\"token operator\">*</span>cosa <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">cvmSet</span><span class=\"token punctuation\">(</span> transmat<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> scaleY<span class=\"token operator\">*</span>sina <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">cvmSet</span><span class=\"token punctuation\">(</span> transmat<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>centerX<span class=\"token operator\">*</span>scaleX<span class=\"token operator\">*</span>cosa <span class=\"token operator\">-</span> centerY<span class=\"token operator\">*</span>scaleY<span class=\"token operator\">*</span>sina <span class=\"token operator\">+</span> moveX <span class=\"token operator\">+</span> centerX <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">cvmSet</span><span class=\"token punctuation\">(</span> transmat<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token operator\">*</span>scaleX<span class=\"token operator\">*</span>sina <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">cvmSet</span><span class=\"token punctuation\">(</span> transmat<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> scaleY<span class=\"token operator\">*</span>cosa <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">cvmSet</span><span class=\"token punctuation\">(</span> transmat<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>centerY<span class=\"token operator\">*</span>scaleY<span class=\"token operator\">*</span>cosa <span class=\"token operator\">+</span> centerX<span class=\"token operator\">*</span>scaleX<span class=\"token operator\">*</span>sina <span class=\"token operator\">+</span> moveY <span class=\"token operator\">+</span> centerY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">cvWarpAffine</span><span class=\"token punctuation\">(</span> cvImage<span class=\"token punctuation\">,</span> cvImageTemp<span class=\"token punctuation\">,</span> transmat <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">swapTemp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">cvReleaseMat</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>transmat <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">undistort</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> radialDistX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> radialDistY<span class=\"token punctuation\">,</span>\n                            <span class=\"token keyword\">float</span> tangentDistX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> tangentDistY<span class=\"token punctuation\">,</span>\n                            <span class=\"token keyword\">float</span> focalX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> focalY<span class=\"token punctuation\">,</span>\n                            <span class=\"token keyword\">float</span> centerX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> centerY <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t\t\t\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"undistort(): image not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\t\n\t<span class=\"token punctuation\">}</span>\t\t\t\t\t\t\t\n    <span class=\"token keyword\">float</span> camIntrinsics<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> focalX<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> centerX<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> focalY<span class=\"token punctuation\">,</span> centerY<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> distortionCoeffs<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> radialDistX<span class=\"token punctuation\">,</span> radialDistY<span class=\"token punctuation\">,</span> tangentDistX<span class=\"token punctuation\">,</span> tangentDistY <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\tCvMat _a <span class=\"token operator\">=</span> <span class=\"token function\">cvMat</span><span class=\"token punctuation\">(</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> CV_32F<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>camIntrinsics <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    CvMat _k <span class=\"token operator\">=</span> <span class=\"token function\">cvMat</span><span class=\"token punctuation\">(</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> CV_32F<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>distortionCoeffs <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> USE_OLD_CV</span>\n    <span class=\"token function\">cvUndistort2</span><span class=\"token punctuation\">(</span> cvImage<span class=\"token punctuation\">,</span> cvImageTemp<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>_a<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>_k<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n    cv<span class=\"token operator\">::</span>Mat src <span class=\"token operator\">=</span> cv<span class=\"token operator\">::</span><span class=\"token function\">cvarrToMat</span><span class=\"token punctuation\">(</span>cvImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> dst <span class=\"token operator\">=</span> cv<span class=\"token operator\">::</span><span class=\"token function\">cvarrToMat</span><span class=\"token punctuation\">(</span>cvImageTemp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cv<span class=\"token operator\">::</span>Mat A <span class=\"token operator\">=</span> cv<span class=\"token operator\">::</span><span class=\"token function\">cvarrToMat</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> distCoeffs <span class=\"token operator\">=</span> cv<span class=\"token operator\">::</span><span class=\"token function\">cvarrToMat</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>_k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">CV_Assert</span><span class=\"token punctuation\">(</span> src<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> dst<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> src<span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> dst<span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cv<span class=\"token operator\">::</span><span class=\"token function\">undistort</span><span class=\"token punctuation\">(</span> src<span class=\"token punctuation\">,</span> dst<span class=\"token punctuation\">,</span> A<span class=\"token punctuation\">,</span> distCoeffs <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span> </span><span class=\"token comment\" spellcheck=\"true\">// USE_OLD_CV</span>\n\t<span class=\"token function\">swapTemp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">remap</span><span class=\"token punctuation\">(</span> IplImage<span class=\"token operator\">*</span> mapX<span class=\"token punctuation\">,</span> IplImage<span class=\"token operator\">*</span> mapY <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"remap(): image not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\t\n\t<span class=\"token punctuation\">}</span>\t\n    <span class=\"token function\">cvRemap</span><span class=\"token punctuation\">(</span> cvImage<span class=\"token punctuation\">,</span> cvImageTemp<span class=\"token punctuation\">,</span> mapX<span class=\"token punctuation\">,</span> mapY <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">swapTemp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">/**\n*    A  +-------------+  B\n*      /               \\\n*     /                 \\\n*    /                   \\\n* D +-------------------- +  C\n*/</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">warpPerspective</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofPoint<span class=\"token operator\">&amp;</span> A<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofPoint<span class=\"token operator\">&amp;</span> B<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofPoint<span class=\"token operator\">&amp;</span> C<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofPoint<span class=\"token operator\">&amp;</span> D <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"warpPerspective(): image not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\t\n\t<span class=\"token punctuation\">}</span>\n    <span class=\"token comment\" spellcheck=\"true\">// compute matrix for perspectival warping (homography)</span>\n    CvPoint2D32f cvsrc<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    CvPoint2D32f cvdst<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    CvMat<span class=\"token operator\">*</span> translate <span class=\"token operator\">=</span> <span class=\"token function\">cvCreateMat</span><span class=\"token punctuation\">(</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> CV_32FC1 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">cvSetZero</span><span class=\"token punctuation\">(</span> translate <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    cvdst<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    cvdst<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    cvdst<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> width<span class=\"token punctuation\">;</span>\n    cvdst<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    cvdst<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> width<span class=\"token punctuation\">;</span>\n    cvdst<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> height<span class=\"token punctuation\">;</span>\n    cvdst<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    cvdst<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> height<span class=\"token punctuation\">;</span>\n\n    cvsrc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> A<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n    cvsrc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> A<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n    cvsrc<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n    cvsrc<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n    cvsrc<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> C<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n    cvsrc<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> C<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n    cvsrc<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> D<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n    cvsrc<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> D<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">cvGetPerspectiveTransform</span><span class=\"token punctuation\">(</span> cvsrc<span class=\"token punctuation\">,</span> cvdst<span class=\"token punctuation\">,</span> translate <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">// calculate homography</span>\n    <span class=\"token function\">cvWarpPerspective</span><span class=\"token punctuation\">(</span> cvImage<span class=\"token punctuation\">,</span> cvImageTemp<span class=\"token punctuation\">,</span> translate <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">swapTemp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">cvReleaseMat</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>translate <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">warpIntoMe</span><span class=\"token punctuation\">(</span> ofxCvImage<span class=\"token operator\">&amp;</span> mom<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofPoint src<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofPoint dst<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    \n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"warpIntoMe(): image not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\t\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>mom<span class=\"token punctuation\">.</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"warpIntoMe(): source image not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\t\t\n\t<span class=\"token punctuation\">}</span>\n\t\t\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>nChannels <span class=\"token operator\">==</span> cvImage<span class=\"token operator\">-</span><span class=\"token operator\">></span>nChannels <span class=\"token operator\">&amp;&amp;</span>\n        mom<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>depth <span class=\"token operator\">==</span> cvImage<span class=\"token operator\">-</span><span class=\"token operator\">></span>depth <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    \t<span class=\"token comment\" spellcheck=\"true\">// compute matrix for perspectival warping (homography)</span>\n    \tCvPoint2D32f cvsrc<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    \tCvPoint2D32f cvdst<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    \tCvMat<span class=\"token operator\">*</span> translate <span class=\"token operator\">=</span> <span class=\"token function\">cvCreateMat</span><span class=\"token punctuation\">(</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> CV_32FC1 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token function\">cvSetZero</span><span class=\"token punctuation\">(</span> translate <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    \t\tcvsrc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> src<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n    \t\tcvsrc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> src<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n    \t\tcvdst<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> dst<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n    \t\tcvdst<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> dst<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n    \t<span class=\"token punctuation\">}</span>\n    \t<span class=\"token function\">cvGetPerspectiveTransform</span><span class=\"token punctuation\">(</span> cvsrc<span class=\"token punctuation\">,</span> cvdst<span class=\"token punctuation\">,</span> translate <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">// calculate homography</span>\n    \t<span class=\"token function\">cvWarpPerspective</span><span class=\"token punctuation\">(</span> mom<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cvImage<span class=\"token punctuation\">,</span> translate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">flagImageChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token function\">cvReleaseMat</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">&amp;</span>translate <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"warpIntoMe(): image type mismatch\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">// Other Image Operations</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">countNonZeroInRegion</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span>bAllocated <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"countNonZeroInRegion(): image not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\t\t\n\t<span class=\"token punctuation\">}</span>\n\t\n    <span class=\"token comment\" spellcheck=\"true\">//TODO: test this method</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>w <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> h <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// intersect the global ROI with the region to check</span>\n    ofRectangle iRoi <span class=\"token operator\">=</span> <span class=\"token function\">getIntersectionROI</span><span class=\"token punctuation\">(</span> <span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofRectangle</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    ofRectangle lastROI <span class=\"token operator\">=</span> <span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setROI</span><span class=\"token punctuation\">(</span>iRoi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcount <span class=\"token operator\">=</span> <span class=\"token function\">cvCountNonZero</span><span class=\"token punctuation\">(</span> cvImage <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setROI</span><span class=\"token punctuation\">(</span>lastROI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> count<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">// private methods</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">swapTemp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>x <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span>\n\t\t<span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>y <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span>\n\t\t<span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>width <span class=\"token operator\">!=</span> width <span class=\"token operator\">||</span>\n\t\t<span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>height <span class=\"token operator\">!=</span> height <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">cvCopy</span><span class=\"token punctuation\">(</span> cvImageTemp<span class=\"token punctuation\">,</span> cvImage <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\tIplImage<span class=\"token operator\">*</span>  temp<span class=\"token punctuation\">;</span>\n\t\ttemp <span class=\"token operator\">=</span> cvImage<span class=\"token punctuation\">;</span>\n\t\tcvImage\t<span class=\"token operator\">=</span> cvImageTemp<span class=\"token punctuation\">;</span>\n\t\tcvImageTemp\t<span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">rangeMap</span><span class=\"token punctuation\">(</span> IplImage<span class=\"token operator\">*</span> img<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> min1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> max1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> min2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> max2 <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// map from min1-max1 to min2-max2</span>\n    <span class=\"token keyword\">float</span> scale <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>max2<span class=\"token operator\">-</span>min2<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>max1<span class=\"token operator\">-</span>min1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">cvConvertScale</span><span class=\"token punctuation\">(</span> img<span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">,</span> scale<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>min1<span class=\"token operator\">*</span>scale<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>min2 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">rangeMap</span><span class=\"token punctuation\">(</span> IplImage<span class=\"token operator\">*</span> mom<span class=\"token punctuation\">,</span> IplImage<span class=\"token operator\">*</span> kid<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> min1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> max1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> min2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> max2 <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// map from min1-max1 to min2-max2</span>\n    <span class=\"token keyword\">float</span> scale <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>max2<span class=\"token operator\">-</span>min2<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>max1<span class=\"token operator\">-</span>min1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">cvConvertScale</span><span class=\"token punctuation\">(</span> mom<span class=\"token punctuation\">,</span> kid<span class=\"token punctuation\">,</span> scale<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>min1<span class=\"token operator\">*</span>scale<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>min2 <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">matchingROI</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofRectangle<span class=\"token operator\">&amp;</span> rec1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofRectangle<span class=\"token operator\">&amp;</span> rec2 <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> rec1<span class=\"token punctuation\">.</span>width <span class=\"token operator\">==</span> rec2<span class=\"token punctuation\">.</span>width <span class=\"token operator\">&amp;&amp;</span> rec1<span class=\"token punctuation\">.</span>height <span class=\"token operator\">==</span> rec2<span class=\"token punctuation\">.</span>height <span class=\"token operator\">&amp;&amp;</span> rec1<span class=\"token punctuation\">.</span>width <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> rec1<span class=\"token punctuation\">.</span>height <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span>  ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">setImageROI</span><span class=\"token punctuation\">(</span> IplImage<span class=\"token operator\">*</span> img<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofRectangle<span class=\"token operator\">&amp;</span> roi <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">cvSetImageROI</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> <span class=\"token function\">cvRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>roi<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>roi<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>roi<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>roi<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span>  ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">resetImageROI</span><span class=\"token punctuation\">(</span> IplImage<span class=\"token operator\">*</span> img <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">cvResetImageROI</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">setFromPixels</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofPixels <span class=\"token operator\">&amp;</span> pixels <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setFromPixels</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">setRoiFromPixels</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofPixels <span class=\"token operator\">&amp;</span> pixels <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setRoiFromPixels</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\nofPixels<span class=\"token operator\">&amp;</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bAllocated<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getPixels(): image not allocated\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bPixelsDirty<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tIplImage <span class=\"token operator\">*</span> cv8bit<span class=\"token operator\">=</span> <span class=\"token function\">getCv8BitsImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//Note this possible introduces a bug where pixels doesn't contain the current image.</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//Also it means that modifying the pointer return by get pixels - affects the internal cvImage</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//Where as with the slower way below modifying the pointer doesn't change the image.</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>  cv8bit<span class=\"token operator\">-</span><span class=\"token operator\">></span>width<span class=\"token operator\">*</span>cv8bit<span class=\"token operator\">-</span><span class=\"token operator\">></span>nChannels <span class=\"token operator\">==</span> cvImage<span class=\"token operator\">-</span><span class=\"token operator\">></span>widthStep <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">setFromExternalPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>cv8bit<span class=\"token operator\">-</span><span class=\"token operator\">></span>imageData<span class=\"token punctuation\">,</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">,</span>cv8bit<span class=\"token operator\">-</span><span class=\"token operator\">></span>nChannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">setFromAlignedPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>cv8bit<span class=\"token operator\">-</span><span class=\"token operator\">></span>imageData<span class=\"token punctuation\">,</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">,</span>cv8bit<span class=\"token operator\">-</span><span class=\"token operator\">></span>nChannels<span class=\"token punctuation\">,</span>cv8bit<span class=\"token operator\">-</span><span class=\"token operator\">></span>widthStep<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tbPixelsDirty <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> pixels<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\nofPixels<span class=\"token operator\">&amp;</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">getRoiPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bAllocated<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getRoiPixels(): image not allocated\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bRoiPixelsDirty<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tIplImage <span class=\"token operator\">*</span> cv8bit<span class=\"token operator\">=</span> <span class=\"token function\">getCv8BitsRoiImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tofRectangle roi <span class=\"token operator\">=</span> <span class=\"token function\">getROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> roi_ptr <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>cv8bit<span class=\"token operator\">-</span><span class=\"token operator\">></span>imageData <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>roi<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>cv8bit<span class=\"token operator\">-</span><span class=\"token operator\">></span>widthStep <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>roi<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> cv8bit<span class=\"token operator\">-</span><span class=\"token operator\">></span>nChannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\troiPixels<span class=\"token punctuation\">.</span><span class=\"token function\">setFromAlignedPixels</span><span class=\"token punctuation\">(</span>roi_ptr<span class=\"token punctuation\">,</span>roi<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>roi<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span>cv8bit<span class=\"token operator\">-</span><span class=\"token operator\">></span>nChannels<span class=\"token punctuation\">,</span>cv8bit<span class=\"token operator\">-</span><span class=\"token operator\">></span>widthStep<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tbRoiPixelsDirty <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> roiPixels<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">const</span> ofPixels<span class=\"token operator\">&amp;</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tofxCvImage<span class=\"token operator\">*</span> mutImage <span class=\"token operator\">=</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofxCvImage<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> mutImage<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">const</span> ofPixels<span class=\"token operator\">&amp;</span> ofxCvImage<span class=\"token operator\">::</span><span class=\"token function\">getRoiPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tofxCvImage<span class=\"token operator\">*</span> mutImage <span class=\"token operator\">=</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofxCvImage<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> mutImage<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getRoiPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n","type":"source"}}],"fetch":[]}