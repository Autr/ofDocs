{"data":[{"page":{"entry":{"name":"ofxCvHaarFinder.cpp","filename":"ofxCvHaarFinder.cpp","absolute":"/Users/gilbertsinnott/Code/openFrameworks/addons/ofxOpenCv/src/ofxCvHaarFinder.cpp","path":"/addons/ofxOpenCv/src/ofxCvHaarFinder_cpp","route":"/addons/ofxOpenCv/src/ofxCvHaarFinder.cpp","dir":"../addons/ofxOpenCv/src","ext":"cpp","type":"source","id":150,"parent":138,"breadcrumbs":[138,139,36],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxCvHaarFinder.h\"</span></span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">sort_carea_compare</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofxCvBlob <span class=\"token operator\">&amp;</span> a<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofxCvBlob <span class=\"token operator\">&amp;</span> b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// use opencv to calc size, then sort based on size</span>\n\t<span class=\"token keyword\">float</span> areaa <span class=\"token operator\">=</span> <span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>area<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> areab <span class=\"token operator\">=</span> <span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>area<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">//return 0;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>areaa <span class=\"token operator\">></span> areab<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofxCvHaarFinder<span class=\"token operator\">::</span><span class=\"token function\">ofxCvHaarFinder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> USE_OLD_CV</span>\n\tcascade <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\tscaleHaar <span class=\"token operator\">=</span> <span class=\"token number\">1.08</span><span class=\"token punctuation\">;</span>\n\tneighbors <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\timg<span class=\"token punctuation\">.</span><span class=\"token function\">setUseTexture</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofxCvHaarFinder<span class=\"token operator\">::</span><span class=\"token function\">ofxCvHaarFinder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofxCvHaarFinder<span class=\"token operator\">&amp;</span> finder<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> USE_OLD_CV</span>\n\tcascade <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\tscaleHaar <span class=\"token operator\">=</span> finder<span class=\"token punctuation\">.</span>scaleHaar<span class=\"token punctuation\">;</span>\n\tneighbors <span class=\"token operator\">=</span> finder<span class=\"token punctuation\">.</span>neighbors<span class=\"token punctuation\">;</span>\n\timg<span class=\"token punctuation\">.</span><span class=\"token function\">setUseTexture</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>finder<span class=\"token punctuation\">.</span>haarFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofxCvHaarFinder<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofxCvHaarFinder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> USE_OLD_CV</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>cascade <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">cvReleaseHaarClassifierCascade</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>cascade<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// low values\t- more accurate - eg: 1.01</span>\n<span class=\"token comment\" spellcheck=\"true\">// high values\t- faster - eg: 1.06 or 1.09</span>\n<span class=\"token keyword\">void</span> ofxCvHaarFinder<span class=\"token operator\">::</span><span class=\"token function\">setScaleHaar</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> scaleHaar<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>scaleHaar <span class=\"token operator\">=</span> scaleHaar<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//low values\t= more false postives</span>\n<span class=\"token comment\" spellcheck=\"true\">//high values\t= less faces,  but more reliable</span>\n<span class=\"token keyword\">void</span> ofxCvHaarFinder<span class=\"token operator\">::</span><span class=\"token function\">setNeighbors</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> neighbors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>neighbors <span class=\"token operator\">=</span> neighbors<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxCvHaarFinder<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string haarFile<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>haarFile <span class=\"token operator\">=</span> haarFile<span class=\"token punctuation\">;</span>\n\n\thaarFile <span class=\"token operator\">=</span> <span class=\"token function\">ofToDataPath</span><span class=\"token punctuation\">(</span>haarFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> USE_OLD_CV</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>cascade <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">cvReleaseHaarClassifierCascade</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>cascade<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcascade <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>CvHaarClassifierCascade<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token function\">cvLoad</span><span class=\"token punctuation\">(</span>haarFile<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> HAAR_HACK</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// http://thread.gmane.org/gmane.comp.lib.opencv/16540/focus=17400</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// http://www.openframeworks.cc/forum/viewtopic.php?f=10&amp;t=1853&amp;hilit=haar</span>\n\t\tofxCvGrayscaleImage hack<span class=\"token punctuation\">;</span>\n\t\thack<span class=\"token punctuation\">.</span><span class=\"token function\">setUseTexture</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\thack<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tCvMemStorage<span class=\"token operator\">*</span> storage <span class=\"token operator\">=</span> <span class=\"token function\">cvCreateMemStorage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">cvHaarDetectObjects</span><span class=\"token punctuation\">(</span>hack<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cascade<span class=\"token punctuation\">,</span> storage<span class=\"token punctuation\">,</span> scaleHaar<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> CV_HAAR_DO_CANNY_PRUNING<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">cvReleaseMemStorage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>storage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>cascade<span class=\"token punctuation\">)</span>\n        <span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvHaarFinder\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setup(): couldn't load Haar cascade file: \\\"\"</span> <span class=\"token operator\">&lt;&lt;</span> haarFile <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\tcascade<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span> haarFile <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> cascade<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvHaarFinder\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setup(): couldn't load Haar cascade file: \\\"\"</span> <span class=\"token operator\">&lt;&lt;</span> haarFile <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span> </span><span class=\"token comment\" spellcheck=\"true\">//USE_OLD_CV</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">float</span> ofxCvHaarFinder<span class=\"token operator\">::</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> img<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> ofxCvHaarFinder<span class=\"token operator\">::</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> img<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxCvHaarFinder<span class=\"token operator\">::</span><span class=\"token function\">findHaarObjects</span><span class=\"token punctuation\">(</span>ofImage<span class=\"token operator\">&amp;</span> input<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> minWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> minHeight<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n\tofxCvGrayscaleImage gray<span class=\"token punctuation\">;</span>\n\tgray<span class=\"token punctuation\">.</span><span class=\"token function\">setUseTexture</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tgray<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">getImageType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> OF_IMAGE_COLOR <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tofxCvColorImage color<span class=\"token punctuation\">;</span>\n\t\tcolor<span class=\"token punctuation\">.</span><span class=\"token function\">setUseTexture</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tcolor<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tcolor <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tgray <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">getImageType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> OF_IMAGE_GRAYSCALE <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tgray <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvHaarFinder\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"findHaarObjects(): OF_IMAGE_RGBA image type not supported\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">findHaarObjects</span><span class=\"token punctuation\">(</span>gray<span class=\"token punctuation\">,</span> minWidth<span class=\"token punctuation\">,</span> minHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxCvHaarFinder<span class=\"token operator\">::</span><span class=\"token function\">findHaarObjects</span><span class=\"token punctuation\">(</span>ofPixels<span class=\"token operator\">&amp;</span> input<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> minWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> minHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofxCvGrayscaleImage gray<span class=\"token punctuation\">;</span>\n\tgray<span class=\"token punctuation\">.</span><span class=\"token function\">setUseTexture</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tgray<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">getImageType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> OF_IMAGE_COLOR <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tofxCvColorImage color<span class=\"token punctuation\">;</span>\n\t\tcolor<span class=\"token punctuation\">.</span><span class=\"token function\">setUseTexture</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tcolor<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tcolor<span class=\"token punctuation\">.</span><span class=\"token function\">setFromPixels</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tgray <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">getImageType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> OF_IMAGE_GRAYSCALE <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tgray<span class=\"token punctuation\">.</span><span class=\"token function\">setFromPixels</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofxCvHaarFinder\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"findHaarObjects(): OF_IMAGE_RGBA image type not supported\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">findHaarObjects</span><span class=\"token punctuation\">(</span>gray<span class=\"token punctuation\">,</span> minWidth<span class=\"token punctuation\">,</span> minHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxCvHaarFinder<span class=\"token operator\">::</span><span class=\"token function\">findHaarObjects</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofxCvGrayscaleImage<span class=\"token operator\">&amp;</span>  input<span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">int</span> minWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> minHeight<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">findHaarObjects</span><span class=\"token punctuation\">(</span>\n\t\tinput<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> input<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> input<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span>\n\t\tminWidth<span class=\"token punctuation\">,</span> minHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxCvHaarFinder<span class=\"token operator\">::</span><span class=\"token function\">findHaarObjects</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofxCvGrayscaleImage<span class=\"token operator\">&amp;</span>  input<span class=\"token punctuation\">,</span>\n\tofRectangle<span class=\"token operator\">&amp;</span> roi<span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">int</span> minWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> minHeight<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">findHaarObjects</span><span class=\"token punctuation\">(</span>\n\t\tinput<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> roi<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> roi<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> roi<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> roi<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span>\n\t\tminWidth<span class=\"token punctuation\">,</span> minHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">void</span> ofxCvHaarFinder<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofPushStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofEnableAlphaBlending</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofPushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">ofTranslate</span><span class=\"token punctuation\">(</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">ofNoFill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>blobs<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofDrawRectangle</span><span class=\"token punctuation\">(</span>blobs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>boundingRect<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> blobs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>boundingRect<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>\n                        blobs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>boundingRect<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> blobs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>boundingRect<span class=\"token punctuation\">.</span>height <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">ofPopMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofPopStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">int</span> ofxCvHaarFinder<span class=\"token operator\">::</span><span class=\"token function\">findHaarObjects</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofxCvGrayscaleImage<span class=\"token operator\">&amp;</span> input<span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span>\n\t<span class=\"token keyword\">int</span> minWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> minHeight<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">int</span> nHaarResults <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> USE_OLD_CV</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cascade<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>blobs<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t\tblobs<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// we make a copy of the input image here</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// because we need to equalize it.</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span>width <span class=\"token operator\">==</span> input<span class=\"token punctuation\">.</span>width <span class=\"token operator\">&amp;&amp;</span> img<span class=\"token punctuation\">.</span>height <span class=\"token operator\">==</span> input<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                img<span class=\"token punctuation\">.</span><span class=\"token function\">resetROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\timg <span class=\"token operator\">=</span> input<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t\timg<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\timg<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> input<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\timg <span class=\"token operator\">=</span> input<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\timg<span class=\"token punctuation\">.</span><span class=\"token function\">setROI</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">cvEqualizeHist</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tCvMemStorage<span class=\"token operator\">*</span> storage <span class=\"token operator\">=</span> <span class=\"token function\">cvCreateMemStorage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">/*\n\t\tAlternative modes:\n\n\t\tCV_HAAR_DO_CANNY_PRUNING\n\t\tRegions without edges are ignored.\n\n\t\tCV_HAAR_SCALE_IMAGE\n\t\tScale the image rather than the detector\n\t\t(sometimes yields speed increases).\n\n\t\tCV_HAAR_FIND_BIGGEST_OBJECT\n\t\tOnly return the largest result.\n\n\t\tCV_HAAR_DO_ROUGH_SEARCH\n\t\tWhen BIGGEST_OBJECT is enabled, stop at\n\t\tthe first scale for which multiple results\n\t\tare found.\n\t\t*/</span>\n\n\t\tCvSeq<span class=\"token operator\">*</span> haarResults <span class=\"token operator\">=</span> <span class=\"token function\">cvHaarDetectObjects</span><span class=\"token punctuation\">(</span>\n\t\t\t\timg<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cascade<span class=\"token punctuation\">,</span> storage<span class=\"token punctuation\">,</span> scaleHaar<span class=\"token punctuation\">,</span> neighbors<span class=\"token punctuation\">,</span> CV_HAAR_DO_CANNY_PRUNING<span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token function\">cvSize</span><span class=\"token punctuation\">(</span>minWidth<span class=\"token punctuation\">,</span> minHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tnHaarResults <span class=\"token operator\">=</span> haarResults<span class=\"token operator\">-</span><span class=\"token operator\">></span>total<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nHaarResults<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//ofLogNotice(\"ofxCvHaarFinder\") &lt;&lt; \"findHaarObjects(): \" &lt;&lt; i &lt;&lt; \" objects\";</span>\n\n\t\t\tofxCvBlob blob<span class=\"token punctuation\">;</span>\n\n\t\t\tCvRect<span class=\"token operator\">*</span> r <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>CvRect<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token function\">cvGetSeqElem</span><span class=\"token punctuation\">(</span>haarResults<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">float</span> area <span class=\"token operator\">=</span> r<span class=\"token operator\">-</span><span class=\"token operator\">></span>width <span class=\"token operator\">*</span> r<span class=\"token operator\">-</span><span class=\"token operator\">></span>height<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">float</span> length <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>r<span class=\"token operator\">-</span><span class=\"token operator\">></span>width <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>r<span class=\"token operator\">-</span><span class=\"token operator\">></span>height <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">float</span> centerx\t<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>r<span class=\"token operator\">-</span><span class=\"token operator\">></span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>r<span class=\"token operator\">-</span><span class=\"token operator\">></span>width <span class=\"token operator\">/</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">float</span> centery\t<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>r<span class=\"token operator\">-</span><span class=\"token operator\">></span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>r<span class=\"token operator\">-</span><span class=\"token operator\">></span>height <span class=\"token operator\">/</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tblob<span class=\"token punctuation\">.</span>area <span class=\"token operator\">=</span> <span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>area<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tblob<span class=\"token punctuation\">.</span>hole <span class=\"token operator\">=</span> area <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\tblob<span class=\"token punctuation\">.</span>length\t<span class=\"token operator\">=</span> length<span class=\"token punctuation\">;</span>\n\t\t\tblob<span class=\"token punctuation\">.</span>boundingRect<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> r<span class=\"token operator\">-</span><span class=\"token operator\">></span>x <span class=\"token operator\">+</span> x<span class=\"token punctuation\">;</span>\n\t\t\tblob<span class=\"token punctuation\">.</span>boundingRect<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> r<span class=\"token operator\">-</span><span class=\"token operator\">></span>y <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n\t\t\tblob<span class=\"token punctuation\">.</span>boundingRect<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> r<span class=\"token operator\">-</span><span class=\"token operator\">></span>width<span class=\"token punctuation\">;</span>\n\t\t\tblob<span class=\"token punctuation\">.</span>boundingRect<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> r<span class=\"token operator\">-</span><span class=\"token operator\">></span>height<span class=\"token punctuation\">;</span>\n\t\t\tblob<span class=\"token punctuation\">.</span>centroid<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> centerx<span class=\"token punctuation\">;</span>\n\t\t\tblob<span class=\"token punctuation\">.</span>centroid<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> centery<span class=\"token punctuation\">;</span>\n\t\t\tblob<span class=\"token punctuation\">.</span>pts<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofPoint</span><span class=\"token punctuation\">(</span>r<span class=\"token operator\">-</span><span class=\"token operator\">></span>x<span class=\"token punctuation\">,</span> r<span class=\"token operator\">-</span><span class=\"token operator\">></span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tblob<span class=\"token punctuation\">.</span>pts<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofPoint</span><span class=\"token punctuation\">(</span>r<span class=\"token operator\">-</span><span class=\"token operator\">></span>x <span class=\"token operator\">+</span> r<span class=\"token operator\">-</span><span class=\"token operator\">></span>width<span class=\"token punctuation\">,</span> r<span class=\"token operator\">-</span><span class=\"token operator\">></span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tblob<span class=\"token punctuation\">.</span>pts<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofPoint</span><span class=\"token punctuation\">(</span>r<span class=\"token operator\">-</span><span class=\"token operator\">></span>x <span class=\"token operator\">+</span> r<span class=\"token operator\">-</span><span class=\"token operator\">></span>width<span class=\"token punctuation\">,</span> r<span class=\"token operator\">-</span><span class=\"token operator\">></span>y <span class=\"token operator\">+</span> r<span class=\"token operator\">-</span><span class=\"token operator\">></span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tblob<span class=\"token punctuation\">.</span>pts<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofPoint</span><span class=\"token punctuation\">(</span>r<span class=\"token operator\">-</span><span class=\"token operator\">></span>x<span class=\"token punctuation\">,</span> r<span class=\"token operator\">-</span><span class=\"token operator\">></span>y <span class=\"token operator\">+</span> r<span class=\"token operator\">-</span><span class=\"token operator\">></span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tblobs<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// sort the pointers based on size</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> blobs<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">sort</span><span class=\"token punctuation\">(</span> blobs<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> blobs<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> sort_carea_compare <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token function\">cvReleaseMemStorage</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>storage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>blobs<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        blobs<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> cascade<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// we make a copy of the input image here</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// because we need to equalize it.</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span>width <span class=\"token operator\">==</span> input<span class=\"token punctuation\">.</span>width <span class=\"token operator\">&amp;&amp;</span> img<span class=\"token punctuation\">.</span>height <span class=\"token operator\">==</span> input<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\timg<span class=\"token punctuation\">.</span><span class=\"token function\">resetROI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\timg <span class=\"token operator\">=</span> input<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\timg<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\timg<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> input<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\timg <span class=\"token operator\">=</span> input<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\timg<span class=\"token punctuation\">.</span><span class=\"token function\">setROI</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">cvEqualizeHist</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> img<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">/*\n\tAlternative modes:\n\n\tcv::CASCADE_DO_CANNY_PRUNING\n\tRegions without edges are ignored.\n\n\tcv::CASCADE_SCALE_IMAGE\n\tScale the image rather than the detector\n\t(sometimes yields speed increases).\n\n\tcv::CASCADE_FIND_BIGGEST_OBJECT\n\tOnly return the largest result.\n\n\tcv::CASCADE_DO_ROUGH_SEARCH\n\tWhen BIGGEST_OBJECT is enabled, stop at\n\tthe first scale for which multiple results\n\tare found.\n\t*/</span>\n\n\tstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>cv<span class=\"token operator\">::</span>Rect<span class=\"token operator\">></span> haarResults<span class=\"token punctuation\">;</span>\n\tcascade<span class=\"token punctuation\">.</span><span class=\"token function\">detectMultiScale</span><span class=\"token punctuation\">(</span>cv<span class=\"token operator\">::</span><span class=\"token function\">cvarrToMat</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span><span class=\"token function\">getCvImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> haarResults<span class=\"token punctuation\">,</span> scaleHaar<span class=\"token punctuation\">,</span> neighbors<span class=\"token punctuation\">,</span> cv<span class=\"token operator\">::</span>CASCADE_DO_CANNY_PRUNING<span class=\"token punctuation\">,</span> \n\t\tcv<span class=\"token operator\">::</span><span class=\"token function\">Size</span><span class=\"token punctuation\">(</span>minWidth<span class=\"token punctuation\">,</span> minHeight<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\tnHaarResults <span class=\"token operator\">=</span> haarResults<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nHaarResults<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//ofLogNotice(\"ofxCvHaarFinder\") &lt;&lt; \"findHaarObjects(): \" &lt;&lt; i &lt;&lt; \" objects\";</span>\n\n\t\t\tofxCvBlob blob<span class=\"token punctuation\">;</span>\n\n\t\t\tcv<span class=\"token operator\">::</span>Rect r <span class=\"token operator\">=</span> haarResults<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">float</span> area <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>width <span class=\"token operator\">*</span> r<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">float</span> length <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>width <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>height <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">float</span> centerx\t<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>width <span class=\"token operator\">/</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">float</span> centery\t<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>height <span class=\"token operator\">/</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tblob<span class=\"token punctuation\">.</span>area <span class=\"token operator\">=</span> <span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>area<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tblob<span class=\"token punctuation\">.</span>hole <span class=\"token operator\">=</span> area <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\tblob<span class=\"token punctuation\">.</span>length\t<span class=\"token operator\">=</span> length<span class=\"token punctuation\">;</span>\n\t\t\tblob<span class=\"token punctuation\">.</span>boundingRect<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> x<span class=\"token punctuation\">;</span>\n\t\t\tblob<span class=\"token punctuation\">.</span>boundingRect<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n\t\t\tblob<span class=\"token punctuation\">.</span>boundingRect<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t\t\tblob<span class=\"token punctuation\">.</span>boundingRect<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\t\t\tblob<span class=\"token punctuation\">.</span>centroid<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> centerx<span class=\"token punctuation\">;</span>\n\t\t\tblob<span class=\"token punctuation\">.</span>centroid<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> centery<span class=\"token punctuation\">;</span>\n\t\t\tblob<span class=\"token punctuation\">.</span>pts<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofPoint</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tblob<span class=\"token punctuation\">.</span>pts<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofPoint</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> r<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tblob<span class=\"token punctuation\">.</span>pts<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofPoint</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> r<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> r<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tblob<span class=\"token punctuation\">.</span>pts<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofPoint</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> r<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tblobs<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// sort the pointers based on size</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> blobs<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">sort</span><span class=\"token punctuation\">(</span> blobs<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> blobs<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> sort_carea_compare <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span> </span><span class=\"token comment\" spellcheck=\"true\">// USE_OLD_CV</span>\n\t<span class=\"token keyword\">return</span> nHaarResults<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n","type":"source"}}],"fetch":[]}