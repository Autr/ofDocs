{"data":[{"page":{"entry":{"name":"ofxEmscriptenSoundStream.cpp","filename":"ofxEmscriptenSoundStream.cpp","absolute":"/Users/gilbertsinnott/Code/openFrameworks/addons/ofxEmscripten/src/ofxEmscriptenSoundStream.cpp","path":"/addons/ofxEmscripten/src/ofxEmscriptenSoundStream_cpp","route":"/addons/ofxEmscripten/src/ofxEmscriptenSoundStream.cpp","dir":"../addons/ofxEmscripten/src","ext":"cpp","type":"source","id":78,"parent":72,"breadcrumbs":[72,73,36],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">/*\n * ofxEmscriptenSoundStream.cpp\n *\n *  Created on: May 16, 2014\n *      Author: arturo\n */</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxEmscriptenSoundStream.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"html5audio.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofBaseApp.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofLog.h\"</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofxEmscriptenAudioContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nofxEmscriptenSoundStream<span class=\"token operator\">::</span><span class=\"token function\">ofxEmscriptenSoundStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">:</span><span class=\"token function\">context</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofxEmscriptenAudioContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">tickCount</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\nofxEmscriptenSoundStream<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofxEmscriptenSoundStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>ofSoundDevice<span class=\"token operator\">></span> ofxEmscriptenSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getDeviceList</span><span class=\"token punctuation\">(</span>ofSoundDevice<span class=\"token operator\">::</span>Api api<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ofSoundStream::getDeviceList() not supported in emscripten\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> vector<span class=\"token operator\">&lt;</span>ofSoundDevice<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofxEmscriptenSoundStream<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofSoundStreamSettings <span class=\"token operator\">&amp;</span> settings<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tinbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>bufferSize<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>numInputChannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\toutbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>bufferSize<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>numOutputChannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>settings <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">;</span>\n\tstream <span class=\"token operator\">=</span> <span class=\"token function\">html5audio_stream_create</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span>settings<span class=\"token punctuation\">.</span>bufferSize<span class=\"token punctuation\">,</span>settings<span class=\"token punctuation\">.</span>numInputChannels<span class=\"token punctuation\">,</span>settings<span class=\"token punctuation\">.</span>numOutputChannels<span class=\"token punctuation\">,</span>inbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">getBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>outbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">getBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>audio_cb<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxEmscriptenSoundStream<span class=\"token operator\">::</span><span class=\"token function\">setInput</span><span class=\"token punctuation\">(</span>ofBaseSoundInput<span class=\"token operator\">*</span> soundInput<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>settings<span class=\"token punctuation\">.</span><span class=\"token function\">setInListener</span><span class=\"token punctuation\">(</span>soundInput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxEmscriptenSoundStream<span class=\"token operator\">::</span><span class=\"token function\">setOutput</span><span class=\"token punctuation\">(</span>ofBaseSoundOutput<span class=\"token operator\">*</span> soundOutput<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>settings<span class=\"token punctuation\">.</span><span class=\"token function\">setOutListener</span><span class=\"token punctuation\">(</span>soundOutput<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\nofSoundDevice ofxEmscriptenSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getInDevice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofSoundDevice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofSoundDevice ofxEmscriptenSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getOutDevice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofSoundDevice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxEmscriptenSoundStream<span class=\"token operator\">::</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">html5audio_context_start</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxEmscriptenSoundStream<span class=\"token operator\">::</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">html5audio_context_stop</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxEmscriptenSoundStream<span class=\"token operator\">::</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tstream <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">html5audio_stream_free</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nuint64_t ofxEmscriptenSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getTickCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> tickCount<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxEmscriptenSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getNumInputChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> settings<span class=\"token punctuation\">.</span>numInputChannels<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxEmscriptenSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getNumOutputChannels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> settings<span class=\"token punctuation\">.</span>numOutputChannels<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxEmscriptenSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getSampleRate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">html5audio_context_samplerate</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxEmscriptenSoundStream<span class=\"token operator\">::</span><span class=\"token function\">getBufferSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> settings<span class=\"token punctuation\">.</span>bufferSize<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxEmscriptenSoundStream<span class=\"token operator\">::</span><span class=\"token function\">audio_cb</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> bufferSize<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> inputChannels<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> outputChannels<span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> userData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofxEmscriptenSoundStream <span class=\"token operator\">*</span> stream <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ofxEmscriptenSoundStream<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> userData<span class=\"token punctuation\">;</span>\n\tstream<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">audioCB</span><span class=\"token punctuation\">(</span>bufferSize<span class=\"token punctuation\">,</span>inputChannels<span class=\"token punctuation\">,</span>outputChannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxEmscriptenSoundStream<span class=\"token operator\">::</span><span class=\"token function\">audioCB</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> bufferSize<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> inputChannels<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> outputChannels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>inputChannels<span class=\"token operator\">></span><span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> settings<span class=\"token punctuation\">.</span>inCallback<span class=\"token punctuation\">)</span> settings<span class=\"token punctuation\">.</span><span class=\"token function\">inCallback</span><span class=\"token punctuation\">(</span>inbuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>outputChannels<span class=\"token operator\">></span><span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> settings<span class=\"token punctuation\">.</span>outCallback<span class=\"token punctuation\">)</span> settings<span class=\"token punctuation\">.</span><span class=\"token function\">outCallback</span><span class=\"token punctuation\">(</span>outbuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ttickCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n","type":"source"}}],"fetch":[]}