{"data":[{"page":{"entry":{"name":"ofBaseDraws","filename":"ofBaseDraws.markdown","absolute":"/Users/gilbertsinnott/Code/openFrameworks/ofSite/documentation/types/ofBaseDraws.markdown","path":"/documentation/types/ofBaseDraws","route":"/documentation/types/ofBaseDraws.markdown","dir":"../ofSite/documentation/types","ext":"markdown","type":"page","id":2165,"parent":2157,"breadcrumbs":[2157,1718],"siblings":[],"translations":{}},"description":{"short":"","full":"<h1></h1>\n"},"config":{"visible":"True","advanced":"True","istemplated":"False","extends":null},"methods":[{"syntax":"draw(&point)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span>point","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Draw at a position at the native size.</p>\n<p>Native size is determined by getWidth() and getHeight().</p>\n<p><strong>Parameters:</strong></p>\n<p>point Draw position.</p>\n","desc":""},{"syntax":"draw(&point, w, h)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span>point<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h","access":"public","version_started":"0071","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Draw at a position.</p>\n<p><strong>Parameters:</strong></p>\n<p>point Draw position.</p>\n<p>w Draw width.</p>\n<p>h Draw height.</p>\n","desc":""},{"syntax":"draw(&rect)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofRectangle <span class=\"token operator\">&amp;</span>rect","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Draw at a position and size specified by a rectangle.</p>\n<p><strong>Parameters:</strong></p>\n<p>rect Draw position and size.</p>\n","desc":""},{"syntax":"draw(x, y)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y","access":"public","version_started":"006","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Draw at a position at the native size.</p>\n<p>Native size is determined by getWidth() and getHeight().</p>\n<p><strong>Parameters:</strong></p>\n<p>x Draw position on the x axis.</p>\n<p>y Draw position on the y axis.</p>\n","desc":""},{"syntax":"draw(x, y, w, h)","name":"draw","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h","access":"public","version_started":"006","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Draw at a position with the specified size.</p>\n<p><strong>Parameters:</strong></p>\n<p>x Draw position on the x axis.</p>\n<p>y Draw position on the y axis.</p>\n<p>w Draw width.</p>\n<p>h Draw height.</p>\n","desc":""},{"syntax":"getHeight()","name":"getHeight","returns":"float","returns_description":null,"parameters":null,"access":"public","version_started":"006","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Get the height.</p>\n<p><strong>Returns</strong>: the height.</p>\n","desc":""},{"syntax":"getWidth()","name":"getWidth","returns":"float","returns_description":null,"parameters":null,"access":"public","version_started":"006","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Get the width.</p>\n<p><strong>Returns</strong>: the width.</p>\n","desc":""},{"syntax":"resetAnchor()","name":"resetAnchor","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"006","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Reset the anchor point to (0, 0).</p>\n","desc":""},{"syntax":"setAnchorPercent(xPct, yPct)","name":"setAnchorPercent","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> xPct<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> yPct","access":"public","version_started":"006","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Set the anchor point the item is drawn around as a percentage.</p>\n<p>This can be useful if you want to rotate an image around a particular\npoint.</p>\n<p><strong>Parameters:</strong></p>\n<p>xPct Horizontal position as a percentage (0 - 1).</p>\n<p>yPct Vertical position as a percentage (0 - 1).</p>\n","desc":""},{"syntax":"setAnchorPoint(x, y)","name":"setAnchorPoint","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Set the anchor point the item is drawn around in pixels.</p>\n<p>This can be useful if you want to rotate an image around a particular\npoint.</p>\n<p><strong>Parameters:</strong></p>\n<p>x Horizontal texture position in pixels.</p>\n<p>y Vertical texture position in pixels.</p>\n","desc":""},{"syntax":"~ofBaseDraws()","name":"~ofBaseDraws","returns":null,"returns_description":null,"parameters":null,"access":"public","version_started":"006","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Destroy the abstract object.</p>\n","desc":""},{}],"document":"<p>#class ofBaseDraws</p>\n<p>&lt;!--\n<em>visible: True</em>\n<em>advanced: True</em>\n<em>istemplated: False</em>\n_extends: _\n--&gt;</p>\n<p>##InlineDescription</p>\n<p>##Description</p>\n<p>##Methods</p>\n<p>###void draw(&amp;point)</p>\n<p>&lt;!--\n<em>syntax: draw(&amp;point)</em>\n<em>name: draw</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const glm::vec2 &amp;point</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Draw at a position at the native size.</p>\n<p>Native size is determined by getWidth() and getHeight().</p>\n<p><strong>Parameters:</strong></p>\n<p>point Draw position.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void draw(&amp;point, w, h)</p>\n<p>&lt;!--\n<em>syntax: draw(&amp;point, w, h)</em>\n<em>name: draw</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const glm::vec2 &amp;point, float w, float h</em>\n<em>access: public</em>\n<em>version_started: 0071</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Draw at a position.</p>\n<p><strong>Parameters:</strong></p>\n<p>point Draw position.</p>\n<p>w Draw width.</p>\n<p>h Draw height.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void draw(&amp;rect)</p>\n<p>&lt;!--\n<em>syntax: draw(&amp;rect)</em>\n<em>name: draw</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: const ofRectangle &amp;rect</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Draw at a position and size specified by a rectangle.</p>\n<p><strong>Parameters:</strong></p>\n<p>rect Draw position and size.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void draw(x, y)</p>\n<p>&lt;!--\n<em>syntax: draw(x, y)</em>\n<em>name: draw</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float x, float y</em>\n<em>access: public</em>\n<em>version_started: 006</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Draw at a position at the native size.</p>\n<p>Native size is determined by getWidth() and getHeight().</p>\n<p><strong>Parameters:</strong></p>\n<p>x Draw position on the x axis.</p>\n<p>y Draw position on the y axis.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void draw(x, y, w, h)</p>\n<p>&lt;!--\n<em>syntax: draw(x, y, w, h)</em>\n<em>name: draw</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float x, float y, float w, float h</em>\n<em>access: public</em>\n<em>version_started: 006</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Draw at a position with the specified size.</p>\n<p><strong>Parameters:</strong></p>\n<p>x Draw position on the x axis.</p>\n<p>y Draw position on the y axis.</p>\n<p>w Draw width.</p>\n<p>h Draw height.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###float getHeight()</p>\n<p>&lt;!--\n<em>syntax: getHeight()</em>\n<em>name: getHeight</em>\n<em>returns: float</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 006</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Get the height.</p>\n<p><strong>Returns</strong>: the height.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###float getWidth()</p>\n<p>&lt;!--\n<em>syntax: getWidth()</em>\n<em>name: getWidth</em>\n<em>returns: float</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 006</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Get the width.</p>\n<p><strong>Returns</strong>: the width.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void resetAnchor()</p>\n<p>&lt;!--\n<em>syntax: resetAnchor()</em>\n<em>name: resetAnchor</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 006</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Reset the anchor point to (0, 0).</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setAnchorPercent(xPct, yPct)</p>\n<p>&lt;!--\n<em>syntax: setAnchorPercent(xPct, yPct)</em>\n<em>name: setAnchorPercent</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float xPct, float yPct</em>\n<em>access: public</em>\n<em>version_started: 006</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Set the anchor point the item is drawn around as a percentage.</p>\n<p>This can be useful if you want to rotate an image around a particular\npoint.</p>\n<p><strong>Parameters:</strong></p>\n<p>xPct Horizontal position as a percentage (0 - 1).</p>\n<p>yPct Vertical position as a percentage (0 - 1).</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setAnchorPoint(x, y)</p>\n<p>&lt;!--\n<em>syntax: setAnchorPoint(x, y)</em>\n<em>name: setAnchorPoint</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float x, float y</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Set the anchor point the item is drawn around in pixels.</p>\n<p>This can be useful if you want to rotate an image around a particular\npoint.</p>\n<p><strong>Parameters:</strong></p>\n<p>x Horizontal texture position in pixels.</p>\n<p>y Vertical texture position in pixels.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<h3>~ofBaseDraws()</h3>\n<p>&lt;!--\n<em>syntax: ~ofBaseDraws()</em>\n<em>name: ~ofBaseDraws</em>\n_returns: _\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 006</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Destroy the abstract object.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>##Variables</p>\n","raw":"#class ofBaseDraws\n\n\n<!--\n_visible: True_\n_advanced: True_\n_istemplated: False_\n_extends: _\n-->\n\n##InlineDescription\n\n\n\n\n\n\n##Description\n\n\n\n\n\n##Methods\n\n\n\n###void draw(&point)\n\n<!--\n_syntax: draw(&point)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: const glm::vec2 &point_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nDraw at a position at the native size.\n\nNative size is determined by getWidth() and getHeight().\n\n\n**Parameters:**\n\npoint Draw position.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void draw(&point, w, h)\n\n<!--\n_syntax: draw(&point, w, h)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: const glm::vec2 &point, float w, float h_\n_access: public_\n_version_started: 0071_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nDraw at a position.\n\n\n**Parameters:**\n\npoint Draw position.\n\nw Draw width.\n\nh Draw height.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void draw(&rect)\n\n<!--\n_syntax: draw(&rect)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: const ofRectangle &rect_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nDraw at a position and size specified by a rectangle.\n\n\n**Parameters:**\n\nrect Draw position and size.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void draw(x, y)\n\n<!--\n_syntax: draw(x, y)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: float x, float y_\n_access: public_\n_version_started: 006_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nDraw at a position at the native size.\n\nNative size is determined by getWidth() and getHeight().\n\n\n**Parameters:**\n\nx Draw position on the x axis.\n\ny Draw position on the y axis.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void draw(x, y, w, h)\n\n<!--\n_syntax: draw(x, y, w, h)_\n_name: draw_\n_returns: void_\n_returns_description: _\n_parameters: float x, float y, float w, float h_\n_access: public_\n_version_started: 006_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nDraw at a position with the specified size.\n\n\n**Parameters:**\n\nx Draw position on the x axis.\n\ny Draw position on the y axis.\n\nw Draw width.\n\nh Draw height.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float getHeight()\n\n<!--\n_syntax: getHeight()_\n_name: getHeight_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 006_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nGet the height.\n\n**Returns**: the height.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float getWidth()\n\n<!--\n_syntax: getWidth()_\n_name: getWidth_\n_returns: float_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 006_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nGet the width.\n\n**Returns**: the width.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void resetAnchor()\n\n<!--\n_syntax: resetAnchor()_\n_name: resetAnchor_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 006_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nReset the anchor point to (0, 0).\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setAnchorPercent(xPct, yPct)\n\n<!--\n_syntax: setAnchorPercent(xPct, yPct)_\n_name: setAnchorPercent_\n_returns: void_\n_returns_description: _\n_parameters: float xPct, float yPct_\n_access: public_\n_version_started: 006_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nSet the anchor point the item is drawn around as a percentage.\n\nThis can be useful if you want to rotate an image around a particular\npoint.\n\n\n**Parameters:**\n\nxPct Horizontal position as a percentage (0 - 1).\n\nyPct Vertical position as a percentage (0 - 1).\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setAnchorPoint(x, y)\n\n<!--\n_syntax: setAnchorPoint(x, y)_\n_name: setAnchorPoint_\n_returns: void_\n_returns_description: _\n_parameters: float x, float y_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nSet the anchor point the item is drawn around in pixels.\n\nThis can be useful if you want to rotate an image around a particular\npoint.\n\n\n**Parameters:**\n\nx Horizontal texture position in pixels.\n\ny Vertical texture position in pixels.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n### ~ofBaseDraws()\n\n<!--\n_syntax: ~ofBaseDraws()_\n_name: ~ofBaseDraws_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 006_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nDestroy the abstract object.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n##Variables\n\n\n\n","type":"page"}}],"fetch":[]}