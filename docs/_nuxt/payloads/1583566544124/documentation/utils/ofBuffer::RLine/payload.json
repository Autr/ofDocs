{"data":[{"page":{"entry":{"name":"ofBuffer::RLine","filename":"ofBuffer::RLine.markdown","absolute":"/Users/gilbertsinnott/Code/openFrameworks/ofSite/documentation/utils/ofBuffer::RLine.markdown","path":"/documentation/utils/ofBuffer::RLine","route":"/documentation/utils/ofBuffer::RLine.markdown","dir":"../ofSite/documentation/utils","ext":"markdown","type":"page","id":2201,"parent":2196,"breadcrumbs":[2196,1718],"siblings":[],"translations":{}},"description":{"short":"<p>A line of text in the buffer.</p>\n","full":"<h1></h1>\n"},"config":{},"methods":[{"short":"","desc":""},{"syntax":"asString()","name":"asString","returns":"const string &","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"empty()","name":"empty","returns":"bool","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Is this line empty? (aka an empty string &quot;&quot;)</p>\n","desc":""},{"syntax":"operator!=(&rhs)","name":"operator!=","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofBuffer<span class=\"token operator\">::</span>RLine <span class=\"token operator\">&amp;</span>rhs","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"operator*()","name":"operator*","returns":"const string &","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"operator++()","name":"operator++","returns":"ofBuffer::RLine &","returns_description":null,"parameters":null,"access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Increment to the next line.</p>\n","desc":""},{"syntax":"operator++(int)","name":"operator++","returns":"ofBuffer::RLine","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> ","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Increment to a number of lines.</p>\n","desc":""},{"short":"","desc":""},{"syntax":"operator==(&rhs)","name":"operator==","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofBuffer<span class=\"token operator\">::</span>RLine <span class=\"token operator\">&amp;</span>rhs","access":"public","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"short":"","desc":""},{"short":"","desc":""},{"short":"","desc":""},{"name":"line","type":"string","access":"private","version_started":"0.10.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{}],"document":"<p>#class ofBuffer::RLine</p>\n<p>&lt;!--\n<em>visible: True</em>\n<em>advanced: True</em>\n<em>istemplated: False</em>\n<em>extends: std::iterator&lt;std::forward_iterator_tag, Line&gt;</em>\n--&gt;</p>\n<p>##InlineDescription</p>\n<p>A line of text in the buffer.</p>\n<p>##Description</p>\n<p>##Methods</p>\n<h3>RLine(_begin, _end)</h3>\n<p>&lt;!--\n_syntax: RLine(_begin, <em>end)</em>\n<em>name: RLine</em>\n_returns: _\n_returns_description: _\n_parameters: vector&lt; char &gt;::reverse_iterator _begin, vector&lt; char &gt;::reverse_iterator <em>end</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###const string &amp; asString()</p>\n<p>&lt;!--\n<em>syntax: asString()</em>\n<em>name: asString</em>\n<em>returns: const string &amp;</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool empty()</p>\n<p>&lt;!--\n<em>syntax: empty()</em>\n<em>name: empty</em>\n<em>returns: bool</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Is this line empty? (aka an empty string &quot;&quot;)</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool operator!=(&amp;rhs)</p>\n<p>&lt;!--\n<em>syntax: operator!=(&amp;rhs)</em>\n<em>name: operator!=</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: const ofBuffer::RLine &amp;rhs</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###const string &amp; operator*()</p>\n<p>&lt;!--\n<em>syntax: operator*()</em>\n<em>name: operator*</em>\n<em>returns: const string &amp;</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofBuffer::RLine &amp; operator++()</p>\n<p>&lt;!--\n<em>syntax: operator++()</em>\n<em>name: operator++</em>\n<em>returns: ofBuffer::RLine &amp;</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Increment to the next line.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofBuffer::RLine operator++(int)</p>\n<p>&lt;!--\n<em>syntax: operator++(int)</em>\n<em>name: operator++</em>\n<em>returns: ofBuffer::RLine</em>\n_returns_description: _\n_parameters: int _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Increment to a number of lines.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###const string * operator-&gt;()</p>\n<p>&lt;!--\n<em>syntax: operator-&gt;()</em>\n<em>name: operator-&gt;</em>\n<em>returns: const string *</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool operator==(&amp;rhs)</p>\n<p>&lt;!--\n<em>syntax: operator==(&amp;rhs)</em>\n<em>name: operator==</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: const ofBuffer::RLine &amp;rhs</em>\n<em>access: public</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>##Variables</p>\n<p>###vector&lt; char &gt;::reverse_iterator _current</p>\n<p>&lt;!--\n_name: <em>current</em>\n<em>type: vector&lt; char &gt;::reverse_iterator</em>\n<em>access: private</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###vector&lt; char &gt;::reverse_iterator _rbegin</p>\n<p>&lt;!--\n_name: <em>rbegin</em>\n<em>type: vector&lt; char &gt;::reverse_iterator</em>\n<em>access: private</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###vector&lt; char &gt;::reverse_iterator _rend</p>\n<p>&lt;!--\n_name: <em>rend</em>\n<em>type: vector&lt; char &gt;::reverse_iterator</em>\n<em>access: private</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###string line</p>\n<p>&lt;!--\n<em>name: line</em>\n<em>type: string</em>\n<em>access: private</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n","raw":"#class ofBuffer::RLine\n\n\n<!--\n_visible: True_\n_advanced: True_\n_istemplated: False_\n_extends: std::iterator<std::forward_iterator_tag, Line>_\n-->\n\n##InlineDescription\n\nA line of text in the buffer.\n\n\n\n\n\n\n##Description\n\n\n\n\n\n##Methods\n\n\n\n### RLine(_begin, _end)\n\n<!--\n_syntax: RLine(_begin, _end)_\n_name: RLine_\n_returns: _\n_returns_description: _\n_parameters: vector< char >::reverse_iterator _begin, vector< char >::reverse_iterator _end_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###const string & asString()\n\n<!--\n_syntax: asString()_\n_name: asString_\n_returns: const string &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool empty()\n\n<!--\n_syntax: empty()_\n_name: empty_\n_returns: bool_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nIs this line empty? (aka an empty string \"\")\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool operator!=(&rhs)\n\n<!--\n_syntax: operator!=(&rhs)_\n_name: operator!=_\n_returns: bool_\n_returns_description: _\n_parameters: const ofBuffer::RLine &rhs_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###const string & operator*()\n\n<!--\n_syntax: operator*()_\n_name: operator*_\n_returns: const string &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofBuffer::RLine & operator++()\n\n<!--\n_syntax: operator++()_\n_name: operator++_\n_returns: ofBuffer::RLine &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nIncrement to the next line.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofBuffer::RLine operator++(int)\n\n<!--\n_syntax: operator++(int)_\n_name: operator++_\n_returns: ofBuffer::RLine_\n_returns_description: _\n_parameters: int _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nIncrement to a number of lines.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###const string * operator->()\n\n<!--\n_syntax: operator->()_\n_name: operator->_\n_returns: const string *_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool operator==(&rhs)\n\n<!--\n_syntax: operator==(&rhs)_\n_name: operator==_\n_returns: bool_\n_returns_description: _\n_parameters: const ofBuffer::RLine &rhs_\n_access: public_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n##Variables\n\n\n\n###vector< char >::reverse_iterator _current\n\n<!--\n_name: _current_\n_type: vector< char >::reverse_iterator_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###vector< char >::reverse_iterator _rbegin\n\n<!--\n_name: _rbegin_\n_type: vector< char >::reverse_iterator_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###vector< char >::reverse_iterator _rend\n\n<!--\n_name: _rend_\n_type: vector< char >::reverse_iterator_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###string line\n\n<!--\n_name: line_\n_type: string_\n_access: private_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page"}}],"fetch":[]}