{"data":[{"page":{"entry":{"name":"ofTextureData","filename":"ofTextureData.markdown","absolute":"/Users/gilbertsinnott/Code/openFrameworks/ofSite/documentation/gl/ofTextureData.markdown","path":"/documentation/gl/ofTextureData","route":"/documentation/gl/ofTextureData.markdown","dir":"../ofSite/documentation/gl","ext":"markdown","type":"page","id":1972,"parent":1942,"breadcrumbs":[1942,1718],"siblings":[],"translations":{}},"description":{"short":"<p>\\advanced\nInternal texture data structure.</p>\n<p>Used by ofTexture internally. You won't need to work with this in most cases.</p>\n","full":"<h1></h1>\n"},"config":{"visible":"True","advanced":"False","istemplated":"False","extends":null},"methods":[{"syntax":"ofTextureData()","name":"ofTextureData","returns":null,"returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"short":"<p>&lt; Optional alpha mask to bind</p>\n","desc":""},{"name":"bAllocated","type":"bool","access":"public","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"<p>&lt; Has the texture been allocated?</p>\n","desc":""},{"name":"bFlipTexture","type":"bool","access":"public","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"<p>&lt; Should the texture be flipped vertically?</p>\n","desc":""},{"name":"bUseExternalTextureID","type":"bool","access":"public","version_started":"0072","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"<p>&lt; Are we using an external texture ID?</p>\n","desc":""},{"name":"bufferId","type":"unsigned int","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"<p>&lt; Optionally if the texture is backed by a buffer so we can bind it</p>\n","desc":""},{"name":"compressionType","type":"ofTexCompression","access":"public","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"<p>&lt; Texture compression type.</p>\n","desc":""},{"name":"glInternalFormat","type":"int","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"<p>&lt; GL internal format, e.g. GL_RGB8.\n&lt;\n<strong>See also</strong>: http://www.opengl.org/wiki/Image_Format</p>\n","desc":""},{"name":"hasMipmap","type":"bool","access":"private","version_started":"0.9.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"<p>&lt; True if mipmap has been generated for this texture, false by default.</p>\n","desc":""},{"name":"height","type":"float","access":"public","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"<p>&lt; Texture display size.</p>\n","desc":""},{"name":"magFilter","type":"GLint","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"<p>&lt; Filter to use for magnification (enlargement).</p>\n","desc":""},{"name":"minFilter","type":"GLint","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"<p>&lt; Filter to use for minification (reduction).</p>\n","desc":""},{"name":"tex_h","type":"float","access":"public","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"<p>&lt; Texture height (in pixels).</p>\n","desc":""},{"name":"tex_t","type":"float","access":"public","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"<p>&lt; Texture horizontal coordinate, ratio of width to display width.</p>\n","desc":""},{"name":"tex_u","type":"float","access":"public","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"<p>&lt; Texture vertical coordinate, ratio of height to display height.</p>\n","desc":""},{"name":"tex_w","type":"float","access":"public","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"<p>&lt; Texture width (in pixels).</p>\n","desc":""},{"name":"textureID","type":"unsigned int","access":"public","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"<p>&lt; GL internal texture ID.</p>\n","desc":""},{"name":"textureMatrix","type":"ofMatrix4x4","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"<p>&lt; For required transformations.</p>\n","desc":""},{"name":"textureTarget","type":"int","access":"public","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"<p>&lt; GL texture type, either GL_TEXTURE_2D or\n&lt; GL_TEXTURE_RECTANGLE_ARB.</p>\n","desc":""},{"name":"useTextureMatrix","type":"bool","access":"public","version_started":"0073","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"<p>&lt; Apply the transformation matrix?</p>\n","desc":""},{"name":"width","type":"float","access":"public","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"<p>&lt; Texture display size.</p>\n","desc":""},{"name":"wrapModeHorizontal","type":"GLint","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"<p>&lt; How will the texture wrap around horizontally?</p>\n","desc":""},{"name":"wrapModeVertical","type":"GLint","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"<p>&lt; How will the texture wrap around vertically?</p>\n","desc":""},{}],"document":"<p>#class ofTextureData</p>\n<p>&lt;!--\n<em>visible: True</em>\n<em>advanced: False</em>\n<em>istemplated: False</em>\n_extends: _\n--&gt;</p>\n<p>##InlineDescription</p>\n<p>\\advanced\nInternal texture data structure.</p>\n<p>Used by ofTexture internally. You won't need to work with this in most cases.</p>\n<p>##Description</p>\n<p>##Methods</p>\n<h3>ofTextureData()</h3>\n<p>&lt;!--\n<em>syntax: ofTextureData()</em>\n<em>name: ofTextureData</em>\n_returns: _\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>##Variables</p>\n<p>###shared_ptr&lt; ofTexture &gt; alphaMask</p>\n<p>&lt;!--\n<em>name: alphaMask</em>\n<em>type: shared_ptr&lt; ofTexture &gt;</em>\n<em>access: private</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>&lt; Optional alpha mask to bind</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool bAllocated</p>\n<p>&lt;!--\n<em>name: bAllocated</em>\n<em>type: bool</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>&lt; Has the texture been allocated?</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool bFlipTexture</p>\n<p>&lt;!--\n<em>name: bFlipTexture</em>\n<em>type: bool</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>&lt; Should the texture be flipped vertically?</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool bUseExternalTextureID</p>\n<p>&lt;!--\n<em>name: bUseExternalTextureID</em>\n<em>type: bool</em>\n<em>access: public</em>\n<em>version_started: 0072</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>&lt; Are we using an external texture ID?</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###unsigned int bufferId</p>\n<p>&lt;!--\n<em>name: bufferId</em>\n<em>type: unsigned int</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>&lt; Optionally if the texture is backed by a buffer so we can bind it</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofTexCompression compressionType</p>\n<p>&lt;!--\n<em>name: compressionType</em>\n<em>type: ofTexCompression</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>&lt; Texture compression type.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###int glInternalFormat</p>\n<p>&lt;!--\n<em>name: glInternalFormat</em>\n<em>type: int</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>&lt; GL internal format, e.g. GL_RGB8.\n&lt;\n<strong>See also</strong>: http://www.opengl.org/wiki/Image_Format</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool hasMipmap</p>\n<p>&lt;!--\n<em>name: hasMipmap</em>\n<em>type: bool</em>\n<em>access: private</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>&lt; True if mipmap has been generated for this texture, false by default.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###float height</p>\n<p>&lt;!--\n<em>name: height</em>\n<em>type: float</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>&lt; Texture display size.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###GLint magFilter</p>\n<p>&lt;!--\n<em>name: magFilter</em>\n<em>type: GLint</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>&lt; Filter to use for magnification (enlargement).</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###GLint minFilter</p>\n<p>&lt;!--\n<em>name: minFilter</em>\n<em>type: GLint</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>&lt; Filter to use for minification (reduction).</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###float tex_h</p>\n<p>&lt;!--\n<em>name: tex_h</em>\n<em>type: float</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>&lt; Texture height (in pixels).</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###float tex_t</p>\n<p>&lt;!--\n<em>name: tex_t</em>\n<em>type: float</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>&lt; Texture horizontal coordinate, ratio of width to display width.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###float tex_u</p>\n<p>&lt;!--\n<em>name: tex_u</em>\n<em>type: float</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>&lt; Texture vertical coordinate, ratio of height to display height.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###float tex_w</p>\n<p>&lt;!--\n<em>name: tex_w</em>\n<em>type: float</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>&lt; Texture width (in pixels).</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###unsigned int textureID</p>\n<p>&lt;!--\n<em>name: textureID</em>\n<em>type: unsigned int</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>&lt; GL internal texture ID.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofMatrix4x4 textureMatrix</p>\n<p>&lt;!--\n<em>name: textureMatrix</em>\n<em>type: ofMatrix4x4</em>\n<em>access: public</em>\n<em>version_started: 0073</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>&lt; For required transformations.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###int textureTarget</p>\n<p>&lt;!--\n<em>name: textureTarget</em>\n<em>type: int</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>&lt; GL texture type, either GL_TEXTURE_2D or\n&lt; GL_TEXTURE_RECTANGLE_ARB.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool useTextureMatrix</p>\n<p>&lt;!--\n<em>name: useTextureMatrix</em>\n<em>type: bool</em>\n<em>access: public</em>\n<em>version_started: 0073</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>&lt; Apply the transformation matrix?</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###float width</p>\n<p>&lt;!--\n<em>name: width</em>\n<em>type: float</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>&lt; Texture display size.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###GLint wrapModeHorizontal</p>\n<p>&lt;!--\n<em>name: wrapModeHorizontal</em>\n<em>type: GLint</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>&lt; How will the texture wrap around horizontally?</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###GLint wrapModeVertical</p>\n<p>&lt;!--\n<em>name: wrapModeVertical</em>\n<em>type: GLint</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>&lt; How will the texture wrap around vertically?</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n","raw":"#class ofTextureData\n\n\n<!--\n_visible: True_\n_advanced: False_\n_istemplated: False_\n_extends: _\n-->\n\n##InlineDescription\n\n\n\\advanced\nInternal texture data structure.\n\nUsed by ofTexture internally. You won't need to work with this in most cases.\n\n\n\n\n\n##Description\n\n\n\n\n\n##Methods\n\n\n\n### ofTextureData()\n\n<!--\n_syntax: ofTextureData()_\n_name: ofTextureData_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n##Variables\n\n\n\n###shared_ptr< ofTexture > alphaMask\n\n<!--\n_name: alphaMask_\n_type: shared_ptr< ofTexture >_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< Optional alpha mask to bind\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool bAllocated\n\n<!--\n_name: bAllocated_\n_type: bool_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< Has the texture been allocated?\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool bFlipTexture\n\n<!--\n_name: bFlipTexture_\n_type: bool_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< Should the texture be flipped vertically?\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool bUseExternalTextureID\n\n<!--\n_name: bUseExternalTextureID_\n_type: bool_\n_access: public_\n_version_started: 0072_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< Are we using an external texture ID?\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###unsigned int bufferId\n\n<!--\n_name: bufferId_\n_type: unsigned int_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< Optionally if the texture is backed by a buffer so we can bind it\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofTexCompression compressionType\n\n<!--\n_name: compressionType_\n_type: ofTexCompression_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< Texture compression type.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int glInternalFormat\n\n<!--\n_name: glInternalFormat_\n_type: int_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< GL internal format, e.g. GL_RGB8.\n<\n**See also**: http://www.opengl.org/wiki/Image_Format\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool hasMipmap\n\n<!--\n_name: hasMipmap_\n_type: bool_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< True if mipmap has been generated for this texture, false by default.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float height\n\n<!--\n_name: height_\n_type: float_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< Texture display size.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###GLint magFilter\n\n<!--\n_name: magFilter_\n_type: GLint_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< Filter to use for magnification (enlargement).\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###GLint minFilter\n\n<!--\n_name: minFilter_\n_type: GLint_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< Filter to use for minification (reduction).\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float tex_h\n\n<!--\n_name: tex_h_\n_type: float_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< Texture height (in pixels).\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float tex_t\n\n<!--\n_name: tex_t_\n_type: float_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< Texture horizontal coordinate, ratio of width to display width.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float tex_u\n\n<!--\n_name: tex_u_\n_type: float_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< Texture vertical coordinate, ratio of height to display height.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float tex_w\n\n<!--\n_name: tex_w_\n_type: float_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< Texture width (in pixels).\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###unsigned int textureID\n\n<!--\n_name: textureID_\n_type: unsigned int_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< GL internal texture ID.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofMatrix4x4 textureMatrix\n\n<!--\n_name: textureMatrix_\n_type: ofMatrix4x4_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< For required transformations.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int textureTarget\n\n<!--\n_name: textureTarget_\n_type: int_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< GL texture type, either GL_TEXTURE_2D or\n< GL_TEXTURE_RECTANGLE_ARB.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool useTextureMatrix\n\n<!--\n_name: useTextureMatrix_\n_type: bool_\n_access: public_\n_version_started: 0073_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< Apply the transformation matrix?\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float width\n\n<!--\n_name: width_\n_type: float_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< Texture display size.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###GLint wrapModeHorizontal\n\n<!--\n_name: wrapModeHorizontal_\n_type: GLint_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< How will the texture wrap around horizontally?\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###GLint wrapModeVertical\n\n<!--\n_name: wrapModeVertical_\n_type: GLint_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n< How will the texture wrap around vertically?\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page"}}],"fetch":[]}