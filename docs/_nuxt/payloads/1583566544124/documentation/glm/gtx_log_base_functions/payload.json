{"data":[{"page":{"entry":{"name":"gtx_log_base_functions","filename":"gtx_log_base_functions.markdown","absolute":"/Users/gilbertsinnott/Code/openFrameworks/ofSite/documentation/glm/gtx_log_base_functions.markdown","path":"/documentation/glm/gtx_log_base_functions","route":"/documentation/glm/gtx_log_base_functions.markdown","dir":"../ofSite/documentation/glm","ext":"markdown","type":"page","id":2045,"parent":1985,"breadcrumbs":[1985,1718],"siblings":[],"translations":{}},"description":{},"methods":[null,{"syntax":"glm::log(&x, &base)","name":"glm::log","returns":"genType","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>base","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Logarithm for any base.\nFrom GLM_GTX_log_base.</p>\n","desc":""},{"short":"<p>Logarithm for any base.\nFrom GLM_GTX_log_base.</p>\n","desc":""},{}],"document":"<p>#functions</p>\n<p>&lt;!--\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>##Description</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###genType glm::log(&amp;x, &amp;base)</p>\n<p>&lt;!--\n<em>syntax: glm::log(&amp;x, &amp;base)</em>\n<em>name: glm::log</em>\n<em>returns: genType</em>\n_returns_description: _\n<em>parameters: const genType &amp;x, const genType &amp;base</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Logarithm for any base.\nFrom GLM_GTX_log_base.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###vecType&lt; T, P &gt; glm::sign(T, &amp;x = P, T, &amp;base = P)</p>\n<p>&lt;!--\n<em>syntax: glm::sign(T, &amp;x = P, T, &amp;base = P)</em>\n<em>name: glm::sign</em>\n<em>returns: vecType&lt; T, P &gt;</em>\n_returns_description: _\n<em>parameters: const vecType&lt; T, P &gt; &amp;x=P, const vecType&lt; T, P &gt; &amp;base=P</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Logarithm for any base.\nFrom GLM_GTX_log_base.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n","raw":"#functions\n\n\n<!--\n_visible: True_\n_advanced: False_\n-->\n\n##Description\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###genType glm::log(&x, &base)\n\n<!--\n_syntax: glm::log(&x, &base)_\n_name: glm::log_\n_returns: genType_\n_returns_description: _\n_parameters: const genType &x, const genType &base_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nLogarithm for any base.\nFrom GLM_GTX_log_base.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###vecType< T, P > glm::sign(T, &x = P, T, &base = P)\n\n<!--\n_syntax: glm::sign(T, &x = P, T, &base = P)_\n_name: glm::sign_\n_returns: vecType< T, P >_\n_returns_description: _\n_parameters: const vecType< T, P > &x=P, const vecType< T, P > &base=P_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nLogarithm for any base.\nFrom GLM_GTX_log_base.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page"}}],"fetch":[]}