{"data":[{"page":{"entry":{"name":"ofQuickTimePlayer.cpp","filename":"ofQuickTimePlayer.cpp","absolute":"/Users/gilbertsinnott/Code/openFrameworks/libs/openFrameworks/video/ofQuickTimePlayer.cpp","path":"/openframeworks/video/ofQuickTimePlayer_cpp","route":"/openframeworks/video/ofQuickTimePlayer.cpp","dir":"../libs/openFrameworks/video","ext":"cpp","type":"source","id":375,"parent":354,"breadcrumbs":[354,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofQuickTimePlayer.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofUtils.h\"</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> !defined(TARGET_LINUX) &amp;&amp; (!defined(MAC_OS_X_VERSION_10_12) || MAC_OS_X_VERSION_MAX_ALLOWED &lt; MAC_OS_X_VERSION_10_12)</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span>  OF_VIDEO_PLAYER_QUICKTIME</span>\n\n<span class=\"token keyword\">bool</span>  \t<span class=\"token function\">createMovieFromPath</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> path<span class=\"token punctuation\">,</span> Movie <span class=\"token operator\">&amp;</span>movie<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">bool</span> \t<span class=\"token function\">createMovieFromPath</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> path<span class=\"token punctuation\">,</span> Movie <span class=\"token operator\">&amp;</span>movie<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\tBoolean \tisdir\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tOSErr \t\tresult \t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tFSSpec \t\ttheFSSpec<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">short</span> \t\tactualResId \t<span class=\"token operator\">=</span> DoTheRightThing<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_WIN32</span>\n\t\tresult <span class=\"token operator\">=</span> <span class=\"token function\">NativePathNameToFSSpec</span> <span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>theFSSpec<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result <span class=\"token operator\">!=</span> noErr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimePlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"createMovieFromPath(): couldn't load movie, NativePathNameToFSSpec failed: OSErr \"</span> <span class=\"token operator\">&lt;&lt;</span> result<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OSX</span>\n\t\tFSRef \t\tfsref<span class=\"token punctuation\">;</span>\n\t\tresult <span class=\"token operator\">=</span> <span class=\"token function\">FSPathMakeRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> UInt8<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>path<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>fsref<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>isdir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimePlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"createMovieFromPath(): couldn't load movie, FSPathMakeRef failed: OSErr \"</span> <span class=\"token operator\">&lt;&lt;</span> result<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tresult <span class=\"token operator\">=</span> <span class=\"token function\">FSGetCatalogInfo</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>fsref<span class=\"token punctuation\">,</span> kFSCatInfoNone<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>theFSSpec<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimePlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"createMovieFromPath(): couldn't load movie, FSGetCatalogInfo failed: OSErr \"</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token keyword\">short</span> movieResFile<span class=\"token punctuation\">;</span>\n\tresult <span class=\"token operator\">=</span> <span class=\"token function\">OpenMovieFile</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>theFSSpec<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>movieResFile<span class=\"token punctuation\">,</span> fsRdPerm<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result <span class=\"token operator\">==</span> noErr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n\t\t<span class=\"token keyword\">short</span>   movieResID <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\tresult <span class=\"token operator\">=</span> <span class=\"token function\">NewMovieFromFile</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>movie<span class=\"token punctuation\">,</span> movieResFile<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>movieResID<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> newMovieActive<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>Boolean <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result <span class=\"token operator\">==</span> noErr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">CloseMovieFile</span> <span class=\"token punctuation\">(</span>movieResFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimePlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"createMovieFromPath(): couldn't load movie, NewMovieFromFile failed: OSErr \"</span> <span class=\"token operator\">&lt;&lt;</span> result<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimePlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"createMovieFromPath(): couldn't load movie, OpenMovieFile failed: OSErr \"</span> <span class=\"token operator\">&lt;&lt;</span> result<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">createMovieFromURL</span><span class=\"token punctuation\">(</span>string urlIn<span class=\"token punctuation\">,</span>  Movie <span class=\"token operator\">&amp;</span>movie<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> url <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>urlIn<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tHandle urlDataRef<span class=\"token punctuation\">;</span>\n\n\tOSErr err<span class=\"token punctuation\">;</span>\n\n\turlDataRef <span class=\"token operator\">=</span> <span class=\"token function\">NewHandle</span><span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span> err <span class=\"token operator\">=</span> <span class=\"token function\">MemError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> noErr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimePlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"createMovieFromURL(): couldn't create url handle from \\\"\"</span> <span class=\"token operator\">&lt;&lt;</span> urlIn <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\": OSErr \"</span> <span class=\"token operator\">&lt;&lt;</span> err<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">BlockMoveData</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>urlDataRef<span class=\"token punctuation\">,</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\terr <span class=\"token operator\">=</span> <span class=\"token function\">NewMovieFromDataRef</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>movie<span class=\"token punctuation\">,</span> newMovieActive<span class=\"token punctuation\">,</span>nil<span class=\"token punctuation\">,</span> urlDataRef<span class=\"token punctuation\">,</span> URLDataHandlerSubType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">DisposeHandle</span><span class=\"token punctuation\">(</span>urlDataRef<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err <span class=\"token operator\">!=</span> noErr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimePlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"createMovieFromURL(): couldn't load url \\\"\"</span> <span class=\"token operator\">&lt;&lt;</span> urlIn <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\": OSErr \"</span> <span class=\"token operator\">&lt;&lt;</span> err<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\nOSErr \t<span class=\"token function\">DrawCompleteProc</span><span class=\"token punctuation\">(</span>Movie theMovie<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> refCon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nOSErr \t<span class=\"token function\">DrawCompleteProc</span><span class=\"token punctuation\">(</span>Movie theMovie<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> refCon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\tofQuickTimePlayer <span class=\"token operator\">*</span> ofvp <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ofQuickTimePlayer <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>refCon<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_OSX) &amp;&amp; defined(__BIG_ENDIAN__)</span>\n\t\t<span class=\"token function\">convertPixels</span><span class=\"token punctuation\">(</span>ofvp<span class=\"token operator\">-</span><span class=\"token operator\">></span>offscreenGWorldPixels<span class=\"token punctuation\">,</span> ofvp<span class=\"token operator\">-</span><span class=\"token operator\">></span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ofvp<span class=\"token operator\">-</span><span class=\"token operator\">></span>width<span class=\"token punctuation\">,</span> ofvp<span class=\"token operator\">-</span><span class=\"token operator\">></span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\tofvp<span class=\"token operator\">-</span><span class=\"token operator\">></span>bHavePixelsChanged <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> noErr<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\nofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">ofQuickTimePlayer</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n   <span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_WIN32) || defined(TARGET_OSX)</span>\n    <span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n    \tmoviePtr\t \t\t\t\t<span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n    \tallocated \t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        offscreenGWorld\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n\n\tbLoaded \t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\twidth \t\t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\theight\t\t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tspeed \t\t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\tbStarted\t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tnFrames\t\t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tbPaused\t\t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\tcurrentLoopState\t\t\t<span class=\"token operator\">=</span> OF_LOOP_NORMAL<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\nofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofQuickTimePlayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token function\">closeMovie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">clearMemory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_PLAYER_QUICKTIME</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>allocated<span class=\"token punctuation\">)</span>\t<span class=\"token keyword\">delete</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> offscreenGWorldPixels<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>offscreenGWorld<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token function\">DisposeGWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>offscreenGWorld<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\nofPixels<span class=\"token operator\">&amp;</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> pixels<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">const</span> ofPixels<span class=\"token operator\">&amp;</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> pixels<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bLoaded <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_PLAYER_QUICKTIME</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n\t\t\t\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// is this necessary on windows with quicktime?</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OSX </span>\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">// call MoviesTask if we're not on the main thread</span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">CFRunLoopGetCurrent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token function\">CFRunLoopGetMain</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//ofLog( OF_LOG_NOTICE, \"not on the main loop, calling MoviesTask\") ;</span>\n\t\t\t\t\t<span class=\"token function\">MoviesTask</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">// on windows we always call MoviesTask</span>\n\t\t\t\t<span class=\"token function\">MoviesTask</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// ---------------------------------------------------</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// \t\ton all platforms,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// \t\tdo \"new\"ness ever time we idle...</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// \t\tbefore \"isFrameNew\" was clearning,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// \t\tpeople had issues with that...</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// \t\tand it was badly named so now, newness happens</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// \t\tper-idle not per isNew call</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// ---------------------------------------------------</span>\n\t\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bLoaded <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\tbIsFrameNew <span class=\"token operator\">=</span> bHavePixelsChanged<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bHavePixelsChanged <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tbHavePixelsChanged <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">isFrameNew</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> bIsFrameNew<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">closeMovie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">closeMovie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_PLAYER_QUICKTIME</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bLoaded <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t    <span class=\"token function\">DisposeMovie</span> <span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">DisposeMovieDrawingCompleteUPP</span><span class=\"token punctuation\">(</span>myDrawCompleteProc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tmoviePtr <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n        \n    <span class=\"token punctuation\">}</span>\n\n   \t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n    <span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n\tbLoaded <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_PLAYER_QUICKTIME</span>\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n<span class=\"token keyword\">void</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">createImgMemAndGWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tRect movieRect<span class=\"token punctuation\">;</span>\n\tmovieRect<span class=\"token punctuation\">.</span>top \t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tmovieRect<span class=\"token punctuation\">.</span>left \t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tmovieRect<span class=\"token punctuation\">.</span>bottom \t\t<span class=\"token operator\">=</span> height<span class=\"token punctuation\">;</span>\n\tmovieRect<span class=\"token punctuation\">.</span>right \t\t<span class=\"token operator\">=</span> width<span class=\"token punctuation\">;</span>\n\toffscreenGWorldPixels <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span> <span class=\"token operator\">*</span> width <span class=\"token operator\">*</span> height <span class=\"token operator\">+</span> <span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\tallocated\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">,</span>OF_IMAGE_COLOR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_OSX) &amp;&amp; defined(__BIG_ENDIAN__)</span>\n\t\t<span class=\"token function\">QTNewGWorldFromPtr</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>offscreenGWorld<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> k32ARGBPixelFormat<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>movieRect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>offscreenGWorldPixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span> <span class=\"token operator\">*</span> width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t<span class=\"token function\">QTNewGWorldFromPtr</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>offscreenGWorld<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> k24RGBPixelFormat<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>movieRect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span> <span class=\"token operator\">*</span> width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token function\">LockPixels</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetGWorldPixMap</span><span class=\"token punctuation\">(</span>offscreenGWorld<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// from : https://github.com/openframeworks/openFrameworks/issues/244</span>\n    <span class=\"token comment\" spellcheck=\"true\">// SetGWorld do not seems to be necessary for offscreen rendering of the movie</span>\n    <span class=\"token comment\" spellcheck=\"true\">// only SetMovieGWorld should be called</span>\n    <span class=\"token comment\" spellcheck=\"true\">// if both are called, the app will crash after a few ofVideoPlayer object have been deleted</span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_WIN32</span>\n        <span class=\"token function\">SetGWorld</span> <span class=\"token punctuation\">(</span>offscreenGWorld<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token function\">SetMovieGWorld</span> <span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span> offscreenGWorld<span class=\"token punctuation\">,</span> nil<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>string name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_PLAYER_QUICKTIME</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n\t\t<span class=\"token function\">initializeQuicktime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\" spellcheck=\"true\">// init quicktime</span>\n\t\t<span class=\"token function\">closeMovie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">// if we have a movie open, close it</span>\n\t\tbLoaded \t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\" spellcheck=\"true\">// try to load now</span>\n\n\n    <span class=\"token comment\" spellcheck=\"true\">// from : https://github.com/openframeworks/openFrameworks/issues/244</span>\n    <span class=\"token comment\" spellcheck=\"true\">// http://developer.apple.com/library/mac/#documentation/QuickTime/RM/QTforWindows/QTforWindows/C-Chapter/3BuildingQuickTimeCa.html</span>\n    <span class=\"token comment\" spellcheck=\"true\">// Apple's documentation *seems* to state that a Gworld should have been set prior to calling NewMovieFromFile</span>\n    <span class=\"token comment\" spellcheck=\"true\">// So I set a dummy Gworld (1x1 pixel) before calling createMovieFromPath</span>\n    <span class=\"token comment\" spellcheck=\"true\">// it avoids crash at the creation of objet ofVideoPlayer after a previous ofVideoPlayer have been deleted</span>\n\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_WIN32</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>width <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> height <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            pixels<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">delete</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> offscreenGWorldPixels<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        width <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        height <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">createImgMemAndGWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> name<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"http://\"</span> <span class=\"token operator\">||</span> name<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"rtsp://\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token function\">createMovieFromURL</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> moviePtr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\tname \t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token function\">ofToDataPath</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">createMovieFromPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>name<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> moviePtr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">bool</span> bDoWeAlreadyHaveAGworld <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>width <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> height <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tbDoWeAlreadyHaveAGworld <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tRect \t\t\t\tmovieRect<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">GetMovieBox</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>movieRect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bDoWeAlreadyHaveAGworld<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// is the gworld the same size, then lets *not* de-allocate and reallocate:</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>width <span class=\"token operator\">==</span> movieRect<span class=\"token punctuation\">.</span>right <span class=\"token operator\">&amp;&amp;</span>\n\t\t\t\theight <span class=\"token operator\">==</span> movieRect<span class=\"token punctuation\">.</span>bottom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">SetMovieGWorld</span> <span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span> offscreenGWorld<span class=\"token punctuation\">,</span> nil<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t\twidth \t<span class=\"token operator\">=</span> movieRect<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">;</span>\n\t\t\t\theight \t<span class=\"token operator\">=</span> movieRect<span class=\"token punctuation\">.</span>bottom<span class=\"token punctuation\">;</span>\n\t\t\t\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">delete</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> offscreenGWorldPixels<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>offscreenGWorld<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token function\">DisposeGWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>offscreenGWorld<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">createImgMemAndGWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\twidth\t<span class=\"token operator\">=</span> movieRect<span class=\"token punctuation\">.</span>right<span class=\"token punctuation\">;</span>\n\t\t\theight \t<span class=\"token operator\">=</span> movieRect<span class=\"token punctuation\">.</span>bottom<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">createImgMemAndGWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>moviePtr <span class=\"token operator\">==</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//----------------- callback method</span>\n\t    myDrawCompleteProc <span class=\"token operator\">=</span> <span class=\"token function\">NewMovieDrawingCompleteUPP</span> <span class=\"token punctuation\">(</span>DrawCompleteProc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">SetMovieDrawingCompleteProc</span> <span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span> movieDrawingCallWhenChanged<span class=\"token punctuation\">,</span>  myDrawCompleteProc<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// ------------- get the total # of frames:</span>\n\t\tnFrames\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\tTimeValue\t\t\tcurMovieTime<span class=\"token punctuation\">;</span>\n\t\tcurMovieTime\t\t<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\tTimeValue\t\t\tduration<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//OSType whichMediaType\t= VIDEO_TYPE; // mingw chokes on this</span>\n\t\tOSType whichMediaType\t<span class=\"token operator\">=</span> <span class=\"token function\">FOUR_CHAR_CODE</span><span class=\"token punctuation\">(</span><span class=\"token string\">'vide'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">short</span> flags\t\t\t\t<span class=\"token operator\">=</span> nextTimeMediaSample <span class=\"token operator\">+</span> nextTimeEdgeOK<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span> curMovieTime <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tnFrames<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">GetMovieNextInterestingTime</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span>flags<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>whichMediaType<span class=\"token punctuation\">,</span>curMovieTime<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>curMovieTime<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>duration<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tflags <span class=\"token operator\">=</span> nextTimeMediaSample<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tnFrames<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// there's an extra time step at the end of themovie</span>\n\n\n\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// ------------- get some pixels in there ------</span>\n\t\t<span class=\"token function\">GoToBeginningOfMovie</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">SetMovieActiveSegment</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">MoviesTask</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_OSX) &amp;&amp; defined(__BIG_ENDIAN__)</span>\n\t\t\t<span class=\"token function\">convertPixels</span><span class=\"token punctuation\">(</span>offscreenGWorldPixels<span class=\"token punctuation\">,</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t\tbStarted \t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\tbLoaded \t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\tbPlaying \t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\tbHavePixelsChanged \t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\tspeed \t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n\n\n<span class=\"token punctuation\">}</span>\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_PLAYER_QUICKTIME</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bLoaded <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span> <span class=\"token operator\">&amp;&amp;</span> bStarted <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">SetMovieActive</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//------------------ set the movie rate to default</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//------------------ and preroll, so the first frames come correct</span>\n\n\t\tTimeValue timeNow \t<span class=\"token operator\">=</span> \t<span class=\"token function\">GetMovieTime</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tFixed playRate \t\t<span class=\"token operator\">=</span>\t<span class=\"token function\">GetMoviePreferredRate</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \t\t<span class=\"token comment\" spellcheck=\"true\">//Not being used!</span>\n\n\t\t<span class=\"token function\">PrerollMovie</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span> timeNow<span class=\"token punctuation\">,</span> <span class=\"token function\">X2Fix</span><span class=\"token punctuation\">(</span>speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">SetMovieRate</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span>  <span class=\"token function\">X2Fix</span><span class=\"token punctuation\">(</span>speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">setLoopState</span><span class=\"token punctuation\">(</span>currentLoopState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// get some pixels in there right away:</span>\n\t\t<span class=\"token function\">MoviesTask</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_OSX) &amp;&amp; defined(__BIG_ENDIAN__)</span>\n\t\t\t<span class=\"token function\">convertPixels</span><span class=\"token punctuation\">(</span>offscreenGWorldPixels<span class=\"token punctuation\">,</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\tbHavePixelsChanged <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\t\tbStarted <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\tbPlaying <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">isLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimePlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"play(): movie not loaded\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tbPlaying <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\tbPaused <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_PLAYER_QUICKTIME</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bStarted<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t \t<span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// ------------ lower level \"startMovie\"</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// ------------ use desired speed &amp; time (-1,1,etc) to Preroll...</span>\n\t\tTimeValue timeNow<span class=\"token punctuation\">;</span>\n\t   \ttimeNow <span class=\"token operator\">=</span> <span class=\"token function\">GetMovieTime</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span> nil<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">PrerollMovie</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span> timeNow<span class=\"token punctuation\">,</span> <span class=\"token function\">X2Fix</span><span class=\"token punctuation\">(</span>speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">SetMovieRate</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span>  <span class=\"token function\">X2Fix</span><span class=\"token punctuation\">(</span>speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">MoviesTask</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//this is if we set the speed first but it only can be set when we are playing.</span>\n\t<span class=\"token function\">setSpeed</span><span class=\"token punctuation\">(</span>speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">isLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimePlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"stop(): movie not loaded\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_PLAYER_QUICKTIME</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n\t<span class=\"token function\">StopMovie</span> <span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">SetMovieActive</span> <span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbStarted <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n\tbPlaying <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">setVolume</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> volume<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">isLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimePlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setVolume(): movie not loaded\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_PLAYER_QUICKTIME</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n\t<span class=\"token function\">SetMovieVolume</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span> volume<span class=\"token operator\">*</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">setLoopState</span><span class=\"token punctuation\">(</span>ofLoopType state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_PLAYER_QUICKTIME</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t\t\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token function\">isLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t\tTimeBase myTimeBase<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">long</span> myFlags <span class=\"token operator\">=</span> <span class=\"token number\">0L</span><span class=\"token punctuation\">;</span>\n\t\t\tmyTimeBase <span class=\"token operator\">=</span> <span class=\"token function\">GetMovieTimeBase</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmyFlags <span class=\"token operator\">=</span> <span class=\"token function\">GetTimeBaseFlags</span><span class=\"token punctuation\">(</span>myTimeBase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">case</span> OF_LOOP_NORMAL<span class=\"token operator\">:</span>\n\t\t\t\t\tmyFlags <span class=\"token operator\">|</span><span class=\"token operator\">=</span> loopTimeBase<span class=\"token punctuation\">;</span>\n\t\t\t\t\tmyFlags <span class=\"token operator\">&amp;</span><span class=\"token operator\">=</span> <span class=\"token operator\">~</span>palindromeLoopTimeBase<span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">SetMoviePlayHints</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span> hintsLoop<span class=\"token punctuation\">,</span> hintsLoop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">SetMoviePlayHints</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span> <span class=\"token number\">0L</span><span class=\"token punctuation\">,</span> hintsPalindrome<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">case</span> OF_LOOP_PALINDROME<span class=\"token operator\">:</span>\n\t\t\t\t\tmyFlags <span class=\"token operator\">|</span><span class=\"token operator\">=</span> loopTimeBase<span class=\"token punctuation\">;</span>\n\t\t\t\t\tmyFlags <span class=\"token operator\">|</span><span class=\"token operator\">=</span> palindromeLoopTimeBase<span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">SetMoviePlayHints</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span> hintsLoop<span class=\"token punctuation\">,</span> hintsLoop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">SetMoviePlayHints</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span> hintsPalindrome<span class=\"token punctuation\">,</span> hintsPalindrome<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">case</span> OF_LOOP_NONE<span class=\"token operator\">:</span>\n\t\t\t\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t\t\tmyFlags <span class=\"token operator\">&amp;</span><span class=\"token operator\">=</span> <span class=\"token operator\">~</span>loopTimeBase<span class=\"token punctuation\">;</span>\n\t\t\t\t\tmyFlags <span class=\"token operator\">&amp;</span><span class=\"token operator\">=</span> <span class=\"token operator\">~</span>palindromeLoopTimeBase<span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token function\">SetMoviePlayHints</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span> <span class=\"token number\">0L</span><span class=\"token punctuation\">,</span> hintsLoop <span class=\"token operator\">|</span>\n\t\t\t\t\thintsPalindrome<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token function\">SetTimeBaseFlags</span><span class=\"token punctuation\">(</span>myTimeBase<span class=\"token punctuation\">,</span> myFlags<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\n\t\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//store the current loop state;</span>\n\tcurrentLoopState <span class=\"token operator\">=</span> state<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\nofLoopType ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">getLoopState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> currentLoopState<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> pct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">isLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimePlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setPosition(): movie not loaded\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n \t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_PLAYER_QUICKTIME</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n\t \tTimeRecord tr<span class=\"token punctuation\">;</span>\n\t \ttr<span class=\"token punctuation\">.</span>base \t\t<span class=\"token operator\">=</span> <span class=\"token function\">GetMovieTimeBase</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">long</span> total \t\t<span class=\"token operator\">=</span> <span class=\"token function\">GetMovieDuration</span><span class=\"token punctuation\">(</span>moviePtr <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">long</span> newPos \t<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>total <span class=\"token operator\">*</span> pct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">SetMovieTimeValue</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span> newPos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">MoviesTask</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">setFrame</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> frame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">isLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimePlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setFrame(): movie not loaded\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_PLAYER_QUICKTIME</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// frame 0 = first frame...</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// this is the simple way...</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//float durationPerFrame = getDuration() / getTotalNumFrames();</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// seems that freezing, doing this and unfreezing seems to work alot</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// better then just SetMovieTimeValue() ;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bPaused<span class=\"token punctuation\">)</span> <span class=\"token function\">SetMovieRate</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span> <span class=\"token function\">X2Fix</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// this is better with mpeg, etc:</span>\n\t<span class=\"token keyword\">double</span> frameRate <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">double</span> movieTimeScale <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">MovieGetStaticFrameRate</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>frameRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmovieTimeScale <span class=\"token operator\">=</span> <span class=\"token function\">GetMovieTimeScale</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>frameRate <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">double</span> frameDuration <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">/</span> frameRate<span class=\"token punctuation\">;</span>\n\t\tTimeValue t <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>TimeValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>frame <span class=\"token operator\">*</span> frameDuration <span class=\"token operator\">*</span> movieTimeScale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">SetMovieTimeValue</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">MoviesTask</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bPaused<span class=\"token punctuation\">)</span> <span class=\"token function\">SetMovieRate</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span> <span class=\"token function\">X2Fix</span><span class=\"token punctuation\">(</span>speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n   <span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">float</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">getDuration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">isLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimePlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getDuration(): movie not loaded\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_PLAYER_QUICKTIME</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token function\">GetMovieDuration</span> <span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span> <span class=\"token function\">GetMovieTimeScale</span> <span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">float</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">isLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimePlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getPosition(): movie not loaded\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_PLAYER_QUICKTIME</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n\t\t<span class=\"token keyword\">long</span> total \t\t<span class=\"token operator\">=</span> <span class=\"token function\">GetMovieDuration</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">long</span> current \t<span class=\"token operator\">=</span> <span class=\"token function\">GetMovieTime</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span> nil<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span> pct \t\t<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>current<span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> pct<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">getCurrentFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">isLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimePlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getCurrentFrame(): movie not loaded\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_PLAYER_QUICKTIME</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n\t<span class=\"token keyword\">int</span> frame <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// zach I think this may fail on variable length frames...</span>\n\t<span class=\"token keyword\">float</span> pos <span class=\"token operator\">=</span> <span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">float</span>  framePosInFloat <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token function\">getTotalNumFrames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span>    framePosInInt <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>framePosInFloat<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span>  floatRemainder <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>framePosInFloat <span class=\"token operator\">-</span> framePosInInt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>floatRemainder <span class=\"token operator\">></span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span> framePosInInt <span class=\"token operator\">=</span> framePosInInt <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//frame = (int)ceil((getTotalNumFrames() * getPosition()));</span>\n\tframe <span class=\"token operator\">=</span> framePosInInt<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> frame<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">setPixelFormat</span><span class=\"token punctuation\">(</span>ofPixelFormat pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//note as we only support RGB we are just confirming that this pixel format is supported</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> pixelFormat <span class=\"token operator\">==</span> OF_PIXELS_RGB <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimePlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setPixelFormat(): requested pixel format \"</span> <span class=\"token operator\">&lt;&lt;</span> pixelFormat <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" not supported, expecting OF_PIXELS_RGB\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\nofPixelFormat ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//note if you support more than one pixel format you will need to return a ofPixelFormat variable. </span>\n\t<span class=\"token keyword\">return</span> OF_PIXELS_RGB<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">getIsMovieDone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">isLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimePlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getIsMovieDone(): movie not loaded\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_PLAYER_QUICKTIME</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t\t\n\t\t<span class=\"token keyword\">bool</span> bIsMovieDone <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span><span class=\"token punctuation\">)</span><span class=\"token function\">IsMovieDone</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> bIsMovieDone<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">firstFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">isLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimePlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"firstFrame(): movie not loaded\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_PLAYER_QUICKTIME</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t\n\t<span class=\"token function\">setFrame</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">nextFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">isLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimePlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"nextFrame(): movie not loaded\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_PLAYER_QUICKTIME</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t\n\t<span class=\"token function\">setFrame</span><span class=\"token punctuation\">(</span><span class=\"token function\">getCurrentFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">previousFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">isLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQuickTimePlayer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"previousFrame(): movie not loaded\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_PLAYER_QUICKTIME</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t\n\t<span class=\"token function\">setFrame</span><span class=\"token punctuation\">(</span><span class=\"token function\">getCurrentFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">setSpeed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> _speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\tspeed \t\t\t\t<span class=\"token operator\">=</span> _speed<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_PLAYER_QUICKTIME</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bPlaying <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//setMovieRate actually plays, so let's call it only when we are playing</span>\n\t\t\t<span class=\"token function\">SetMovieRate</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span> <span class=\"token function\">X2Fix</span><span class=\"token punctuation\">(</span>speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">setPaused</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> _bPause<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\tbPaused <span class=\"token operator\">=</span> _bPause<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_PLAYER_QUICKTIME</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// there might be a more \"quicktime-ish\" way (or smarter way)</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// to do this for now, to pause, just set the movie's speed to zero,</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// on un-pause, set the movie's speed to \"speed\"</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// (and hope that speed != 0...)</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bPlaying <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bPaused <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> \t<span class=\"token function\">SetMovieRate</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span> <span class=\"token function\">X2Fix</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">else</span> \t\t\t\t\t<span class=\"token function\">SetMovieRate</span><span class=\"token punctuation\">(</span>moviePtr<span class=\"token punctuation\">,</span> <span class=\"token function\">X2Fix</span><span class=\"token punctuation\">(</span>speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------</span>\n\n<span class=\"token punctuation\">}</span>\n\n\n\n\n\n\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">clearMemory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---------------------------------------------------------------------------</span>\n<span class=\"token keyword\">float</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">getSpeed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> speed<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------</span>\n<span class=\"token keyword\">int</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">getTotalNumFrames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> nFrames<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">float</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>width<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">float</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>height<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">isPaused</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> bPaused<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">isLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> bLoaded<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofQuickTimePlayer<span class=\"token operator\">::</span><span class=\"token function\">isPlaying</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> bPlaying<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\n","type":"source"}}],"fetch":[]}