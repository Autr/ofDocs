{"data":[{"page":{"entry":{"name":"ofQTKitPlayer.h","filename":"ofQTKitPlayer.h","absolute":"/Users/gilbertsinnott/Code/openFrameworks/libs/openFrameworks/video/ofQTKitPlayer.h","path":"/openframeworks/video/ofQTKitPlayer_h","route":"/openframeworks/video/ofQTKitPlayer.h","dir":"../libs/openFrameworks/video","ext":"h","type":"source","id":370,"parent":354,"breadcrumbs":[354,195],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">// Copyright (c) 2012 openFrameworks team</span>\n<span class=\"token comment\" spellcheck=\"true\">// openFrameworks is released under the MIT License. See libs/_Licence.txt</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> !defined(MAC_OS_X_VERSION_10_12) || MAC_OS_X_VERSION_MAX_ALLOWED &lt; MAC_OS_X_VERSION_10_12</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_VIDEO_PLAYER_QTKIT</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofVideoBaseTypes.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofPixels.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofTexture.h\"</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> __OBJC__</span>\n <span class=\"token macro property\">#<span class=\"token directive keyword\">import</span> \"ofQTKitMovieRenderer.h\"</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">// ofQTKitDecodeMode allows for highly efficient decoding of video</span>\n<span class=\"token comment\" spellcheck=\"true\">// pixel data.  Options are available for direct-to-screen/texture rendering</span>\n<span class=\"token comment\" spellcheck=\"true\">// as well as more traditional CPU/RAM pixel-based rendering.</span>\n\n<span class=\"token keyword\">enum</span> ofQTKitDecodeMode <span class=\"token punctuation\">{</span>\n\tOF_QTKIT_DECODE_PIXELS_ONLY <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\" spellcheck=\"true\">// OF_QTKIT_DECODE_PIXELS_ONLY: This mode decodes pixels only and can't</span>\n    <span class=\"token comment\" spellcheck=\"true\">// be drawn directly to the screen without an an additional step.</span>\n\n\tOF_QTKIT_DECODE_TEXTURE_ONLY<span class=\"token punctuation\">,</span>\n    <span class=\"token comment\" spellcheck=\"true\">// OF_QTKIT_DECODE_TEXTURE_ONLY: This is the fastest mode, but doesn't</span>\n    <span class=\"token comment\" spellcheck=\"true\">// allow direct pixel access because video rendering skips the CPU and RAM.</span>\n    <span class=\"token comment\" spellcheck=\"true\">// Pixels ARE available to texture / fragment shaders though.</span>\n\n\tOF_QTKIT_DECODE_PIXELS_AND_TEXTURE\n    <span class=\"token comment\" spellcheck=\"true\">// OF_QTKIT_DECODE_PIXELS_AND_TEXTURE: This mode combines both</span>\n    <span class=\"token comment\" spellcheck=\"true\">// OF_QTKIT_DECODE_PIXELS_ONLY AND OF_QTKIT_DECODE_TEXTURE_ONLY modes.</span>\n    <span class=\"token comment\" spellcheck=\"true\">// It is slightly slower OF_QTKIT_DECODE_TEXTURE_ONLY, but faster than</span>\n    <span class=\"token comment\" spellcheck=\"true\">// managing your own ofTexture.</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofQTKitPlayer</span>  <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofBaseVideoPlayer <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\n\t\t<span class=\"token function\">ofQTKitPlayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">ofQTKitPlayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">bool</span>                <span class=\"token function\">load</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//default mode is PIXELS_ONLY</span>\n\t\t<span class=\"token keyword\">bool</span>                <span class=\"token function\">load</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string path<span class=\"token punctuation\">,</span> ofQTKitDecodeMode mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">void</span>                <span class=\"token function\">closeMovie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span>                <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">void</span>                <span class=\"token function\">idleMovie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span>                <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span>                <span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span>                <span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">bool</span>                <span class=\"token function\">isFrameNew</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//returns true if the frame has changed in this update cycle</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// Returns openFrameworks compatible RGBA pixels.</span>\n        <span class=\"token comment\" spellcheck=\"true\">// Be aware of your current render mode.</span>\n\n        ofPixels<span class=\"token operator\">&amp;</span>     <span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> ofPixels<span class=\"token operator\">&amp;</span> <span class=\"token function\">getPixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// Returns openFrameworks compatible ofTexture pointer.</span>\n        <span class=\"token comment\" spellcheck=\"true\">// if decodeMode == OF_QTKIT_DECODE_PIXELS_ONLY,</span>\n        <span class=\"token comment\" spellcheck=\"true\">// the returned pointer will be NULL.</span>\n\t\tofTexture <span class=\"token operator\">*</span> <span class=\"token function\">getTexturePtr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">float</span>               <span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span>               <span class=\"token function\">getPositionInSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span>               <span class=\"token function\">getSpeed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\tofLoopType          <span class=\"token function\">getLoopState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span>               <span class=\"token function\">getDuration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span>                <span class=\"token function\">getIsMovieDone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span>                 <span class=\"token function\">getTotalNumFrames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span>                 <span class=\"token function\">getCurrentFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">void</span>                <span class=\"token function\">setPaused</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bPaused<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span>                <span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> pct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span>                <span class=\"token function\">setVolume</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> volume<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span>                <span class=\"token function\">setBalance</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span>                <span class=\"token function\">setLoopState</span><span class=\"token punctuation\">(</span>ofLoopType state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span>                <span class=\"token function\">setSpeed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span>                <span class=\"token function\">setFrame</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> frame<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// frame 0 = first frame...</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">// ofQTKitPlayer only supports OF_PIXELS_RGB and OF_PIXELS_RGBA.</span>\n\t\t<span class=\"token keyword\">bool</span>                <span class=\"token function\">setPixelFormat</span><span class=\"token punctuation\">(</span>ofPixelFormat pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tofPixelFormat       <span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t\tofQTKitDecodeMode   <span class=\"token function\">getDecodeMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">// Enabling synchronous seeing ensures that any call to</span>\n        <span class=\"token comment\" spellcheck=\"true\">// setFrame(), setPosition() or jump(), will result in pixels</span>\n        <span class=\"token comment\" spellcheck=\"true\">// from the desired frame are loaded correctly.</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">// Disabling synchronous seeking will result in a speed boost</span>\n        <span class=\"token comment\" spellcheck=\"true\">// during playback, but won't guarantee that frames are available</span>\n        <span class=\"token comment\" spellcheck=\"true\">// when seeking frames manually (i.e. asynchronously).</span>\n\n        <span class=\"token keyword\">void</span>                <span class=\"token function\">setSynchronousSeeking</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> synchronous<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span>                <span class=\"token function\">getSynchronousSeeking</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">void</span>                <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span>                <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">float</span>               <span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span>               <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">bool</span>                <span class=\"token function\">isPaused</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span>                <span class=\"token function\">isLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span>                <span class=\"token function\">isPlaying</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\n\t\t<span class=\"token keyword\">void</span>                <span class=\"token function\">firstFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span>                <span class=\"token function\">nextFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span>                <span class=\"token function\">previousFrame</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\n        ofLoopType currentLoopState<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">bool</span> bPaused<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">bool</span> bNewFrame<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span> bHavePixelsChanged<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">float</span> duration<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span> speed<span class=\"token punctuation\">;</span>\n\n        ofQTKitDecodeMode decodeMode<span class=\"token punctuation\">;</span>\n\n        std<span class=\"token operator\">::</span>string moviePath<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">bool</span> bSynchronousSeek<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">// updateTexture() pulls texture data from the movie QTKit</span>\n        <span class=\"token comment\" spellcheck=\"true\">// renderer into our internal ofTexture.</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">updateTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">reallocatePixels</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tofTexture tex<span class=\"token punctuation\">;</span>\n\n        ofPixels pixels<span class=\"token punctuation\">;</span>\n\t\tofPixelFormat pixelFormat<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">// This #ifdef is so you can include this .h file in .cpp files</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// and avoid ugly casts in the .m file</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> __OBJC__</span>\n\t\t\tQTKitMovieRenderer <span class=\"token operator\">*</span> moviePlayer<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t\t<span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> moviePlayer<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n","type":"source"}}],"fetch":[]}