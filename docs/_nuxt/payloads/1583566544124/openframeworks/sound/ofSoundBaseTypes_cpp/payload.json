{"data":[{"page":{"entry":{"name":"ofSoundBaseTypes.cpp","filename":"ofSoundBaseTypes.cpp","absolute":"/Users/gilbertsinnott/Code/openFrameworks/libs/openFrameworks/sound/ofSoundBaseTypes.cpp","path":"/openframeworks/sound/ofSoundBaseTypes_cpp","route":"/openframeworks/sound/ofSoundBaseTypes.cpp","dir":"../libs/openFrameworks/sound","ext":"cpp","type":"source","id":307,"parent":300,"breadcrumbs":[300,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofSoundBaseTypes.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofSoundBuffer.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofLog.h\"</span></span>\n\n\nstd<span class=\"token operator\">::</span>string <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>ofSoundDevice<span class=\"token operator\">::</span>Api api<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>api<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> ofSoundDevice<span class=\"token operator\">::</span>ALSA<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"Alsa\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> ofSoundDevice<span class=\"token operator\">::</span>PULSE<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"Pulse\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> ofSoundDevice<span class=\"token operator\">::</span>OSS<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"OSS\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> ofSoundDevice<span class=\"token operator\">::</span>JACK<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"Jack\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> ofSoundDevice<span class=\"token operator\">::</span>OSX_CORE<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"OSX Core Audio\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> ofSoundDevice<span class=\"token operator\">::</span>MS_WASAPI<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"MS WASAPI\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> ofSoundDevice<span class=\"token operator\">::</span>MS_ASIO<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"MS ASIO\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> ofSoundDevice<span class=\"token operator\">::</span>MS_DS<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"MS DirectShow\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"Unkown API\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">void</span> ofBaseSoundStream<span class=\"token operator\">::</span><span class=\"token function\">printDeviceList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofBaseSoundStream::printDeviceList\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span>ofSoundDevice<span class=\"token operator\">::</span>ALSA<span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>ofSoundDevice<span class=\"token operator\">::</span>NUM_APIS<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tofSoundDevice<span class=\"token operator\">::</span>Api api <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ofSoundDevice<span class=\"token operator\">::</span>Api<span class=\"token punctuation\">)</span>i<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">auto</span> devices <span class=\"token operator\">=</span> <span class=\"token function\">getDeviceList</span><span class=\"token punctuation\">(</span>api<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>devices<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofBaseSoundStream::printDeviceList\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Api: \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>api<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">ofLogNotice</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofBaseSoundStream::printDeviceList\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> devices<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\nstd<span class=\"token operator\">::</span>ostream<span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>ostream<span class=\"token operator\">&amp;</span> os<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofSoundDevice<span class=\"token operator\">&amp;</span> dev<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tos <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"[\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>dev<span class=\"token punctuation\">.</span>api<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\": \"</span> <span class=\"token operator\">&lt;&lt;</span> dev<span class=\"token punctuation\">.</span>deviceID <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"] \"</span> <span class=\"token operator\">&lt;&lt;</span> dev<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n\tos <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" [in:\"</span> <span class=\"token operator\">&lt;&lt;</span> dev<span class=\"token punctuation\">.</span>inputChannels <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" out:\"</span> <span class=\"token operator\">&lt;&lt;</span> dev<span class=\"token punctuation\">.</span>outputChannels <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>dev<span class=\"token punctuation\">.</span>isDefaultInput<span class=\"token punctuation\">)</span> os <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" (default in)\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>dev<span class=\"token punctuation\">.</span>isDefaultOutput<span class=\"token punctuation\">)</span> os <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" (default out)\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> os<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------</span>\nstd<span class=\"token operator\">::</span>ostream<span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>ostream<span class=\"token operator\">&amp;</span> os<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>ofSoundDevice<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> devs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>size_t i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> devs<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tos <span class=\"token operator\">&lt;&lt;</span> devs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> os<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n","type":"source"}}],"fetch":[]}