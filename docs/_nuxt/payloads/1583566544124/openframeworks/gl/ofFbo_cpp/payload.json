{"data":[{"page":{"entry":{"name":"ofFbo.cpp","filename":"ofFbo.cpp","absolute":"/Users/gilbertsinnott/Code/openFrameworks/libs/openFrameworks/gl/ofFbo.cpp","path":"/openframeworks/gl/ofFbo_cpp","route":"/openframeworks/gl/ofFbo.cpp","dir":"../libs/openFrameworks/gl","ext":"cpp","type":"source","id":238,"parent":235,"breadcrumbs":[235,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofFbo.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofAppRunner.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGraphics.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGLRenderer.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;map></span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;dlfcn.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxAndroidUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/*\n\n See\n http://www.gandogames.com/2010/07/tutorial-using-anti-aliasing-msaa-in-the-iphone/\n and\n http://stackoverflow.com/questions/3340189/how-do-you-activate-multisampling-in-opengl-es-on-the-iphone\n for multisampling on iphone\n\n */</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">bool</span> ofFbo<span class=\"token operator\">::</span>bglFunctionsInitialized<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> glGenFramebuffersType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>GLsizei n<span class=\"token punctuation\">,</span> GLuint<span class=\"token operator\">*</span> framebuffers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tglGenFramebuffersType glGenFramebuffersFunc<span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> glGenFramebuffers\t\t\t\t\t\t\t\tglGenFramebuffersFunc</span>\n\n\t<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> glDeleteFramebuffersType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>GLsizei n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> GLuint<span class=\"token operator\">*</span> framebuffers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tglDeleteFramebuffersType glDeleteFramebuffersFunc<span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span>\tglDeleteFramebuffers\t\t\t\t\t\t\tglDeleteFramebuffersFunc</span>\n\n\t<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> glDeleteRenderbuffersType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>GLsizei n<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> GLuint<span class=\"token operator\">*</span> renderbuffers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tglDeleteRenderbuffersType glDeleteRenderbuffersFunc<span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span>\tglDeleteRenderbuffers\t\t\t\t\t\t\tglDeleteRenderbuffersFunc</span>\n\n\t<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> glBindFramebufferType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>GLenum target<span class=\"token punctuation\">,</span> GLuint framebuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tglBindFramebufferType glBindFramebufferFunc<span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span>\tglBindFramebuffer\t\t\t\t\t\t\t\tglBindFramebufferFunc</span>\n\n\t<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> glBindRenderbufferType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>GLenum target<span class=\"token punctuation\">,</span> GLuint renderbuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tglBindRenderbufferType glBindRenderbufferFunc<span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span>\tglBindRenderbuffer\t\t\t\t\t\t\t\tglBindRenderbufferFunc</span>\n\n\t<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> glRenderbufferStorageType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>GLenum target<span class=\"token punctuation\">,</span> GLenum internalformat<span class=\"token punctuation\">,</span> GLsizei width<span class=\"token punctuation\">,</span> GLsizei height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tglRenderbufferStorageType glRenderbufferStorageFunc<span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> glRenderbufferStorage\t\t\t\t\t\t\tglRenderbufferStorageFunc</span>\n\n\t<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> glFramebufferRenderbufferType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>GLenum target<span class=\"token punctuation\">,</span> GLenum attachment<span class=\"token punctuation\">,</span> GLenum renderbuffertarget<span class=\"token punctuation\">,</span> GLuint renderbuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tglFramebufferRenderbufferType glFramebufferRenderbufferFunc<span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> glFramebufferRenderbuffer\t\t\t\t\t\tglFramebufferRenderbufferFunc</span>\n\n\t<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> glRenderbufferStorageMultisampleType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>GLenum target<span class=\"token punctuation\">,</span> GLsizei samples<span class=\"token punctuation\">,</span> GLenum internalformat<span class=\"token punctuation\">,</span> GLsizei width<span class=\"token punctuation\">,</span> GLsizei height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tglRenderbufferStorageMultisampleType glRenderbufferStorageMultisampleFunc<span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> glRenderbufferStorageMultisample\t\t\t\tglRenderbufferStorageMultisampleFunc</span>\n\n\t<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> glFramebufferTexture2DType<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>GLenum target<span class=\"token punctuation\">,</span> GLenum attachment<span class=\"token punctuation\">,</span> GLenum textarget<span class=\"token punctuation\">,</span> GLuint texture<span class=\"token punctuation\">,</span> GLint level<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tglFramebufferTexture2DType glFramebufferTexture2DFunc<span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> glFramebufferTexture2D\t\t\t\t\t\t\tglFramebufferTexture2DFunc</span>\n\n\t<span class=\"token keyword\">typedef</span> <span class=\"token function\">GLenum</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span> glCheckFramebufferStatusType<span class=\"token punctuation\">)</span>  <span class=\"token punctuation\">(</span>GLenum target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tglCheckFramebufferStatusType glCheckFramebufferStatusFunc<span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> glCheckFramebufferStatus\t\t\t\t\t\tglCheckFramebufferStatusFunc</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------------------------------------------------</span>\nofFboSettings<span class=\"token operator\">::</span><span class=\"token function\">ofFboSettings</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofBaseGLRenderer<span class=\"token operator\">></span> renderer<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\twidth\t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\theight\t\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tnumColorbuffers\t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\tuseDepth\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tuseStencil\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tdepthStencilAsTexture\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\ttextureTarget\t\t\t<span class=\"token operator\">=</span> <span class=\"token function\">ofGetUsingArbTex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> GL_TEXTURE_RECTANGLE_ARB <span class=\"token operator\">:</span> GL_TEXTURE_2D<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\ttextureTarget\t\t\t<span class=\"token operator\">=</span> GL_TEXTURE_2D<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\tinternalformat\t\t\t<span class=\"token operator\">=</span> GL_RGBA<span class=\"token punctuation\">;</span>\n\tdepthStencilInternalFormat <span class=\"token operator\">=</span> GL_DEPTH_COMPONENT24<span class=\"token punctuation\">;</span>\n\twrapModeHorizontal\t\t<span class=\"token operator\">=</span> GL_CLAMP_TO_EDGE<span class=\"token punctuation\">;</span>\n\twrapModeVertical\t\t<span class=\"token operator\">=</span> GL_CLAMP_TO_EDGE<span class=\"token punctuation\">;</span>\n\tminFilter\t\t\t\t<span class=\"token operator\">=</span> GL_LINEAR<span class=\"token punctuation\">;</span>\n\tmaxFilter\t\t\t\t<span class=\"token operator\">=</span> GL_LINEAR<span class=\"token punctuation\">;</span>\n\tnumSamples\t\t\t\t<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>renderer <span class=\"token operator\">=</span> renderer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofFboSettings<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">!=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFboSettings <span class=\"token operator\">&amp;</span> other<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>width <span class=\"token operator\">!=</span> other<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"settings width differs from source\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>height <span class=\"token operator\">!=</span> other<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"settings height differs from source\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>numColorbuffers <span class=\"token operator\">!=</span> other<span class=\"token punctuation\">.</span>numColorbuffers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"settings numColorbuffers differs from source\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>colorFormats <span class=\"token operator\">!=</span> other<span class=\"token punctuation\">.</span>colorFormats<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"settings colorFormats differs from source\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>useDepth <span class=\"token operator\">!=</span> other<span class=\"token punctuation\">.</span>useDepth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"settings useDepth differs from source\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>useStencil <span class=\"token operator\">!=</span> other<span class=\"token punctuation\">.</span>useStencil<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"settings useStencil differs from source\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>depthStencilAsTexture <span class=\"token operator\">!=</span> other<span class=\"token punctuation\">.</span>depthStencilAsTexture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"settings depthStencilAsTexture differs from source\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>textureTarget <span class=\"token operator\">!=</span> other<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"settings textureTarget differs from source\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>internalformat <span class=\"token operator\">!=</span> other<span class=\"token punctuation\">.</span>internalformat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"settings internalformat differs from source\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>depthStencilInternalFormat <span class=\"token operator\">!=</span> other<span class=\"token punctuation\">.</span>depthStencilInternalFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"settings depthStencilInternalFormat differs from source\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>wrapModeHorizontal <span class=\"token operator\">!=</span> other<span class=\"token punctuation\">.</span>wrapModeHorizontal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"settings wrapModeHorizontal differs from source\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>wrapModeVertical <span class=\"token operator\">!=</span> other<span class=\"token punctuation\">.</span>wrapModeVertical<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"settings wrapModeVertical differs from source\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>minFilter <span class=\"token operator\">!=</span> other<span class=\"token punctuation\">.</span>minFilter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"settings minFilter differs from source\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>maxFilter <span class=\"token operator\">!=</span> other<span class=\"token punctuation\">.</span>maxFilter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"settings maxFilter differs from source\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>numSamples <span class=\"token operator\">!=</span> other<span class=\"token punctuation\">.</span>numSamples<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"settings numSamples differs from source\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>renderer<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> other<span class=\"token punctuation\">.</span>renderer<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"settings renderers are different\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">static</span> map<span class=\"token operator\">&lt;</span>GLuint<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token function\">getIdsFB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">static</span> map<span class=\"token operator\">&lt;</span>GLuint<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token operator\">*</span> idsFB <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> map<span class=\"token operator\">&lt;</span>GLuint<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">*</span>idsFB<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">retainFB</span><span class=\"token punctuation\">(</span>GLuint id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">getIdsFB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token function\">getIdsFB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">getIdsFB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">getIdsFB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">releaseFB</span><span class=\"token punctuation\">(</span>GLuint id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">getIdsFB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token function\">getIdsFB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">getIdsFB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">getIdsFB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glDeleteFramebuffers</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"releaseFB(): something's wrong here, releasing unknown frame buffer id \"</span> <span class=\"token operator\">&lt;&lt;</span> id<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glDeleteFramebuffers</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">static</span> map<span class=\"token operator\">&lt;</span>GLuint<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token function\">getIdsRB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">static</span> map<span class=\"token operator\">&lt;</span>GLuint<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token operator\">*</span> idsRB <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> map<span class=\"token operator\">&lt;</span>GLuint<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">*</span>idsRB<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">retainRB</span><span class=\"token punctuation\">(</span>GLuint id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>id<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">getIdsRB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token function\">getIdsRB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">getIdsRB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">getIdsRB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">releaseRB</span><span class=\"token punctuation\">(</span>GLuint id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">getIdsRB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token function\">getIdsRB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">getIdsRB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">getIdsRB</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glDeleteRenderbuffers</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"releaseRB(): something's wrong here, releasing unknown render buffer id \"</span> <span class=\"token operator\">&lt;&lt;</span> id<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glDeleteRenderbuffers</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------------------------------------------------------------</span>\n<span class=\"token keyword\">int</span>\tofFbo<span class=\"token operator\">::</span>_maxColorAttachments <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span>\tofFbo<span class=\"token operator\">::</span>_maxDrawBuffers <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span>\tofFbo<span class=\"token operator\">::</span>_maxSamples <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\nofFbo<span class=\"token operator\">::</span><span class=\"token function\">ofFbo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n<span class=\"token function\">fbo</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token function\">fboTextures</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token function\">depthBuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token function\">stencilBuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token function\">dirty</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token function\">defaultTextureIndex</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token function\">bIsAllocated</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bglFunctionsInitialized<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tglGenFramebuffers <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>glGenFramebuffersType<span class=\"token punctuation\">)</span><span class=\"token function\">dlsym</span><span class=\"token punctuation\">(</span>RTLD_DEFAULT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"glGenFramebuffers\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tglDeleteFramebuffers <span class=\"token operator\">=</span>  <span class=\"token punctuation\">(</span>glDeleteFramebuffersType<span class=\"token punctuation\">)</span><span class=\"token function\">dlsym</span><span class=\"token punctuation\">(</span>RTLD_DEFAULT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"glDeleteFramebuffers\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tglDeleteRenderbuffers <span class=\"token operator\">=</span>  <span class=\"token punctuation\">(</span>glDeleteRenderbuffersType<span class=\"token punctuation\">)</span><span class=\"token function\">dlsym</span><span class=\"token punctuation\">(</span>RTLD_DEFAULT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"glDeleteRenderbuffers\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tglBindFramebuffer <span class=\"token operator\">=</span>  <span class=\"token punctuation\">(</span>glBindFramebufferType<span class=\"token punctuation\">)</span><span class=\"token function\">dlsym</span><span class=\"token punctuation\">(</span>RTLD_DEFAULT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"glBindFramebuffer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tglBindRenderbuffer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>glBindRenderbufferType<span class=\"token punctuation\">)</span><span class=\"token function\">dlsym</span><span class=\"token punctuation\">(</span>RTLD_DEFAULT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"glBindRenderbuffer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tglRenderbufferStorage <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>glRenderbufferStorageType<span class=\"token punctuation\">)</span><span class=\"token function\">dlsym</span><span class=\"token punctuation\">(</span>RTLD_DEFAULT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"glRenderbufferStorage\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tglFramebufferRenderbuffer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>glFramebufferRenderbufferType<span class=\"token punctuation\">)</span><span class=\"token function\">dlsym</span><span class=\"token punctuation\">(</span>RTLD_DEFAULT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"glFramebufferRenderbuffer\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tglRenderbufferStorageMultisample <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>glRenderbufferStorageMultisampleType<span class=\"token punctuation\">)</span><span class=\"token function\">dlsym</span><span class=\"token punctuation\">(</span>RTLD_DEFAULT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"glRenderbufferStorageMultisample\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tglFramebufferTexture2D <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>glFramebufferTexture2DType<span class=\"token punctuation\">)</span><span class=\"token function\">dlsym</span><span class=\"token punctuation\">(</span>RTLD_DEFAULT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"glFramebufferTexture2D\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tglCheckFramebufferStatus <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>glCheckFramebufferStatusType<span class=\"token punctuation\">)</span><span class=\"token function\">dlsym</span><span class=\"token punctuation\">(</span>RTLD_DEFAULT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"glCheckFramebufferStatus\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\tglGenFramebuffers <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>glGenFramebuffersType<span class=\"token punctuation\">)</span><span class=\"token function\">dlsym</span><span class=\"token punctuation\">(</span>RTLD_DEFAULT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"glGenFramebuffersOES\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tglDeleteFramebuffers <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>glDeleteFramebuffersType<span class=\"token punctuation\">)</span><span class=\"token function\">dlsym</span><span class=\"token punctuation\">(</span>RTLD_DEFAULT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"glDeleteFramebuffersOES\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tglDeleteRenderbuffers <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>glDeleteRenderbuffersType<span class=\"token punctuation\">)</span><span class=\"token function\">dlsym</span><span class=\"token punctuation\">(</span>RTLD_DEFAULT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"glDeleteRenderbuffersOES\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tglBindFramebuffer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>glBindFramebufferType<span class=\"token punctuation\">)</span><span class=\"token function\">dlsym</span><span class=\"token punctuation\">(</span>RTLD_DEFAULT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"glBindFramebufferOES\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tglBindRenderbuffer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>glBindRenderbufferType<span class=\"token punctuation\">)</span><span class=\"token function\">dlsym</span><span class=\"token punctuation\">(</span>RTLD_DEFAULT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"glBindRenderbufferOES\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tglRenderbufferStorage <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>glRenderbufferStorageType<span class=\"token punctuation\">)</span><span class=\"token function\">dlsym</span><span class=\"token punctuation\">(</span>RTLD_DEFAULT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"glRenderbufferStorageOES\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tglFramebufferRenderbuffer <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>glFramebufferRenderbufferType<span class=\"token punctuation\">)</span><span class=\"token function\">dlsym</span><span class=\"token punctuation\">(</span>RTLD_DEFAULT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"glFramebufferRenderbufferOES\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tglRenderbufferStorageMultisample <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>glRenderbufferStorageMultisampleType<span class=\"token punctuation\">)</span><span class=\"token function\">dlsym</span><span class=\"token punctuation\">(</span>RTLD_DEFAULT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"glRenderbufferStorageMultisampleOES\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tglFramebufferTexture2D <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>glFramebufferTexture2DType<span class=\"token punctuation\">)</span><span class=\"token function\">dlsym</span><span class=\"token punctuation\">(</span>RTLD_DEFAULT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"glFramebufferTexture2DOES\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tglCheckFramebufferStatus <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>glCheckFramebufferStatusType<span class=\"token punctuation\">)</span><span class=\"token function\">dlsym</span><span class=\"token punctuation\">(</span>RTLD_DEFAULT<span class=\"token punctuation\">,</span> <span class=\"token string\">\"glCheckFramebufferStatusOES\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\nofFbo<span class=\"token operator\">::</span><span class=\"token function\">ofFbo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFbo <span class=\"token operator\">&amp;</span> mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tsettings <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>settings<span class=\"token punctuation\">;</span>\n\tbIsAllocated <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>bIsAllocated<span class=\"token punctuation\">;</span>\n\n\tfbo <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>fbo<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">retainFB</span><span class=\"token punctuation\">(</span>fbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tfboTextures <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>fboTextures<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>numSamples<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">retainFB</span><span class=\"token punctuation\">(</span>fboTextures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>settings<span class=\"token punctuation\">.</span>depthStencilAsTexture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tdepthBufferTex <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>depthBufferTex<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tdepthBuffer <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>depthBuffer<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">retainRB</span><span class=\"token punctuation\">(</span>depthBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tstencilBuffer <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>stencilBuffer<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">retainRB</span><span class=\"token punctuation\">(</span>stencilBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tcolorBuffers <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>colorBuffers<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>colorBuffers<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">retainRB</span><span class=\"token punctuation\">(</span>colorBuffers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\ttextures <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">;</span>\n\tdirty <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>dirty<span class=\"token punctuation\">;</span>\n\tdefaultTextureIndex <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>defaultTextureIndex<span class=\"token punctuation\">;</span>\n    activeDrawBuffers <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>activeDrawBuffers<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>fbo<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n        <span class=\"token function\">ofAddListener</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofxAndroidEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reloadGL<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>ofFbo<span class=\"token operator\">::</span>reloadFbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\nofFbo <span class=\"token operator\">&amp;</span> ofFbo<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFbo <span class=\"token operator\">&amp;</span> mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>mom<span class=\"token operator\">==</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsettings <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>settings<span class=\"token punctuation\">;</span>\n\tbIsAllocated <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>bIsAllocated<span class=\"token punctuation\">;</span>\n\n\tfbo <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>fbo<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">retainFB</span><span class=\"token punctuation\">(</span>fbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tfboTextures <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>fboTextures<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>numSamples<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">retainFB</span><span class=\"token punctuation\">(</span>fboTextures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>settings<span class=\"token punctuation\">.</span>depthStencilAsTexture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        depthBufferTex <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>depthBufferTex<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n        depthBuffer <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>depthBuffer<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">retainRB</span><span class=\"token punctuation\">(</span>depthBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tstencilBuffer <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>stencilBuffer<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">retainRB</span><span class=\"token punctuation\">(</span>stencilBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tcolorBuffers <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>colorBuffers<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>colorBuffers<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">retainRB</span><span class=\"token punctuation\">(</span>colorBuffers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\ttextures <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">;</span>\n\tdirty <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>dirty<span class=\"token punctuation\">;</span>\n\tdefaultTextureIndex <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>defaultTextureIndex<span class=\"token punctuation\">;</span>\n    activeDrawBuffers <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>activeDrawBuffers<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>fbo<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n        <span class=\"token function\">ofAddListener</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofxAndroidEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reloadGL<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>ofFbo<span class=\"token operator\">::</span>reloadFbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n    <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofFbo<span class=\"token operator\">::</span><span class=\"token function\">ofFbo</span><span class=\"token punctuation\">(</span>ofFbo <span class=\"token operator\">&amp;&amp;</span> mom<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">:</span><span class=\"token function\">settings</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">fbo</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>fbo<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">fboTextures</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>fboTextures<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">depthBuffer</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>depthBuffer<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">stencilBuffer</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>stencilBuffer<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">colorBuffers</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>colorBuffers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">textures</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">depthBufferTex</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>depthBufferTex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">activeDrawBuffers</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>activeDrawBuffers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">dirty</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>dirty<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">defaultTextureIndex</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>defaultTextureIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">bIsAllocated</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>bIsAllocated<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>fbo<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n        <span class=\"token function\">ofAddListener</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofxAndroidEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reloadGL<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>ofFbo<span class=\"token operator\">::</span>reloadFbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n    <span class=\"token punctuation\">}</span>\n    mom<span class=\"token punctuation\">.</span>fbo <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    mom<span class=\"token punctuation\">.</span>depthBuffer <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    mom<span class=\"token punctuation\">.</span>fboTextures <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    mom<span class=\"token punctuation\">.</span>stencilBuffer <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofFbo <span class=\"token operator\">&amp;</span> ofFbo<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ofFbo <span class=\"token operator\">&amp;&amp;</span> mom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>mom<span class=\"token operator\">==</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    settings <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    bIsAllocated <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>bIsAllocated<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    fbo <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>fbo<span class=\"token punctuation\">;</span>\n    fboTextures <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>fboTextures<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>settings<span class=\"token punctuation\">.</span>depthStencilAsTexture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        depthBufferTex <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>depthBufferTex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n        depthBuffer <span class=\"token operator\">=</span> mom<span class=\"token punctuation\">.</span>depthBuffer<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    stencilBuffer <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>stencilBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    colorBuffers <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>colorBuffers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    textures <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>textures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    dirty <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>dirty<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    defaultTextureIndex <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span><span class=\"token function\">move</span><span class=\"token punctuation\">(</span>mom<span class=\"token punctuation\">.</span>defaultTextureIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>fbo<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n        <span class=\"token function\">ofAddListener</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofxAndroidEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reloadGL<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>ofFbo<span class=\"token operator\">::</span>reloadFbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n    <span class=\"token punctuation\">}</span>\n    mom<span class=\"token punctuation\">.</span>fbo <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    mom<span class=\"token punctuation\">.</span>depthBuffer <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    mom<span class=\"token punctuation\">.</span>fboTextures <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    mom<span class=\"token punctuation\">.</span>stencilBuffer <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\nofFbo<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofFbo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">int</span>\tofFbo<span class=\"token operator\">::</span><span class=\"token function\">maxColorAttachments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>_maxColorAttachments<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token function\">checkGLSupport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> _maxColorAttachments<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">int</span>\tofFbo<span class=\"token operator\">::</span><span class=\"token function\">maxDrawBuffers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>_maxDrawBuffers<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token function\">checkGLSupport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> _maxDrawBuffers<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">int</span>\tofFbo<span class=\"token operator\">::</span><span class=\"token function\">maxSamples</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>_maxSamples<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token function\">checkGLSupport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> _maxSamples<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>fbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">releaseFB</span><span class=\"token punctuation\">(</span>fbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tfbo<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>depthBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">releaseRB</span><span class=\"token punctuation\">(</span>depthBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdepthBuffer <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>depthBufferTex<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tdepthBufferTex<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>stencilBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">releaseRB</span><span class=\"token punctuation\">(</span>stencilBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tstencilBuffer <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>numSamples <span class=\"token operator\">&amp;&amp;</span> fboTextures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">releaseFB</span><span class=\"token punctuation\">(</span>fboTextures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tfboTextures <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\ttextures<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>colorBuffers<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">releaseRB</span><span class=\"token punctuation\">(</span>colorBuffers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tcolorBuffers<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tactiveDrawBuffers<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbIsAllocated <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n\t<span class=\"token function\">ofRemoveListener</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofxAndroidEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reloadGL<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>ofFbo<span class=\"token operator\">::</span>reloadFbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">clearColorBuffer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFloatColor <span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glClearBufferfv</span><span class=\"token punctuation\">(</span>GL_COLOR<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>color<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">clearColorBuffer</span><span class=\"token punctuation\">(</span>size_t buffer_idx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofFloatColor <span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glClearBufferfv</span><span class=\"token punctuation\">(</span>GL_COLOR<span class=\"token punctuation\">,</span> buffer_idx<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>color<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">clearDepthBuffer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glClearBufferfv</span><span class=\"token punctuation\">(</span>GL_DEPTH<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">clearStencilBuffer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glClearBufferiv</span><span class=\"token punctuation\">(</span>GL_STENCIL<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">clearDepthStencilBuffer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> depth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> stencil<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glClearBufferfi</span><span class=\"token punctuation\">(</span>GL_DEPTH_STENCIL<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> depth<span class=\"token punctuation\">,</span> stencil<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">destroy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">checkGLSupport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGLCheckExtension</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GL_EXT_framebuffer_object\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"GL frame buffer object supported\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"GL frame buffer object not supported by this graphics card\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">glGetIntegerv</span><span class=\"token punctuation\">(</span>GL_MAX_COLOR_ATTACHMENTS<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>_maxColorAttachments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glGetIntegerv</span><span class=\"token punctuation\">(</span>GL_MAX_DRAW_BUFFERS<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>_maxDrawBuffers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glGetIntegerv</span><span class=\"token punctuation\">(</span>GL_MAX_SAMPLES<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>_maxSamples<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"checkGLSupport(): \"</span>\n                          <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"maxColorAttachments: \"</span> <span class=\"token operator\">&lt;&lt;</span> _maxColorAttachments <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span>\n                          <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"maxDrawBuffers: \"</span> <span class=\"token operator\">&lt;&lt;</span> _maxDrawBuffers <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span>\n                          <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"maxSamples: \"</span> <span class=\"token operator\">&lt;&lt;</span> _maxSamples<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token function\">ofGLCheckExtension</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GL_OES_framebuffer_object\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"GL frame buffer object supported\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"GL frame buffer object not supported by this graphics card\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> internalformat<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> numSamples<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n\tsettings<span class=\"token punctuation\">.</span>width\t\t\t<span class=\"token operator\">=</span> width<span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span>height\t\t\t<span class=\"token operator\">=</span> height<span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span>internalformat\t<span class=\"token operator\">=</span> internalformat<span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span>numSamples\t\t<span class=\"token operator\">=</span> numSamples<span class=\"token punctuation\">;</span>\n    \n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n\tsettings<span class=\"token punctuation\">.</span>useDepth\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span>useStencil\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//we do this as the fbo and the settings object it contains could be created before the user had the chance to disable or enable arb rect.</span>\n    settings<span class=\"token punctuation\">.</span>textureTarget\t<span class=\"token operator\">=</span> GL_TEXTURE_2D<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\tsettings<span class=\"token punctuation\">.</span>useDepth\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span>useStencil\t\t<span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//we do this as the fbo and the settings object it contains could be created before the user had the chance to disable or enable arb rect. \t</span>\n    settings<span class=\"token punctuation\">.</span>textureTarget\t<span class=\"token operator\">=</span> <span class=\"token function\">ofGetUsingArbTex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> GL_TEXTURE_RECTANGLE_ARB <span class=\"token operator\">:</span> GL_TEXTURE_2D<span class=\"token punctuation\">;</span>    \n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span> </span>\n    \n\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>ofFboSettings _settings<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">checkGLSupport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> renderer <span class=\"token operator\">=</span> _settings<span class=\"token punctuation\">.</span>renderer<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>renderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tsettings<span class=\"token punctuation\">.</span>renderer <span class=\"token operator\">=</span> renderer<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tsettings<span class=\"token punctuation\">.</span>renderer <span class=\"token operator\">=</span> <span class=\"token function\">ofGetGLRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// check that passed values are correct</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>_settings<span class=\"token punctuation\">.</span>width <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> _settings<span class=\"token punctuation\">.</span>height <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"width and height have to be more than 0\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>_settings<span class=\"token punctuation\">.</span>numSamples <span class=\"token operator\">></span> <span class=\"token function\">maxSamples</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">maxSamples</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"allocate(): clamping numSamples \"</span> <span class=\"token operator\">&lt;&lt;</span> _settings<span class=\"token punctuation\">.</span>numSamples <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" to maxSamples \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">maxSamples</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" for frame buffer object\"</span> <span class=\"token operator\">&lt;&lt;</span> fbo<span class=\"token punctuation\">;</span>\n\t\t_settings<span class=\"token punctuation\">.</span>numSamples <span class=\"token operator\">=</span> <span class=\"token function\">maxSamples</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>_settings<span class=\"token punctuation\">.</span>depthStencilAsTexture <span class=\"token operator\">&amp;&amp;</span> _settings<span class=\"token punctuation\">.</span>numSamples<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"allocate(): multisampling not supported with depthStencilAsTexture, setting 0 samples for frame buffer object \"</span> <span class=\"token operator\">&lt;&lt;</span> fbo<span class=\"token punctuation\">;</span>\n\t\t_settings<span class=\"token punctuation\">.</span>numSamples <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//currently depth only works if stencil is enabled. </span>\n\t<span class=\"token comment\" spellcheck=\"true\">// http://forum.openframeworks.cc/index.php/topic,6837.0.html</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>_settings<span class=\"token punctuation\">.</span>useDepth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t  \t_settings<span class=\"token punctuation\">.</span>useStencil <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> _settings<span class=\"token punctuation\">.</span>depthStencilAsTexture <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        _settings<span class=\"token punctuation\">.</span>depthStencilAsTexture <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"allocate(): depthStencilAsTexture is not available for iOS\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n    \n\tGLenum depthAttachment <span class=\"token operator\">=</span> GL_DEPTH_ATTACHMENT<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> _settings<span class=\"token punctuation\">.</span>useDepth <span class=\"token operator\">&amp;&amp;</span> _settings<span class=\"token punctuation\">.</span>useStencil <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t_settings<span class=\"token punctuation\">.</span>depthStencilInternalFormat <span class=\"token operator\">=</span> GL_DEPTH_STENCIL<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n\t\t\tdepthAttachment <span class=\"token operator\">=</span> GL_DEPTH_ATTACHMENT<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t\tdepthAttachment <span class=\"token operator\">=</span> GL_DEPTH_STENCIL_ATTACHMENT<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>_settings<span class=\"token punctuation\">.</span>useDepth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tdepthAttachment <span class=\"token operator\">=</span> GL_DEPTH_ATTACHMENT<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>_settings<span class=\"token punctuation\">.</span>useStencil<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tdepthAttachment <span class=\"token operator\">=</span> GL_STENCIL_ATTACHMENT<span class=\"token punctuation\">;</span>\n\t\t_settings<span class=\"token punctuation\">.</span>depthStencilInternalFormat <span class=\"token operator\">=</span> GL_STENCIL_INDEX<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// set needed values for allocation on instance settings</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// the rest will be set by the corresponding methods during allocation</span>\n\tsettings<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> _settings<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> _settings<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span>numSamples <span class=\"token operator\">=</span> _settings<span class=\"token punctuation\">.</span>numSamples<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// create main fbo</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// this is the main one we bind for drawing into</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// all the renderbuffers are attached to this (whether MSAA is enabled or not)</span>\n\t<span class=\"token function\">glGenFramebuffers</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>fbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">retainFB</span><span class=\"token punctuation\">(</span>fbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tGLint previousFboId <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// note that we are using a glGetInteger method here, which may stall the pipeline.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// in the allocate() method, this is not that tragic since this will not be called </span>\n\t<span class=\"token comment\" spellcheck=\"true\">// within the draw() loop. Here, we need not optimise for performance, but for </span>\n\t<span class=\"token comment\" spellcheck=\"true\">// simplicity and readability .</span>\n\n\t<span class=\"token function\">glGetIntegerv</span><span class=\"token punctuation\">(</span>GL_FRAMEBUFFER_BINDING<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>previousFboId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glBindFramebuffer</span><span class=\"token punctuation\">(</span>GL_FRAMEBUFFER<span class=\"token punctuation\">,</span> fbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//- USE REGULAR RENDER BUFFER</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>_settings<span class=\"token punctuation\">.</span>depthStencilAsTexture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>_settings<span class=\"token punctuation\">.</span>useDepth <span class=\"token operator\">&amp;&amp;</span> _settings<span class=\"token punctuation\">.</span>useStencil<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tstencilBuffer <span class=\"token operator\">=</span> depthBuffer <span class=\"token operator\">=</span> <span class=\"token function\">createAndAttachRenderbuffer</span><span class=\"token punctuation\">(</span>_settings<span class=\"token punctuation\">.</span>depthStencilInternalFormat<span class=\"token punctuation\">,</span> depthAttachment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">retainRB</span><span class=\"token punctuation\">(</span>stencilBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">retainRB</span><span class=\"token punctuation\">(</span>depthBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>_settings<span class=\"token punctuation\">.</span>useDepth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tdepthBuffer <span class=\"token operator\">=</span> <span class=\"token function\">createAndAttachRenderbuffer</span><span class=\"token punctuation\">(</span>_settings<span class=\"token punctuation\">.</span>depthStencilInternalFormat<span class=\"token punctuation\">,</span> depthAttachment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">retainRB</span><span class=\"token punctuation\">(</span>depthBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>_settings<span class=\"token punctuation\">.</span>useStencil<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tstencilBuffer <span class=\"token operator\">=</span> <span class=\"token function\">createAndAttachRenderbuffer</span><span class=\"token punctuation\">(</span>_settings<span class=\"token punctuation\">.</span>depthStencilInternalFormat<span class=\"token punctuation\">,</span> depthAttachment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">retainRB</span><span class=\"token punctuation\">(</span>stencilBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//- INSTEAD USE TEXTURE</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>_settings<span class=\"token punctuation\">.</span>useDepth <span class=\"token operator\">||</span> _settings<span class=\"token punctuation\">.</span>useStencil<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">createAndAttachDepthStencilTexture</span><span class=\"token punctuation\">(</span>_settings<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span>_settings<span class=\"token punctuation\">.</span>depthStencilInternalFormat<span class=\"token punctuation\">,</span>depthAttachment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">// if there's depth and stencil the texture should be attached as</span>\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">// depth and stencil attachments</span>\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">// http://www.khronos.org/registry/gles/extensions/OES/OES_packed_depth_stencil.txt</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>_settings<span class=\"token punctuation\">.</span>useDepth <span class=\"token operator\">&amp;&amp;</span> _settings<span class=\"token punctuation\">.</span>useStencil<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token function\">glFramebufferTexture2D</span><span class=\"token punctuation\">(</span>GL_FRAMEBUFFER<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t   GL_STENCIL_ATTACHMENT<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t   GL_TEXTURE_2D<span class=\"token punctuation\">,</span> depthBufferTex<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n    \n    settings<span class=\"token punctuation\">.</span>useDepth <span class=\"token operator\">=</span> _settings<span class=\"token punctuation\">.</span>useDepth<span class=\"token punctuation\">;</span>\n    settings<span class=\"token punctuation\">.</span>useStencil <span class=\"token operator\">=</span> _settings<span class=\"token punctuation\">.</span>useStencil<span class=\"token punctuation\">;</span>\n    settings<span class=\"token punctuation\">.</span>depthStencilInternalFormat <span class=\"token operator\">=</span> _settings<span class=\"token punctuation\">.</span>depthStencilInternalFormat<span class=\"token punctuation\">;</span>\n    settings<span class=\"token punctuation\">.</span>depthStencilAsTexture <span class=\"token operator\">=</span> _settings<span class=\"token punctuation\">.</span>depthStencilAsTexture<span class=\"token punctuation\">;</span>\n    settings<span class=\"token punctuation\">.</span>textureTarget <span class=\"token operator\">=</span> _settings<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">;</span>\n    settings<span class=\"token punctuation\">.</span>wrapModeHorizontal <span class=\"token operator\">=</span> _settings<span class=\"token punctuation\">.</span>wrapModeHorizontal<span class=\"token punctuation\">;</span>\n    settings<span class=\"token punctuation\">.</span>wrapModeVertical <span class=\"token operator\">=</span> _settings<span class=\"token punctuation\">.</span>wrapModeVertical<span class=\"token punctuation\">;</span>\n    settings<span class=\"token punctuation\">.</span>maxFilter <span class=\"token operator\">=</span> _settings<span class=\"token punctuation\">.</span>maxFilter<span class=\"token punctuation\">;</span>\n    settings<span class=\"token punctuation\">.</span>minFilter <span class=\"token operator\">=</span> _settings<span class=\"token punctuation\">.</span>minFilter<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// if we want MSAA, create a new fbo for textures</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>_settings<span class=\"token punctuation\">.</span>numSamples<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">glGenFramebuffers</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>fboTextures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">retainFB</span><span class=\"token punctuation\">(</span>fboTextures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\tfboTextures <span class=\"token operator\">=</span> fbo<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\tfboTextures <span class=\"token operator\">=</span> fbo<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>_settings<span class=\"token punctuation\">.</span>numSamples<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"allocate(): multisampling not supported in OpenGL ES\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// now create all textures and color buffers</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>_settings<span class=\"token punctuation\">.</span>colorFormats<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>_settings<span class=\"token punctuation\">.</span>colorFormats<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token function\">createAndAttachTexture</span><span class=\"token punctuation\">(</span>_settings<span class=\"token punctuation\">.</span>colorFormats<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>_settings<span class=\"token punctuation\">.</span>numColorbuffers <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>_settings<span class=\"token punctuation\">.</span>numColorbuffers<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token function\">createAndAttachTexture</span><span class=\"token punctuation\">(</span>_settings<span class=\"token punctuation\">.</span>internalformat<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t_settings<span class=\"token punctuation\">.</span>colorFormats <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>colorFormats<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token function\">glDrawBuffer</span><span class=\"token punctuation\">(</span>GL_NONE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"allocate(): no color buffers specified for frame buffer object \"</span> <span class=\"token operator\">&lt;&lt;</span> fbo<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token punctuation\">}</span>\n\tsettings<span class=\"token punctuation\">.</span>internalformat <span class=\"token operator\">=</span> _settings<span class=\"token punctuation\">.</span>internalformat<span class=\"token punctuation\">;</span>\n\t\n\tdirty<span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span>_settings<span class=\"token punctuation\">.</span>colorFormats<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// we start with all color buffers dirty.</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// if textures are attached to a different fbo (e.g. if using MSAA) check it's status</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>fbo <span class=\"token operator\">!=</span> fboTextures<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glBindFramebuffer</span><span class=\"token punctuation\">(</span>GL_FRAMEBUFFER<span class=\"token punctuation\">,</span> fboTextures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// check everything is ok with this fbo</span>\n\tbIsAllocated <span class=\"token operator\">=</span> <span class=\"token function\">checkStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// restore previous framebuffer id</span>\n\t<span class=\"token function\">glBindFramebuffer</span><span class=\"token punctuation\">(</span>GL_FRAMEBUFFER<span class=\"token punctuation\">,</span> previousFboId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/* UNCOMMENT OUTSIDE OF DOING RELEASES\n\t\n    // this should never happen\n\tif(settings != _settings) ofLogWarning(\"ofFbo\") &lt;&lt; \"allocation not complete, passed settings not equal to created ones, this is an internal OF bug\";\n    \n    */</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n\t<span class=\"token function\">ofAddListener</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofxAndroidEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reloadGL<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>ofFbo<span class=\"token operator\">::</span>reloadFbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">reloadFbo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bIsAllocated<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> bIsAllocated<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nGLuint ofFbo<span class=\"token operator\">::</span><span class=\"token function\">createAndAttachRenderbuffer</span><span class=\"token punctuation\">(</span>GLenum internalFormat<span class=\"token punctuation\">,</span> GLenum attachmentPoint<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tGLuint buffer<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glGenRenderbuffers</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glBindRenderbuffer</span><span class=\"token punctuation\">(</span>GL_RENDERBUFFER<span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>numSamples<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glRenderbufferStorage</span><span class=\"token punctuation\">(</span>GL_RENDERBUFFER<span class=\"token punctuation\">,</span> internalFormat<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glRenderbufferStorageMultisample</span><span class=\"token punctuation\">(</span>GL_RENDERBUFFER<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>numSamples<span class=\"token punctuation\">,</span> internalFormat<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGLSupportsNPOTTextures</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glRenderbufferStorage</span><span class=\"token punctuation\">(</span>GL_RENDERBUFFER<span class=\"token punctuation\">,</span> internalFormat<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glRenderbufferStorage</span><span class=\"token punctuation\">(</span>GL_RENDERBUFFER<span class=\"token punctuation\">,</span> internalFormat<span class=\"token punctuation\">,</span> <span class=\"token function\">ofNextPow2</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofNextPow2</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token function\">glFramebufferRenderbuffer</span><span class=\"token punctuation\">(</span>GL_FRAMEBUFFER<span class=\"token punctuation\">,</span> attachmentPoint<span class=\"token punctuation\">,</span> GL_RENDERBUFFER<span class=\"token punctuation\">,</span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> buffer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">createAndAttachTexture</span><span class=\"token punctuation\">(</span>GLenum internalFormat<span class=\"token punctuation\">,</span> GLenum attachmentPoint<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\n\tofTextureData texData<span class=\"token punctuation\">;</span>\n\n\ttexData<span class=\"token punctuation\">.</span>textureTarget <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">;</span>\n\ttexData<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\ttexData<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\ttexData<span class=\"token punctuation\">.</span>glInternalFormat <span class=\"token operator\">=</span> internalFormat<span class=\"token punctuation\">;</span>\n\ttexData<span class=\"token punctuation\">.</span>bFlipTexture <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\ttexData<span class=\"token punctuation\">.</span>wrapModeHorizontal <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>wrapModeHorizontal<span class=\"token punctuation\">;</span>\n\ttexData<span class=\"token punctuation\">.</span>wrapModeVertical <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>wrapModeVertical<span class=\"token punctuation\">;</span>\n\ttexData<span class=\"token punctuation\">.</span>magFilter <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>maxFilter<span class=\"token punctuation\">;</span>\n\ttexData<span class=\"token punctuation\">.</span>minFilter <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>minFilter<span class=\"token punctuation\">;</span>\n\n\tofTexture tex<span class=\"token punctuation\">;</span>\n\ttex<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>texData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">attachTexture</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">,</span> internalFormat<span class=\"token punctuation\">,</span> attachmentPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tdirty<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tactiveDrawBuffers<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>GL_COLOR_ATTACHMENT0 <span class=\"token operator\">+</span> attachmentPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">attachTexture</span><span class=\"token punctuation\">(</span>ofTexture <span class=\"token operator\">&amp;</span> tex<span class=\"token punctuation\">,</span> GLenum internalFormat<span class=\"token punctuation\">,</span> GLenum attachmentPoint<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// bind fbo for textures (if using MSAA this is the newly created fbo, otherwise its the same fbo as before)</span>\n\tGLint temp<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glGetIntegerv</span><span class=\"token punctuation\">(</span>GL_FRAMEBUFFER_BINDING<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glBindFramebuffer</span><span class=\"token punctuation\">(</span>GL_FRAMEBUFFER<span class=\"token punctuation\">,</span> fboTextures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token function\">glFramebufferTexture2D</span><span class=\"token punctuation\">(</span>GL_FRAMEBUFFER<span class=\"token punctuation\">,</span> GL_COLOR_ATTACHMENT0 <span class=\"token operator\">+</span> attachmentPoint<span class=\"token punctuation\">,</span> tex<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span> tex<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>attachmentPoint <span class=\"token operator\">>=</span> textures<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        textures<span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span>attachmentPoint<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    textures<span class=\"token punctuation\">[</span>attachmentPoint<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tex<span class=\"token punctuation\">;</span>\n    \n\tsettings<span class=\"token punctuation\">.</span>colorFormats<span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span>attachmentPoint <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span>colorFormats<span class=\"token punctuation\">[</span>attachmentPoint<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> internalFormat<span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span>numColorbuffers <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>colorFormats<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n\t<span class=\"token comment\" spellcheck=\"true\">// if MSAA, bind main fbo and attach renderbuffer</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>numSamples<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glBindFramebuffer</span><span class=\"token punctuation\">(</span>GL_FRAMEBUFFER<span class=\"token punctuation\">,</span> fbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n\t\tGLuint colorBuffer <span class=\"token operator\">=</span> <span class=\"token function\">createAndAttachRenderbuffer</span><span class=\"token punctuation\">(</span>internalFormat<span class=\"token punctuation\">,</span> GL_COLOR_ATTACHMENT0 <span class=\"token operator\">+</span> attachmentPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tcolorBuffers<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>colorBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">retainRB</span><span class=\"token punctuation\">(</span>colorBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">glBindFramebuffer</span><span class=\"token punctuation\">(</span>GL_FRAMEBUFFER<span class=\"token punctuation\">,</span> temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">createAndAttachDepthStencilTexture</span><span class=\"token punctuation\">(</span>GLenum target<span class=\"token punctuation\">,</span> GLint internalformat<span class=\"token punctuation\">,</span> GLenum  attachment<span class=\"token punctuation\">,</span> GLenum transferFormat<span class=\"token punctuation\">,</span> GLenum transferType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\n\t<span class=\"token comment\" spellcheck=\"true\">// allocate depthBufferTex as depth buffer;</span>\n\tdepthBufferTex<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>glInternalFormat <span class=\"token operator\">=</span> internalformat<span class=\"token punctuation\">;</span>\n\tdepthBufferTex<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>textureTarget <span class=\"token operator\">=</span> target<span class=\"token punctuation\">;</span>\n\tdepthBufferTex<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>bFlipTexture <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tdepthBufferTex<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\tdepthBufferTex<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\t\n\tdepthBufferTex<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>depthBufferTex<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">,</span>transferFormat<span class=\"token punctuation\">,</span>transferType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">glFramebufferTexture2D</span><span class=\"token punctuation\">(</span>GL_FRAMEBUFFER<span class=\"token punctuation\">,</span> attachment<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> depthBufferTex<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">createAndAttachDepthStencilTexture</span><span class=\"token punctuation\">(</span>GLenum target<span class=\"token punctuation\">,</span> GLint internalformat<span class=\"token punctuation\">,</span> GLenum  attachment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// allocate depthBufferTex as depth buffer;</span>\n\tdepthBufferTex<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>glInternalFormat <span class=\"token operator\">=</span> internalformat<span class=\"token punctuation\">;</span>\n\tdepthBufferTex<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>textureTarget <span class=\"token operator\">=</span> target<span class=\"token punctuation\">;</span>\n\tdepthBufferTex<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>bFlipTexture <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tdepthBufferTex<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\tdepthBufferTex<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\t\n\tdepthBufferTex<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>depthBufferTex<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">glFramebufferTexture2D</span><span class=\"token punctuation\">(</span>GL_FRAMEBUFFER<span class=\"token punctuation\">,</span> attachment<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> depthBufferTex<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>textureID<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> setupScreen<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">auto</span> renderer <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>renderer<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>renderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>setupScreen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            renderer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> OF_FBOMODE_PERSPECTIVE <span class=\"token operator\">|</span> OF_FBOMODE_MATRIXFLIP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n            renderer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> OF_FBOMODE_NODEFAULTS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span>ofFboMode mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">auto</span> renderer <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>renderer<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>renderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        renderer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">/*void ofFbo::begin() const {\n\tauto renderer = settings.renderer.lock();\n\tif (renderer) {\n\t\trenderer->begin(*this, true);\n\t}\n}\n\n//----------------------------------------------------------\nvoid ofFbo::beginNoPerspective() const {\n\tauto renderer = settings.renderer.lock();\n\tif (renderer) {\n\t\trenderer->begin(*this, false);\n\t}\n}\n\n//----------------------------------------------------------\nvoid ofFbo::beginNoMatrixFlip() const {\n\tauto renderer = settings.renderer.lock();\n\tif (renderer) {\n\t\trenderer->beginNoMatrixFlip(*this);\n\t}\n}\n\n//----------------------------------------------------------\nvoid ofFbo::beginNoMatrixFlipNoPerspective() const {\n\tauto renderer = settings.renderer.lock();\n\tif (renderer) {\n\t\trenderer->beginNoMatrixFlipNoPerspective(*this);\n\t}\n}*/</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">auto</span> renderer <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>renderer<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>renderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\trenderer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">auto</span> renderer <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>renderer<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>renderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\trenderer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">auto</span> renderer <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>renderer<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>renderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\trenderer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">flagDirty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fbo <span class=\"token operator\">!=</span> fboTextures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// ---------| if fbo != fboTextures, we are dealing with an MSAA enabled FBO.</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// All currently active draw buffers need to be flagged dirty</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// If a draw buffer has been activated and then de-activated, it has been </span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// flagged dirty at activation, so we can be sure all buffers which have </span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// been rendered to are flagged dirty.</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// </span>\n\t\t<span class=\"token keyword\">int</span> numBuffersToFlag <span class=\"token operator\">=</span> <span class=\"token function\">min</span><span class=\"token punctuation\">(</span>dirty<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> activeDrawBuffers<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> numBuffersToFlag<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tdirty<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">getNumTextures</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> textures<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">setActiveDrawBuffer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bIsAllocated<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\tvector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">activebuffers</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setActiveDrawBuffers</span><span class=\"token punctuation\">(</span>activebuffers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">setActiveDrawBuffers</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> ids<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bIsAllocated<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n    <span class=\"token keyword\">int</span> numBuffers <span class=\"token operator\">=</span> activeDrawBuffers<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tactiveDrawBuffers<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tactiveDrawBuffers<span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span>numBuffers<span class=\"token punctuation\">,</span> GL_NONE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// we initialise the vector with GL_NONE, so a buffer will not be written to unless activated.</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>ids<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">int</span> id <span class=\"token operator\">=</span> ids<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">&lt;</span> <span class=\"token function\">getNumTextures</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            GLenum e <span class=\"token operator\">=</span> GL_COLOR_ATTACHMENT0 <span class=\"token operator\">+</span> id<span class=\"token punctuation\">;</span>\n            activeDrawBuffers<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// activate requested buffers</span>\n\t\t\tdirty<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// dirty activated draw buffers.</span>\n        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n            <span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"setActiveDrawBuffers(): fbo \"</span> <span class=\"token operator\">&lt;&lt;</span> fbo <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" couldn't set texture \"</span> <span class=\"token operator\">&lt;&lt;</span> i <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", only \"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token function\">getNumTextures</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"allocated\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">glDrawBuffers</span><span class=\"token punctuation\">(</span>activeDrawBuffers<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>activeDrawBuffers<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">activateAllDrawBuffers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bIsAllocated<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n    vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token function\">activeBuffers</span><span class=\"token punctuation\">(</span><span class=\"token function\">getNumTextures</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token function\">getNumTextures</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    \tactiveBuffers<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">setActiveDrawBuffers</span><span class=\"token punctuation\">(</span>activeBuffers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">setDefaultTextureIndex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> defaultTexture<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tdefaultTextureIndex <span class=\"token operator\">=</span> defaultTexture<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">getDefaultTextureIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> defaultTextureIndex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofTexture<span class=\"token operator\">&amp;</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">getTextureReference</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofTexture<span class=\"token operator\">&amp;</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">getTextureReference</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> attachmentPoint<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span>attachmentPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">const</span> ofTexture<span class=\"token operator\">&amp;</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">getTextureReference</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">const</span> ofTexture<span class=\"token operator\">&amp;</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">getTextureReference</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> attachmentPoint<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span>attachmentPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofTexture<span class=\"token operator\">&amp;</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span>defaultTextureIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofTexture<span class=\"token operator\">&amp;</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> attachmentPoint<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">updateTexture</span><span class=\"token punctuation\">(</span>attachmentPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">return</span> textures<span class=\"token punctuation\">[</span>attachmentPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">const</span> ofTexture<span class=\"token operator\">&amp;</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span>defaultTextureIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">const</span> ofTexture<span class=\"token operator\">&amp;</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> attachmentPoint<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tofFbo <span class=\"token operator\">*</span> mutThis <span class=\"token operator\">=</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofFbo<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">updateTexture</span><span class=\"token punctuation\">(</span>attachmentPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> textures<span class=\"token punctuation\">[</span>attachmentPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">setAnchorPercent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> xPct<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> yPct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAnchorPercent</span><span class=\"token punctuation\">(</span>xPct<span class=\"token punctuation\">,</span> yPct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">setAnchorPoint</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAnchorPoint</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">resetAnchor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">resetAnchor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">readToPixels</span><span class=\"token punctuation\">(</span>ofPixels <span class=\"token operator\">&amp;</span> pixels<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> attachmentPoint<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bIsAllocated<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span>attachmentPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">readToPixels</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>settings<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span><span class=\"token function\">ofGetImageTypeFromGLType</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>internalformat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> format <span class=\"token operator\">=</span> <span class=\"token function\">ofGetGLFormatFromInternal</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>internalformat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glReadPixels</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>settings<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> format<span class=\"token punctuation\">,</span> GL_UNSIGNED_BYTE<span class=\"token punctuation\">,</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">readToPixels</span><span class=\"token punctuation\">(</span>ofShortPixels <span class=\"token operator\">&amp;</span> pixels<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> attachmentPoint<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bIsAllocated<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span>attachmentPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">readToPixels</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>settings<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span><span class=\"token function\">ofGetImageTypeFromGLType</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>internalformat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> format <span class=\"token operator\">=</span> <span class=\"token function\">ofGetGLFormatFromInternal</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>internalformat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glReadPixels</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>settings<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> format<span class=\"token punctuation\">,</span> GL_UNSIGNED_SHORT<span class=\"token punctuation\">,</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">readToPixels</span><span class=\"token punctuation\">(</span>ofFloatPixels <span class=\"token operator\">&amp;</span> pixels<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> attachmentPoint<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bIsAllocated<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span>attachmentPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">readToPixels</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>settings<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span><span class=\"token function\">ofGetImageTypeFromGLType</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>internalformat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> format <span class=\"token operator\">=</span> <span class=\"token function\">ofGetGLFormatFromInternal</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>internalformat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glReadPixels</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>settings<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> format<span class=\"token punctuation\">,</span> GL_FLOAT<span class=\"token punctuation\">,</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">copyTo</span><span class=\"token punctuation\">(</span>ofBufferObject <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bIsAllocated<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>GL_PIXEL_PACK_BUFFER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glReadPixels</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLFormatFromInternal</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>internalformat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLTypeFromInternal</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">.</span>internalformat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span>GL_PIXEL_PACK_BUFFER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">updateTexture</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> attachmentPoint<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bIsAllocated<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>fbo <span class=\"token operator\">!=</span> fboTextures <span class=\"token operator\">&amp;&amp;</span> dirty<span class=\"token punctuation\">[</span>attachmentPoint<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">// if fbo != fboTextures, we are dealing with an MSAA enabled FBO.</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// and we need to blit one fbo into another to see get the texture</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// content</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// save current drawbuffer</span>\n\t\t\t<span class=\"token function\">glPushAttrib</span><span class=\"token punctuation\">(</span>GL_COLOR_BUFFER_BIT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">auto</span> renderer <span class=\"token operator\">=</span> settings<span class=\"token punctuation\">.</span>renderer<span class=\"token punctuation\">.</span><span class=\"token function\">lock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>renderer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\trenderer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bindForBlitting</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>attachmentPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">glBlitFramebuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> GL_COLOR_BUFFER_BIT<span class=\"token punctuation\">,</span> GL_NEAREST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\trenderer<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t\t<span class=\"token function\">glReadBuffer</span><span class=\"token punctuation\">(</span>GL_BACK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// restore current drawbuffer</span>\n\t\t\t<span class=\"token function\">glPopAttrib</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tdirty<span class=\"token punctuation\">[</span>attachmentPoint<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> settings<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bIsAllocated <span class=\"token operator\">||</span> settings<span class=\"token punctuation\">.</span>numColorbuffers<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nGLuint ofFbo<span class=\"token operator\">::</span><span class=\"token function\">getFbo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> fbo<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nGLuint ofFbo<span class=\"token operator\">::</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> fbo<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nGLuint ofFbo<span class=\"token operator\">::</span><span class=\"token function\">getIdDrawBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> fboTextures<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">float</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> settings<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">float</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> settings<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">checkStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\tGLenum status <span class=\"token operator\">=</span> <span class=\"token function\">glCheckFramebufferStatus</span><span class=\"token punctuation\">(</span>GL_FRAMEBUFFER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> GL_FRAMEBUFFER_COMPLETE<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofLogVerbose</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"FRAMEBUFFER_COMPLETE - OK\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"FRAMEBUFFER_INCOMPLETE_ATTACHMENT\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"FRAMEBUFFER_INCOMPLETE_DIMENSIONS\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_PROGRAMMABLE_GL</span>\n\t\t<span class=\"token keyword\">case</span> GL_FRAMEBUFFER_INCOMPLETE_FORMATS<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"FRAMEBUFFER_INCOMPLETE_FORMATS\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token keyword\">case</span> GL_FRAMEBUFFER_UNSUPPORTED<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"FRAMEBUFFER_UNSUPPORTED\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token keyword\">case</span> GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"FRAMEBUFFER_INCOMPLETE_READ_BUFFER\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"UNKNOWN ERROR \"</span> <span class=\"token operator\">&lt;&lt;</span> status<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofTexture <span class=\"token operator\">&amp;</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">getDepthTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>settings<span class=\"token punctuation\">.</span>depthStencilAsTexture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getDepthTexture(): frame buffer object \"</span> <span class=\"token operator\">&lt;&lt;</span> fbo <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" not allocated with depthStencilAsTexture\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> depthBufferTex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">const</span> ofTexture <span class=\"token operator\">&amp;</span> ofFbo<span class=\"token operator\">::</span><span class=\"token function\">getDepthTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>settings<span class=\"token punctuation\">.</span>depthStencilAsTexture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofFbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"getDepthTexture(): frame buffer object \"</span> <span class=\"token operator\">&lt;&lt;</span> fbo <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" not allocated with depthStencilAsTexture\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> depthBufferTex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//#endif</span>\n","type":"source"}}],"fetch":[]}