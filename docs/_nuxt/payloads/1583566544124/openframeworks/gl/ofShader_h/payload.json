{"data":[{"page":{"entry":{"name":"ofShader.h","filename":"ofShader.h","absolute":"/Users/gilbertsinnott/Code/openFrameworks/libs/openFrameworks/gl/ofShader.h","path":"/openframeworks/gl/ofShader_h","route":"/openframeworks/gl/ofShader.h","dir":"../libs/openFrameworks/gl","ext":"h","type":"source","id":252,"parent":235,"breadcrumbs":[235,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/*\n todo: add support for attachment of multiple shaders\n if a uniform or attribute isn't available, this will cause an error\n make sure to catch and report that error.\n */</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofFileUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"glm/fwd.hpp\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;unordered_map></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;map></span></span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofTexture</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofMatrix3x3</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofParameterGroup</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofBufferObject</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofBaseHasTexture</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofColor_</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> ofColor_<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span> ofFloatColor<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">enum</span> ofLogLevel<span class=\"token operator\">:</span> <span class=\"token keyword\">short</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">struct</span> ofShaderSettings <span class=\"token punctuation\">{</span>\n    std<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span>GLuint<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path<span class=\"token operator\">></span> shaderFiles<span class=\"token punctuation\">;</span>\n    std<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span>GLuint<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">></span> shaderSources<span class=\"token punctuation\">;</span>\n    std<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">></span> intDefines<span class=\"token punctuation\">;</span>\n    std<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span><span class=\"token operator\">></span> floatDefines<span class=\"token punctuation\">;</span>\n    std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path sourceDirectoryPath<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">bool</span> bindDefaults <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofShader</span> <span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">struct</span> Source<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">Source</span><span class=\"token punctuation\">(</span>GLuint type<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> source<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path <span class=\"token operator\">&amp;</span> directoryPath<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token operator\">:</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">,</span><span class=\"token function\">source</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">,</span><span class=\"token function\">directoryPath</span><span class=\"token punctuation\">(</span>directoryPath<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token function\">Source</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\t\tGLuint type<span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token operator\">::</span>string source<span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token operator\">::</span>string expandedSource<span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path directoryPath<span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">></span>   intDefines<span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span><span class=\"token operator\">></span> floatDefines<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">ofShader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">~</span><span class=\"token function\">ofShader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofShader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofShader <span class=\"token operator\">&amp;</span> shader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofShader <span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofShader <span class=\"token operator\">&amp;</span> shader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofShader</span><span class=\"token punctuation\">(</span>ofShader <span class=\"token operator\">&amp;&amp;</span> shader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofShader <span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>ofShader <span class=\"token operator\">&amp;&amp;</span> shader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path<span class=\"token operator\">&amp;</span> shaderName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path<span class=\"token operator\">&amp;</span> vertName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path<span class=\"token operator\">&amp;</span> fragName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path<span class=\"token operator\">&amp;</span> geomName<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> !defined(TARGET_OPENGLES) &amp;&amp; defined(glDispatchCompute)</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">loadCompute</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path<span class=\"token operator\">&amp;</span> shaderName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> !defined(TARGET_OPENGLES)</span>\n\t<span class=\"token keyword\">struct</span> TransformFeedbackSettings <span class=\"token punctuation\">{</span>\n\t\tstd<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span>GLuint<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path<span class=\"token operator\">></span> shaderFiles<span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span>GLuint<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">></span> shaderSources<span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token operator\">></span> varyingsToCapture<span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">></span> intDefines<span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span><span class=\"token operator\">></span> floatDefines<span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path sourceDirectoryPath<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span> bindDefaults <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\tGLuint bufferMode <span class=\"token operator\">=</span> GL_INTERLEAVED_ATTRIBS<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// GL_INTERLEAVED_ATTRIBS or GL_SEPARATE_ATTRIBS</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// a range of the buffer will be bound with glBindBufferRange</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// @see: https://www.opengl.org/sdk/docs/man4/html/glBindBufferRange.xhtml</span>\n\t<span class=\"token keyword\">struct</span> TransformFeedbackRangeBinding <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">TransformFeedbackRangeBinding</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofBufferObject <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">,</span> GLuint offset<span class=\"token punctuation\">,</span> GLuint size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tGLuint index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\tGLuint offset <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\tGLuint size<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">const</span> ofBufferObject <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">friend</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofShader</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// full buffer will be bound with glBindBufferBase</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// @see: https://www.opengl.org/sdk/docs/man4/html/glBindBufferBase.xhtml</span>\n\t<span class=\"token keyword\">struct</span> TransformFeedbackBaseBinding <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">TransformFeedbackBaseBinding</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofBufferObject <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tGLuint index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">const</span> ofBufferObject <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">friend</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofShader</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofShaderSettings <span class=\"token operator\">&amp;</span> settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> !defined(TARGET_OPENGLES)</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> TransformFeedbackSettings <span class=\"token operator\">&amp;</span> settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// these are essential to call before linking the program with geometry shaders</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setGeometryInputType</span><span class=\"token punctuation\">(</span>GLenum type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// type: GL_POINTS, GL_LINES, GL_LINES_ADJACENCY_EXT, GL_TRIANGLES, GL_TRIANGLES_ADJACENCY_EXT</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setGeometryOutputType</span><span class=\"token punctuation\">(</span>GLenum type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// type: GL_POINTS, GL_LINE_STRIP or GL_TRIANGLE_STRIP</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setGeometryOutputCount</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> count<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\" spellcheck=\"true\">// set number of output vertices</span>\n\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">getGeometryMaxOutputCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\" spellcheck=\"true\">// returns maximum number of supported vertices</span>\n\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">unload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">isLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> !defined(TARGET_OPENGLES)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">beginTransformFeedback</span><span class=\"token punctuation\">(</span>GLenum mode<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">beginTransformFeedback</span><span class=\"token punctuation\">(</span>GLenum mode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> TransformFeedbackRangeBinding <span class=\"token operator\">&amp;</span> binding<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">beginTransformFeedback</span><span class=\"token punctuation\">(</span>GLenum mode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>TransformFeedbackRangeBinding<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> binding<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">beginTransformFeedback</span><span class=\"token punctuation\">(</span>GLenum mode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> TransformFeedbackBaseBinding <span class=\"token operator\">&amp;</span> binding<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">beginTransformFeedback</span><span class=\"token punctuation\">(</span>GLenum mode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>TransformFeedbackBaseBinding<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> binding<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">endTransformFeedback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">endTransformFeedback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> TransformFeedbackRangeBinding <span class=\"token operator\">&amp;</span> binding<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">endTransformFeedback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>TransformFeedbackRangeBinding<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> binding<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">endTransformFeedback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> TransformFeedbackBaseBinding <span class=\"token operator\">&amp;</span> binding<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">endTransformFeedback</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>TransformFeedbackBaseBinding<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> binding<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> !defined(TARGET_OPENGLES) &amp;&amp; defined(glDispatchCompute)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">dispatchCompute</span><span class=\"token punctuation\">(</span>GLuint x<span class=\"token punctuation\">,</span> GLuint y<span class=\"token punctuation\">,</span> GLuint z<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// set a texture reference</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setUniformTexture</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofBaseHasTexture<span class=\"token operator\">&amp;</span> img<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> textureLocation<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setUniformTexture</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofTexture<span class=\"token operator\">&amp;</span> img<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> textureLocation<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setUniformTexture</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> textureTarget<span class=\"token punctuation\">,</span> GLint textureID<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> textureLocation<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// set a single uniform value</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setUniform1i</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setUniform2i</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> v2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setUniform3i</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> v2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> v3<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setUniform4i</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> v1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> v2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> v3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> v4<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setUniform1f</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> v1<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setUniform2f</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> v1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> v2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setUniform3f</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> v1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> v2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> v3<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setUniform4f</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> v1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> v2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> v3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> v4<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setUniform2f</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2 <span class=\"token operator\">&amp;</span> v<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setUniform3f</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3 <span class=\"token operator\">&amp;</span> v<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setUniform4f</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec4 <span class=\"token operator\">&amp;</span> v<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setUniform4f</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofFloatColor <span class=\"token operator\">&amp;</span> v<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// set an array of uniform values</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setUniform1iv</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span><span class=\"token operator\">*</span> v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setUniform2iv</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span><span class=\"token operator\">*</span> v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setUniform3iv</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span><span class=\"token operator\">*</span> v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setUniform4iv</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">int</span><span class=\"token operator\">*</span> v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setUniform1fv</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setUniform2fv</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setUniform3fv</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setUniform4fv</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setUniforms</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofParameterGroup <span class=\"token operator\">&amp;</span> parameters<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// note: it may be more optimal to use a 4x4 matrix than a 3x3 matrix, if possible</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setUniformMatrix3f</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat3 <span class=\"token operator\">&amp;</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setUniformMatrix4f</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span> m<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\tGLint <span class=\"token function\">getUniformLocation</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// set attributes that vary per vertex (look up the location before glBegin)</span>\n\tGLint <span class=\"token function\">getAttributeLocation</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> GLEW_ARB_uniform_buffer_object</span>\n\tGLint <span class=\"token function\">getUniformBlockIndex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\tGLint <span class=\"token function\">getUniformBlockBinding</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">bindUniformBlock</span><span class=\"token punctuation\">(</span>GLuint bindind<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">printActiveUniformBlocks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setAttribute1s</span><span class=\"token punctuation\">(</span>GLint location<span class=\"token punctuation\">,</span> <span class=\"token keyword\">short</span> v1<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setAttribute2s</span><span class=\"token punctuation\">(</span>GLint location<span class=\"token punctuation\">,</span> <span class=\"token keyword\">short</span> v1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">short</span> v2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setAttribute3s</span><span class=\"token punctuation\">(</span>GLint location<span class=\"token punctuation\">,</span> <span class=\"token keyword\">short</span> v1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">short</span> v2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">short</span> v3<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setAttribute4s</span><span class=\"token punctuation\">(</span>GLint location<span class=\"token punctuation\">,</span> <span class=\"token keyword\">short</span> v1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">short</span> v2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">short</span> v3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">short</span> v4<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setAttribute1f</span><span class=\"token punctuation\">(</span>GLint location<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> v1<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setAttribute2f</span><span class=\"token punctuation\">(</span>GLint location<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> v1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> v2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setAttribute3f</span><span class=\"token punctuation\">(</span>GLint location<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> v1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> v2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> v3<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setAttribute4f</span><span class=\"token punctuation\">(</span>GLint location<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> v1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> v2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> v3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> v4<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setAttribute1d</span><span class=\"token punctuation\">(</span>GLint location<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> v1<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setAttribute2d</span><span class=\"token punctuation\">(</span>GLint location<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> v1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> v2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setAttribute3d</span><span class=\"token punctuation\">(</span>GLint location<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> v1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> v2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> v3<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setAttribute4d</span><span class=\"token punctuation\">(</span>GLint location<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> v1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> v2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> v3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> v4<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setAttribute1fv</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> v<span class=\"token punctuation\">,</span> GLsizei stride<span class=\"token operator\">=</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setAttribute2fv</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> v<span class=\"token punctuation\">,</span> GLsizei stride<span class=\"token operator\">=</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setAttribute3fv</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> v<span class=\"token punctuation\">,</span> GLsizei stride<span class=\"token operator\">=</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setAttribute4fv</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span><span class=\"token operator\">*</span> v<span class=\"token punctuation\">,</span> GLsizei stride<span class=\"token operator\">=</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">bindAttribute</span><span class=\"token punctuation\">(</span>GLuint location<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">printActiveUniforms</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">printActiveAttributes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token comment\" spellcheck=\"true\">// advanced use</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// these methods create and compile a shader from source or file</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// type: GL_VERTEX_SHADER, GL_FRAGMENT_SHADER, GL_GEOMETRY_SHADER_EXT etc.</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GLenum type<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>string source<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>string sourceDirectoryPath <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">setupShaderFromFile</span><span class=\"token punctuation\">(</span>GLenum type<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path<span class=\"token operator\">&amp;</span> filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// links program with all compiled shaders</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">linkProgram</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// binds default uniforms and attributes, only useful for</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// fixed pipeline simulation under programmable renderer</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// has to be called before linking</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">bindDefaults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tGLuint <span class=\"token function\">getProgram</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\tGLuint <span class=\"token function\">getShader</span><span class=\"token punctuation\">(</span>GLenum type<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">bool</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">==</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofShader <span class=\"token operator\">&amp;</span> other<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">!=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofShader <span class=\"token operator\">&amp;</span> other<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token comment\" spellcheck=\"true\">// these are used only for openGL ES2 or GL3/4 using the programmable GL renderer</span>\n\t<span class=\"token keyword\">enum</span> defaultAttributes<span class=\"token punctuation\">{</span>\n\t\tPOSITION_ATTRIBUTE<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\" spellcheck=\"true\">// tig: was =1, and BOY, what a performance hog this was!!! see: http://www.chromium.org/nativeclient/how-tos/3d-tips-and-best-practices</span>\n\t\tCOLOR_ATTRIBUTE<span class=\"token punctuation\">,</span>\n\t\tNORMAL_ATTRIBUTE<span class=\"token punctuation\">,</span>\n\t\tTEXCOORD_ATTRIBUTE<span class=\"token punctuation\">,</span>\n\t\tINDEX_ATTRIBUTE  <span class=\"token comment\" spellcheck=\"true\">// usually not used except for compute shades</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// @brief returns the shader source as it was passed to the GLSL compiler</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// @param type (GL_VERTEX_SHADER | GL_FRAGMENT_SHADER | GL_GEOMETRY_SHADER_EXT) the shader source you'd like to inspect.</span>\n\tstd<span class=\"token operator\">::</span>string <span class=\"token function\">getShaderSource</span><span class=\"token punctuation\">(</span>GLenum type<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\tGLuint program <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> bLoaded <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">struct</span> Shader<span class=\"token punctuation\">{</span>\n\t\tGLuint id<span class=\"token punctuation\">;</span>\n\t\tSource source<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\tstd<span class=\"token operator\">::</span>unordered_map<span class=\"token operator\">&lt;</span>GLenum<span class=\"token punctuation\">,</span> Shader<span class=\"token operator\">></span> shaders<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>unordered_map<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token punctuation\">,</span> GLint<span class=\"token operator\">></span> uniformsCache<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">mutable</span> std<span class=\"token operator\">::</span>unordered_map<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token punctuation\">,</span> GLint<span class=\"token operator\">></span> attributesBindingsCache<span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\tstd<span class=\"token operator\">::</span>unordered_map<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token punctuation\">,</span> GLint<span class=\"token operator\">></span> uniformBlocksCache<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>Source <span class=\"token operator\">&amp;&amp;</span> source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofShader<span class=\"token operator\">::</span>Source <span class=\"token function\">sourceFromFile</span><span class=\"token punctuation\">(</span>GLenum type<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path<span class=\"token operator\">&amp;</span> filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">checkProgramInfoLog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> <span class=\"token function\">checkProgramLinkStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">checkShaderInfoLog</span><span class=\"token punctuation\">(</span>GLuint shader<span class=\"token punctuation\">,</span> GLenum type<span class=\"token punctuation\">,</span> ofLogLevel logLevel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setDefineConstantTemp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> T value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setConstantTemp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> type<span class=\"token punctuation\">,</span> T value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">static</span> std<span class=\"token operator\">::</span>string <span class=\"token function\">nameForType</span><span class=\"token punctuation\">(</span>GLenum type<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// @brief\t\t\tMimics the #include behaviour of the c preprocessor</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// @description\tIncludes files specified using the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t\t\t\t\t'#pragma include &lt;filepath>' directive.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// @note\t\t\tInclude paths are always specified _relative to the including file's current path_</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///\t@note\t\t\tRecursive #pragma include statements are possible</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// @note\t\t\tIncludes will be processed up to 32 levels deep</span>\n\t<span class=\"token keyword\">static</span> std<span class=\"token operator\">::</span>string <span class=\"token function\">parseForIncludes</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> source<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path<span class=\"token operator\">&amp;</span> sourceDirectoryPath <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> std<span class=\"token operator\">::</span>string <span class=\"token function\">parseForIncludes</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> source<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> included<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> level <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path<span class=\"token operator\">&amp;</span> sourceDirectoryPath <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">checkAndCreateProgram</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">unloadGL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">reloadGL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n","type":"source"}}],"fetch":[]}