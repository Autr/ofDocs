{"data":[{"page":{"entry":{"name":"ofMaterial.h","filename":"ofMaterial.h","absolute":"/Users/gilbertsinnott/Code/openFrameworks/libs/openFrameworks/gl/ofMaterial.h","path":"/openframeworks/gl/ofMaterial_h","route":"/openframeworks/gl/ofMaterial.h","dir":"../libs/openFrameworks/gl","ext":"h","type":"source","id":250,"parent":235,"breadcrumbs":[235,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofColor.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofShader.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"glm/fwd.hpp\"</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">// Material concept: \"Anything graphical applied to the polygons\"</span>\n<span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token comment\" spellcheck=\"true\">// Diederick Huijbers &lt;diederick[at]apollomedia[dot]nl></span>\n<span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token comment\" spellcheck=\"true\">// references:</span>\n<span class=\"token comment\" spellcheck=\"true\">//   * Wavefront material file spec: http://people.sc.fsu.edu/~jburkardt/data/mtl/mtl.html</span>\n<span class=\"token comment\" spellcheck=\"true\">//   * Ogre3D: http://www.ogre3d.org/docs/manual/manual_11.html#SEC14</span>\n<span class=\"token comment\" spellcheck=\"true\">//   * assim material: http://assimp.sourceforge.net/lib_html/ai_material_8h.html#7dd415ff703a2cc53d1c22ddbbd7dde0</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofGLProgrammableRenderer</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\class ofMaterialSettings</span>\n<span class=\"token comment\" spellcheck=\"true\">/// wrapper for material color properties and other settings</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// customUniforms: adds some uniforms to the shader so they can be accessed</span>\n<span class=\"token comment\" spellcheck=\"true\">/// from the postFragment function</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// postFragment: Adds a function to the material shader that will get</span>\n<span class=\"token comment\" spellcheck=\"true\">/// executed after all lighting and material calculations</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// The source passed has to include a function with the</span>\n<span class=\"token comment\" spellcheck=\"true\">/// signature:</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// vec4 postFragment(vec4 localColor){</span>\n<span class=\"token comment\" spellcheck=\"true\">///     return localColor;</span>\n<span class=\"token comment\" spellcheck=\"true\">/// }</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// which will receive the final color after calculating all</span>\n<span class=\"token comment\" spellcheck=\"true\">/// the lights and material and can modify it and return a new color</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// The function has access to the following variables:</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///     vec2 v_texcoord;          // texture coordinate</span>\n<span class=\"token comment\" spellcheck=\"true\">///     vec3 v_normal;            // normal at this fragment</span>\n<span class=\"token comment\" spellcheck=\"true\">///     vec3 v_transformedNormal; // normal multiplied by the normal matrix</span>\n<span class=\"token comment\" spellcheck=\"true\">///     vec3 v_eyePosition;       // position of this fragment in eye coordinates</span>\n<span class=\"token comment\" spellcheck=\"true\">///     vec3 v_worldPosition;     // position of this fragment in world coordinates</span>\n<span class=\"token comment\" spellcheck=\"true\">///     vec4 v_color;             // color interpolated from the vertex colors</span>\n<span class=\"token comment\" spellcheck=\"true\">///     SAMPLER tex0;             // the bound texture if there's any</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///     vec4 mat_ambient;         // material ambient color</span>\n<span class=\"token comment\" spellcheck=\"true\">///     vec4 mat_diffuse;         // material diffuse color</span>\n<span class=\"token comment\" spellcheck=\"true\">///     vec4 mat_specular;        // material specular</span>\n<span class=\"token comment\" spellcheck=\"true\">///     vec4 mat_emissive;        // material emissive</span>\n<span class=\"token comment\" spellcheck=\"true\">///     float mat_shininess;      // material shininess</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///     vec4 global_ambient;      // global ambient light</span>\n<span class=\"token comment\" spellcheck=\"true\">///     mat4 modelViewMatrix;     // model view matrix</span>\n<span class=\"token comment\" spellcheck=\"true\">///     mat4 projectionMatrix;    // projection matrix</span>\n<span class=\"token comment\" spellcheck=\"true\">///     mat4 textureMatrix;       // texture matrix</span>\n<span class=\"token comment\" spellcheck=\"true\">///     mat4 modelViewProjectionMatrix; // model view projection matrix</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///     MAX_LIGHTS                // the total number of lights in the scen</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">/// And an array of lights</span>\n<span class=\"token comment\" spellcheck=\"true\">/// each light has the following properties:</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///     float lights[i].enabled;</span>\n<span class=\"token comment\" spellcheck=\"true\">///     vec4 lights[i].ambient;</span>\n<span class=\"token comment\" spellcheck=\"true\">///     float lights[i].type;     // 0 = pointlight</span>\n<span class=\"token comment\" spellcheck=\"true\">///                               // 1 = directionlight</span>\n<span class=\"token comment\" spellcheck=\"true\">///                               // 2 = spotlight</span>\n<span class=\"token comment\" spellcheck=\"true\">///                               // 3 = area</span>\n<span class=\"token comment\" spellcheck=\"true\">///     vec4 lights[i].position;  // where are we</span>\n<span class=\"token comment\" spellcheck=\"true\">///     vec4 lights[i].diffuse;   // how diffuse</span>\n<span class=\"token comment\" spellcheck=\"true\">///     vec4 lights[i].specular;  // what kinda specular stuff we got going on?</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///     // attenuation, how the light attenuates with the distance</span>\n<span class=\"token comment\" spellcheck=\"true\">///     float lights[i].constantAttenuation;</span>\n<span class=\"token comment\" spellcheck=\"true\">///     float lights[i].linearAttenuation;</span>\n<span class=\"token comment\" spellcheck=\"true\">///     float lights[i].quadraticAttenuation;</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///     // only for spot</span>\n<span class=\"token comment\" spellcheck=\"true\">///     float lights[i].spotCutoff;</span>\n<span class=\"token comment\" spellcheck=\"true\">///     float lights[i].spotCosCutoff;</span>\n<span class=\"token comment\" spellcheck=\"true\">///     float lights[i].spotExponent;</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///     // spot and area</span>\n<span class=\"token comment\" spellcheck=\"true\">///     vec3 lights[i].spotDirection;</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///     // only for directional</span>\n<span class=\"token comment\" spellcheck=\"true\">///     vec3 lights[i].halfVector;</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token comment\" spellcheck=\"true\">///     // only for area</span>\n<span class=\"token comment\" spellcheck=\"true\">///     float lights[i].width;</span>\n<span class=\"token comment\" spellcheck=\"true\">///     float lights[i].height;</span>\n<span class=\"token comment\" spellcheck=\"true\">///     vec3 lights[i].right;</span>\n<span class=\"token comment\" spellcheck=\"true\">///     vec3 lights[i].up;</span>\n<span class=\"token comment\" spellcheck=\"true\">///</span>\n<span class=\"token keyword\">struct</span> ofMaterialSettings <span class=\"token punctuation\">{</span>\n    ofFloatColor diffuse<span class=\"token punctuation\">{</span> <span class=\"token number\">0.8f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.8f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.8f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0f</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">///&lt; diffuse reflectance</span>\n    ofFloatColor ambient<span class=\"token punctuation\">{</span> <span class=\"token number\">0.2f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0f</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">///&lt; ambient reflectance</span>\n    ofFloatColor specular<span class=\"token punctuation\">{</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0f</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">///&lt; specular reflectance</span>\n    ofFloatColor emissive<span class=\"token punctuation\">{</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0f</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">///&lt; emitted light intensity</span>\n    <span class=\"token keyword\">float</span> shininess<span class=\"token punctuation\">{</span> <span class=\"token number\">0.2f</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">///&lt; specular exponent</span>\n    std<span class=\"token operator\">::</span>string postFragment<span class=\"token punctuation\">;</span>\n    std<span class=\"token operator\">::</span>string customUniforms<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\class ofBaseMaterial</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief material parameter properties that can be applied to vertices in the OpenGL lighting model</span>\n<span class=\"token comment\" spellcheck=\"true\">/// used in determining both the intensity and color of reflected light based on the lighting model in use</span>\n<span class=\"token comment\" spellcheck=\"true\">/// and if the vertices are on a front or back sided face</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofBaseMaterial</span><span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">ofBaseMaterial</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return the diffuse reflectance</span>\n\t<span class=\"token keyword\">virtual</span> ofFloatColor <span class=\"token function\">getDiffuseColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return the ambient reflectance</span>\n\t<span class=\"token keyword\">virtual</span> ofFloatColor <span class=\"token function\">getAmbientColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return the specular reflectance</span>\n\t<span class=\"token keyword\">virtual</span> ofFloatColor <span class=\"token function\">getSpecularColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return the emitted light intensity</span>\n\t<span class=\"token keyword\">virtual</span> ofFloatColor <span class=\"token function\">getEmissiveColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return the specular exponent</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">float</span> <span class=\"token function\">getShininess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief begin using this material's properties</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief end using this material's properties</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief create and return a shader used to implement the materials effect for a given renderer</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param textureTarget an implementation-specific value to specify the type of shader to use</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param renderer programmable renderer instance to create the material shader for</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">const</span> ofShader <span class=\"token operator\">&amp;</span> <span class=\"token function\">getShader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> textureTarget<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> geometryHasColor<span class=\"token punctuation\">,</span> ofGLProgrammableRenderer <span class=\"token operator\">&amp;</span> renderer<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief upload the given renderer's normal matrix to the material shader</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param shader the material shader, created by getShader()</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param renderer programmable renderer instance that uses the material shader</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">uploadMatrices</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofShader <span class=\"token operator\">&amp;</span> shader<span class=\"token punctuation\">,</span>ofGLProgrammableRenderer <span class=\"token operator\">&amp;</span> renderer<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief update the material properties to the material shader</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param shader the material shader, created by getShader()</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param renderer programmable renderer instance that uses the material shader</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">updateMaterial</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofShader <span class=\"token operator\">&amp;</span> shader<span class=\"token punctuation\">,</span>ofGLProgrammableRenderer <span class=\"token operator\">&amp;</span> renderer<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief update the given renderer's lights to the material shader</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param shader the material shader, created by getShader()</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param renderer programmable renderer instance that uses the material shader</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">updateLights</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofShader <span class=\"token operator\">&amp;</span> shader<span class=\"token punctuation\">,</span>ofGLProgrammableRenderer <span class=\"token operator\">&amp;</span> renderer<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\class ofMaterial</span>\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief material parameter properties that can be applied to vertices in the OpenGL lighting model</span>\n<span class=\"token comment\" spellcheck=\"true\">/// used in determining both the intensity and color of reflected light based on the lighting model in use</span>\n<span class=\"token comment\" spellcheck=\"true\">/// and if the vertices are on a front or back sided face</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofMaterial</span><span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofBaseMaterial <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">ofMaterial</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">ofMaterial</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief setup using settings struct</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param settings color &amp; other properties struct</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofMaterialSettings <span class=\"token operator\">&amp;</span> settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief set all material colors: reflectance type &amp; light intensity</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param oDiffuse the diffuse reflectance</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param oAmbient the ambient reflectance</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param oSpecular the specular reflectance</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param oEmmissive the emitted light intensity</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setColors</span><span class=\"token punctuation\">(</span>ofFloatColor oDiffuse<span class=\"token punctuation\">,</span> ofFloatColor oAmbient<span class=\"token punctuation\">,</span> ofFloatColor oSpecular<span class=\"token punctuation\">,</span> ofFloatColor emissive<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief set the diffuse reflectance</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param oDiffuse the diffuse reflectance</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setDiffuseColor</span><span class=\"token punctuation\">(</span>ofFloatColor oDiffuse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief set the ambient reflectance</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param oAmbient the ambient reflectance</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setAmbientColor</span><span class=\"token punctuation\">(</span>ofFloatColor oAmbient<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief set the specular reflectance</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param oSpecular the specular reflectance</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setSpecularColor</span><span class=\"token punctuation\">(</span>ofFloatColor oSpecular<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief set the emitted light intensity</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\param oEmmissive the emitted light intensity</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setEmissiveColor</span><span class=\"token punctuation\">(</span>ofFloatColor oEmmisive<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief set the specular exponent</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setShininess</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> nShininess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// documented in ofBaseMaterial</span>\n\tofFloatColor <span class=\"token function\">getDiffuseColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\tofFloatColor <span class=\"token function\">getAmbientColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\tofFloatColor <span class=\"token function\">getSpecularColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\tofFloatColor <span class=\"token function\">getEmissiveColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> <span class=\"token function\">getShininess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\return material color properties data struct</span>\n\t<span class=\"token keyword\">typedef</span> ofMaterialSettings Data<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use getSettings() instead\"</span><span class=\"token punctuation\">,</span> Data <span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofMaterialSettings <span class=\"token function\">getSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief set the material color properties data struct</span>\n\t<span class=\"token function\">OF_DEPRECATED_MSG</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Use setup(settings) instead\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofMaterial<span class=\"token operator\">::</span>Data<span class=\"token operator\">&amp;</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// documented in ofBaseMaterial</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setCustomUniform1f</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setCustomUniform2f</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span>vec2 value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setCustomUniform3f</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span>vec3 value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setCustomUniform4f</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span>vec4 value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setCustomUniformMatrix4f</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span>mat4 value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setCustomUniformMatrix3f</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span>mat3 value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setCustomUniform1i</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setCustomUniform2i</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span>vec<span class=\"token operator\">&lt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span>precision<span class=\"token operator\">::</span>defaultp<span class=\"token operator\">></span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setCustomUniform3i</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span>vec<span class=\"token operator\">&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span>precision<span class=\"token operator\">::</span>defaultp<span class=\"token operator\">></span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setCustomUniform4i</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span>vec<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span>precision<span class=\"token operator\">::</span>defaultp<span class=\"token operator\">></span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setCustomUniformTexture</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofTexture <span class=\"token operator\">&amp;</span> value<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> textureLocation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setCustomUniformTexture</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> textureTarget<span class=\"token punctuation\">,</span> GLint textureID<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> textureLocation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">initShaders</span><span class=\"token punctuation\">(</span>ofGLProgrammableRenderer <span class=\"token operator\">&amp;</span> renderer<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> ofShader <span class=\"token operator\">&amp;</span> <span class=\"token function\">getShader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> textureTarget<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> geometryHasColor<span class=\"token punctuation\">,</span> ofGLProgrammableRenderer <span class=\"token operator\">&amp;</span> renderer<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">updateMaterial</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofShader <span class=\"token operator\">&amp;</span> shader<span class=\"token punctuation\">,</span>ofGLProgrammableRenderer <span class=\"token operator\">&amp;</span> renderer<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">updateLights</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofShader <span class=\"token operator\">&amp;</span> shader<span class=\"token punctuation\">,</span>ofGLProgrammableRenderer <span class=\"token operator\">&amp;</span> renderer<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\tofMaterialSettings data<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">struct</span> Shaders<span class=\"token punctuation\">{</span>\n\t\tofShader noTexture<span class=\"token punctuation\">;</span>\n\t\tofShader color<span class=\"token punctuation\">;</span>\n\t\tofShader texture2DColor<span class=\"token punctuation\">;</span>\n\t\tofShader textureRectColor<span class=\"token punctuation\">;</span>\n\t\tofShader texture2D<span class=\"token punctuation\">;</span>\n\t\tofShader textureRect<span class=\"token punctuation\">;</span>\n\t\tsize_t numLights<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">struct</span> TextureUnifom<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">int</span> textureTarget<span class=\"token punctuation\">;</span>\n\t\tGLint textureID<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> textureLocation<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">mutable</span> std<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>Shaders<span class=\"token operator\">>></span> shaders<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> std<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token punctuation\">,</span>std<span class=\"token operator\">::</span>weak_ptr<span class=\"token operator\">&lt;</span>Shaders<span class=\"token operator\">>></span><span class=\"token operator\">></span> shadersMap<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> std<span class=\"token operator\">::</span>string vertexShader<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">static</span> std<span class=\"token operator\">::</span>string fragmentShader<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span><span class=\"token operator\">></span> uniforms1f<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span>vec2<span class=\"token operator\">></span> uniforms2f<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">></span> uniforms3f<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span>vec4<span class=\"token operator\">></span> uniforms4f<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span><span class=\"token operator\">></span> uniforms1i<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span>vec<span class=\"token operator\">&lt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span>precision<span class=\"token operator\">::</span>defaultp<span class=\"token operator\">>></span> uniforms2i<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span>vec<span class=\"token operator\">&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span>precision<span class=\"token operator\">::</span>defaultp<span class=\"token operator\">>></span> uniforms3i<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span>vec<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span>precision<span class=\"token operator\">::</span>defaultp<span class=\"token operator\">>></span> uniforms4i<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span>mat4<span class=\"token operator\">></span> uniforms4m<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span>mat3<span class=\"token operator\">></span> uniforms3m<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>string<span class=\"token punctuation\">,</span> TextureUnifom<span class=\"token operator\">></span> uniformstex<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n","type":"source"}}],"fetch":[]}