{"data":[{"page":{"entry":{"name":"ofAppBaseWindow.h","filename":"ofAppBaseWindow.h","absolute":"/Users/gilbertsinnott/Code/openFrameworks/libs/openFrameworks/app/ofAppBaseWindow.h","path":"/openframeworks/app/ofAppBaseWindow_h","route":"/openframeworks/app/ofAppBaseWindow.h","dir":"../libs/openFrameworks/app","ext":"h","type":"source","id":208,"parent":207,"breadcrumbs":[207,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofWindowSettings.h\"</span></span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofBaseApp</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofBaseRenderer</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofCoreEvents</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_LINUX) &amp;&amp; !defined(TARGET_OPENGLES)</span>\n<span class=\"token keyword\">struct</span> __GLXcontextRec<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> __GLXcontextRec <span class=\"token operator\">*</span> GLXContext<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_LINUX) &amp;&amp; !defined(TARGET_RASPBERRY_PI_LEGACY)</span>\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> Window<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">struct</span> _XDisplay<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> _XDisplay Display<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofAppBaseWindow</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\n\t<span class=\"token function\">ofAppBaseWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">ofAppBaseWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofWindowSettings <span class=\"token operator\">&amp;</span> settings<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">getWindowShouldClose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setWindowShouldClose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> ofCoreEvents <span class=\"token operator\">&amp;</span> <span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofBaseRenderer<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token function\">renderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">hideCursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">showCursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>\t<span class=\"token function\">setWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>\t<span class=\"token function\">setWindowShape</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">virtual</span> glm<span class=\"token operator\">::</span>vec2\t<span class=\"token function\">getWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> glm<span class=\"token operator\">::</span>vec2\t<span class=\"token function\">getWindowSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> glm<span class=\"token operator\">::</span>vec2\t<span class=\"token function\">getScreenSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>\t\t\t<span class=\"token function\">setOrientation</span><span class=\"token punctuation\">(</span>ofOrientation orientation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> ofOrientation\t<span class=\"token function\">getOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> OF_ORIENTATION_DEFAULT<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span>\t<span class=\"token function\">doesHWOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//this is used by ofGetWidth and now determines the window width based on orientation</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">int</span>\t\t<span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">int</span>\t\t<span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>\t<span class=\"token function\">setWindowTitle</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">virtual</span> ofWindowMode\t<span class=\"token function\">getWindowMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> OF_WINDOW <span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>\t<span class=\"token function\">setFullscreen</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> fullscreen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>\t<span class=\"token function\">toggleFullscreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>\t<span class=\"token function\">enableSetupScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>\t<span class=\"token function\">disableSetupScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>\t<span class=\"token function\">setVerticalSync</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> enabled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span>    <span class=\"token function\">setClipboardString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> text<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">virtual</span> std<span class=\"token operator\">::</span>string  <span class=\"token function\">getClipboardString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">makeCurrent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">swapBuffers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">startRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">finishRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> <span class=\"token function\">getWindowContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_LINUX) &amp;&amp; !defined(TARGET_RASPBERRY_PI_LEGACY)</span>\n\t<span class=\"token keyword\">virtual</span> Display<span class=\"token operator\">*</span> <span class=\"token function\">getX11Display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> Window  <span class=\"token function\">getX11Window</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_LINUX) &amp;&amp; !defined(TARGET_OPENGLES)</span>\n\t<span class=\"token keyword\">virtual</span> GLXContext <span class=\"token function\">getGLXContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_LINUX) &amp;&amp; defined(TARGET_OPENGLES)</span>\n\t<span class=\"token keyword\">virtual</span> EGLDisplay <span class=\"token function\">getEGLDisplay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> EGLContext <span class=\"token function\">getEGLContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> EGLSurface <span class=\"token function\">getEGLSurface</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_OSX)</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> <span class=\"token function\">getNSGLContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> <span class=\"token function\">getCocoaWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_WIN32)</span>\n\t<span class=\"token keyword\">virtual</span> HGLRC <span class=\"token function\">getWGLContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> HWND <span class=\"token function\">getWin32Window</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofAppBaseGLWindow</span><span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofAppBaseWindow<span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">ofAppBaseGLWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofGLWindowSettings <span class=\"token operator\">&amp;</span> settings<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofWindowSettings <span class=\"token operator\">&amp;</span> settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">const</span> ofGLWindowSettings <span class=\"token operator\">*</span> glSettings <span class=\"token operator\">=</span> <span class=\"token keyword\">dynamic_cast</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span> ofGLWindowSettings<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>glSettings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>glSettings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGLWindowSettings</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofAppBaseGLESWindow</span><span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofAppBaseWindow<span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">ofAppBaseGLESWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofGLESWindowSettings <span class=\"token operator\">&amp;</span> settings<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofWindowSettings <span class=\"token operator\">&amp;</span> settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">const</span> ofGLESWindowSettings <span class=\"token operator\">*</span> glSettings <span class=\"token operator\">=</span> <span class=\"token keyword\">dynamic_cast</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span> ofGLESWindowSettings<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>glSettings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>glSettings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGLESWindowSettings</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n","type":"source"}}],"fetch":[]}