{"data":[{"page":{"entry":{"name":"ofAppRunner.h","filename":"ofAppRunner.h","absolute":"/Users/gilbertsinnott/Code/openFrameworks/libs/openFrameworks/app/ofAppRunner.h","path":"/openframeworks/app/ofAppRunner_h","route":"/openframeworks/app/ofAppRunner.h","dir":"../libs/openFrameworks/app","ext":"h","type":"source","id":218,"parent":207,"breadcrumbs":[207,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofWindowSettings.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofMainLoop.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofRectangle.h\"</span></span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofAppBaseWindow</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofAppBaseGLWindow</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofAppBaseGLESWindow</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofAppGLFWWindow</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofBaseApp</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofBaseRenderer</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofCoreEvents</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetupOpenGL</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span> ofWindowMode screenMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\" spellcheck=\"true\">// sets up the opengl context!</span>\nstd<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofAppBaseWindow<span class=\"token operator\">></span> <span class=\"token function\">ofCreateWindow</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofWindowSettings <span class=\"token operator\">&amp;</span> settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\" spellcheck=\"true\">// sets up the opengl context!</span>\nstd<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofMainLoop<span class=\"token operator\">></span> <span class=\"token function\">ofGetMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetMainLoop</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofMainLoop<span class=\"token operator\">></span> mainLoop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Window<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetupOpenGL</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>Window<span class=\"token operator\">></span> windowPtr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span> ofWindowMode screenMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofInit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofWindowSettings settings<span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span><span class=\"token function\">setSize</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tsettings<span class=\"token punctuation\">.</span>windowMode <span class=\"token operator\">=</span> screenMode<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofGetMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">addWindow</span><span class=\"token punctuation\">(</span>windowPtr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\twindowPtr<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//special case so we preserve supplied settngs</span>\n<span class=\"token comment\" spellcheck=\"true\">//TODO: remove me when we remove the ofSetupOpenGL legacy approach.</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetupOpenGL</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofAppGLFWWindow<span class=\"token operator\">></span> windowPtr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span> ofWindowMode screenMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Window<span class=\"token operator\">></span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">noopDeleter</span><span class=\"token punctuation\">(</span>Window<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Window<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetupOpenGL</span><span class=\"token punctuation\">(</span>Window <span class=\"token operator\">*</span> windowPtr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span> ofWindowMode screenMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tstd<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>Window<span class=\"token operator\">></span> window <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>Window<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>windowPtr<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>function<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">(</span>Window <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>noopDeleter<span class=\"token operator\">&lt;</span>Window<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofSetupOpenGL</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>screenMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofRunApp</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofBaseApp<span class=\"token operator\">></span> <span class=\"token operator\">&amp;&amp;</span> OFSA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofRunApp</span><span class=\"token punctuation\">(</span>ofBaseApp <span class=\"token operator\">*</span> OFSA <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// will be deprecated</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofRunApp</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofAppBaseWindow<span class=\"token operator\">></span> window<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofBaseApp<span class=\"token operator\">></span> <span class=\"token operator\">&amp;&amp;</span> app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofRunMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\nofBaseApp <span class=\"token operator\">*</span> <span class=\"token function\">ofGetAppPtr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span>\t\t<span class=\"token function\">ofExit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> status<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------- time</span>\n<span class=\"token keyword\">float</span> \t\t<span class=\"token function\">ofGetFrameRate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">float</span> \t\t<span class=\"token function\">ofGetTargetFrameRate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nuint64_t\t<span class=\"token function\">ofGetFrameNum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> \t\t<span class=\"token function\">ofSetFrameRate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> targetRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">double</span>\t\t<span class=\"token function\">ofGetLastFrameTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span>\t\t<span class=\"token function\">ofSetTimeModeSystem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nuint64_t\t<span class=\"token function\">ofGetFixedStepForFps</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> fps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span>\t\t<span class=\"token function\">ofSetTimeModeFixedRate</span><span class=\"token punctuation\">(</span>uint64_t stepNanos <span class=\"token operator\">=</span> <span class=\"token function\">ofGetFixedStepForFps</span><span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//default nanos for 1 frame at 60fps</span>\n<span class=\"token keyword\">void</span>\t\t<span class=\"token function\">ofSetTimeModeFiltered</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> alpha <span class=\"token operator\">=</span> <span class=\"token number\">0.9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span>\t\t<span class=\"token function\">ofSetOrientation</span><span class=\"token punctuation\">(</span>ofOrientation orientation<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> vFlip<span class=\"token operator\">=</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nofOrientation\t\t\t<span class=\"token function\">ofGetOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------- cursor</span>\n<span class=\"token keyword\">void</span> \t\t<span class=\"token function\">ofHideCursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> \t\t<span class=\"token function\">ofShowCursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------- window / screen</span>\n<span class=\"token keyword\">int</span> \t\t<span class=\"token function\">ofGetWindowPositionX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> \t\t<span class=\"token function\">ofGetWindowPositionY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> \t\t<span class=\"token function\">ofGetScreenWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> \t\t<span class=\"token function\">ofGetScreenHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span>\t\t\t<span class=\"token function\">ofGetWindowMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> \t\t<span class=\"token function\">ofGetWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\" spellcheck=\"true\">// ofGetWidth is correct for orientation</span>\n<span class=\"token keyword\">int</span> \t\t<span class=\"token function\">ofGetHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> \t\t<span class=\"token function\">ofGetWindowWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t<span class=\"token comment\" spellcheck=\"true\">// ofGetWindowWidth is correct for actual window coordinates - so doesn't change with orientation.</span>\n<span class=\"token keyword\">int</span> \t\t<span class=\"token function\">ofGetWindowHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nstd<span class=\"token operator\">::</span>string <span class=\"token function\">ofGetClipboardString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span>\t\t<span class=\"token function\">ofSetClipboardString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\returns a random number between 0 and the width of the window.</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofRandomWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\returns a random number between 0 and the height of the window.</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofRandomHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">bool</span>\t\t<span class=\"token function\">ofDoesHWOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nglm<span class=\"token operator\">::</span>vec2\t<span class=\"token function\">ofGetWindowSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nofRectangle\t<span class=\"token function\">ofGetWindowRect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nofAppBaseWindow <span class=\"token operator\">*</span> <span class=\"token function\">ofGetWindowPtr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nstd<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofAppBaseWindow<span class=\"token operator\">></span> <span class=\"token function\">ofGetCurrentWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> \t\t<span class=\"token function\">ofSetWindowPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> \t\t<span class=\"token function\">ofSetWindowShape</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> \t\t<span class=\"token function\">ofSetWindowTitle</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>string title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span>\t\t<span class=\"token function\">ofEnableSetupScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span>\t\t<span class=\"token function\">ofDisableSetupScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span>\t\t<span class=\"token function\">ofSetFullscreen</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> fullscreen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span>\t\t<span class=\"token function\">ofToggleFullscreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------- sync</span>\n<span class=\"token keyword\">void</span> \t\t<span class=\"token function\">ofSetVerticalSync</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bSync<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nofCoreEvents <span class=\"token operator\">&amp;</span> <span class=\"token function\">ofEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetCurrentRenderer</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofBaseRenderer<span class=\"token operator\">></span> renderer<span class=\"token punctuation\">,</span><span class=\"token keyword\">bool</span> setDefaults<span class=\"token operator\">=</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nstd<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofBaseRenderer<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> <span class=\"token function\">ofGetCurrentRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSetEscapeQuitsApp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bQuitOnEsc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------- native window handles</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_LINUX) &amp;&amp; !defined(TARGET_RASPBERRY_PI_LEGACY)</span>\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> Window<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">struct</span> _XDisplay<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> _XDisplay Display<span class=\"token punctuation\">;</span>\nDisplay<span class=\"token operator\">*</span> <span class=\"token function\">ofGetX11Display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nWindow  <span class=\"token function\">ofGetX11Window</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_LINUX) &amp;&amp; !defined(TARGET_OPENGLES)</span>\n<span class=\"token keyword\">struct</span> __GLXcontextRec<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> __GLXcontextRec <span class=\"token operator\">*</span> GLXContext<span class=\"token punctuation\">;</span>\nGLXContext <span class=\"token function\">ofGetGLXContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_LINUX) &amp;&amp; defined(TARGET_OPENGLES)</span>\nEGLDisplay <span class=\"token function\">ofGetEGLDisplay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nEGLContext <span class=\"token function\">ofGetEGLContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nEGLSurface <span class=\"token function\">ofGetEGLSurface</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_OSX)</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> <span class=\"token function\">ofGetNSGLContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> <span class=\"token function\">ofGetCocoaWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_WIN32)</span>\n\tHGLRC <span class=\"token function\">ofGetWGLContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tHWND <span class=\"token function\">ofGetWin32Window</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n","type":"source"}}],"fetch":[]}