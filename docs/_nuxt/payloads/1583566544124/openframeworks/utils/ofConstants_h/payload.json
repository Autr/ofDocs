{"data":[{"page":{"entry":{"name":"ofConstants.h","filename":"ofConstants.h","absolute":"/Users/gilbertsinnott/Code/openFrameworks/libs/openFrameworks/utils/ofConstants.h","path":"/openframeworks/utils/ofConstants_h","route":"/openframeworks/utils/ofConstants.h","dir":"../libs/openFrameworks/utils","ext":"h","type":"source","id":330,"parent":329,"breadcrumbs":[329,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdint.h></span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_VERSION_MAJOR 0</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_VERSION_MINOR 11</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_VERSION_PATCH 0</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_VERSION_PRE_RELEASE \"master\"</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// Set to 1 for compatibility with old projects using ofVec instead of glm</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> OF_USE_LEGACY_VECTOR_MATH</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_USE_LEGACY_VECTOR_MATH 0</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">// This enables glm's old behavior of initializing with non garbage values</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> GLM_FORCE_CTOR_INIT</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// Set to 1 to use std filesystem instead of boost's</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> OF_USING_STD_FS</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_USING_STD_FS 0</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/// \\brief This enumerates the targeted operating systems or platforms.</span>\n<span class=\"token keyword\">enum</span> ofTargetPlatform<span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief 32- and 64-bit x86 architecture on Mac OSX.</span>\n\tOF_TARGET_OSX<span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief 32- and 64-bit x86 architecture using MinGW on Windows OS.</span>\n    OF_TARGET_MINGW<span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief 32- and 64-bit x86 architecture using Visual Studio on Windows OS.</span>\n\tOF_TARGET_WINVS<span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief 32- and 64-bit armv7, arm64, x86 (simulator) architecture Mac iOS.</span>\n\tOF_TARGET_IOS<span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief 32- and 64-bit armeabi-v7a and x86 Android OS.</span>\n\tOF_TARGET_ANDROID<span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief 32-bit x86 architecture on Linux OS.</span>\n\tOF_TARGET_LINUX<span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief 64-bit x86 architecture on Linux OS.</span>\n\tOF_TARGET_LINUX64<span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief 32-bit armv6 little endian architecture on Linux OS.</span>\n\tOF_TARGET_LINUXARMV6L<span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief 32-bit armv7 little endian architecture on Linux OS.</span>\n\tOF_TARGET_LINUXARMV7L<span class=\"token punctuation\">,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\brief Compiled to javascript using Emscripten.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/// \\sa https://github.com/kripken/emscripten</span>\n\tOF_TARGET_EMSCRIPTEN\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> OF_TARGET_IPHONE</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_TARGET_IPHONE OF_TARGET_IOS</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">// Cross-platform deprecation warning</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> __GNUC__</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// clang also has this defined. deprecated(message) is only for gcc>=4.5</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> ((__GNUC__ == 4) &amp;&amp; (__GNUC_MINOR__ >= 5)) || __GNUC__ > 4</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_DEPRECATED_MSG(message, ...) __VA_ARGS__ __attribute__ ((deprecated(message)))</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_DEPRECATED_MSG(message, ...) __VA_ARGS__ __attribute__ ((deprecated))</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_DEPRECATED(...) __VA_ARGS__ __attribute__ ((deprecated))</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_INTERNAL_DEPRECATED(...) __VA_ARGS__ __attribute__ ((deprecated(\"OF core deprecated\")))</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(_MSC_VER)</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_DEPRECATED_MSG(message, ...) __declspec(deprecated(message)) __VA_ARGS__</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_DEPRECATED(...) __declspec(deprecated) __VA_ARGS__</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_INTERNAL_DEPRECATED(...) __declspec(deprecated(\"OF core deprecated\")) __VA_ARGS__</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> message(\"WARNING: You need to implement DEPRECATED for this compiler\")</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_DEPRECATED_MSG(message, ...) __VA_ARGS__</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_DEPRECATED(...) __VA_ARGS__</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">//  find the system type --------</span>\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// \t\thelpful:</span>\n<span class=\"token comment\" spellcheck=\"true\">// \t\thttp://www.ogre3d.org/docs/api/html/OgrePlatform_8h-source.html</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined( __WIN32__ ) || defined( _WIN32 )</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TARGET_WIN32</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined( __APPLE_CC__)</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;TargetConditionals.h></span></span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> (TARGET_OS_IPHONE || TARGET_OS_IOS || TARGET_OS_SIMULATOR || TARGET_OS_IPHONE_SIMULATOR) &amp;&amp; !TARGET_OS_TV &amp;&amp; !TARGET_OS_WATCH</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TARGET_OF_IPHONE</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TARGET_OF_IOS</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TARGET_OPENGLES</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;unistd.h></span></span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> TARGET_OS_TV</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TARGET_OF_IOS</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TARGET_OF_TVOS</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TARGET_OPENGLES</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;unistd.h></span></span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> TARGET_OS_WATCH</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TARGET_OF_IOS</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TARGET_OF_WATCHOS</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TARGET_OPENGLES</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;unistd.h></span></span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TARGET_OSX</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined (__ANDROID__)</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TARGET_ANDROID</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TARGET_OPENGLES</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(__ARMEL__)</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TARGET_LINUX</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TARGET_OPENGLES</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TARGET_LINUX_ARM</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(__EMSCRIPTEN__)</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TARGET_EMSCRIPTEN</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TARGET_OPENGLES</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TARGET_NO_THREADS</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TARGET_PROGRAMMABLE_GL</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TARGET_IMPLEMENTS_URL_LOADER</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TARGET_LINUX</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token comment\" spellcheck=\"true\">//-------------------------------</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">// then the the platform specific includes:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_WIN32</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> GLEW_STATIC</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> GLEW_NO_GLU</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GL/glew.h\"</span></span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GL/wglew.h\"</span></span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> __WINDOWS_DS__</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> __WINDOWS_MM__</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> (_MSC_VER)       </span><span class=\"token comment\" spellcheck=\"true\">// microsoft visual studio</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//TODO: Fix this in the code instead of disabling the warnings</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> _CRT_SECURE_NO_WARNINGS</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> _WINSOCK_DEPRECATED_NO_WARNINGS</span>\n\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdint.h></span></span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;functional></span></span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> warning(disable : 4068)\t\t</span><span class=\"token comment\" spellcheck=\"true\">// unknown pragmas</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> warning(disable : 4756)\t\t</span><span class=\"token comment\" spellcheck=\"true\">// overflow in constant arithmetic</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> warning(disable : 4800)\t\t</span><span class=\"token comment\" spellcheck=\"true\">// 'Boolean' : forcing value to bool 'true' or 'false'</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// make microsoft visual studio complain less about double / float conversion and</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// truncation</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> warning(disable : 4244)</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> warning(disable : 4305)</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// warnings: http://msdn.microsoft.com/library/2c8f766e.aspx</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// NOMINMAX doesn't seem to work anymore in vs2015 so let's just remove them</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">undef</span> min</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">undef</span> max</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TARGET_LITTLE_ENDIAN\t\t\t</span><span class=\"token comment\" spellcheck=\"true\">// intel cpu</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// some gl.h files, like dev-c++, are old - this is pretty universal</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> GL_BGR_EXT</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> GL_BGR_EXT 0x80E0</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> WIN32_HIGH_RES_TIMING</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// note: this is experimental!</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// uncomment to turn this on (only for windows machines)</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// if you want to try setting the timer to be high resolution</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// this could make camera grabbing and other low level</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// operations quicker, but you must quit the app normally,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// ie, using \"esc\", rather than killing the process or closing</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// the console window in order to set the timer resolution back</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// to normal (since the high res timer might give the OS</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// problems)</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// info: http://www.geisswerks.com/ryan/FAQS/timing.html</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OSX</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> __MACOSX_CORE__</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> __MACOSX_CORE__</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;unistd.h></span></span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GL/glew.h\"</span></span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;ApplicationServices/ApplicationServices.h></span></span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(__LITTLE_ENDIAN__)</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TARGET_LITTLE_ENDIAN\t\t</span><span class=\"token comment\" spellcheck=\"true\">// intel cpu</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_LINUX</span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;unistd.h></span></span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_LINUX_ARM</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_RASPBERRY_PI</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"bcm_host.h\"</span></span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// rpi firmware headers define countof</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// which messes up other libraries like glm</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">undef</span> countof</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GLES/gl.h\"</span></span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GLES/glext.h\"</span></span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GLES2/gl2.h\"</span></span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"GLES2/gl2ext.h\"</span></span>\n\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> EGL_EGLEXT_PROTOTYPES</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"EGL/egl.h\"</span></span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"EGL/eglext.h\"</span></span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span> </span><span class=\"token comment\" spellcheck=\"true\">// desktop linux</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;GL/glew.h></span> </span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// for some reason, this isn't defined at compile time,</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// so this hack let's us work</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// for 99% of the linux folks that are on intel</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// everyone one else will have RGB / BGR issues.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//#if defined(__LITTLE_ENDIAN__)</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TARGET_LITTLE_ENDIAN\t\t</span><span class=\"token comment\" spellcheck=\"true\">// intel cpu</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//#endif</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// some things for serial compilation:</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> B14400\t14400</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> B28800\t28800</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OF_IOS</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">import</span> &lt;OpenGLES/ES1/gl.h></span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">import</span> &lt;OpenGLES/ES1/glext.h></span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">import</span> &lt;OpenGLES/ES2/gl.h></span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">import</span> &lt;OpenGLES/ES2/glext.h></span>\n\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TARGET_LITTLE_ENDIAN\t\t</span><span class=\"token comment\" spellcheck=\"true\">// arm cpu</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;typeinfo></span></span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;unistd.h></span></span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;GLES/gl.h></span></span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> GL_GLEXT_PROTOTYPES</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;GLES/glext.h></span></span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;GLES2/gl2.h></span></span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;GLES2/gl2ext.h></span></span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TARGET_LITTLE_ENDIAN</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_EMSCRIPTEN</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;GLES2/gl2.h></span></span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;GLES2/gl2ext.h></span></span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"EGL/egl.h\"</span></span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"EGL/eglext.h\"</span></span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TARGET_LITTLE_ENDIAN</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"tesselator.h\"</span></span>\n<span class=\"token keyword\">typedef</span> TESSindex ofIndexType<span class=\"token punctuation\">;</span>\n\n\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_EXIT_APP(val)\t\tstd::exit(val);</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">// core: ---------------------------</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cstdio></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cstdlib></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cstring></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;memory></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;functional></span></span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------ capture</span>\n<span class=\"token comment\" spellcheck=\"true\">// check if any video capture system is already defined from the compiler</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> !defined(OF_VIDEO_CAPTURE_GSTREAMER) &amp;&amp; !defined(OF_VIDEO_CAPTURE_QUICKTIME) &amp;&amp; !defined(OF_VIDEO_CAPTURE_DIRECTSHOW) &amp;&amp; !defined(OF_VIDEO_CAPTURE_ANDROID) &amp;&amp; !defined(OF_VIDEO_CAPTURE_IOS)</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_LINUX</span>\n\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_VIDEO_CAPTURE_GSTREAMER</span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(TARGET_OSX)</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//on 10.6 and below we can use the old grabber</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> MAC_OS_X_VERSION_10_7</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_VIDEO_CAPTURE_QUICKTIME</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//if we are below 10.12 or targeting below 10.12 we use QTKit</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> !defined(MAC_OS_X_VERSION_10_12) || MAC_OS_X_VERSION_MAX_ALLOWED &lt; MAC_OS_X_VERSION_10_12</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_VIDEO_CAPTURE_QTKIT</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_VIDEO_CAPTURE_AVF</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined (TARGET_WIN32)</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// comment out this following line, if you'd like to use the</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// quicktime capture interface on windows</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// if not, we default to videoInput library for</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// direct show capture...</span>\n\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_SWITCH_TO_DSHOW_FOR_WIN_VIDCAP</span>\n\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_SWITCH_TO_DSHOW_FOR_WIN_VIDCAP</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_VIDEO_CAPTURE_DIRECTSHOW</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_VIDEO_CAPTURE_QUICKTIME</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(TARGET_ANDROID)</span>\n\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_VIDEO_CAPTURE_ANDROID</span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(TARGET_EMSCRIPTEN)</span>\n\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_VIDEO_CAPTURE_EMSCRIPTEN</span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(TARGET_OF_IOS)</span>\n\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_VIDEO_CAPTURE_IOS</span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------  video player</span>\n<span class=\"token comment\" spellcheck=\"true\">// check if any video player system is already defined from the compiler</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> !defined(OF_VIDEO_PLAYER_GSTREAMER) &amp;&amp; !defined(OF_VIDEO_PLAYER_IOS) &amp;&amp; !defined(OF_VIDEO_PLAYER_DIRECTSHOW) &amp;&amp; !defined(OF_VIDEO_PLAYER_QUICKTIME) &amp;&amp; !defined(OF_VIDEO_PLAYER_AVFOUNDATION) &amp;&amp; !defined(OF_VIDEO_PLAYER_EMSCRIPTEN)</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_LINUX</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_VIDEO_PLAYER_GSTREAMER</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(TARGET_ANDROID)</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_VIDEO_PLAYER_ANDROID</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(TARGET_OF_IOS)</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_VIDEO_PLAYER_IOS</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(TARGET_WIN32)</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_VIDEO_PLAYER_DIRECTSHOW</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(TARGET_OSX)</span>\n        <span class=\"token comment\" spellcheck=\"true\">//for 10.8 and 10.9 users we use AVFoundation, for 10.7 we use QTKit, for 10.6 users we use QuickTime</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> MAC_OS_X_VERSION_10_7</span>\n            <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_VIDEO_PLAYER_QUICKTIME</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> !defined(MAC_OS_X_VERSION_10_8)</span>\n            <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_VIDEO_PLAYER_QTKIT</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n            <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_VIDEO_PLAYER_AVFOUNDATION</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(TARGET_EMSCRIPTEN)</span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_VIDEO_PLAYER_EMSCRIPTEN</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n        <span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_VIDEO_PLAYER_QUICKTIME</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------ soundstream</span>\n<span class=\"token comment\" spellcheck=\"true\">// check if any soundstream api is defined from the compiler</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> !defined(OF_SOUNDSTREAM_RTAUDIO) &amp;&amp; !defined(OF_SOUNDSTREAM_ANDROID) &amp;&amp; !defined(OF_SOUNDSTREAM_IOS) &amp;&amp; !defined(OF_SOUNDSTREAM_EMSCRIPTEN)</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_LINUX) || defined(TARGET_WIN32) || defined(TARGET_OSX)</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_SOUNDSTREAM_RTAUDIO</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(TARGET_ANDROID)</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_SOUNDSTREAM_ANDROID</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(TARGET_OF_IOS)</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_SOUNDSTREAM_IOS</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(TARGET_EMSCRIPTEN)</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_SOUNDSTREAM_EMSCRIPTEN</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------ soundplayer</span>\n<span class=\"token comment\" spellcheck=\"true\">// check if any soundplayer api is defined from the compiler</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> !defined(OF_SOUND_PLAYER_QUICKTIME) &amp;&amp; !defined(OF_SOUND_PLAYER_FMOD) &amp;&amp; !defined(OF_SOUND_PLAYER_OPENAL) &amp;&amp; !defined(OF_SOUND_PLAYER_EMSCRIPTEN)</span>\n  <span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OF_IOS</span>\n  \t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_SOUND_PLAYER_IPHONE</span>\n  <span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(TARGET_LINUX)</span>\n  \t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_SOUND_PLAYER_OPENAL</span>\n  <span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(TARGET_EMSCRIPTEN)</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_SOUND_PLAYER_EMSCRIPTEN</span>\n  <span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> !defined(TARGET_ANDROID) &amp;&amp; (!defined(USE_FMOD) || USE_FMOD)</span>\n  \t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> OF_SOUND_PLAYER_FMOD</span>\n  <span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------ c++11</span>\n<span class=\"token comment\" spellcheck=\"true\">// check if the compiler supports c++11. vs hasn't updated the value</span>\n<span class=\"token comment\" spellcheck=\"true\">// of __cplusplus so we need to check for vs >= 2012 (1700)</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> __cplusplus>=201103 || _MSC_VER >= 1700</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> HAS_CPP11 1</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------ thread local storage</span>\n<span class=\"token comment\" spellcheck=\"true\">// clang has a bug where it won't support tls on some versions even</span>\n<span class=\"token comment\" spellcheck=\"true\">// on c++11, this is a workaround that bug</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> HAS_TLS</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(__clang__) &amp;&amp; __clang__</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> __has_feature(cxx_thread_local) &amp;&amp; !defined(__MINGW64__) &amp;&amp; !defined(__MINGW32__) &amp;&amp; !defined(__ANDROID__) &amp;&amp; !defined(TARGET_OF_IOS)</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> HAS_TLS 1</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> !defined(TARGET_WIN32) || _MSC_VER</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> HAS_TLS 1</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------ make_unique</span>\n<span class=\"token comment\" spellcheck=\"true\">// This is a helper method for make unique on platforms that support C++11, but not C++14.</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> !defined(NO_OF_MAKE_UNIQUE) &amp;&amp; (defined(_MSC_VER) &amp;&amp; _MSC_VER &lt; 1800) || (!defined(_MSC_VER) &amp;&amp; __cplusplus &lt;= 201103L)</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// Implementation for C++11 platforms that do not yet have std::make_unique.</span>\n<span class=\"token comment\" spellcheck=\"true\">// Implementation from http://stackoverflow.com/a/13512344/1518329</span>\n<span class=\"token keyword\">namespace</span> std <span class=\"token punctuation\">{</span>\n\n\n<span class=\"token keyword\">template</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> Args<span class=\"token operator\">></span>\nstd<span class=\"token operator\">::</span>unique_ptr<span class=\"token operator\">&lt;</span>T<span class=\"token operator\">></span> <span class=\"token function\">make_unique_helper</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>false_type<span class=\"token punctuation\">,</span> Args<span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> std<span class=\"token operator\">::</span>unique_ptr<span class=\"token operator\">&lt;</span>T<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token function\">T</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>forward<span class=\"token operator\">&lt;</span>Args<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> Args<span class=\"token operator\">></span>\nstd<span class=\"token operator\">::</span>unique_ptr<span class=\"token operator\">&lt;</span>T<span class=\"token operator\">></span> <span class=\"token function\">make_unique_helper</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>true_type<span class=\"token punctuation\">,</span> Args<span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">static_assert</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>extent<span class=\"token operator\">&lt;</span>T<span class=\"token operator\">></span><span class=\"token operator\">::</span>value <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\t\t\t\t  <span class=\"token string\">\"make_unique&lt;T[N]>() is forbidden, please use make_unique&lt;T[]>().\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">typename</span> std<span class=\"token operator\">::</span>remove_extent<span class=\"token operator\">&lt;</span>T<span class=\"token operator\">></span><span class=\"token operator\">::</span>type U<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> std<span class=\"token operator\">::</span>unique_ptr<span class=\"token operator\">&lt;</span>T<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> U<span class=\"token punctuation\">[</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span>Args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">{</span>std<span class=\"token operator\">::</span>forward<span class=\"token operator\">&lt;</span>Args<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">template</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> Args<span class=\"token operator\">></span>\nstd<span class=\"token operator\">::</span>unique_ptr<span class=\"token operator\">&lt;</span>T<span class=\"token operator\">></span> <span class=\"token function\">make_unique</span><span class=\"token punctuation\">(</span>Args<span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> make_unique_helper<span class=\"token operator\">&lt;</span>T<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>is_array<span class=\"token operator\">&lt;</span>T<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>forward<span class=\"token operator\">&lt;</span>Args<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token punctuation\">}</span> <span class=\"token comment\" spellcheck=\"true\">// namespace std</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------ forward declaration for std::filesystem::path</span>\n<span class=\"token comment\" spellcheck=\"true\">// Remove from here once everything is using std::filesystem::path</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> OF_USING_STD_FS</span>\n<span class=\"token macro property\">#\t<span class=\"token directive keyword\">if</span> __cplusplus &lt; 201703L</span>\n\n\t\t<span class=\"token keyword\">namespace</span> std <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">namespace</span> experimental<span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">namespace</span> filesystem <span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token keyword\">namespace</span> v1 <span class=\"token punctuation\">{</span>\n\t\t\t\t\t\t<span class=\"token keyword\">namespace</span> __cxx11 <span class=\"token punctuation\">{</span>\n\t\t\t\t\t\t\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">path</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t\t\t\t<span class=\"token keyword\">using</span> v1<span class=\"token operator\">::</span>__cxx11<span class=\"token operator\">::</span>path<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">namespace</span> filesystem <span class=\"token operator\">=</span> experimental<span class=\"token operator\">::</span>filesystem<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#\t<span class=\"token directive keyword\">else</span></span>\n\n\t<span class=\"token keyword\">namespace</span> std <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">namespace</span> filesystem <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">path</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#\t<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n<span class=\"token macro property\">#\t<span class=\"token directive keyword\">if</span> !_MSC_VER</span>\n<span class=\"token macro property\">#\t\t<span class=\"token directive keyword\">define</span> BOOST_NO_CXX11_SCOPED_ENUMS</span>\n<span class=\"token macro property\">#\t\t<span class=\"token directive keyword\">define</span> BOOST_NO_SCOPED_ENUMS</span>\n<span class=\"token macro property\">#\t<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token keyword\">namespace</span> boost <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">namespace</span> filesystem <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">class</span> <span class=\"token class-name\">path</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">namespace</span> std <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">namespace</span> filesystem <span class=\"token operator\">=</span> boost<span class=\"token operator\">::</span>filesystem<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n","type":"source"}}],"fetch":[]}