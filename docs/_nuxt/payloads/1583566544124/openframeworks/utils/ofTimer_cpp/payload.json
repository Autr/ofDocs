{"data":[{"page":{"entry":{"name":"ofTimer.cpp","filename":"ofTimer.cpp","absolute":"/Users/gilbertsinnott/Code/openFrameworks/libs/openFrameworks/utils/ofTimer.cpp","path":"/openframeworks/utils/ofTimer_cpp","route":"/openframeworks/utils/ofTimer.cpp","dir":"../libs/openFrameworks/utils","ext":"cpp","type":"source","id":346,"parent":329,"breadcrumbs":[329,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofTimer.h\"</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> NANOS_PER_SEC 1000000000ll</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofGetMonotonicTime</span><span class=\"token punctuation\">(</span>uint64_t <span class=\"token operator\">&amp;</span> seconds<span class=\"token punctuation\">,</span> uint64_t <span class=\"token operator\">&amp;</span> nanoseconds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nofTimer<span class=\"token operator\">::</span><span class=\"token function\">ofTimer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">:</span><span class=\"token function\">nanosPerPeriod</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_WIN32</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">hTimer</span><span class=\"token punctuation\">(</span><span class=\"token function\">CreateWaitableTimer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> TRUE<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofTimer<span class=\"token operator\">::</span><span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_WIN32)</span>\n\t<span class=\"token function\">GetSystemTimeAsFileTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPFILETIME<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>nextWakeTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\tnextWakeTime <span class=\"token operator\">=</span> <span class=\"token function\">ofGetCurrentTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token function\">calculateNextPeriod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofTimer<span class=\"token operator\">::</span><span class=\"token function\">setPeriodicEvent</span><span class=\"token punctuation\">(</span>uint64_t nanoseconds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tnanosPerPeriod <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span>chrono<span class=\"token operator\">::</span><span class=\"token function\">nanoseconds</span><span class=\"token punctuation\">(</span>nanoseconds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofTimer<span class=\"token operator\">::</span><span class=\"token function\">waitNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> (defined(TARGET_LINUX) &amp;&amp; !defined(TARGET_RASPBERRY_PI_LEGACY))</span>\n\ttimespec remainder <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\ttimespec wakeTime <span class=\"token operator\">=</span> nextWakeTime<span class=\"token punctuation\">.</span><span class=\"token function\">getAsTimespec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">clock_nanosleep</span><span class=\"token punctuation\">(</span>CLOCK_MONOTONIC<span class=\"token punctuation\">,</span>TIMER_ABSTIME<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>wakeTime<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>remainder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> defined(TARGET_WIN32)</span>\n\t<span class=\"token function\">WaitForSingleObject</span><span class=\"token punctuation\">(</span>hTimer<span class=\"token punctuation\">,</span> INFINITE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token keyword\">auto</span> now <span class=\"token operator\">=</span> <span class=\"token function\">ofGetCurrentTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>now <span class=\"token operator\">&lt;</span> nextWakeTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">auto</span> waitNanos <span class=\"token operator\">=</span> nextWakeTime <span class=\"token operator\">-</span> now<span class=\"token punctuation\">;</span>\n\t\ttimespec waittime <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ofTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> waitNanos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getAsTimespec</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\ttimespec remainder <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">nanosleep</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>waittime<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>remainder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token function\">calculateNextPeriod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">void</span> ofTimer<span class=\"token operator\">::</span><span class=\"token function\">calculateNextPeriod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_WIN32)</span>\n\tnextWakeTime<span class=\"token punctuation\">.</span>QuadPart <span class=\"token operator\">+</span><span class=\"token operator\">=</span> nanosPerPeriod<span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n    LARGE_INTEGER now<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">GetSystemTimeAsFileTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>LPFILETIME<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>now<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>nextWakeTime<span class=\"token punctuation\">.</span>QuadPart<span class=\"token operator\">&lt;</span>now<span class=\"token punctuation\">.</span>QuadPart<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t    <span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t    <span class=\"token function\">SetWaitableTimer</span><span class=\"token punctuation\">(</span>hTimer<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>nextWakeTime<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\tnextWakeTime <span class=\"token operator\">+</span><span class=\"token operator\">=</span> nanosPerPeriod<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> now <span class=\"token operator\">=</span> <span class=\"token function\">ofGetCurrentTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>nextWakeTime<span class=\"token operator\">&lt;</span>now<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n","type":"source"}}],"fetch":[]}