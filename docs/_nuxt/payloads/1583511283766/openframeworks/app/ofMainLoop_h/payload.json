{"data":[{"page":{"entry":{"name":"ofMainLoop.h","filename":"ofMainLoop.h","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/app/ofMainLoop.h","path":"/openframeworks/app/ofMainLoop_h","route":"/openframeworks/app/ofMainLoop.h","dir":"../libs/openFrameworks/app","ext":"h","type":"source","id":223,"parent":207,"breadcrumbs":[207,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofEvents.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;map></span></span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofBaseApp</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofAppBaseWindow</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofWindowSettings</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofMainLoop</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">ofMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">ofMainLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tstd<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofAppBaseWindow<span class=\"token operator\">></span> <span class=\"token function\">createWindow</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofWindowSettings <span class=\"token operator\">&amp;</span> settings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Window<span class=\"token operator\">></span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">addWindow</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>Window<span class=\"token operator\">></span> window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tallowMultiWindow <span class=\"token operator\">=</span> Window<span class=\"token operator\">::</span><span class=\"token function\">allowsMultiWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>Window<span class=\"token operator\">::</span><span class=\"token function\">doesLoop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t    windowLoop <span class=\"token operator\">=</span> Window<span class=\"token operator\">::</span>loop<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>Window<span class=\"token operator\">::</span><span class=\"token function\">needsPolling</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\twindowPollEvents <span class=\"token operator\">=</span> Window<span class=\"token operator\">::</span>pollEvents<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>allowMultiWindow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t    windowsApps<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\twindowsApps<span class=\"token punctuation\">[</span>window<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofBaseApp<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tcurrentWindow <span class=\"token operator\">=</span> window<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofAddListener</span><span class=\"token punctuation\">(</span>window<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>keyPressed<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>ofMainLoop<span class=\"token operator\">::</span>keyPressed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofAppBaseWindow<span class=\"token operator\">></span> window<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofBaseApp<span class=\"token operator\">></span> <span class=\"token operator\">&amp;&amp;</span> app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofBaseApp<span class=\"token operator\">></span> <span class=\"token operator\">&amp;&amp;</span> app<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> <span class=\"token function\">loop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">loopOnce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">pollEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">shouldClose</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofAppBaseWindow<span class=\"token operator\">></span> <span class=\"token function\">getCurrentWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setCurrentWindow</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofAppBaseWindow<span class=\"token operator\">></span> window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setCurrentWindow</span><span class=\"token punctuation\">(</span>ofAppBaseWindow <span class=\"token operator\">*</span> window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofBaseApp<span class=\"token operator\">></span> <span class=\"token function\">getCurrentApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setEscapeQuitsLoop</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> quits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tofEvent<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span> exitEvent<span class=\"token punctuation\">;</span>\n\tofEvent<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span> loopEvent<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">keyPressed</span><span class=\"token punctuation\">(</span>ofKeyEventArgs <span class=\"token operator\">&amp;</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofAppBaseWindow<span class=\"token operator\">></span><span class=\"token punctuation\">,</span>std<span class=\"token operator\">::</span>shared_ptr<span class=\"token operator\">&lt;</span>ofBaseApp<span class=\"token operator\">></span> <span class=\"token operator\">></span> windowsApps<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> bShouldClose<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>weak_ptr<span class=\"token operator\">&lt;</span>ofAppBaseWindow<span class=\"token operator\">></span> currentWindow<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> status<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> allowMultiWindow<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>function<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span> windowLoop<span class=\"token punctuation\">;</span>\n\tstd<span class=\"token operator\">::</span>function<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span> windowPollEvents<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> escapeQuits<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n","type":"source"}}],"fetch":[]}