{"data":[{"page":{"entry":{"name":"ofOpenALSoundPlayer.h","filename":"ofOpenALSoundPlayer.h","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/sound/ofOpenALSoundPlayer.h","path":"/openframeworks/sound/ofOpenALSoundPlayer_h","route":"/openframeworks/sound/ofOpenALSoundPlayer.h","dir":"../libs/openFrameworks/sound","ext":"h","type":"source","id":304,"parent":300,"breadcrumbs":[300,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_SOUND_PLAYER_OPENAL</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofSoundBaseTypes.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofThread.h\"</span></span>\n\n\n\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> ALuint<span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"kiss_fft.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"kiss_fftr.h\"</span></span>\n\n\n\n<span class=\"token keyword\">typedef</span>\t<span class=\"token keyword\">struct</span> SNDFILE_tag\tSNDFILE <span class=\"token punctuation\">;</span>\n\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_USING_MPG123</span>\n\t<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> mpg123_handle_struct mpg123_handle<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofEventArgs</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//\t\tTO DO :</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t\t---------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">// \t\t-fft via fmod, as in the last time...</span>\n<span class=\"token comment\" spellcheck=\"true\">// \t\t-close fmod if it's up</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t\t-loadSoundForStreaming(char * fileName);</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t\t---------------------------</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// \t\tinteresting:</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t\thttp://www.compuphase.com/mp3/mp3loops.htm</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">// ---------------------------------------------------------------------------- SOUND SYSTEM FMOD</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// --------------------- global functions:</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofFmodSoundStopAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofFmodSoundSetVolume</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> vol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofOpenALSoundUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">// calls FMOD update.</span>\n<span class=\"token keyword\">float</span> <span class=\"token operator\">*</span> <span class=\"token function\">ofFmodSoundGetSpectrum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> nBands<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\" spellcheck=\"true\">// max 512...</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">// --------------------- player functions:</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofOpenALSoundPlayer</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofBaseSoundPlayer<span class=\"token punctuation\">,</span> <span class=\"token keyword\">public</span> ofThread <span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\n\t\t<span class=\"token function\">ofOpenALSoundPlayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">virtual</span> <span class=\"token operator\">~</span><span class=\"token function\">ofOpenALSoundPlayer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">bool</span> <span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path<span class=\"token operator\">&amp;</span> fileName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> stream <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">unload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">setVolume</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> vol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">setPan</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> vol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// -1 to 1</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">setSpeed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> spd<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">setPaused</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">setLoop</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bLp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">setMultiPlay</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bMp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> pct<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// 0 = start, 1 = end;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">setPositionMS</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> ms<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\t\t<span class=\"token keyword\">float</span> <span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> <span class=\"token function\">getPositionMS</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span> <span class=\"token function\">isPlaying</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span> <span class=\"token function\">getSpeed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span> <span class=\"token function\">getPan</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">float</span> <span class=\"token function\">getVolume</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span> <span class=\"token function\">isPaused</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span> <span class=\"token function\">isLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">float</span> <span class=\"token operator\">*</span> <span class=\"token function\">getSpectrum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> bands<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span> <span class=\"token function\">getSystemSpectrum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> bands<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">protected</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">threadedFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">friend</span> <span class=\"token keyword\">void</span> <span class=\"token function\">ofOpenALSoundUpdate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span>ofEventArgs <span class=\"token operator\">&amp;</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">void</span> <span class=\"token function\">initFFT</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> bands<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span> <span class=\"token operator\">*</span> <span class=\"token function\">getCurrentBufferSum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">createWindow</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">runWindow</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> signal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initSystemFFT</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> bands<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">bool</span> <span class=\"token function\">sfReadFile</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path<span class=\"token operator\">&amp;</span> path<span class=\"token punctuation\">,</span>std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">short</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">,</span>std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> fftAuxBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">bool</span> <span class=\"token function\">sfStream</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path<span class=\"token operator\">&amp;</span> path<span class=\"token punctuation\">,</span>std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">short</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">,</span>std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> fftAuxBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_USING_MPG123</span>\n        <span class=\"token keyword\">bool</span> <span class=\"token function\">mpg123ReadFile</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path<span class=\"token operator\">&amp;</span> path<span class=\"token punctuation\">,</span>std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">short</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">,</span>std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> fftAuxBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">bool</span> <span class=\"token function\">mpg123Stream</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path<span class=\"token operator\">&amp;</span> path<span class=\"token punctuation\">,</span>std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">short</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">,</span>std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> fftAuxBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n        <span class=\"token keyword\">bool</span> <span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path<span class=\"token operator\">&amp;</span> fileName<span class=\"token punctuation\">,</span>std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">short</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">bool</span> <span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>filesystem<span class=\"token operator\">::</span>path<span class=\"token operator\">&amp;</span> fileName<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">short</span><span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">bool</span> isStreaming<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span> bMultiPlay<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span> bLoop<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span> bLoadedOk<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span> bPaused<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span> pan<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// 0 - 1</span>\n\t\t<span class=\"token keyword\">float</span> volume<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// 0 - 1</span>\n\t\t<span class=\"token keyword\">float</span> internalFreq<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// 44100 ?</span>\n\t\t<span class=\"token keyword\">float</span> speed<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// -n to n, 1 = normal, -1 backwards</span>\n\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> length<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// in samples;</span>\n\n\t\t<span class=\"token keyword\">static</span> std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span> window<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">float</span> windowSum<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">int</span> channels<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span> duration<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//in secs</span>\n\t\t<span class=\"token keyword\">int</span> samplerate<span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>ALuint<span class=\"token operator\">></span> buffers<span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>ALuint<span class=\"token operator\">></span> sources<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// fft structures</span>\n\t\tstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span> <span class=\"token operator\">></span> fftBuffers<span class=\"token punctuation\">;</span>\n\t\tkiss_fftr_cfg fftCfg<span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span> windowedSignal<span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span> bins<span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>kiss_fft_cpx<span class=\"token operator\">></span> cx_out<span class=\"token punctuation\">;</span>\n\n\n\t\t<span class=\"token keyword\">static</span> kiss_fftr_cfg systemFftCfg<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">static</span> std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span> systemWindowedSignal<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">static</span> std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span> systemBins<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">static</span> std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>kiss_fft_cpx<span class=\"token operator\">></span> systemCx_out<span class=\"token punctuation\">;</span>\n\n\t\tSNDFILE<span class=\"token operator\">*</span> streamf<span class=\"token punctuation\">;</span>\n\t\tsize_t stream_samples_read<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> OF_USING_MPG123</span>\n\t\tmpg123_handle <span class=\"token operator\">*</span> mp3streamf<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> stream_encoding<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t<span class=\"token keyword\">int</span> mp3_buffer_size<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> stream_subformat<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">double</span> stream_scale<span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">short</span><span class=\"token operator\">></span> buffer<span class=\"token punctuation\">;</span>\n\t\tstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span> fftAuxBuffer<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">bool</span> stream_end<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n","type":"source"}}],"fetch":[]}