{"data":[{"page":{"entry":{"name":"ofGLProgrammableRenderer.cpp","filename":"ofGLProgrammableRenderer.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/gl/ofGLProgrammableRenderer.cpp","path":"/openframeworks/gl/ofGLProgrammableRenderer_cpp","route":"/openframeworks/gl/ofGLProgrammableRenderer.cpp","dir":"../libs/openFrameworks/gl","ext":"cpp","type":"source","id":241,"parent":235,"breadcrumbs":[235,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGLProgrammableRenderer.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofMesh.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofPath.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofMesh.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofBitmapFont.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGLUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofImage.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofFbo.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofVbo.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"of3dPrimitives.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofLight.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofMaterial.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofCamera.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofTrueTypeFont.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofNode.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofVideoBaseTypes.h\"</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string MODEL_MATRIX_UNIFORM<span class=\"token operator\">=</span><span class=\"token string\">\"modelMatrix\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string VIEW_MATRIX_UNIFORM<span class=\"token operator\">=</span><span class=\"token string\">\"viewMatrix\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string MODELVIEW_MATRIX_UNIFORM<span class=\"token operator\">=</span><span class=\"token string\">\"modelViewMatrix\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string PROJECTION_MATRIX_UNIFORM<span class=\"token operator\">=</span><span class=\"token string\">\"projectionMatrix\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string MODELVIEW_PROJECTION_MATRIX_UNIFORM<span class=\"token operator\">=</span><span class=\"token string\">\"modelViewProjectionMatrix\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string TEXTURE_MATRIX_UNIFORM<span class=\"token operator\">=</span><span class=\"token string\">\"textureMatrix\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string COLOR_UNIFORM<span class=\"token operator\">=</span><span class=\"token string\">\"globalColor\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string USE_TEXTURE_UNIFORM<span class=\"token operator\">=</span><span class=\"token string\">\"usingTexture\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string USE_COLORS_UNIFORM<span class=\"token operator\">=</span><span class=\"token string\">\"usingColors\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string BITMAP_STRING_UNIFORM<span class=\"token operator\">=</span><span class=\"token string\">\"bitmapText\"</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">const</span> string ofGLProgrammableRenderer<span class=\"token operator\">::</span>TYPE<span class=\"token operator\">=</span><span class=\"token string\">\"ProgrammableGL\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> programmableRendererCreated <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> programmableRendererCreated<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">ofGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofAppBaseWindow <span class=\"token operator\">*</span> _window<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">:</span><span class=\"token function\">matrixStack</span><span class=\"token punctuation\">(</span>_window<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">,</span><span class=\"token function\">graphics3d</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tprogrammableRendererCreated <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\tbBackgroundAuto <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n\tlineMesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tlineMesh<span class=\"token punctuation\">.</span><span class=\"token function\">setMode</span><span class=\"token punctuation\">(</span>OF_PRIMITIVE_LINES<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ttriangleMesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\trectMesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">resize</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tbitmapStringEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    verticesEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    colorsEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    texCoordsEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    normalsEnabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tsettingDefaultShader <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tusingVideoShader <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\tusingCustomShader <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\twrongUseLoggedOnce <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\tuniqueShader <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\tcurrentShader <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\n\tcurrentTextureTarget <span class=\"token operator\">=</span> OF_NO_TEXTURE<span class=\"token punctuation\">;</span>\n\tcurrentMaterial <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\talphaMaskTextureTarget <span class=\"token operator\">=</span> OF_NO_TEXTURE<span class=\"token punctuation\">;</span>\n\n\tmajor <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\tminor <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\twindow <span class=\"token operator\">=</span> _window<span class=\"token punctuation\">;</span>\n\n\tcurrentFramebufferId <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tdefaultFramebufferId <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setMode</span><span class=\"token punctuation\">(</span>ofPath<span class=\"token operator\">::</span>POLYLINES<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    path<span class=\"token punctuation\">.</span><span class=\"token function\">setUseShapeColor</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">startRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tcurrentFramebufferId <span class=\"token operator\">=</span> defaultFramebufferId<span class=\"token punctuation\">;</span>\n\tframebufferIdStack<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>defaultFramebufferId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">setRenderSurface</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">beginDefaultShader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">// to do non auto clear on PC for now - we do something like \"single\" buffering --</span>\n    <span class=\"token comment\" spellcheck=\"true\">// it's not that pretty but it work for the most part</span>\n\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_WIN32</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getBackgroundAuto</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">glDrawBuffer</span> <span class=\"token punctuation\">(</span>GL_FRONT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token function\">getBackgroundAuto</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token comment\" spellcheck=\"true\">// || ofGetFrameNum() &lt; 3){</span>\n\t\t<span class=\"token function\">background</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>bgColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">finishRender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>uniqueShader<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glUseProgram</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>usingCustomShader<span class=\"token punctuation\">)</span> currentShader <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">clearStacks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tframebufferIdStack<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofMesh <span class=\"token operator\">&amp;</span> vertexData<span class=\"token punctuation\">,</span> ofPolyRenderMode renderType<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> useColors<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> useTextures<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> useNormals<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// tig: note that for GL3+ we use glPolygonMode to draw wireframes or filled meshes, and not the primitive mode.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// the reason is not purely aesthetic, but more conformant with the behaviour of ofGLRenderer. Whereas</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// gles2.0 doesn't allow for a polygonmode.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// Also gles2 still supports vertex array syntax for uploading data to attributes and it seems to be faster than</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// vbo's for meshes that are updated frequently so let's use that instead</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//if (bSmoothHinted) startSmoothing();</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined(TARGET_OPENGLES) &amp;&amp; !defined(TARGET_EMSCRIPTEN)</span>\n\t<span class=\"token function\">glEnableVertexAttribArray</span><span class=\"token punctuation\">(</span>ofShader<span class=\"token operator\">::</span>POSITION_ATTRIBUTE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glVertexAttribPointer</span><span class=\"token punctuation\">(</span>ofShader<span class=\"token operator\">::</span>POSITION_ATTRIBUTE<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> GL_FLOAT<span class=\"token punctuation\">,</span> GL_FALSE<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ofVec3f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getVerticesPointer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\tuseNormals <span class=\"token operator\">&amp;</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNumNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>useNormals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glEnableVertexAttribArray</span><span class=\"token punctuation\">(</span>ofShader<span class=\"token operator\">::</span>NORMAL_ATTRIBUTE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glVertexAttribPointer</span><span class=\"token punctuation\">(</span>ofShader<span class=\"token operator\">::</span>NORMAL_ATTRIBUTE<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> GL_FLOAT<span class=\"token punctuation\">,</span> GL_TRUE<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ofVec3f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNormalsPointer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glDisableVertexAttribArray</span><span class=\"token punctuation\">(</span>ofShader<span class=\"token operator\">::</span>NORMAL_ATTRIBUTE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\tuseColors <span class=\"token operator\">&amp;</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNumColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>useColors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glEnableVertexAttribArray</span><span class=\"token punctuation\">(</span>ofShader<span class=\"token operator\">::</span>COLOR_ATTRIBUTE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glVertexAttribPointer</span><span class=\"token punctuation\">(</span>ofShader<span class=\"token operator\">::</span>COLOR_ATTRIBUTE<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span>GL_FLOAT<span class=\"token punctuation\">,</span> GL_FALSE<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ofFloatColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getColorsPointer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glDisableVertexAttribArray</span><span class=\"token punctuation\">(</span>ofShader<span class=\"token operator\">::</span>COLOR_ATTRIBUTE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tuseTextures <span class=\"token operator\">&amp;</span><span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNumTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>useTextures<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glEnableVertexAttribArray</span><span class=\"token punctuation\">(</span>ofShader<span class=\"token operator\">::</span>TEXCOORD_ATTRIBUTE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glVertexAttribPointer</span><span class=\"token punctuation\">(</span>ofShader<span class=\"token operator\">::</span>TEXCOORD_ATTRIBUTE<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> GL_FLOAT<span class=\"token punctuation\">,</span> GL_FALSE<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ofVec2f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getTexCoordsPointer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glDisableVertexAttribArray</span><span class=\"token punctuation\">(</span>ofShader<span class=\"token operator\">::</span>TEXCOORD_ATTRIBUTE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\n\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setAttributes</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>useColors<span class=\"token punctuation\">,</span>useTextures<span class=\"token punctuation\">,</span>useNormals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tGLenum drawMode<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>renderType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> OF_MESH_POINTS<span class=\"token operator\">:</span>\n\t\tdrawMode <span class=\"token operator\">=</span> GL_POINTS<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_MESH_WIREFRAME<span class=\"token operator\">:</span>\n\t\tdrawMode <span class=\"token operator\">=</span> GL_LINES<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_MESH_FILL<span class=\"token operator\">:</span>\n\t\tdrawMode <span class=\"token operator\">=</span> <span class=\"token function\">ofGetGLPrimitiveMode</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\tdrawMode <span class=\"token operator\">=</span> <span class=\"token function\">ofGetGLPrimitiveMode</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNumIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glDrawElements</span><span class=\"token punctuation\">(</span>drawMode<span class=\"token punctuation\">,</span> vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNumIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>GL_UNSIGNED_SHORT<span class=\"token punctuation\">,</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getIndexPointer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glDrawArrays</span><span class=\"token punctuation\">(</span>drawMode<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNumVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\tmeshVbo<span class=\"token punctuation\">.</span><span class=\"token function\">setMesh</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">,</span> GL_STREAM_DRAW<span class=\"token punctuation\">,</span> useColors<span class=\"token punctuation\">,</span> useTextures<span class=\"token punctuation\">,</span> useNormals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glPolygonMode</span><span class=\"token punctuation\">(</span>GL_FRONT_AND_BACK<span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLPolyMode</span><span class=\"token punctuation\">(</span>renderType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tGLenum drawMode <span class=\"token operator\">=</span> <span class=\"token function\">ofGetGLPrimitiveMode</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\tmeshVbo<span class=\"token punctuation\">.</span><span class=\"token function\">setMesh</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">,</span> GL_STATIC_DRAW<span class=\"token punctuation\">,</span> useColors<span class=\"token punctuation\">,</span> useTextures<span class=\"token punctuation\">,</span> useNormals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tGLenum drawMode<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>renderType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> OF_MESH_POINTS<span class=\"token operator\">:</span>\n\t\tdrawMode <span class=\"token operator\">=</span> GL_POINTS<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_MESH_WIREFRAME<span class=\"token operator\">:</span>\n\t\tdrawMode <span class=\"token operator\">=</span> GL_LINE_STRIP<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_MESH_FILL<span class=\"token operator\">:</span>\n\t\tdrawMode <span class=\"token operator\">=</span> <span class=\"token function\">ofGetGLPrimitiveMode</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\tdrawMode <span class=\"token operator\">=</span> <span class=\"token function\">ofGetGLPrimitiveMode</span><span class=\"token punctuation\">(</span>vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>meshVbo<span class=\"token punctuation\">.</span><span class=\"token function\">getUsingIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">drawElements</span><span class=\"token punctuation\">(</span>meshVbo<span class=\"token punctuation\">,</span>drawMode<span class=\"token punctuation\">,</span> meshVbo<span class=\"token punctuation\">.</span><span class=\"token function\">getNumIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>meshVbo<span class=\"token punctuation\">,</span> drawMode<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> vertexData<span class=\"token punctuation\">.</span><span class=\"token function\">getNumVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// tig: note further that we could glGet() and store the current polygon mode, but don't, since that would</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// infer a massive performance hit. instead, we revert the glPolygonMode to mirror the current ofFill state</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// after we're finished drawing, following the principle of least surprise.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// ideally the glPolygonMode (or the polygon draw mode) should be part of ofStyle so that we can keep track</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// of its state on the client side...</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token function\">glPolygonMode</span><span class=\"token punctuation\">(</span>GL_FRONT_AND_BACK<span class=\"token punctuation\">,</span> currentStyle<span class=\"token punctuation\">.</span>bFill <span class=\"token operator\">?</span>  GL_FILL <span class=\"token operator\">:</span> GL_LINE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//if (bSmoothHinted) endSmoothing();</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVboMesh <span class=\"token operator\">&amp;</span> mesh<span class=\"token punctuation\">,</span> ofPolyRenderMode renderType<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">drawInstanced</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">,</span>renderType<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawInstanced</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVboMesh <span class=\"token operator\">&amp;</span> mesh<span class=\"token punctuation\">,</span> ofPolyRenderMode renderType<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> primCount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\tGLuint mode <span class=\"token operator\">=</span> <span class=\"token function\">ofGetGLPrimitiveMode</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token function\">glPolygonMode</span><span class=\"token punctuation\">(</span>GL_FRONT_AND_BACK<span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetGLPolyMode</span><span class=\"token punctuation\">(</span>renderType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> renderType<span class=\"token operator\">!=</span>OF_MESH_POINTS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>primCount <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">drawElements</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVbo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mode<span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">drawElementsInstanced</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVbo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mode<span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>primCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>primCount <span class=\"token operator\">&lt;=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVbo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mode<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">drawInstanced</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVbo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mode<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>primCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// tig: note further that we could glGet() and store the current polygon mode, but don't, since that would</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// infer a massive performance hit. instead, we revert the glPolygonMode to mirror the current ofFill state</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// after we're finished drawing, following the principle of least surprise.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// ideally the glPolygonMode (or the polygon draw mode) should be part of ofStyle so that we can keep track</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// of its state on the client side...</span>\n\n\t<span class=\"token function\">glPolygonMode</span><span class=\"token punctuation\">(</span>GL_FRONT_AND_BACK<span class=\"token punctuation\">,</span> currentStyle<span class=\"token punctuation\">.</span>bFill <span class=\"token operator\">?</span>  GL_FILL <span class=\"token operator\">:</span> GL_LINE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>renderType <span class=\"token operator\">==</span> OF_MESH_POINTS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVbo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>GL_POINTS<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>renderType <span class=\"token operator\">==</span> OF_MESH_WIREFRAME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">drawElements</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVbo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>GL_LINES<span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVbo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>GL_LINES<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">drawElements</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVbo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mode<span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumIndices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVbo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>mode<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>mesh<span class=\"token punctuation\">.</span><span class=\"token function\">getNumVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> of3dPrimitive<span class=\"token operator\">&amp;</span> model<span class=\"token punctuation\">,</span> ofPolyRenderMode renderType<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">multMatrix</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span><span class=\"token function\">getGlobalTransformMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span><span class=\"token function\">isUsingVbo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">static_cast</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span> ofVboMesh<span class=\"token operator\">&amp;</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span><span class=\"token function\">getMesh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>renderType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">.</span><span class=\"token function\">getMesh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>renderType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">popMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofNode<span class=\"token operator\">&amp;</span> node<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">multMatrix</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span><span class=\"token function\">getGlobalTransformMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tnode<span class=\"token punctuation\">.</span><span class=\"token function\">customDraw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">popMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPolyline <span class=\"token operator\">&amp;</span> poly<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>poly<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// use smoothness, if requested:</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//if (bSmoothHinted) startSmoothing();</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined( TARGET_OPENGLES ) &amp;&amp; !defined(TARGET_EMSCRIPTEN)</span>\n\n\t<span class=\"token function\">glEnableVertexAttribArray</span><span class=\"token punctuation\">(</span>ofShader<span class=\"token operator\">::</span>POSITION_ATTRIBUTE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glVertexAttribPointer</span><span class=\"token punctuation\">(</span>ofShader<span class=\"token operator\">::</span>POSITION_ATTRIBUTE<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> GL_FLOAT<span class=\"token punctuation\">,</span> GL_FALSE<span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ofVec3f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>poly<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setAttributes</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tGLenum drawMode <span class=\"token operator\">=</span> poly<span class=\"token punctuation\">.</span><span class=\"token function\">isClosed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span>GL_LINE_LOOP<span class=\"token operator\">:</span>GL_LINE_STRIP<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">glDrawArrays</span><span class=\"token punctuation\">(</span>drawMode<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> poly<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\n\tmeshVbo<span class=\"token punctuation\">.</span><span class=\"token function\">setVertexData</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>poly<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> poly<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> GL_DYNAMIC_DRAW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmeshVbo<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>poly<span class=\"token punctuation\">.</span><span class=\"token function\">isClosed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span>GL_LINE_LOOP<span class=\"token operator\">:</span>GL_LINE_STRIP<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> poly<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token comment\" spellcheck=\"true\">// use smoothness, if requested:</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//if (bSmoothHinted) endSmoothing();</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofPath <span class=\"token operator\">&amp;</span> shape<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tofColor prevColor<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">.</span><span class=\"token function\">getUseShapeColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tprevColor <span class=\"token operator\">=</span> currentStyle<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tofGLProgrammableRenderer <span class=\"token operator\">*</span> mut_this <span class=\"token operator\">=</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">.</span><span class=\"token function\">isFilled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">const</span> ofMesh <span class=\"token operator\">&amp;</span> mesh <span class=\"token operator\">=</span> shape<span class=\"token punctuation\">.</span><span class=\"token function\">getTessellation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">.</span><span class=\"token function\">getUseShapeColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tmut_this<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span> shape<span class=\"token punctuation\">.</span><span class=\"token function\">getFillColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>shape<span class=\"token punctuation\">.</span><span class=\"token function\">getFillColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>mesh<span class=\"token punctuation\">,</span>OF_MESH_FILL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">.</span><span class=\"token function\">hasOutline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">float</span> lineWidth <span class=\"token operator\">=</span> currentStyle<span class=\"token punctuation\">.</span>lineWidth<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">.</span><span class=\"token function\">getUseShapeColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tmut_this<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span> shape<span class=\"token punctuation\">.</span><span class=\"token function\">getStrokeColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> shape<span class=\"token punctuation\">.</span><span class=\"token function\">getStrokeColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tmut_this<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setLineWidth</span><span class=\"token punctuation\">(</span> shape<span class=\"token punctuation\">.</span><span class=\"token function\">getStrokeWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">const</span> vector<span class=\"token operator\">&lt;</span>ofPolyline<span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> outlines <span class=\"token operator\">=</span> shape<span class=\"token punctuation\">.</span><span class=\"token function\">getOutline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>outlines<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>outlines<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmut_this<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setLineWidth</span><span class=\"token punctuation\">(</span>lineWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>shape<span class=\"token punctuation\">.</span><span class=\"token function\">getUseShapeColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tmut_this<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>prevColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofImage <span class=\"token operator\">&amp;</span> image<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sh<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">.</span><span class=\"token function\">isUsingTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setAttributes</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">const</span> ofTexture<span class=\"token operator\">&amp;</span> tex <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">.</span><span class=\"token function\">getMeshForSubsection</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>sx<span class=\"token punctuation\">,</span>sy<span class=\"token punctuation\">,</span>sw<span class=\"token punctuation\">,</span>sh<span class=\"token punctuation\">,</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>currentStyle<span class=\"token punctuation\">.</span>rectMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>OF_MESH_FILL<span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGLProgrammableRenderer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"draw(): texture is not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFloatImage <span class=\"token operator\">&amp;</span> image<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sh<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">.</span><span class=\"token function\">isUsingTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setAttributes</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">const</span> ofTexture<span class=\"token operator\">&amp;</span> tex <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">.</span><span class=\"token function\">getMeshForSubsection</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>sx<span class=\"token punctuation\">,</span>sy<span class=\"token punctuation\">,</span>sw<span class=\"token punctuation\">,</span>sh<span class=\"token punctuation\">,</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>currentStyle<span class=\"token punctuation\">.</span>rectMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>OF_MESH_FILL<span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGLProgrammableRenderer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"draw(): texture is not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofShortImage <span class=\"token operator\">&amp;</span> image<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sh<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">.</span><span class=\"token function\">isUsingTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setAttributes</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">const</span> ofTexture<span class=\"token operator\">&amp;</span> tex <span class=\"token operator\">=</span> image<span class=\"token punctuation\">.</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">.</span><span class=\"token function\">getMeshForSubsection</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>sx<span class=\"token punctuation\">,</span>sy<span class=\"token punctuation\">,</span>sw<span class=\"token punctuation\">,</span>sh<span class=\"token punctuation\">,</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>currentStyle<span class=\"token punctuation\">.</span>rectMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>OF_MESH_FILL<span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGLProgrammableRenderer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"draw(): texture is not allocated\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofTexture <span class=\"token operator\">&amp;</span> tex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sy<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sw<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> sh<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setAttributes</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">.</span><span class=\"token function\">isAllocated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">.</span><span class=\"token function\">getMeshForSubsection</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>sx<span class=\"token punctuation\">,</span>sy<span class=\"token punctuation\">,</span>sw<span class=\"token punctuation\">,</span>sh<span class=\"token punctuation\">,</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>currentStyle<span class=\"token punctuation\">.</span>rectMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>OF_MESH_FILL<span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGLProgrammableRenderer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"draw(): texture is not allocated\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofBaseVideoDraws <span class=\"token operator\">&amp;</span> video<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">isInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">isUsingTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> video<span class=\"token punctuation\">.</span><span class=\"token function\">getTexturePlanes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMeshForSubsection</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>currentStyle<span class=\"token punctuation\">.</span>rectMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>OF_MESH_FILL<span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVbo <span class=\"token operator\">&amp;</span> vbo<span class=\"token punctuation\">,</span> GLuint drawMode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> first<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">getUsingVerts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tvbo<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setAttributes</span><span class=\"token punctuation\">(</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">getUsingVerts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">getUsingColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">getUsingTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">getUsingNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glDrawArrays</span><span class=\"token punctuation\">(</span>drawMode<span class=\"token punctuation\">,</span> first<span class=\"token punctuation\">,</span> total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tvbo<span class=\"token punctuation\">.</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawElements</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVbo <span class=\"token operator\">&amp;</span> vbo<span class=\"token punctuation\">,</span> GLuint drawMode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> amt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> offsetelements<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">getUsingVerts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tvbo<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setAttributes</span><span class=\"token punctuation\">(</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">getUsingVerts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">getUsingColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">getUsingTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">getUsingNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n        <span class=\"token function\">glDrawElements</span><span class=\"token punctuation\">(</span>drawMode<span class=\"token punctuation\">,</span> amt<span class=\"token punctuation\">,</span> GL_UNSIGNED_SHORT<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ofIndexType<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> offsetelements<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n        <span class=\"token function\">glDrawElements</span><span class=\"token punctuation\">(</span>drawMode<span class=\"token punctuation\">,</span> amt<span class=\"token punctuation\">,</span> GL_UNSIGNED_INT<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>ofIndexType<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> offsetelements<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\tvbo<span class=\"token punctuation\">.</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawInstanced</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVbo <span class=\"token operator\">&amp;</span> vbo<span class=\"token punctuation\">,</span> GLuint drawMode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> first<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> total<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> primCount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">getUsingVerts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tvbo<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setAttributes</span><span class=\"token punctuation\">(</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">getUsingVerts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">getUsingColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">getUsingTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">getUsingNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// todo: activate instancing once OPENGL ES supports instancing, starting with version 3.0</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// unfortunately there is currently no easy way within oF to query the current OpenGL version.</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// https://www.khronos.org/opengles/sdk/docs/man3/xhtml/glDrawElementsInstanced.xml</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofVbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"drawInstanced(): hardware instancing is not supported on OpenGL ES &lt; 3.0\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// glDrawArraysInstanced(drawMode, first, total, primCount);</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t<span class=\"token function\">glDrawArraysInstanced</span><span class=\"token punctuation\">(</span>drawMode<span class=\"token punctuation\">,</span> first<span class=\"token punctuation\">,</span> total<span class=\"token punctuation\">,</span> primCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\tvbo<span class=\"token punctuation\">.</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawElementsInstanced</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVbo <span class=\"token operator\">&amp;</span> vbo<span class=\"token punctuation\">,</span> GLuint drawMode<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> amt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> primCount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">getUsingVerts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tvbo<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setAttributes</span><span class=\"token punctuation\">(</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">getUsingVerts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">getUsingColors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">getUsingTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>vbo<span class=\"token punctuation\">.</span><span class=\"token function\">getUsingNormals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n        <span class=\"token comment\" spellcheck=\"true\">// todo: activate instancing once OPENGL ES supports instancing, starting with version 3.0</span>\n        <span class=\"token comment\" spellcheck=\"true\">// unfortunately there is currently no easy way within oF to query the current OpenGL version.</span>\n        <span class=\"token comment\" spellcheck=\"true\">// https://www.khronos.org/opengles/sdk/docs/man3/xhtml/glDrawElementsInstanced.xml</span>\n        <span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofVbo\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"drawElementsInstanced(): hardware instancing is not supported on OpenGL ES &lt; 3.0\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\" spellcheck=\"true\">// glDrawElementsInstanced(drawMode, amt, GL_UNSIGNED_SHORT, nullptr, primCount);</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n        <span class=\"token function\">glDrawElementsInstanced</span><span class=\"token punctuation\">(</span>drawMode<span class=\"token punctuation\">,</span> amt<span class=\"token punctuation\">,</span> GL_UNSIGNED_INT<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> primCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\tvbo<span class=\"token punctuation\">.</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofPath <span class=\"token operator\">&amp;</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">getPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> path<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofBaseVideoDraws <span class=\"token operator\">&amp;</span> video<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">isInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">isUsingTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> video<span class=\"token punctuation\">.</span><span class=\"token function\">getTexturePlanes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">const</span> ofShader <span class=\"token operator\">*</span> shader <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>usingCustomShader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tshader <span class=\"token operator\">=</span> <span class=\"token function\">getVideoShader</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>shader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>shader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">setVideoShaderUniforms</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>shader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tusingVideoShader <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>usingVideoShader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofBaseVideoDraws <span class=\"token operator\">&amp;</span> video<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">isInitialized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">isUsingTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> video<span class=\"token punctuation\">.</span><span class=\"token function\">getTexturePlanes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>usingVideoShader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>currentShader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tusingVideoShader <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">pushView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">pushView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">popView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">popView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">uploadMatrices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span>matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span>ofRectangle viewport_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span>viewport_<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>viewport_<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>viewport_<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>viewport_<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> vflip<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">,</span>vflip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofRectangle nativeViewport <span class=\"token operator\">=</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getNativeViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glViewport</span><span class=\"token punctuation\">(</span>nativeViewport<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>nativeViewport<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>nativeViewport<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>nativeViewport<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofRectangle ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">getCurrentViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofRectangle ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">getNativeViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getNativeViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">getViewportWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getCurrentViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">int</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">getViewportHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">getCurrentViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setCoordHandedness</span><span class=\"token punctuation\">(</span>ofHandednessType handedness<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofHandednessType ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">getCoordHandedness</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getHandedness</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setOrientation</span><span class=\"token punctuation\">(</span>ofOrientation orientation<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> vFlip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">setOrientation</span><span class=\"token punctuation\">(</span>orientation<span class=\"token punctuation\">,</span>vFlip<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">uploadMatrices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setupScreenPerspective</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> fov<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> nearDist<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> farDist<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">float</span> viewW<span class=\"token punctuation\">,</span> viewH<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>width<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span> <span class=\"token operator\">||</span> height<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tofRectangle currentViewport <span class=\"token operator\">=</span> <span class=\"token function\">getCurrentViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tviewW <span class=\"token operator\">=</span> currentViewport<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t\tviewH <span class=\"token operator\">=</span> currentViewport<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tviewW <span class=\"token operator\">=</span> width<span class=\"token punctuation\">;</span>\n\t\tviewH <span class=\"token operator\">=</span> height<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">float</span> eyeX <span class=\"token operator\">=</span> viewW <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> eyeY <span class=\"token operator\">=</span> viewH <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> halfFov <span class=\"token operator\">=</span> PI <span class=\"token operator\">*</span> fov <span class=\"token operator\">/</span> <span class=\"token number\">360</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> theTan <span class=\"token operator\">=</span> <span class=\"token function\">tanf</span><span class=\"token punctuation\">(</span>halfFov<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> dist <span class=\"token operator\">=</span> eyeY <span class=\"token operator\">/</span> theTan<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> aspect <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span> viewW <span class=\"token operator\">/</span> viewH<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>nearDist <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> nearDist <span class=\"token operator\">=</span> dist <span class=\"token operator\">/</span> <span class=\"token number\">10.0f</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>farDist <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> farDist <span class=\"token operator\">=</span> dist <span class=\"token operator\">*</span> <span class=\"token number\">10.0f</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_PROJECTION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> persp <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">perspective</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofDegToRad</span><span class=\"token punctuation\">(</span>fov<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> aspect<span class=\"token punctuation\">,</span> nearDist<span class=\"token punctuation\">,</span> farDist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">loadMatrix</span><span class=\"token punctuation\">(</span> persp <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> lookAt <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">lookAt</span><span class=\"token punctuation\">(</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token punctuation\">{</span>eyeX<span class=\"token punctuation\">,</span> eyeY<span class=\"token punctuation\">,</span> dist<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>  glm<span class=\"token operator\">::</span>vec3<span class=\"token punctuation\">{</span>eyeX<span class=\"token punctuation\">,</span> eyeY<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>  glm<span class=\"token operator\">::</span>vec3<span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">loadViewMatrix</span><span class=\"token punctuation\">(</span>lookAt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setupScreenOrtho</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> nearDist<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> farDist<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">float</span> viewW<span class=\"token punctuation\">,</span> viewH<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>width<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span> <span class=\"token operator\">||</span> height<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tofRectangle currentViewport <span class=\"token operator\">=</span> <span class=\"token function\">getCurrentViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tviewW <span class=\"token operator\">=</span> currentViewport<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\t\tviewH <span class=\"token operator\">=</span> currentViewport<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tviewW <span class=\"token operator\">=</span> width<span class=\"token punctuation\">;</span>\n\t\tviewH <span class=\"token operator\">=</span> height<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">auto</span> ortho <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">ortho</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> viewW<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">,</span> viewH<span class=\"token punctuation\">,</span> nearDist<span class=\"token punctuation\">,</span> farDist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_PROJECTION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">loadMatrix</span><span class=\"token punctuation\">(</span>ortho<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// make ortho our new projection matrix.</span>\n\n\t<span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">loadViewMatrix</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">mat4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">//Resets openGL parameters back to OF defaults</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setupGraphicDefaults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setStyle</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setMode</span><span class=\"token punctuation\">(</span>ofPath<span class=\"token operator\">::</span>POLYLINES<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setUseShapeColor</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setupScreen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">beginDefaultShader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setupScreenPerspective</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\" spellcheck=\"true\">// assume defaults</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setCircleResolution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>circlePolyline<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span>res<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tcirclePolyline<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tcirclePolyline<span class=\"token punctuation\">.</span><span class=\"token function\">arc</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">360</span><span class=\"token punctuation\">,</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tcircleMesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> circlePolyline<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setCircleResolution</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tcurrentStyle<span class=\"token punctuation\">.</span>circleResolution <span class=\"token operator\">=</span> res<span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setPolyMode</span><span class=\"token punctuation\">(</span>ofPolyWindingMode mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcurrentStyle<span class=\"token punctuation\">.</span>polyMode <span class=\"token operator\">=</span> mode<span class=\"token punctuation\">;</span>\n\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setPolyWindingMode</span><span class=\"token punctuation\">(</span>mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//our openGL wrappers</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">popMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">popMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">uploadCurrentMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">uploadCurrentMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> xAmnt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> yAmnt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> zAmnt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>xAmnt<span class=\"token punctuation\">,</span> yAmnt<span class=\"token punctuation\">,</span> zAmnt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">uploadCurrentMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">rotateRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radians<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecY<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> vecZ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">rotateRad</span><span class=\"token punctuation\">(</span>radians<span class=\"token punctuation\">,</span> vecX<span class=\"token punctuation\">,</span> vecY<span class=\"token punctuation\">,</span> vecZ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">uploadCurrentMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">rotateXRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radians<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">rotateRad</span><span class=\"token punctuation\">(</span>radians<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">rotateYRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radians<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">rotateRad</span><span class=\"token punctuation\">(</span>radians<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">rotateZRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radians<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">rotateRad</span><span class=\"token punctuation\">(</span>radians<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//same as ofRotateZ</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">rotateRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radians<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">rotateZRad</span><span class=\"token punctuation\">(</span>radians<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>ofMatrixMode mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">loadIdentityMatrix</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">void</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">loadIdentityMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">uploadCurrentMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">loadMatrix</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">loadMatrix</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">uploadCurrentMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">loadMatrix</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">loadMatrix</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">make_mat4</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">multMatrix</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">multMatrix</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">uploadCurrentMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">multMatrix</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">float</span> <span class=\"token operator\">*</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">multMatrix</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">make_mat4</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">loadViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">loadViewMatrix</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">uploadCurrentMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">multViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>mat4 <span class=\"token operator\">&amp;</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">multViewMatrix</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">uploadCurrentMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nglm<span class=\"token operator\">::</span>mat4 ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">getCurrentViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nglm<span class=\"token operator\">::</span>mat4 ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">getCurrentNormalMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> glm<span class=\"token operator\">::</span><span class=\"token function\">transpose</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">inverse</span><span class=\"token punctuation\">(</span><span class=\"token function\">getCurrentMatrix</span><span class=\"token punctuation\">(</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">uploadCurrentMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>currentShader<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// uploads the current matrix to the current shader.</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentMatrixMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> OF_MATRIX_MODELVIEW<span class=\"token operator\">:</span>\n\t\tcurrentShader<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setUniformMatrix4f</span><span class=\"token punctuation\">(</span>MODEL_MATRIX_UNIFORM<span class=\"token punctuation\">,</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getModelMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tcurrentShader<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setUniformMatrix4f</span><span class=\"token punctuation\">(</span>VIEW_MATRIX_UNIFORM<span class=\"token punctuation\">,</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tcurrentShader<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setUniformMatrix4f</span><span class=\"token punctuation\">(</span>MODELVIEW_MATRIX_UNIFORM<span class=\"token punctuation\">,</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getModelViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tcurrentShader<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setUniformMatrix4f</span><span class=\"token punctuation\">(</span>MODELVIEW_PROJECTION_MATRIX_UNIFORM<span class=\"token punctuation\">,</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getModelViewProjectionMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tcurrentMaterial<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">uploadMatrices</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>currentShader<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_MATRIX_PROJECTION<span class=\"token operator\">:</span>\n\t\tcurrentShader<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setUniformMatrix4f</span><span class=\"token punctuation\">(</span>PROJECTION_MATRIX_UNIFORM<span class=\"token punctuation\">,</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getProjectionMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tcurrentShader<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setUniformMatrix4f</span><span class=\"token punctuation\">(</span>MODELVIEW_PROJECTION_MATRIX_UNIFORM<span class=\"token punctuation\">,</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getModelViewProjectionMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_MATRIX_TEXTURE<span class=\"token operator\">:</span>\n\t\tcurrentShader<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setUniformMatrix4f</span><span class=\"token punctuation\">(</span>TEXTURE_MATRIX_UNIFORM<span class=\"token punctuation\">,</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getTextureMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nglm<span class=\"token operator\">::</span>mat4 ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">getCurrentMatrix</span><span class=\"token punctuation\">(</span>ofMatrixMode matrixMode_<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>matrixMode_<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> OF_MATRIX_MODELVIEW<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getModelViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_MATRIX_PROJECTION<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getProjectionMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_MATRIX_TEXTURE<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">return</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getTextureMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Invalid getCurrentMatrix query\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span> glm<span class=\"token operator\">::</span><span class=\"token function\">mat4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nglm<span class=\"token operator\">::</span>mat4 ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">getCurrentOrientationMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getOrientationMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">,</span>color<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">,</span>color<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">,</span>color<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> color<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> _a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">,</span>color<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">,</span>color<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">,</span>_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> _r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> _g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> _b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>_r<span class=\"token punctuation\">,</span> _g<span class=\"token punctuation\">,</span> _b<span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> _r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> _g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> _b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> _a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofColor <span class=\"token function\">newColor</span><span class=\"token punctuation\">(</span>_r<span class=\"token punctuation\">,</span>_g<span class=\"token punctuation\">,</span>_b<span class=\"token punctuation\">,</span>_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>newColor<span class=\"token operator\">!=</span>currentStyle<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        currentStyle<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> newColor<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentShader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tcurrentShader<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setUniform4f</span><span class=\"token punctuation\">(</span>COLOR_UNIFORM<span class=\"token punctuation\">,</span>_r<span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span>_g<span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span>_b<span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span>_a<span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> gray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>gray<span class=\"token punctuation\">,</span> gray<span class=\"token punctuation\">,</span> gray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setHexColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> hexColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> r <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>hexColor <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> g <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>hexColor <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>hexColor <span class=\"token operator\">>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setBitmapTextMode</span><span class=\"token punctuation\">(</span>ofDrawBitmapMode mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcurrentStyle<span class=\"token punctuation\">.</span>drawBitmapMode <span class=\"token operator\">=</span> mode<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glClear</span><span class=\"token punctuation\">(</span>GL_COLOR_BUFFER_BIT <span class=\"token operator\">|</span> GL_DEPTH_BUFFER_BIT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glClearColor</span><span class=\"token punctuation\">(</span>r <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> g <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> b <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> a <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glClear</span><span class=\"token punctuation\">(</span>GL_COLOR_BUFFER_BIT <span class=\"token operator\">|</span> GL_DEPTH_BUFFER_BIT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> brightness<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">clear</span><span class=\"token punctuation\">(</span>brightness<span class=\"token punctuation\">,</span> brightness<span class=\"token punctuation\">,</span> brightness<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">clearAlpha</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glColorMask</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glClearColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glClear</span><span class=\"token punctuation\">(</span>GL_COLOR_BUFFER_BIT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glColorMask</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setBackgroundAuto</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bAuto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tbBackgroundAuto <span class=\"token operator\">=</span> bAuto<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">getBackgroundAuto</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> bBackgroundAuto<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofColor ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">getBackgroundColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> currentStyle<span class=\"token punctuation\">.</span>bgColor<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setBackgroundColor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcurrentStyle<span class=\"token punctuation\">.</span>bgColor <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glClearColor</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>bgColor<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> currentStyle<span class=\"token punctuation\">.</span>bgColor<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> currentStyle<span class=\"token punctuation\">.</span>bgColor<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> currentStyle<span class=\"token punctuation\">.</span>bgColor<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">background</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofColor <span class=\"token operator\">&amp;</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">setBackgroundColor</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glClear</span><span class=\"token punctuation\">(</span> GL_COLOR_BUFFER_BIT <span class=\"token operator\">|</span> GL_DEPTH_BUFFER_BIT <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">background</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> brightness<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">background</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofColor</span><span class=\"token punctuation\">(</span>brightness<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">background</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> hexColor<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> _a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">background</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>hexColor <span class=\"token operator\">>></span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>hexColor <span class=\"token operator\">>></span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>hexColor <span class=\"token operator\">>></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">,</span> _a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">background</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> g<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">background</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofColor</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setFillMode</span><span class=\"token punctuation\">(</span>ofFillFlag fill<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcurrentStyle<span class=\"token punctuation\">.</span>bFill <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>fill<span class=\"token operator\">==</span>OF_FILLED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>bFill<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setFilled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setStrokeWidth</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// GLES does not support glPolygonMode</span>\n\t\t\t<span class=\"token function\">glPolygonMode</span><span class=\"token punctuation\">(</span>GL_FRONT_AND_BACK<span class=\"token punctuation\">,</span> GL_FILL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setFilled</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setStrokeWidth</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>lineWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// GLES does not support glPolygonMode</span>\n\t\t\t<span class=\"token function\">glPolygonMode</span><span class=\"token punctuation\">(</span>GL_FRONT_AND_BACK<span class=\"token punctuation\">,</span> GL_LINE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofFillFlag ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">getFillMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>bFill<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> OF_FILLED<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> OF_OUTLINE<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setRectMode</span><span class=\"token punctuation\">(</span>ofRectMode mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcurrentStyle<span class=\"token punctuation\">.</span>rectMode <span class=\"token operator\">=</span> mode<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nofRectMode ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">getRectMode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> currentStyle<span class=\"token punctuation\">.</span>rectMode<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setLineWidth</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> lineWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// tig: glLinewidth is 'kind of' deprecated.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// http://www.opengl.org/registry/doc/glspec32.core.20090803.pdf</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// p.330: \"LineWidth values greater than 1.0 will generate an</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// INVALID_VALUE error\".</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// use geometry shaders to draw lines of varying thickness...</span>\n\n\tcurrentStyle<span class=\"token punctuation\">.</span>lineWidth <span class=\"token operator\">=</span> lineWidth<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>currentStyle<span class=\"token punctuation\">.</span>bFill<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setStrokeWidth</span><span class=\"token punctuation\">(</span>lineWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//glLineWidth(lineWidth);</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setDepthTest</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> depthTest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>depthTest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_DEPTH_TEST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">glDisable</span><span class=\"token punctuation\">(</span>GL_DEPTH_TEST<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setLineSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> smooth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcurrentStyle<span class=\"token punctuation\">.</span>smoothing <span class=\"token operator\">=</span> smooth<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">startSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// TODO :: needs ES2 code.</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">endSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// TODO :: needs ES2 code.</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setBlendMode</span><span class=\"token punctuation\">(</span>ofBlendMode blendMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>blendMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> OF_BLENDMODE_DISABLED<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">glDisable</span><span class=\"token punctuation\">(</span>GL_BLEND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_BLENDMODE_ALPHA<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_BLEND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">glBlendEquation</span><span class=\"token punctuation\">(</span>GL_FUNC_ADD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">glBlendFunc</span><span class=\"token punctuation\">(</span>GL_SRC_ALPHA<span class=\"token punctuation\">,</span> GL_ONE_MINUS_SRC_ALPHA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_BLENDMODE_ADD<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_BLEND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">glBlendEquation</span><span class=\"token punctuation\">(</span>GL_FUNC_ADD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">glBlendFunc</span><span class=\"token punctuation\">(</span>GL_SRC_ALPHA<span class=\"token punctuation\">,</span> GL_ONE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_BLENDMODE_MULTIPLY<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_BLEND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">glBlendEquation</span><span class=\"token punctuation\">(</span>GL_FUNC_ADD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">glBlendFunc</span><span class=\"token punctuation\">(</span>GL_DST_COLOR<span class=\"token punctuation\">,</span> GL_ONE_MINUS_SRC_ALPHA <span class=\"token comment\" spellcheck=\"true\">/* GL_ZERO or GL_ONE_MINUS_SRC_ALPHA */</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_BLENDMODE_SCREEN<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_BLEND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">glBlendEquation</span><span class=\"token punctuation\">(</span>GL_FUNC_ADD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">glBlendFunc</span><span class=\"token punctuation\">(</span>GL_ONE_MINUS_DST_COLOR<span class=\"token punctuation\">,</span> GL_ONE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_BLENDMODE_SUBTRACT<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_BLEND<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">glBlendEquation</span><span class=\"token punctuation\">(</span>GL_FUNC_REVERSE_SUBTRACT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">glBlendFunc</span><span class=\"token punctuation\">(</span>GL_SRC_ALPHA<span class=\"token punctuation\">,</span> GL_ONE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tcurrentStyle<span class=\"token punctuation\">.</span>blendingMode <span class=\"token operator\">=</span> blendMode<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">enablePointSprites</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_PROGRAMMABLE_GL</span>\n\t\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_POINT_SPRITE_OES<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_PROGRAM_POINT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">disablePointSprites</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_PROGRAMMABLE_GL</span>\n\t\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_POINT_SPRITE_OES<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token function\">glDisable</span><span class=\"token punctuation\">(</span>GL_PROGRAM_POINT_SIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">enableAntiAliasing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> !defined(TARGET_PROGRAMMABLE_GL) || !defined(TARGET_OPENGLES)</span>\n\t<span class=\"token function\">glEnable</span><span class=\"token punctuation\">(</span>GL_MULTISAMPLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">disableAntiAliasing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> !defined(TARGET_PROGRAMMABLE_GL) || !defined(TARGET_OPENGLES)</span>\n\t<span class=\"token function\">glDisable</span><span class=\"token punctuation\">(</span>GL_MULTISAMPLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">const</span> ofShader <span class=\"token operator\">&amp;</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">getCurrentShader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">*</span>currentShader<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setAlphaBitmapText</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> bitmapText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">bool</span> wasBitmapStringEnabled <span class=\"token operator\">=</span> bitmapStringEnabled<span class=\"token punctuation\">;</span>\n\tbitmapStringEnabled <span class=\"token operator\">=</span> bitmapText<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>wasBitmapStringEnabled<span class=\"token operator\">!=</span>bitmapText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentShader<span class=\"token punctuation\">)</span> currentShader<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setUniform1f</span><span class=\"token punctuation\">(</span>BITMAP_STRING_UNIFORM<span class=\"token punctuation\">,</span>bitmapText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nofStyle ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">getStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> currentStyle<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">pushStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tstyleHistory<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//if we are over the max number of styles we have set, then delete the oldest styles.</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> styleHistory<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> OF_MAX_STYLE_HISTORY <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tstyleHistory<span class=\"token punctuation\">.</span><span class=\"token function\">pop_front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//should we warn here?</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGraphics\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ofPushStyle(): maximum number of style pushes &lt;&lt; \"</span> <span class=\"token operator\">&lt;&lt;</span> OF_MAX_STYLE_HISTORY <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" reached, did you forget to pop somewhere?\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">popStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> styleHistory<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setStyle</span><span class=\"token punctuation\">(</span>styleHistory<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tstyleHistory<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setStyle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofStyle <span class=\"token operator\">&amp;</span> style<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//color</span>\n\t<span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>style<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>style<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span>g<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>style<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span>b<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>style<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//bg color</span>\n\t<span class=\"token function\">setBackgroundColor</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span>bgColor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//circle resolution - don't worry it only recalculates the display list if the res has changed</span>\n\t<span class=\"token function\">setCircleResolution</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span>circleResolution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">setCurveResolution</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span>curveResolution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//line width - finally!</span>\n\t<span class=\"token function\">setLineWidth</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span>lineWidth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//ofSetDepthTest(style.depthTest); removed since it'll break old projects setting depth test through glEnable</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//rect mode: corner/center</span>\n\t<span class=\"token function\">setRectMode</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span>rectMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//poly mode: winding type</span>\n\t<span class=\"token function\">setPolyMode</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span>polyMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//fill</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span>bFill <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setFillMode</span><span class=\"token punctuation\">(</span>OF_FILLED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setFillMode</span><span class=\"token punctuation\">(</span>OF_OUTLINE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//smoothing</span>\n\t<span class=\"token comment\" spellcheck=\"true\">/*if(style.smoothing ){\n\t\tenableSmoothing();\n\t}else{\n\t\tdisableSmoothing();\n\t}*/</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//blending</span>\n\t<span class=\"token function\">setBlendMode</span><span class=\"token punctuation\">(</span>style<span class=\"token punctuation\">.</span>blendingMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tcurrentStyle <span class=\"token operator\">=</span> style<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setCurveResolution</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> resolution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tcurrentStyle<span class=\"token punctuation\">.</span>curveResolution <span class=\"token operator\">=</span> resolution<span class=\"token punctuation\">;</span>\n\tpath<span class=\"token punctuation\">.</span><span class=\"token function\">setCurveResolution</span><span class=\"token punctuation\">(</span>resolution<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setAttributes</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> vertices<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> color<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> tex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> normals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">bool</span> wasColorsEnabled <span class=\"token operator\">=</span> colorsEnabled<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> wasUsingTexture <span class=\"token operator\">=</span> texCoordsEnabled <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>currentTextureTarget<span class=\"token operator\">!=</span>OF_NO_TEXTURE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\ttexCoordsEnabled <span class=\"token operator\">=</span> tex<span class=\"token punctuation\">;</span>\n\tcolorsEnabled <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n\tnormalsEnabled <span class=\"token operator\">=</span> normals<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>uniqueShader <span class=\"token operator\">||</span> currentMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">beginDefaultShader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">bool</span> usingTexture <span class=\"token operator\">=</span> tex <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>currentTextureTarget<span class=\"token operator\">!=</span>OF_NO_TEXTURE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>wasUsingTexture<span class=\"token operator\">!=</span>usingTexture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentShader<span class=\"token punctuation\">)</span> currentShader<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setUniform1f</span><span class=\"token punctuation\">(</span>USE_TEXTURE_UNIFORM<span class=\"token punctuation\">,</span>usingTexture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>wasColorsEnabled<span class=\"token operator\">!=</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentShader<span class=\"token punctuation\">)</span> currentShader<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setUniform1f</span><span class=\"token punctuation\">(</span>USE_COLORS_UNIFORM<span class=\"token punctuation\">,</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">enableTextureTarget</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofTexture <span class=\"token operator\">&amp;</span> tex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> textureLocation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">bool</span> wasUsingTexture <span class=\"token operator\">=</span> texCoordsEnabled <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>currentTextureTarget<span class=\"token operator\">!=</span>OF_NO_TEXTURE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcurrentTextureTarget <span class=\"token operator\">=</span> tex<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>uniqueShader <span class=\"token operator\">||</span> currentMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">beginDefaultShader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">bool</span> usingTexture <span class=\"token operator\">=</span> texCoordsEnabled <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>currentTextureTarget<span class=\"token operator\">!=</span>OF_NO_TEXTURE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>wasUsingTexture<span class=\"token operator\">!=</span>usingTexture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentShader<span class=\"token punctuation\">)</span> currentShader<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setUniform1f</span><span class=\"token punctuation\">(</span>USE_TEXTURE_UNIFORM<span class=\"token punctuation\">,</span>usingTexture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>currentTextureTarget<span class=\"token operator\">!=</span>OF_NO_TEXTURE<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> currentShader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tcurrentShader<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setUniformTexture</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"src_tex_unit\"</span><span class=\"token operator\">+</span><span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>textureLocation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>tex<span class=\"token punctuation\">,</span>textureLocation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">disableTextureTarget</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> textureTarget<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> textureLocation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">bool</span> wasUsingTexture <span class=\"token operator\">=</span> texCoordsEnabled <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>currentTextureTarget<span class=\"token operator\">!=</span>OF_NO_TEXTURE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcurrentTextureTarget <span class=\"token operator\">=</span> OF_NO_TEXTURE<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>uniqueShader <span class=\"token operator\">||</span> currentMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">beginDefaultShader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">bool</span> usingTexture <span class=\"token operator\">=</span> texCoordsEnabled <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>currentTextureTarget<span class=\"token operator\">!=</span>OF_NO_TEXTURE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>wasUsingTexture<span class=\"token operator\">!=</span>usingTexture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentShader<span class=\"token punctuation\">)</span> currentShader<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setUniform1f</span><span class=\"token punctuation\">(</span>USE_TEXTURE_UNIFORM<span class=\"token punctuation\">,</span>usingTexture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">glActiveTexture</span><span class=\"token punctuation\">(</span>GL_TEXTURE0<span class=\"token operator\">+</span>textureLocation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glBindTexture</span><span class=\"token punctuation\">(</span>textureTarget<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glActiveTexture</span><span class=\"token punctuation\">(</span>GL_TEXTURE0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\nGLenum ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">getCurrentTextureTarget</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> currentTextureTarget<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setAlphaMaskTex</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofTexture <span class=\"token operator\">&amp;</span> tex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\talphaMaskTextureTarget <span class=\"token operator\">=</span> tex<span class=\"token punctuation\">.</span><span class=\"token function\">getTextureData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>alphaMaskTextureTarget<span class=\"token operator\">==</span>GL_TEXTURE_2D<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\talphaMask2DShader<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\talphaMaskRectShader<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">enableTextureTarget</span><span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">disableAlphaMask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">disableTextureTarget</span><span class=\"token punctuation\">(</span>alphaMaskTextureTarget<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>alphaMaskTextureTarget<span class=\"token operator\">==</span>GL_TEXTURE_2D<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\talphaMask2DShader<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\talphaMaskRectShader<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofShader <span class=\"token operator\">&amp;</span> shader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentShader <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">*</span>currentShader<span class=\"token operator\">==</span>shader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">glUseProgram</span><span class=\"token punctuation\">(</span>shader<span class=\"token punctuation\">.</span><span class=\"token function\">getProgram</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tcurrentShader <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>shader<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">uploadMatrices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setDefaultUniforms</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>settingDefaultShader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tusingCustomShader <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofShader <span class=\"token operator\">&amp;</span> shader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glUseProgram</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tusingCustomShader <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">beginDefaultShader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFbo <span class=\"token operator\">&amp;</span> fbo<span class=\"token punctuation\">,</span> ofFboMode mode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">pushView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">pushStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mode <span class=\"token operator\">&amp;</span> OF_FBOMODE_MATRIXFLIP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">setRenderSurface</span><span class=\"token punctuation\">(</span>fbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n        matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">setRenderSurfaceNoMatrixFlip</span><span class=\"token punctuation\">(</span>fbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>mode <span class=\"token operator\">&amp;</span> OF_FBOMODE_PERSPECTIVE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setupScreenPerspective</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">uploadMatrices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>fbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFbo <span class=\"token operator\">&amp;</span> fbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span>fbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmatrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">setRenderSurface</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">uploadMatrices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">popStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">popView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFbo <span class=\"token operator\">&amp;</span> fbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentFramebufferId <span class=\"token operator\">==</span> fbo<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Framebuffer with id: \"</span> <span class=\"token operator\">&lt;&lt;</span> fbo<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" cannot be bound onto itself. \\n\"</span> <span class=\"token operator\">&lt;&lt;</span>\n\t\t\t<span class=\"token string\">\"Most probably you forgot to end() the current framebuffer before calling begin() again or you forgot to allocate() before calling begin().\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// this method could just as well have been placed in ofBaseGLRenderer</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// and shared over both programmable and fixed function renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// I'm keeping it here, so that if we want to do more fancyful</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// named framebuffers with GL 4.5+, we can have </span>\n\t<span class=\"token comment\" spellcheck=\"true\">// different implementations.</span>\n\tframebufferIdStack<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>currentFramebufferId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcurrentFramebufferId <span class=\"token operator\">=</span> fbo<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glBindFramebuffer</span><span class=\"token punctuation\">(</span>GL_FRAMEBUFFER<span class=\"token punctuation\">,</span> currentFramebufferId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">bindForBlitting</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFbo <span class=\"token operator\">&amp;</span> fboSrc<span class=\"token punctuation\">,</span> ofFbo <span class=\"token operator\">&amp;</span> fboDst<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> attachmentPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentFramebufferId <span class=\"token operator\">==</span> fboSrc<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Framebuffer with id: \"</span> <span class=\"token operator\">&lt;&lt;</span> fboSrc<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" cannot be bound onto itself. \\n\"</span> <span class=\"token operator\">&lt;&lt;</span>\n\t\t\t<span class=\"token string\">\"Most probably you forgot to end() the current framebuffer before calling getTexture().\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// this method could just as well have been placed in ofBaseGLRenderer</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// and shared over both programmable and fixed function renderer.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// I'm keeping it here, so that if we want to do more fancyful</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// named framebuffers with GL 4.5+, we can have</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// different implementations.</span>\n\tframebufferIdStack<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>currentFramebufferId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcurrentFramebufferId <span class=\"token operator\">=</span> fboSrc<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glBindFramebuffer</span><span class=\"token punctuation\">(</span>GL_READ_FRAMEBUFFER<span class=\"token punctuation\">,</span> currentFramebufferId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glReadBuffer</span><span class=\"token punctuation\">(</span>GL_COLOR_ATTACHMENT0 <span class=\"token operator\">+</span> attachmentPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glBindFramebuffer</span><span class=\"token punctuation\">(</span>GL_DRAW_FRAMEBUFFER<span class=\"token punctuation\">,</span> fboDst<span class=\"token punctuation\">.</span><span class=\"token function\">getIdDrawBuffer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glDrawBuffer</span><span class=\"token punctuation\">(</span>GL_COLOR_ATTACHMENT0 <span class=\"token operator\">+</span> attachmentPoint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofFbo <span class=\"token operator\">&amp;</span> fbo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>framebufferIdStack<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"unbalanced fbo bind/unbind binding default framebuffer\"</span><span class=\"token punctuation\">;</span>\n\t\tcurrentFramebufferId <span class=\"token operator\">=</span> defaultFramebufferId<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tcurrentFramebufferId <span class=\"token operator\">=</span> framebufferIdStack<span class=\"token punctuation\">.</span><span class=\"token function\">back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tframebufferIdStack<span class=\"token punctuation\">.</span><span class=\"token function\">pop_back</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">glBindFramebuffer</span><span class=\"token punctuation\">(</span>GL_FRAMEBUFFER<span class=\"token punctuation\">,</span> currentFramebufferId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tfbo<span class=\"token punctuation\">.</span><span class=\"token function\">flagDirty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofBaseMaterial <span class=\"token operator\">&amp;</span> material<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    currentMaterial <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>material<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">// FIXME: this invalidates the previous shader to avoid that</span>\n    <span class=\"token comment\" spellcheck=\"true\">// when binding 2 materials one after another, the second won't</span>\n    <span class=\"token comment\" spellcheck=\"true\">// get the right parameters.</span>\n    currentShader <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">beginDefaultShader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofBaseMaterial <span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    currentMaterial <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">beginDefaultShader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">enableLighting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">disableLighting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">enableLight</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">disableLight</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">getLightingEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofTexture <span class=\"token operator\">&amp;</span> texture<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> location<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//we could check if it has been allocated - but we don't do that in draw()</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">.</span><span class=\"token function\">getAlphaMask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setAlphaMaskTex</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>texture<span class=\"token punctuation\">.</span><span class=\"token function\">getAlphaMask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">enableTextureTarget</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">,</span>location<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetUsingNormalizedTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_TEXTURE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tglm<span class=\"token operator\">::</span>mat4 m <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">mat4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>textureTarget <span class=\"token operator\">==</span> GL_TEXTURE_RECTANGLE_ARB<span class=\"token punctuation\">)</span>\n\t\t\tm <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">else</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\tm <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>width <span class=\"token operator\">/</span> texture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>tex_w<span class=\"token punctuation\">,</span> texture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>height <span class=\"token operator\">/</span> texture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>tex_h<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token function\">loadMatrix</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">.</span><span class=\"token function\">isUsingTextureMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_TEXTURE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">ofGetUsingNormalizedTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">multMatrix</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">.</span><span class=\"token function\">getTextureMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofTexture <span class=\"token operator\">&amp;</span> texture<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> location<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">disableTextureTarget</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">.</span>texData<span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">,</span>location<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">.</span><span class=\"token function\">getAlphaMask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">disableAlphaMask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texture<span class=\"token punctuation\">.</span><span class=\"token function\">isUsingTextureMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token function\">ofGetUsingNormalizedTexCoords</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_TEXTURE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">popMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofCamera <span class=\"token operator\">&amp;</span> camera<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofRectangle <span class=\"token operator\">&amp;</span> _viewport<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">pushView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span>_viewport<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setOrientation</span><span class=\"token punctuation\">(</span>matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>camera<span class=\"token punctuation\">.</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_PROJECTION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">loadMatrix</span><span class=\"token punctuation\">(</span>camera<span class=\"token punctuation\">.</span><span class=\"token function\">getProjectionMatrix</span><span class=\"token punctuation\">(</span>_viewport<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">loadViewMatrix</span><span class=\"token punctuation\">(</span>camera<span class=\"token punctuation\">.</span><span class=\"token function\">getModelViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofCamera <span class=\"token operator\">&amp;</span> camera<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">popView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">uploadMatrices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>currentShader<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\tcurrentShader<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setUniformMatrix4f</span><span class=\"token punctuation\">(</span>MODEL_MATRIX_UNIFORM<span class=\"token punctuation\">,</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getModelMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcurrentShader<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setUniformMatrix4f</span><span class=\"token punctuation\">(</span>VIEW_MATRIX_UNIFORM<span class=\"token punctuation\">,</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcurrentShader<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setUniformMatrix4f</span><span class=\"token punctuation\">(</span>MODELVIEW_MATRIX_UNIFORM<span class=\"token punctuation\">,</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getModelViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcurrentShader<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setUniformMatrix4f</span><span class=\"token punctuation\">(</span>PROJECTION_MATRIX_UNIFORM<span class=\"token punctuation\">,</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getProjectionMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcurrentShader<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setUniformMatrix4f</span><span class=\"token punctuation\">(</span>TEXTURE_MATRIX_UNIFORM<span class=\"token punctuation\">,</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getTextureMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcurrentShader<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setUniformMatrix4f</span><span class=\"token punctuation\">(</span>MODELVIEW_PROJECTION_MATRIX_UNIFORM<span class=\"token punctuation\">,</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getModelViewProjectionMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tcurrentMaterial<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">uploadMatrices</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>currentShader<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setDefaultUniforms</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>currentShader<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\tcurrentShader<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setUniform4f</span><span class=\"token punctuation\">(</span>COLOR_UNIFORM<span class=\"token punctuation\">,</span> currentStyle<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span>r<span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span>currentStyle<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span>g<span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span>currentStyle<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span>b<span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span>currentStyle<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span>a<span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> usingTexture <span class=\"token operator\">=</span> texCoordsEnabled <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>currentTextureTarget<span class=\"token operator\">!=</span>OF_NO_TEXTURE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcurrentShader<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setUniform1f</span><span class=\"token punctuation\">(</span>USE_TEXTURE_UNIFORM<span class=\"token punctuation\">,</span>usingTexture<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcurrentShader<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setUniform1f</span><span class=\"token punctuation\">(</span>USE_COLORS_UNIFORM<span class=\"token punctuation\">,</span>colorsEnabled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tcurrentMaterial<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">updateMaterial</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>currentShader<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tcurrentMaterial<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">updateLights</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>currentShader<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">beginDefaultShader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>usingCustomShader <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>currentMaterial<span class=\"token punctuation\">)</span>\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">const</span> ofShader <span class=\"token operator\">*</span> nextShader <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>uniqueShader <span class=\"token operator\">||</span> currentMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>currentMaterial<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            nextShader <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>currentMaterial<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">getShader</span><span class=\"token punctuation\">(</span>currentTextureTarget<span class=\"token punctuation\">,</span>colorsEnabled<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bitmapStringEnabled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tnextShader <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>bitmapStringShader<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>colorsEnabled <span class=\"token operator\">&amp;&amp;</span> texCoordsEnabled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>currentTextureTarget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t<span class=\"token keyword\">case</span> GL_TEXTURE_RECTANGLE_ARB<span class=\"token operator\">:</span>\n\t\t\t\tnextShader <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>defaultTexRectColor<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token keyword\">case</span> GL_TEXTURE_2D<span class=\"token operator\">:</span>\n\t\t\t\tnextShader <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>defaultTex2DColor<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> OF_NO_TEXTURE<span class=\"token operator\">:</span>\n\t\t\t\tnextShader <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>defaultNoTexColor<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n\t\t\t<span class=\"token keyword\">case</span> GL_TEXTURE_EXTERNAL_OES<span class=\"token operator\">:</span>\n\t\t\t\tnextShader <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>defaultOESTexColor<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>colorsEnabled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tnextShader <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>defaultNoTexColor<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>texCoordsEnabled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>currentTextureTarget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t<span class=\"token keyword\">case</span> GL_TEXTURE_RECTANGLE_ARB<span class=\"token operator\">:</span>\n\t\t\t\tnextShader <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>defaultTexRectNoColor<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token keyword\">case</span> GL_TEXTURE_2D<span class=\"token operator\">:</span>\n\t\t\t\tnextShader <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>defaultTex2DNoColor<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> OF_NO_TEXTURE<span class=\"token operator\">:</span>\n\t\t\t\tnextShader <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>defaultNoTexNoColor<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n\t\t\t<span class=\"token keyword\">case</span> GL_TEXTURE_EXTERNAL_OES<span class=\"token operator\">:</span>\n\t\t\t\tnextShader <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>defaultOESTexNoColor<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\tnextShader <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>defaultNoTexNoColor<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tnextShader <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>defaultUniqueShader<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>nextShader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>currentShader <span class=\"token operator\">||</span> <span class=\"token operator\">*</span>currentShader<span class=\"token operator\">!=</span><span class=\"token operator\">*</span>nextShader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tsettingDefaultShader <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>nextShader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tsettingDefaultShader <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawLine</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tofGLProgrammableRenderer <span class=\"token operator\">*</span> mutThis <span class=\"token operator\">=</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tlineMesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x1<span class=\"token punctuation\">,</span>y1<span class=\"token punctuation\">,</span>z1<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\tlineMesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x2<span class=\"token punctuation\">,</span>y2<span class=\"token punctuation\">,</span>z2<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    \n\t<span class=\"token comment\" spellcheck=\"true\">// use smoothness, if requested:</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>smoothing<span class=\"token punctuation\">)</span> mutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">startSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>lineMesh<span class=\"token punctuation\">,</span>OF_MESH_FILL<span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n\t<span class=\"token comment\" spellcheck=\"true\">// use smoothness, if requested:</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>smoothing<span class=\"token punctuation\">)</span> mutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">endSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawRectangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> h<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tofGLProgrammableRenderer <span class=\"token operator\">*</span> mutThis <span class=\"token operator\">=</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>rectMode <span class=\"token operator\">==</span> OF_RECTMODE_CORNER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\trectMesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\trectMesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x<span class=\"token operator\">+</span>w<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\trectMesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x<span class=\"token operator\">+</span>w<span class=\"token punctuation\">,</span> y<span class=\"token operator\">+</span>h<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\trectMesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x<span class=\"token punctuation\">,</span> y<span class=\"token operator\">+</span>h<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\trectMesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x<span class=\"token operator\">-</span>w<span class=\"token operator\">/</span><span class=\"token number\">2.0f</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">-</span>h<span class=\"token operator\">/</span><span class=\"token number\">2.0f</span><span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\trectMesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x<span class=\"token operator\">+</span>w<span class=\"token operator\">/</span><span class=\"token number\">2.0f</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">-</span>h<span class=\"token operator\">/</span><span class=\"token number\">2.0f</span><span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\trectMesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x<span class=\"token operator\">+</span>w<span class=\"token operator\">/</span><span class=\"token number\">2.0f</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">+</span>h<span class=\"token operator\">/</span><span class=\"token number\">2.0f</span><span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t\trectMesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x<span class=\"token operator\">-</span>w<span class=\"token operator\">/</span><span class=\"token number\">2.0f</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">+</span>h<span class=\"token operator\">/</span><span class=\"token number\">2.0f</span><span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n    \n\t<span class=\"token comment\" spellcheck=\"true\">// use smoothness, if requested:</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>smoothing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>currentStyle<span class=\"token punctuation\">.</span>bFill<span class=\"token punctuation\">)</span> mutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">startSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\trectMesh<span class=\"token punctuation\">.</span><span class=\"token function\">setMode</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>bFill <span class=\"token operator\">?</span> OF_PRIMITIVE_TRIANGLE_FAN <span class=\"token operator\">:</span> OF_PRIMITIVE_LINE_LOOP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>rectMesh<span class=\"token punctuation\">,</span>OF_MESH_FILL<span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n\t<span class=\"token comment\" spellcheck=\"true\">// use smoothness, if requested:</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>smoothing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>currentStyle<span class=\"token punctuation\">.</span>bFill<span class=\"token punctuation\">)</span> mutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">endSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawTriangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z3<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tofGLProgrammableRenderer <span class=\"token operator\">*</span> mutThis <span class=\"token operator\">=</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ttriangleMesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x1<span class=\"token punctuation\">,</span>y1<span class=\"token punctuation\">,</span>z1<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\ttriangleMesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x2<span class=\"token punctuation\">,</span>y2<span class=\"token punctuation\">,</span>z2<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\ttriangleMesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>x3<span class=\"token punctuation\">,</span>y3<span class=\"token punctuation\">,</span>z3<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    \n\t<span class=\"token comment\" spellcheck=\"true\">// use smoothness, if requested:</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>smoothing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>currentStyle<span class=\"token punctuation\">.</span>bFill<span class=\"token punctuation\">)</span> mutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">startSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\ttriangleMesh<span class=\"token punctuation\">.</span><span class=\"token function\">setMode</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>bFill <span class=\"token operator\">?</span> OF_PRIMITIVE_TRIANGLE_STRIP <span class=\"token operator\">:</span> OF_PRIMITIVE_LINE_LOOP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>triangleMesh<span class=\"token punctuation\">,</span>OF_MESH_FILL<span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n\t<span class=\"token comment\" spellcheck=\"true\">// use smoothness, if requested:</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>smoothing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>currentStyle<span class=\"token punctuation\">.</span>bFill<span class=\"token punctuation\">)</span> mutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">endSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawCircle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span>  <span class=\"token keyword\">float</span> radius<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tofGLProgrammableRenderer <span class=\"token operator\">*</span> mutThis <span class=\"token operator\">=</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">auto</span> <span class=\"token operator\">&amp;</span> circleCache <span class=\"token operator\">=</span> circlePolyline<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>circleCache<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tcircleMesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>radius<span class=\"token operator\">*</span>circleCache<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span>x<span class=\"token punctuation\">,</span>radius<span class=\"token operator\">*</span>circleCache<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token operator\">+</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n    \n\t<span class=\"token comment\" spellcheck=\"true\">// use smoothness, if requested:</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>smoothing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>currentStyle<span class=\"token punctuation\">.</span>bFill<span class=\"token punctuation\">)</span> mutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">startSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tcircleMesh<span class=\"token punctuation\">.</span><span class=\"token function\">setMode</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>bFill <span class=\"token operator\">?</span> OF_PRIMITIVE_TRIANGLE_FAN <span class=\"token operator\">:</span> OF_PRIMITIVE_LINE_STRIP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>circleMesh<span class=\"token punctuation\">,</span>OF_MESH_FILL<span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// use smoothness, if requested:</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>smoothing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>currentStyle<span class=\"token punctuation\">.</span>bFill<span class=\"token punctuation\">)</span> mutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">endSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawEllipse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tofGLProgrammableRenderer <span class=\"token operator\">*</span> mutThis <span class=\"token operator\">=</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> radiusX <span class=\"token operator\">=</span> width<span class=\"token operator\">*</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> radiusY <span class=\"token operator\">=</span> height<span class=\"token operator\">*</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> <span class=\"token keyword\">auto</span> <span class=\"token operator\">&amp;</span> circleCache <span class=\"token operator\">=</span> circlePolyline<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>circleCache<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tcircleMesh<span class=\"token punctuation\">.</span><span class=\"token function\">getVertices</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>radiusX<span class=\"token operator\">*</span>circlePolyline<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span>x<span class=\"token punctuation\">,</span>radiusY<span class=\"token operator\">*</span>circlePolyline<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token operator\">+</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n    \n\t<span class=\"token comment\" spellcheck=\"true\">// use smoothness, if requested:</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>smoothing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>currentStyle<span class=\"token punctuation\">.</span>bFill<span class=\"token punctuation\">)</span> mutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">startSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tcircleMesh<span class=\"token punctuation\">.</span><span class=\"token function\">setMode</span><span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>bFill <span class=\"token operator\">?</span> OF_PRIMITIVE_TRIANGLE_FAN <span class=\"token operator\">:</span> OF_PRIMITIVE_LINE_STRIP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>circleMesh<span class=\"token punctuation\">,</span>OF_MESH_FILL<span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n\t<span class=\"token comment\" spellcheck=\"true\">// use smoothness, if requested:</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>smoothing <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>currentStyle<span class=\"token punctuation\">.</span>bFill<span class=\"token punctuation\">)</span> mutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">endSmoothing</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawString</span><span class=\"token punctuation\">(</span>string textString<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tofGLProgrammableRenderer <span class=\"token operator\">*</span> mutThis <span class=\"token operator\">=</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> sx <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> sy <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">///////////////////////////</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// APPLY TRANSFORM / VIEW</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///////////////////////////</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\n\t<span class=\"token keyword\">bool</span> hasModelView <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> hasProjection <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> hasViewport <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\tofRectangle rViewport<span class=\"token punctuation\">;</span>\n\tglm<span class=\"token operator\">::</span>mat4 modelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">mat4</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>currentStyle<span class=\"token punctuation\">.</span>drawBitmapMode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_BITMAPMODE_SIMPLE<span class=\"token operator\">:</span>\n\n\t\t\tsx <span class=\"token operator\">+</span><span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n\t\t\tsy <span class=\"token operator\">+</span><span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_BITMAPMODE_SCREEN<span class=\"token operator\">:</span>\n\n\t\t\thasViewport <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pushView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\trViewport <span class=\"token operator\">=</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getFullSurfaceViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span>rViewport<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_PROJECTION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">loadIdentityMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">/</span>rViewport<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">/</span>rViewport<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">loadMatrix</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_BITMAPMODE_VIEWPORT<span class=\"token operator\">:</span>\n\n\t\t\trViewport <span class=\"token operator\">=</span> <span class=\"token function\">getCurrentViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\thasProjection <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_PROJECTION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">loadIdentityMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\thasModelView <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">/</span>rViewport<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">/</span>rViewport<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">loadMatrix</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_BITMAPMODE_MODEL<span class=\"token operator\">:</span>\n\n\t\t\thasModelView <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">case</span> OF_BITMAPMODE_MODEL_BILLBOARD<span class=\"token operator\">:</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//our aim here is to draw to screen</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//at the viewport position related</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//to the world position x,y,z</span>\n\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// tig: we want to get the signed normalised screen coordinates (-1,+1) of our point (x,y,z)</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// that's projection * modelview * point in GLSL multiplication order</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// then doing the good old (v + 1.0) / 2. to get unsigned normalized screen (0,1) coordinates.</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">// we then multiply x by width and y by height to get window coordinates.</span>\n\t\t\t\n\t\t\trViewport <span class=\"token operator\">=</span> <span class=\"token function\">getCurrentViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\n\t\t\tglm<span class=\"token operator\">::</span>mat4 mat <span class=\"token operator\">=</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getProjectionMatrixNoOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">*</span> matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getModelViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tglm<span class=\"token operator\">::</span>vec4 dScreen4 <span class=\"token operator\">=</span> mat <span class=\"token operator\">*</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec4</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tglm<span class=\"token operator\">::</span>vec3 dScreen <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>dScreen4<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> dScreen4<span class=\"token punctuation\">.</span>w<span class=\"token punctuation\">;</span>\n\t\t\tdScreen <span class=\"token operator\">+</span><span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>\n\t\t\tdScreen <span class=\"token operator\">*</span><span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n\t\t\t\n\t\t\tdScreen<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span><span class=\"token operator\">=</span> rViewport<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\t\t\tdScreen<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span><span class=\"token operator\">=</span> rViewport<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">;</span>\n\n\t\t\tdScreen<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span><span class=\"token operator\">=</span> rViewport<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\t\t\tdScreen<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span><span class=\"token operator\">=</span> rViewport<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">;</span>\n\t\t\t\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dScreen<span class=\"token punctuation\">.</span>z <span class=\"token operator\">>=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\n\n\t\t\thasProjection <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_PROJECTION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">loadIdentityMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\thasModelView <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pushMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">/</span>rViewport<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">/</span>rViewport<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmodelView <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">,</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span>dScreen<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> dScreen<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">loadMatrix</span><span class=\"token punctuation\">(</span>modelView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t<span class=\"token comment\" spellcheck=\"true\">///////////////////////////</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// tig: we switch over to our built-in bitmapstring shader</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// to render text. This gives us more flexibility &amp; control</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// and does not mess/interfere with client side shaders.</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// (c) enable texture once before we start drawing each char (no point turning it on and off constantly)</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//We do this because its way faster</span>\n\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setAlphaBitmapText</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofMesh charMesh <span class=\"token operator\">=</span> bitmapFont<span class=\"token punctuation\">.</span><span class=\"token function\">getMesh</span><span class=\"token punctuation\">(</span>textString<span class=\"token punctuation\">,</span> sx<span class=\"token punctuation\">,</span> sy<span class=\"token punctuation\">,</span> currentStyle<span class=\"token punctuation\">.</span>drawBitmapMode<span class=\"token punctuation\">,</span> <span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>bitmapFont<span class=\"token punctuation\">.</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>charMesh<span class=\"token punctuation\">,</span>OF_MESH_FILL<span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span>bitmapFont<span class=\"token punctuation\">.</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setAlphaBitmapText</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hasViewport<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">popView</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hasModelView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">popMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hasProjection<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_PROJECTION<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">popMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">matrixMode</span><span class=\"token punctuation\">(</span>OF_MATRIX_MODELVIEW<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">drawString</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofTrueTypeFont <span class=\"token operator\">&amp;</span> font<span class=\"token punctuation\">,</span> string text<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\tofGLProgrammableRenderer <span class=\"token operator\">*</span> mutThis <span class=\"token operator\">=</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofGLProgrammableRenderer<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofBlendMode blendMode <span class=\"token operator\">=</span> currentStyle<span class=\"token punctuation\">.</span>blendingMode<span class=\"token punctuation\">;</span>\n\n\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setBlendMode</span><span class=\"token punctuation\">(</span>OF_BLENDMODE_ALPHA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>font<span class=\"token punctuation\">.</span><span class=\"token function\">getFontTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>font<span class=\"token punctuation\">.</span><span class=\"token function\">getStringMesh</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>OF_MESH_FILL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span>font<span class=\"token punctuation\">.</span><span class=\"token function\">getFontTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tmutThis<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setBlendMode</span><span class=\"token punctuation\">(</span>blendMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> STRINGIFY(x) #x</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">// ----------------------------------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">// tig: GLSL #150 shaders written against spec:</span>\n<span class=\"token comment\" spellcheck=\"true\">// http://www.opengl.org/registry/doc/GLSLangSpec.1.50.09.pdf</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string vertex_shader_header <span class=\"token operator\">=</span>\n\t\t<span class=\"token string\">\"%extensions%\\n\"</span>\n\t\t<span class=\"token string\">\"precision highp float;\\n\"</span>\n\t\t<span class=\"token string\">\"#define IN attribute\\n\"</span>\n\t\t<span class=\"token string\">\"#define OUT varying\\n\"</span>\n\t\t<span class=\"token string\">\"#define TEXTURE texture2D\\n\"</span>\n\t\t<span class=\"token string\">\"#define TARGET_OPENGLES\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string fragment_shader_header <span class=\"token operator\">=</span>\n\t\t<span class=\"token string\">\"%extensions%\\n\"</span>\n\t\t<span class=\"token string\">\"precision highp float;\\n\"</span>\n\t\t<span class=\"token string\">\"#define IN varying\\n\"</span>\n\t\t<span class=\"token string\">\"#define OUT\\n\"</span>\n\t\t<span class=\"token string\">\"#define TEXTURE texture2D\\n\"</span>\n\t\t<span class=\"token string\">\"#define FRAG_COLOR gl_FragColor\\n\"</span>\n\t\t<span class=\"token string\">\"#define TARGET_OPENGLES\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string vertex_shader_header <span class=\"token operator\">=</span>\n\t\t<span class=\"token string\">\"#version %glsl_version%\\n\"</span>\n\t\t<span class=\"token string\">\"%extensions%\\n\"</span>\n\t\t<span class=\"token string\">\"#define IN in\\n\"</span>\n\t\t<span class=\"token string\">\"#define OUT out\\n\"</span>\n\t\t<span class=\"token string\">\"#define TEXTURE texture\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string fragment_shader_header <span class=\"token operator\">=</span>\n\t\t<span class=\"token string\">\"#version %glsl_version%\\n\"</span>\n\t\t<span class=\"token string\">\"%extensions%\\n\"</span>\n\t\t<span class=\"token string\">\"#define IN in\\n\"</span>\n\t\t<span class=\"token string\">\"#define OUT out\\n\"</span>\n\t\t<span class=\"token string\">\"#define TEXTURE texture\\n\"</span>\n\t\t<span class=\"token string\">\"#define FRAG_COLOR fragColor\\n\"</span>\n\t\t<span class=\"token string\">\"out vec4 fragColor;\\n\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string defaultVertexShader <span class=\"token operator\">=</span> vertex_shader_header <span class=\"token operator\">+</span> <span class=\"token function\">STRINGIFY</span><span class=\"token punctuation\">(</span>\n\tuniform mat4 projectionMatrix<span class=\"token punctuation\">;</span>\n\tuniform mat4 modelViewMatrix<span class=\"token punctuation\">;</span>\n\tuniform mat4 textureMatrix<span class=\"token punctuation\">;</span>\n\tuniform mat4 modelViewProjectionMatrix<span class=\"token punctuation\">;</span>\n\n\tIN vec4  position<span class=\"token punctuation\">;</span>\n\tIN vec2  texcoord<span class=\"token punctuation\">;</span>\n\tIN vec4  color<span class=\"token punctuation\">;</span>\n\tIN vec3  normal<span class=\"token punctuation\">;</span>\n\n\tOUT vec4 colorVarying<span class=\"token punctuation\">;</span>\n\tOUT vec2 texCoordVarying<span class=\"token punctuation\">;</span>\n\tOUT vec4 normalVarying<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\tcolorVarying <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n\t\ttexCoordVarying <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>textureMatrix<span class=\"token operator\">*</span><span class=\"token function\">vec4</span><span class=\"token punctuation\">(</span>texcoord<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>texcoord<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">;</span>\n\t\tgl_Position <span class=\"token operator\">=</span> modelViewProjectionMatrix <span class=\"token operator\">*</span> position<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// ----------------------------------------------------------------------</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string defaultFragmentShaderTexRectColor <span class=\"token operator\">=</span> fragment_shader_header <span class=\"token operator\">+</span> <span class=\"token function\">STRINGIFY</span><span class=\"token punctuation\">(</span>\n\n\tuniform sampler2DRect src_tex_unit0<span class=\"token punctuation\">;</span>\n\tuniform <span class=\"token keyword\">float</span> usingTexture<span class=\"token punctuation\">;</span>\n\tuniform <span class=\"token keyword\">float</span> usingColors<span class=\"token punctuation\">;</span>\n\tuniform vec4 globalColor<span class=\"token punctuation\">;</span>\n\n\tIN <span class=\"token keyword\">float</span> depth<span class=\"token punctuation\">;</span>\n\tIN vec4 colorVarying<span class=\"token punctuation\">;</span>\n\tIN vec2 texCoordVarying<span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tFRAG_COLOR <span class=\"token operator\">=</span> <span class=\"token function\">TEXTURE</span><span class=\"token punctuation\">(</span>src_tex_unit0<span class=\"token punctuation\">,</span> texCoordVarying<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> colorVarying<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// ----------------------------------------------------------------------</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string defaultFragmentShaderTexRectNoColor <span class=\"token operator\">=</span> fragment_shader_header <span class=\"token operator\">+</span> <span class=\"token function\">STRINGIFY</span><span class=\"token punctuation\">(</span>\n\n\tuniform sampler2DRect src_tex_unit0<span class=\"token punctuation\">;</span>\n\tuniform <span class=\"token keyword\">float</span> usingTexture<span class=\"token punctuation\">;</span>\n\tuniform <span class=\"token keyword\">float</span> usingColors<span class=\"token punctuation\">;</span>\n\tuniform vec4 globalColor<span class=\"token punctuation\">;</span>\n\n\tIN <span class=\"token keyword\">float</span> depth<span class=\"token punctuation\">;</span>\n\tIN vec4 colorVarying<span class=\"token punctuation\">;</span>\n\tIN vec2 texCoordVarying<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tFRAG_COLOR <span class=\"token operator\">=</span> <span class=\"token function\">TEXTURE</span><span class=\"token punctuation\">(</span>src_tex_unit0<span class=\"token punctuation\">,</span> texCoordVarying<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> globalColor<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// ----------------------------------------------------------------------</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string alphaMaskFragmentShaderTexRectNoColor <span class=\"token operator\">=</span> fragment_shader_header <span class=\"token operator\">+</span> <span class=\"token function\">STRINGIFY</span><span class=\"token punctuation\">(</span>\n\n\tuniform sampler2DRect src_tex_unit0<span class=\"token punctuation\">;</span>\n\tuniform sampler2DRect src_tex_unit1<span class=\"token punctuation\">;</span>\n\tuniform <span class=\"token keyword\">float</span> usingTexture<span class=\"token punctuation\">;</span>\n\tuniform <span class=\"token keyword\">float</span> usingColors<span class=\"token punctuation\">;</span>\n\tuniform vec4 globalColor<span class=\"token punctuation\">;</span>\n\n\tIN <span class=\"token keyword\">float</span> depth<span class=\"token punctuation\">;</span>\n\tIN vec4 colorVarying<span class=\"token punctuation\">;</span>\n\tIN vec2 texCoordVarying<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tFRAG_COLOR <span class=\"token operator\">=</span> <span class=\"token function\">vec4</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXTURE</span><span class=\"token punctuation\">(</span>src_tex_unit0<span class=\"token punctuation\">,</span> texCoordVarying<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rgb<span class=\"token punctuation\">,</span>  <span class=\"token function\">TEXTURE</span><span class=\"token punctuation\">(</span>src_tex_unit1<span class=\"token punctuation\">,</span> texCoordVarying<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> globalColor<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// ----------------------------------------------------------------------</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string alphaMaskFragmentShaderTex2DNoColor <span class=\"token operator\">=</span> fragment_shader_header <span class=\"token operator\">+</span> <span class=\"token function\">STRINGIFY</span><span class=\"token punctuation\">(</span>\n\n\tuniform sampler2D src_tex_unit0<span class=\"token punctuation\">;</span>\n\tuniform sampler2D src_tex_unit1<span class=\"token punctuation\">;</span>\n\tuniform <span class=\"token keyword\">float</span> usingTexture<span class=\"token punctuation\">;</span>\n\tuniform <span class=\"token keyword\">float</span> usingColors<span class=\"token punctuation\">;</span>\n\tuniform vec4 globalColor<span class=\"token punctuation\">;</span>\n\n\tIN <span class=\"token keyword\">float</span> depth<span class=\"token punctuation\">;</span>\n\tIN vec4 colorVarying<span class=\"token punctuation\">;</span>\n\tIN vec2 texCoordVarying<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tFRAG_COLOR <span class=\"token operator\">=</span> <span class=\"token function\">vec4</span><span class=\"token punctuation\">(</span><span class=\"token function\">TEXTURE</span><span class=\"token punctuation\">(</span>src_tex_unit0<span class=\"token punctuation\">,</span> texCoordVarying<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>rgb<span class=\"token punctuation\">,</span>  <span class=\"token function\">TEXTURE</span><span class=\"token punctuation\">(</span>src_tex_unit1<span class=\"token punctuation\">,</span> texCoordVarying<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span> globalColor<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// ----------------------------------------------------------------------</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string defaultFragmentShaderTex2DColor <span class=\"token operator\">=</span> fragment_shader_header <span class=\"token operator\">+</span> <span class=\"token function\">STRINGIFY</span><span class=\"token punctuation\">(</span>\n\n\tuniform sampler2D src_tex_unit0<span class=\"token punctuation\">;</span>\n\tuniform <span class=\"token keyword\">float</span> usingTexture<span class=\"token punctuation\">;</span>\n\tuniform <span class=\"token keyword\">float</span> usingColors<span class=\"token punctuation\">;</span>\n\tuniform vec4 globalColor<span class=\"token punctuation\">;</span>\n\n\tIN <span class=\"token keyword\">float</span> depth<span class=\"token punctuation\">;</span>\n\tIN vec4 colorVarying<span class=\"token punctuation\">;</span>\n\tIN vec2 texCoordVarying<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tFRAG_COLOR <span class=\"token operator\">=</span> <span class=\"token function\">TEXTURE</span><span class=\"token punctuation\">(</span>src_tex_unit0<span class=\"token punctuation\">,</span> texCoordVarying<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> colorVarying<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// ----------------------------------------------------------------------</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string defaultFragmentShaderTex2DNoColor <span class=\"token operator\">=</span> fragment_shader_header <span class=\"token operator\">+</span> <span class=\"token function\">STRINGIFY</span><span class=\"token punctuation\">(</span>\n\n\tuniform sampler2D src_tex_unit0<span class=\"token punctuation\">;</span>\n\tuniform <span class=\"token keyword\">float</span> usingTexture<span class=\"token punctuation\">;</span>\n\tuniform <span class=\"token keyword\">float</span> usingColors<span class=\"token punctuation\">;</span>\n\tuniform vec4 globalColor<span class=\"token punctuation\">;</span>\n\n\tIN <span class=\"token keyword\">float</span> depth<span class=\"token punctuation\">;</span>\n\tIN vec4 colorVarying<span class=\"token punctuation\">;</span>\n\tIN vec2 texCoordVarying<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tFRAG_COLOR <span class=\"token operator\">=</span> <span class=\"token function\">TEXTURE</span><span class=\"token punctuation\">(</span>src_tex_unit0<span class=\"token punctuation\">,</span> texCoordVarying<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> globalColor<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// ----------------------------------------------------------------------</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string defaultFragmentShaderOESTexNoColor <span class=\"token operator\">=</span> fragment_shader_header <span class=\"token operator\">+</span> <span class=\"token function\">STRINGIFY</span><span class=\"token punctuation\">(</span>\n    \n    uniform samplerExternalOES src_tex_unit0<span class=\"token punctuation\">;</span>\n    uniform <span class=\"token keyword\">float</span> usingTexture<span class=\"token punctuation\">;</span>\n    uniform <span class=\"token keyword\">float</span> usingColors<span class=\"token punctuation\">;</span>\n    uniform vec4 globalColor<span class=\"token punctuation\">;</span>\n    \n    IN <span class=\"token keyword\">float</span> depth<span class=\"token punctuation\">;</span>\n    IN vec4 colorVarying<span class=\"token punctuation\">;</span>\n    IN vec2 texCoordVarying<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        FRAG_COLOR <span class=\"token operator\">=</span> <span class=\"token function\">TEXTURE</span><span class=\"token punctuation\">(</span>src_tex_unit0<span class=\"token punctuation\">,</span> texCoordVarying<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> globalColor<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// ----------------------------------------------------------------------</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string defaultFragmentShaderOESTexColor <span class=\"token operator\">=</span> fragment_shader_header <span class=\"token operator\">+</span> <span class=\"token function\">STRINGIFY</span><span class=\"token punctuation\">(</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tuniform samplerExternalOES src_tex_unit0<span class=\"token punctuation\">;</span>\n\tuniform <span class=\"token keyword\">float</span> usingTexture<span class=\"token punctuation\">;</span>\n\tuniform <span class=\"token keyword\">float</span> usingColors<span class=\"token punctuation\">;</span>\n\tuniform vec4 globalColor<span class=\"token punctuation\">;</span>\n\t\n\tIN <span class=\"token keyword\">float</span> depth<span class=\"token punctuation\">;</span>\n\tIN vec4 colorVarying<span class=\"token punctuation\">;</span>\n\tIN vec2 texCoordVarying<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tFRAG_COLOR <span class=\"token operator\">=</span> <span class=\"token function\">TEXTURE</span><span class=\"token punctuation\">(</span>src_tex_unit0<span class=\"token punctuation\">,</span> texCoordVarying<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> colorVarying<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// ----------------------------------------------------------------------</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string defaultFragmentShaderNoTexColor <span class=\"token operator\">=</span> fragment_shader_header <span class=\"token operator\">+</span> <span class=\"token function\">STRINGIFY</span> <span class=\"token punctuation\">(</span>\n\n\tuniform <span class=\"token keyword\">float</span> usingTexture<span class=\"token punctuation\">;</span>\n\tuniform <span class=\"token keyword\">float</span> usingColors<span class=\"token punctuation\">;</span>\n\tuniform vec4 globalColor<span class=\"token punctuation\">;</span>\n\n\tIN <span class=\"token keyword\">float</span> depth<span class=\"token punctuation\">;</span>\n\tIN vec4 colorVarying<span class=\"token punctuation\">;</span>\n\tIN vec2 texCoordVarying<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tFRAG_COLOR <span class=\"token operator\">=</span> colorVarying<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// ----------------------------------------------------------------------</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string defaultFragmentShaderNoTexNoColor <span class=\"token operator\">=</span> fragment_shader_header <span class=\"token operator\">+</span> <span class=\"token function\">STRINGIFY</span><span class=\"token punctuation\">(</span>\n\n\tuniform <span class=\"token keyword\">float</span> usingTexture<span class=\"token punctuation\">;</span>\n\tuniform <span class=\"token keyword\">float</span> usingColors<span class=\"token punctuation\">;</span>\n\tuniform vec4 globalColor<span class=\"token punctuation\">;</span>\n\n\tIN <span class=\"token keyword\">float</span> depth<span class=\"token punctuation\">;</span>\n\tIN vec4 colorVarying<span class=\"token punctuation\">;</span>\n\tIN vec2 texCoordVarying<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tFRAG_COLOR <span class=\"token operator\">=</span> globalColor<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// ----------------------------------------------------------------------</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string bitmapStringVertexShader <span class=\"token operator\">=</span> vertex_shader_header <span class=\"token operator\">+</span> <span class=\"token function\">STRINGIFY</span><span class=\"token punctuation\">(</span>\n\n\tuniform mat4 projectionMatrix<span class=\"token punctuation\">;</span>\n\tuniform mat4 modelViewMatrix<span class=\"token punctuation\">;</span>\n\tuniform mat4 textureMatrix<span class=\"token punctuation\">;</span>\n\tuniform mat4 modelViewProjectionMatrix<span class=\"token punctuation\">;</span>\n\n\tIN vec4  position<span class=\"token punctuation\">;</span>\n\tIN vec4  color<span class=\"token punctuation\">;</span>\n\tIN vec2  texcoord<span class=\"token punctuation\">;</span>\n\n\tOUT vec2 texCoordVarying<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\ttexCoordVarying <span class=\"token operator\">=</span> texcoord<span class=\"token punctuation\">;</span>\n\t\tgl_Position <span class=\"token operator\">=</span> modelViewProjectionMatrix <span class=\"token operator\">*</span> position<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// ----------------------------------------------------------------------</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string bitmapStringFragmentShader <span class=\"token operator\">=</span> fragment_shader_header <span class=\"token operator\">+</span> <span class=\"token function\">STRINGIFY</span><span class=\"token punctuation\">(</span>\n\n\tuniform sampler2D src_tex_unit0<span class=\"token punctuation\">;</span>\n\tuniform vec4 globalColor<span class=\"token punctuation\">;</span>\n\n\tIN vec2 texCoordVarying<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t\n\t\tvec4 tex <span class=\"token operator\">=</span> <span class=\"token function\">TEXTURE</span><span class=\"token punctuation\">(</span>src_tex_unit0<span class=\"token punctuation\">,</span> texCoordVarying<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// We will not write anything to the framebuffer if we have a transparent pixel</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// This makes sure we don't mess up our depth buffer.</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tex<span class=\"token punctuation\">.</span>a <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> discard<span class=\"token punctuation\">;</span>\n\t\tFRAG_COLOR <span class=\"token operator\">=</span> globalColor <span class=\"token operator\">*</span> tex<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// ----------------------------------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">// changing shaders in raspberry pi is very expensive so we use only one shader there</span>\n<span class=\"token comment\" spellcheck=\"true\">// in desktop openGL these are not used but we declare it to avoid more ifdefs</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string uniqueVertexShader <span class=\"token operator\">=</span> vertex_shader_header <span class=\"token operator\">+</span> <span class=\"token function\">STRINGIFY</span><span class=\"token punctuation\">(</span>\n        \n\tuniform mat4 modelViewMatrix<span class=\"token punctuation\">;</span>\n\tuniform mat4 projectionMatrix<span class=\"token punctuation\">;</span>\n\tuniform mat4 textureMatrix<span class=\"token punctuation\">;</span>\n\tuniform mat4 modelViewProjectionMatrix<span class=\"token punctuation\">;</span>\n\tuniform <span class=\"token keyword\">float</span> usingTexture<span class=\"token punctuation\">;</span>\n\tuniform <span class=\"token keyword\">float</span> usingColors<span class=\"token punctuation\">;</span>\n\tuniform vec4 globalColor<span class=\"token punctuation\">;</span>\n\n\tIN vec4 position<span class=\"token punctuation\">;</span>\n\tIN vec4 color<span class=\"token punctuation\">;</span>\n\tIN vec4 normal<span class=\"token punctuation\">;</span>\n\tIN vec2 texcoord<span class=\"token punctuation\">;</span>\n\n\tOUT vec4 colorVarying<span class=\"token punctuation\">;</span>\n\tOUT vec2 texCoordVarying<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tgl_Position <span class=\"token operator\">=</span> modelViewProjectionMatrix <span class=\"token operator\">*</span> position<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>usingTexture<span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> texCoordVarying <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>textureMatrix<span class=\"token operator\">*</span><span class=\"token function\">vec4</span><span class=\"token punctuation\">(</span>texcoord<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>texcoord<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>usingColors<span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> colorVarying <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">else</span> colorVarying <span class=\"token operator\">=</span> globalColor<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// ----------------------------------------------------------------------</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string uniqueFragmentShader <span class=\"token operator\">=</span> fragment_shader_header <span class=\"token operator\">+</span> <span class=\"token function\">STRINGIFY</span><span class=\"token punctuation\">(</span>\n        \n\tuniform sampler2D src_tex_unit0<span class=\"token punctuation\">;</span>\n\tuniform <span class=\"token keyword\">float</span> usingTexture<span class=\"token punctuation\">;</span>\n\tuniform <span class=\"token keyword\">float</span> bitmapText<span class=\"token punctuation\">;</span>\n\n\tIN vec4 colorVarying<span class=\"token punctuation\">;</span>\n\tIN vec2 texCoordVarying<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tvec4 tex<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>usingTexture<span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\ttex <span class=\"token operator\">=</span> <span class=\"token function\">TEXTURE</span><span class=\"token punctuation\">(</span>src_tex_unit0<span class=\"token punctuation\">,</span> texCoordVarying<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bitmapText<span class=\"token operator\">></span><span class=\"token punctuation\">.</span><span class=\"token number\">5</span> <span class=\"token operator\">&amp;&amp;</span> tex<span class=\"token punctuation\">.</span>a <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tdiscard<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\tFRAG_COLOR <span class=\"token operator\">=</span> colorVarying<span class=\"token operator\">*</span>tex<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\tFRAG_COLOR <span class=\"token operator\">=</span> colorVarying<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// ----------------------------------------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">// video color space conversion shaders</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string FRAGMENT_SHADER_YUY2 <span class=\"token operator\">=</span> <span class=\"token function\">STRINGIFY</span><span class=\"token punctuation\">(</span>\n\tuniform SAMPLER src_tex_unit0<span class=\"token punctuation\">;</span>\\n\n\tuniform vec4 globalColor<span class=\"token punctuation\">;</span>\\n\n\n\tIN vec4 colorVarying<span class=\"token punctuation\">;</span>\\n\n\tIN vec2 texCoordVarying<span class=\"token punctuation\">;</span>\\n\n\tuniform <span class=\"token keyword\">float</span> onePixel<span class=\"token punctuation\">;</span>\\n\n\tuniform <span class=\"token keyword\">float</span> textureWidth<span class=\"token punctuation\">;</span>\\n\n\n    <span class=\"token keyword\">const</span> vec3 offset <span class=\"token operator\">=</span> <span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">0.0625</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n\n    <span class=\"token keyword\">const</span> vec3 rcoeff <span class=\"token operator\">=</span> <span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.164</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.596</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n\n    <span class=\"token keyword\">const</span> vec3 gcoeff <span class=\"token operator\">=</span> <span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.164</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">0.391</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">0.813</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n\n    <span class=\"token keyword\">const</span> vec3 bcoeff <span class=\"token operator\">=</span> <span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.164</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.018</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n\n\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\\n\n        vec3 yuv<span class=\"token punctuation\">;</span>\\n\n\t    yuv<span class=\"token punctuation\">.</span>x<span class=\"token operator\">=</span><span class=\"token function\">TEXTURE</span><span class=\"token punctuation\">(</span>src_tex_unit0<span class=\"token punctuation\">,</span>texCoordVarying<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">;</span>\\n\n\t\t<span class=\"token keyword\">float</span> x <span class=\"token operator\">=</span> texCoordVarying<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> textureWidth<span class=\"token punctuation\">;</span>\\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">mod</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span><span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\\n\n\t\t\tyuv<span class=\"token punctuation\">.</span>y<span class=\"token operator\">=</span><span class=\"token function\">TEXTURE</span><span class=\"token punctuation\">(</span>src_tex_unit0<span class=\"token punctuation\">,</span><span class=\"token function\">vec2</span><span class=\"token punctuation\">(</span>texCoordVarying<span class=\"token punctuation\">.</span>x<span class=\"token operator\">-</span>onePixel<span class=\"token punctuation\">,</span>texCoordVarying<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token operator\">%</span>g<span class=\"token punctuation\">;</span>\\n\n\t\t\tyuv<span class=\"token punctuation\">.</span>z<span class=\"token operator\">=</span><span class=\"token function\">TEXTURE</span><span class=\"token punctuation\">(</span>src_tex_unit0<span class=\"token punctuation\">,</span>texCoordVarying<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token operator\">%</span>g<span class=\"token punctuation\">;</span>\\n\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\\n\n\t\t\tyuv<span class=\"token punctuation\">.</span>y<span class=\"token operator\">=</span><span class=\"token function\">TEXTURE</span><span class=\"token punctuation\">(</span>src_tex_unit0<span class=\"token punctuation\">,</span>texCoordVarying<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token operator\">%</span>g<span class=\"token punctuation\">;</span>\\n\n\t\t\tyuv<span class=\"token punctuation\">.</span>z<span class=\"token operator\">=</span><span class=\"token function\">TEXTURE</span><span class=\"token punctuation\">(</span>src_tex_unit0<span class=\"token punctuation\">,</span><span class=\"token function\">vec2</span><span class=\"token punctuation\">(</span>texCoordVarying<span class=\"token punctuation\">.</span>x<span class=\"token operator\">+</span>onePixel<span class=\"token punctuation\">,</span>texCoordVarying<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token operator\">%</span>g<span class=\"token punctuation\">;</span>\\n\n\t\t<span class=\"token punctuation\">}</span>\\n\n        yuv <span class=\"token operator\">+</span><span class=\"token operator\">=</span> offset<span class=\"token punctuation\">;</span>\\n\n        <span class=\"token keyword\">float</span> r <span class=\"token operator\">=</span> <span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>yuv<span class=\"token punctuation\">,</span> rcoeff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n\n        <span class=\"token keyword\">float</span> g <span class=\"token operator\">=</span> <span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>yuv<span class=\"token punctuation\">,</span> gcoeff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n\n        <span class=\"token keyword\">float</span> b <span class=\"token operator\">=</span> <span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>yuv<span class=\"token punctuation\">,</span> bcoeff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n\n        FRAG_COLOR<span class=\"token operator\">=</span><span class=\"token function\">vec4</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> globalColor<span class=\"token punctuation\">;</span>\\n\n\t<span class=\"token punctuation\">}</span>\\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// ----------------------------------------------------------------------</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string FRAGMENT_SHADER_NV12_NV21 <span class=\"token operator\">=</span> <span class=\"token function\">STRINGIFY</span><span class=\"token punctuation\">(</span>\n\tuniform SAMPLER Ytex<span class=\"token punctuation\">;</span>\\n\n\tuniform SAMPLER UVtex<span class=\"token punctuation\">;</span>\\n\n\tuniform vec4 globalColor<span class=\"token punctuation\">;</span>\\n\n    uniform vec2 tex_scaleUV<span class=\"token punctuation\">;</span>\\n\n\n\tIN vec4 colorVarying<span class=\"token punctuation\">;</span>\\n\n\tIN vec2 texCoordVarying<span class=\"token punctuation\">;</span>\\n\n\n    <span class=\"token keyword\">const</span> vec3 offset <span class=\"token operator\">=</span> <span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">0.0625</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n\n    <span class=\"token keyword\">const</span> vec3 rcoeff <span class=\"token operator\">=</span> <span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.164</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.596</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n\n    <span class=\"token keyword\">const</span> vec3 gcoeff <span class=\"token operator\">=</span> <span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.164</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">0.391</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">0.813</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n\n    <span class=\"token keyword\">const</span> vec3 bcoeff <span class=\"token operator\">=</span> <span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.164</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.018</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n\n\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\\n\n        vec3 yuv<span class=\"token punctuation\">;</span>\\n\n\t    yuv<span class=\"token punctuation\">.</span>x<span class=\"token operator\">=</span><span class=\"token function\">TEXTURE</span><span class=\"token punctuation\">(</span>Ytex<span class=\"token punctuation\">,</span>texCoordVarying<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">;</span>\\n\n\t    yuv<span class=\"token punctuation\">.</span>yz<span class=\"token operator\">=</span><span class=\"token function\">TEXTURE</span><span class=\"token punctuation\">(</span>UVtex<span class=\"token punctuation\">,</span>texCoordVarying <span class=\"token operator\">*</span> tex_scaleUV<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token operator\">%</span>r<span class=\"token operator\">%</span>g<span class=\"token punctuation\">;</span>\\n\n        yuv <span class=\"token operator\">+</span><span class=\"token operator\">=</span> offset<span class=\"token punctuation\">;</span>\\n\n        <span class=\"token keyword\">float</span> r <span class=\"token operator\">=</span> <span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>yuv<span class=\"token punctuation\">,</span> rcoeff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n\n        <span class=\"token keyword\">float</span> g <span class=\"token operator\">=</span> <span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>yuv<span class=\"token punctuation\">,</span> gcoeff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n\n        <span class=\"token keyword\">float</span> b <span class=\"token operator\">=</span> <span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>yuv<span class=\"token punctuation\">,</span> bcoeff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n\n        FRAG_COLOR<span class=\"token operator\">=</span><span class=\"token function\">vec4</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> globalColor<span class=\"token punctuation\">;</span>\\n\n\t<span class=\"token punctuation\">}</span>\\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// ----------------------------------------------------------------------</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">const</span> string FRAGMENT_SHADER_PLANAR_YUV <span class=\"token operator\">=</span> <span class=\"token function\">STRINGIFY</span><span class=\"token punctuation\">(</span>\n\tuniform SAMPLER Ytex<span class=\"token punctuation\">;</span>\\n\n\tuniform SAMPLER Utex<span class=\"token punctuation\">;</span>\\n\n\tuniform SAMPLER Vtex<span class=\"token punctuation\">;</span>\\n\n    uniform vec2 tex_scaleY<span class=\"token punctuation\">;</span>\\n\n    uniform vec2 tex_scaleU<span class=\"token punctuation\">;</span>\\n\n    uniform vec2 tex_scaleV<span class=\"token punctuation\">;</span>\\n\n\tuniform vec4 globalColor<span class=\"token punctuation\">;</span>\\n\n\n\tIN vec4 colorVarying<span class=\"token punctuation\">;</span>\\n\n\tIN vec2 texCoordVarying<span class=\"token punctuation\">;</span>\\n\n\n    <span class=\"token keyword\">const</span> vec3 offset <span class=\"token operator\">=</span> <span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">0.0625</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n\n    <span class=\"token keyword\">const</span> vec3 rcoeff <span class=\"token operator\">=</span> <span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.164</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.596</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n\n    <span class=\"token keyword\">const</span> vec3 gcoeff <span class=\"token operator\">=</span> <span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.164</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">0.391</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">0.813</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n\n    <span class=\"token keyword\">const</span> vec3 bcoeff <span class=\"token operator\">=</span> <span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.164</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.018</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n\n\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\\n\n        vec3 yuv<span class=\"token punctuation\">;</span>\\n\n\t    yuv<span class=\"token punctuation\">.</span>x<span class=\"token operator\">=</span><span class=\"token function\">TEXTURE</span><span class=\"token punctuation\">(</span>Ytex<span class=\"token punctuation\">,</span>texCoordVarying <span class=\"token operator\">*</span> tex_scaleY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">;</span>\\n\n\t    yuv<span class=\"token punctuation\">.</span>y<span class=\"token operator\">=</span><span class=\"token function\">TEXTURE</span><span class=\"token punctuation\">(</span>Utex<span class=\"token punctuation\">,</span>texCoordVarying <span class=\"token operator\">*</span> tex_scaleU<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">;</span>\\n\n\t    yuv<span class=\"token punctuation\">.</span>z<span class=\"token operator\">=</span><span class=\"token function\">TEXTURE</span><span class=\"token punctuation\">(</span>Vtex<span class=\"token punctuation\">,</span>texCoordVarying <span class=\"token operator\">*</span> tex_scaleV<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>r<span class=\"token punctuation\">;</span>\\n\n        yuv <span class=\"token operator\">+</span><span class=\"token operator\">=</span> offset<span class=\"token punctuation\">;</span>\\n\n        <span class=\"token keyword\">float</span> r <span class=\"token operator\">=</span> <span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>yuv<span class=\"token punctuation\">,</span> rcoeff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n\n        <span class=\"token keyword\">float</span> g <span class=\"token operator\">=</span> <span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>yuv<span class=\"token punctuation\">,</span> gcoeff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n\n        <span class=\"token keyword\">float</span> b <span class=\"token operator\">=</span> <span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>yuv<span class=\"token punctuation\">,</span> bcoeff<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\n\n        FRAG_COLOR<span class=\"token operator\">=</span><span class=\"token function\">vec4</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> globalColor<span class=\"token punctuation\">;</span>\\n\n\t<span class=\"token punctuation\">}</span>\\n\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">static</span> string <span class=\"token function\">defaultShaderHeader</span><span class=\"token punctuation\">(</span>string header<span class=\"token punctuation\">,</span> GLenum textureTarget<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> major<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofStringReplace</span><span class=\"token punctuation\">(</span>header<span class=\"token punctuation\">,</span><span class=\"token string\">\"%glsl_version%\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">ofGLSLVersionFromGL</span><span class=\"token punctuation\">(</span>major<span class=\"token punctuation\">,</span>minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>major<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span> <span class=\"token operator\">&amp;&amp;</span> minor<span class=\"token operator\">&lt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofStringReplace</span><span class=\"token punctuation\">(</span>header<span class=\"token punctuation\">,</span><span class=\"token string\">\"%extensions%\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"#extension GL_ARB_texture_rectangle : enable\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofStringReplace</span><span class=\"token punctuation\">(</span>header<span class=\"token punctuation\">,</span><span class=\"token string\">\"%extensions%\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span> </span>\n\t<span class=\"token function\">ofStringReplace</span><span class=\"token punctuation\">(</span>header<span class=\"token punctuation\">,</span><span class=\"token string\">\"%extensions%\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>textureTarget<span class=\"token operator\">==</span>GL_TEXTURE_2D<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\theader <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token string\">\"#define SAMPLER sampler2D\\n\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\theader <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token string\">\"#define SAMPLER sampler2DRect\\n\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> header<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">static</span> string <span class=\"token function\">shaderSource</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span> src<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> major<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tstring shaderSrc <span class=\"token operator\">=</span> src<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofStringReplace</span><span class=\"token punctuation\">(</span>shaderSrc<span class=\"token punctuation\">,</span><span class=\"token string\">\"%glsl_version%\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">ofGLSLVersionFromGL</span><span class=\"token punctuation\">(</span>major<span class=\"token punctuation\">,</span>minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>major<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span> <span class=\"token operator\">&amp;&amp;</span> minor<span class=\"token operator\">&lt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofStringReplace</span><span class=\"token punctuation\">(</span>shaderSrc<span class=\"token punctuation\">,</span><span class=\"token string\">\"%extensions%\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"#extension GL_ARB_texture_rectangle : enable\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofStringReplace</span><span class=\"token punctuation\">(</span>shaderSrc<span class=\"token punctuation\">,</span><span class=\"token string\">\"%extensions%\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t<span class=\"token function\">ofStringReplace</span><span class=\"token punctuation\">(</span>shaderSrc<span class=\"token punctuation\">,</span><span class=\"token string\">\"%extensions%\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token keyword\">return</span> shaderSrc<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n<span class=\"token keyword\">static</span> string <span class=\"token function\">shaderOESSource</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span> src<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> major<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tstring shaderSrc <span class=\"token operator\">=</span> src<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofStringReplace</span><span class=\"token punctuation\">(</span>shaderSrc<span class=\"token punctuation\">,</span><span class=\"token string\">\"%glsl_version%\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">ofGLSLVersionFromGL</span><span class=\"token punctuation\">(</span>major<span class=\"token punctuation\">,</span>minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofStringReplace</span><span class=\"token punctuation\">(</span>shaderSrc<span class=\"token punctuation\">,</span><span class=\"token string\">\"%extensions%\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"#extension GL_OES_EGL_image_external : require\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> shaderSrc<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token keyword\">static</span> string <span class=\"token function\">videoFragmentShaderSource</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofBaseVideoDraws <span class=\"token operator\">&amp;</span> video<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> major<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tstring src<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_YUY2<span class=\"token operator\">:</span>\n\t\t\tsrc <span class=\"token operator\">=</span> FRAGMENT_SHADER_YUY2<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t\t<span class=\"token function\">ofStringReplace</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">,</span><span class=\"token string\">\"%g\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"g\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t\t\t<span class=\"token function\">ofStringReplace</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">,</span><span class=\"token string\">\"%g\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_NV12<span class=\"token operator\">:</span>\n\t\t\tsrc <span class=\"token operator\">=</span> FRAGMENT_SHADER_NV12_NV21<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t\t<span class=\"token function\">ofStringReplace</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">,</span><span class=\"token string\">\"%r%g\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"rg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t\t\t<span class=\"token function\">ofStringReplace</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">,</span><span class=\"token string\">\"%r%g\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"ra\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_NV21<span class=\"token operator\">:</span>\n\t\t\tsrc <span class=\"token operator\">=</span> FRAGMENT_SHADER_NV12_NV21<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t\t<span class=\"token function\">ofStringReplace</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">,</span><span class=\"token string\">\"%r%g\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"gr\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t\t\t<span class=\"token function\">ofStringReplace</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">,</span><span class=\"token string\">\"%r%g\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"ar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_YV12<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_I420<span class=\"token operator\">:</span>\n\t\t\tsrc <span class=\"token operator\">=</span> FRAGMENT_SHADER_PLANAR_YUV<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_BGR<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB565<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGBA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_BGRA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_GRAY<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tstring header <span class=\"token operator\">=</span> fragment_shader_header<span class=\"token punctuation\">;</span>\n\tGLenum textureTarget <span class=\"token operator\">=</span> video<span class=\"token punctuation\">.</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTextureData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>textureTarget<span class=\"token operator\">==</span>GL_TEXTURE_2D<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\theader <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token string\">\"#define SAMPLER sampler2D\\n\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>textureTarget<span class=\"token operator\">==</span>GL_TEXTURE_RECTANGLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\theader <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token string\">\"#define SAMPLER sampler2DRect\\n\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">shaderSource</span><span class=\"token punctuation\">(</span>header <span class=\"token operator\">+</span> src<span class=\"token punctuation\">,</span> major<span class=\"token punctuation\">,</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nstring ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">defaultVertexShaderHeader</span><span class=\"token punctuation\">(</span>GLenum textureTarget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">defaultShaderHeader</span><span class=\"token punctuation\">(</span>vertex_shader_header<span class=\"token punctuation\">,</span>textureTarget<span class=\"token punctuation\">,</span>major<span class=\"token punctuation\">,</span>minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nstring ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">defaultFragmentShaderHeader</span><span class=\"token punctuation\">(</span>GLenum textureTarget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">defaultShaderHeader</span><span class=\"token punctuation\">(</span>fragment_shader_header<span class=\"token punctuation\">,</span>textureTarget<span class=\"token punctuation\">,</span>major<span class=\"token punctuation\">,</span>minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> _major<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> _minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">glGetError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// OpenGL ES might have set a default frame buffer for</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// MSAA rendering to the window, bypassing ofFbo, so we</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// can't trust ofFbo to have correctly tracked the bind</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// state. Therefore, we are forced to use the slower glGet() method</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// to be sure to get the correct default framebuffer.</span>\n\tGLint currentFrameBuffer<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glGetIntegerv</span><span class=\"token punctuation\">(</span>GL_FRAMEBUFFER_BINDING<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>currentFrameBuffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tdefaultFramebufferId <span class=\"token operator\">=</span> currentFrameBuffer<span class=\"token punctuation\">;</span>\n    currentFramebufferId <span class=\"token operator\">=</span> defaultFramebufferId<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\tmajor <span class=\"token operator\">=</span> _major<span class=\"token punctuation\">;</span>\n\tminor <span class=\"token operator\">=</span> _minor<span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_RASPBERRY_PI</span>\n\tuniqueShader <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\tuniqueShader <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>uniqueShader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tdefaultUniqueShader<span class=\"token punctuation\">.</span><span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GL_VERTEX_SHADER<span class=\"token punctuation\">,</span><span class=\"token function\">shaderSource</span><span class=\"token punctuation\">(</span>uniqueVertexShader<span class=\"token punctuation\">,</span> major<span class=\"token punctuation\">,</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdefaultUniqueShader<span class=\"token punctuation\">.</span><span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GL_FRAGMENT_SHADER<span class=\"token punctuation\">,</span><span class=\"token function\">shaderSource</span><span class=\"token punctuation\">(</span>uniqueFragmentShader<span class=\"token punctuation\">,</span> major<span class=\"token punctuation\">,</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdefaultUniqueShader<span class=\"token punctuation\">.</span><span class=\"token function\">bindDefaults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdefaultUniqueShader<span class=\"token punctuation\">.</span><span class=\"token function\">linkProgram</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">beginDefaultShader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\tdefaultTexRectColor<span class=\"token punctuation\">.</span><span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GL_VERTEX_SHADER<span class=\"token punctuation\">,</span><span class=\"token function\">shaderSource</span><span class=\"token punctuation\">(</span>defaultVertexShader<span class=\"token punctuation\">,</span>major<span class=\"token punctuation\">,</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdefaultTexRectNoColor<span class=\"token punctuation\">.</span><span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GL_VERTEX_SHADER<span class=\"token punctuation\">,</span><span class=\"token function\">shaderSource</span><span class=\"token punctuation\">(</span>defaultVertexShader<span class=\"token punctuation\">,</span>major<span class=\"token punctuation\">,</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\talphaMaskRectShader<span class=\"token punctuation\">.</span><span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GL_VERTEX_SHADER<span class=\"token punctuation\">,</span><span class=\"token function\">shaderSource</span><span class=\"token punctuation\">(</span>defaultVertexShader<span class=\"token punctuation\">,</span>major<span class=\"token punctuation\">,</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\tdefaultTex2DColor<span class=\"token punctuation\">.</span><span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GL_VERTEX_SHADER<span class=\"token punctuation\">,</span><span class=\"token function\">shaderSource</span><span class=\"token punctuation\">(</span>defaultVertexShader<span class=\"token punctuation\">,</span>major<span class=\"token punctuation\">,</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdefaultNoTexColor<span class=\"token punctuation\">.</span><span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GL_VERTEX_SHADER<span class=\"token punctuation\">,</span><span class=\"token function\">shaderSource</span><span class=\"token punctuation\">(</span>defaultVertexShader<span class=\"token punctuation\">,</span>major<span class=\"token punctuation\">,</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdefaultTex2DNoColor<span class=\"token punctuation\">.</span><span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GL_VERTEX_SHADER<span class=\"token punctuation\">,</span><span class=\"token function\">shaderSource</span><span class=\"token punctuation\">(</span>defaultVertexShader<span class=\"token punctuation\">,</span>major<span class=\"token punctuation\">,</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdefaultNoTexNoColor<span class=\"token punctuation\">.</span><span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GL_VERTEX_SHADER<span class=\"token punctuation\">,</span><span class=\"token function\">shaderSource</span><span class=\"token punctuation\">(</span>defaultVertexShader<span class=\"token punctuation\">,</span>major<span class=\"token punctuation\">,</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\talphaMask2DShader<span class=\"token punctuation\">.</span><span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GL_VERTEX_SHADER<span class=\"token punctuation\">,</span><span class=\"token function\">shaderSource</span><span class=\"token punctuation\">(</span>defaultVertexShader<span class=\"token punctuation\">,</span>major<span class=\"token punctuation\">,</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\tdefaultTexRectColor<span class=\"token punctuation\">.</span><span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GL_FRAGMENT_SHADER<span class=\"token punctuation\">,</span><span class=\"token function\">shaderSource</span><span class=\"token punctuation\">(</span>defaultFragmentShaderTexRectColor<span class=\"token punctuation\">,</span>major<span class=\"token punctuation\">,</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdefaultTexRectNoColor<span class=\"token punctuation\">.</span><span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GL_FRAGMENT_SHADER<span class=\"token punctuation\">,</span><span class=\"token function\">shaderSource</span><span class=\"token punctuation\">(</span>defaultFragmentShaderTexRectNoColor<span class=\"token punctuation\">,</span>major<span class=\"token punctuation\">,</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\talphaMaskRectShader<span class=\"token punctuation\">.</span><span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GL_FRAGMENT_SHADER<span class=\"token punctuation\">,</span><span class=\"token function\">shaderSource</span><span class=\"token punctuation\">(</span>alphaMaskFragmentShaderTexRectNoColor<span class=\"token punctuation\">,</span>major<span class=\"token punctuation\">,</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\tdefaultTex2DColor<span class=\"token punctuation\">.</span><span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GL_FRAGMENT_SHADER<span class=\"token punctuation\">,</span><span class=\"token function\">shaderSource</span><span class=\"token punctuation\">(</span>defaultFragmentShaderTex2DColor<span class=\"token punctuation\">,</span>major<span class=\"token punctuation\">,</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdefaultNoTexColor<span class=\"token punctuation\">.</span><span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GL_FRAGMENT_SHADER<span class=\"token punctuation\">,</span><span class=\"token function\">shaderSource</span><span class=\"token punctuation\">(</span>defaultFragmentShaderNoTexColor<span class=\"token punctuation\">,</span>major<span class=\"token punctuation\">,</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdefaultTex2DNoColor<span class=\"token punctuation\">.</span><span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GL_FRAGMENT_SHADER<span class=\"token punctuation\">,</span><span class=\"token function\">shaderSource</span><span class=\"token punctuation\">(</span>defaultFragmentShaderTex2DNoColor<span class=\"token punctuation\">,</span>major<span class=\"token punctuation\">,</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdefaultNoTexNoColor<span class=\"token punctuation\">.</span><span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GL_FRAGMENT_SHADER<span class=\"token punctuation\">,</span><span class=\"token function\">shaderSource</span><span class=\"token punctuation\">(</span>defaultFragmentShaderNoTexNoColor<span class=\"token punctuation\">,</span>major<span class=\"token punctuation\">,</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\talphaMask2DShader<span class=\"token punctuation\">.</span><span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GL_FRAGMENT_SHADER<span class=\"token punctuation\">,</span><span class=\"token function\">shaderSource</span><span class=\"token punctuation\">(</span>alphaMaskFragmentShaderTex2DNoColor<span class=\"token punctuation\">,</span>major<span class=\"token punctuation\">,</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\t\tbitmapStringShader<span class=\"token punctuation\">.</span><span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GL_VERTEX_SHADER<span class=\"token punctuation\">,</span> <span class=\"token function\">shaderSource</span><span class=\"token punctuation\">(</span>bitmapStringVertexShader<span class=\"token punctuation\">,</span>major<span class=\"token punctuation\">,</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tbitmapStringShader<span class=\"token punctuation\">.</span><span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GL_FRAGMENT_SHADER<span class=\"token punctuation\">,</span> <span class=\"token function\">shaderSource</span><span class=\"token punctuation\">(</span>bitmapStringFragmentShader<span class=\"token punctuation\">,</span>major<span class=\"token punctuation\">,</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\tdefaultTexRectColor<span class=\"token punctuation\">.</span><span class=\"token function\">bindDefaults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdefaultTexRectNoColor<span class=\"token punctuation\">.</span><span class=\"token function\">bindDefaults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\talphaMaskRectShader<span class=\"token punctuation\">.</span><span class=\"token function\">bindDefaults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\tdefaultTex2DColor<span class=\"token punctuation\">.</span><span class=\"token function\">bindDefaults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdefaultNoTexColor<span class=\"token punctuation\">.</span><span class=\"token function\">bindDefaults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdefaultTex2DNoColor<span class=\"token punctuation\">.</span><span class=\"token function\">bindDefaults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdefaultNoTexNoColor<span class=\"token punctuation\">.</span><span class=\"token function\">bindDefaults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\talphaMask2DShader<span class=\"token punctuation\">.</span><span class=\"token function\">bindDefaults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\tdefaultTexRectColor<span class=\"token punctuation\">.</span><span class=\"token function\">linkProgram</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdefaultTexRectNoColor<span class=\"token punctuation\">.</span><span class=\"token function\">linkProgram</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\talphaMaskRectShader<span class=\"token punctuation\">.</span><span class=\"token function\">linkProgram</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\tdefaultTex2DColor<span class=\"token punctuation\">.</span><span class=\"token function\">linkProgram</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdefaultNoTexColor<span class=\"token punctuation\">.</span><span class=\"token function\">linkProgram</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdefaultTex2DNoColor<span class=\"token punctuation\">.</span><span class=\"token function\">linkProgram</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdefaultNoTexNoColor<span class=\"token punctuation\">.</span><span class=\"token function\">linkProgram</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\talphaMask2DShader<span class=\"token punctuation\">.</span><span class=\"token function\">linkProgram</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tbitmapStringShader<span class=\"token punctuation\">.</span><span class=\"token function\">bindDefaults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tbitmapStringShader<span class=\"token punctuation\">.</span><span class=\"token function\">linkProgram</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_ANDROID</span>\n\t\tdefaultOESTexNoColor<span class=\"token punctuation\">.</span><span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GL_VERTEX_SHADER<span class=\"token punctuation\">,</span><span class=\"token function\">shaderOESSource</span><span class=\"token punctuation\">(</span>defaultVertexShader<span class=\"token punctuation\">,</span>major<span class=\"token punctuation\">,</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdefaultOESTexColor<span class=\"token punctuation\">.</span><span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GL_VERTEX_SHADER<span class=\"token punctuation\">,</span><span class=\"token function\">shaderOESSource</span><span class=\"token punctuation\">(</span>defaultVertexShader<span class=\"token punctuation\">,</span>major<span class=\"token punctuation\">,</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdefaultOESTexColor<span class=\"token punctuation\">.</span><span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GL_FRAGMENT_SHADER<span class=\"token punctuation\">,</span><span class=\"token function\">shaderOESSource</span><span class=\"token punctuation\">(</span>defaultFragmentShaderOESTexColor<span class=\"token punctuation\">,</span>major<span class=\"token punctuation\">,</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdefaultOESTexNoColor<span class=\"token punctuation\">.</span><span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GL_FRAGMENT_SHADER<span class=\"token punctuation\">,</span><span class=\"token function\">shaderOESSource</span><span class=\"token punctuation\">(</span>defaultFragmentShaderOESTexNoColor<span class=\"token punctuation\">,</span>major<span class=\"token punctuation\">,</span> minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\tdefaultOESTexColor<span class=\"token punctuation\">.</span><span class=\"token function\">bindDefaults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdefaultOESTexNoColor<span class=\"token punctuation\">.</span><span class=\"token function\">bindDefaults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\tdefaultOESTexColor<span class=\"token punctuation\">.</span><span class=\"token function\">linkProgram</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdefaultOESTexNoColor<span class=\"token punctuation\">.</span><span class=\"token function\">linkProgram</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">setupGraphicDefaults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">viewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setupScreenPerspective</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> ofShader <span class=\"token operator\">*</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">getVideoShader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofBaseVideoDraws <span class=\"token operator\">&amp;</span> video<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> ofShader <span class=\"token operator\">*</span> shader <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\tGLenum target <span class=\"token operator\">=</span> video<span class=\"token punctuation\">.</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTextureData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textureTarget<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_YUY2<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>target<span class=\"token operator\">==</span>GL_TEXTURE_2D<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tshader <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>shaderPlanarYUY2<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\tshader <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>shaderPlanarYUY2Rect<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_NV12<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>target<span class=\"token operator\">==</span>GL_TEXTURE_2D<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tshader <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>shaderNV12<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\tshader <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>shaderNV12Rect<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_NV21<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>target<span class=\"token operator\">==</span>GL_TEXTURE_2D<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tshader <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>shaderNV21<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\tshader <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>shaderNV21Rect<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_YV12<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_I420<span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>target<span class=\"token operator\">==</span>GL_TEXTURE_2D<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tshader <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>shaderPlanarYUV<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\tshader <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>shaderPlanarYUVRect<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_BGR<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGB565<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_RGBA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_BGRA<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_GRAY<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>shader <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>shader<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">isLoaded</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tofShader <span class=\"token operator\">*</span> mutShader <span class=\"token operator\">=</span> <span class=\"token keyword\">const_cast</span><span class=\"token operator\">&lt;</span>ofShader<span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>shader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmutShader<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GL_VERTEX_SHADER<span class=\"token punctuation\">,</span><span class=\"token function\">shaderSource</span><span class=\"token punctuation\">(</span>defaultVertexShader<span class=\"token punctuation\">,</span>major<span class=\"token punctuation\">,</span>minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmutShader<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GL_FRAGMENT_SHADER<span class=\"token punctuation\">,</span><span class=\"token function\">videoFragmentShaderSource</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">,</span>major<span class=\"token punctuation\">,</span>minor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmutShader<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bindDefaults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmutShader<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">linkProgram</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> shader<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">float</span> <span class=\"token function\">getTextureScaleX</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofBaseVideoDraws <span class=\"token operator\">&amp;</span> video<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> plane<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getTexturePlanes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> video<span class=\"token punctuation\">.</span><span class=\"token function\">getTexturePlanes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>plane<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">float</span> <span class=\"token function\">getTextureScaleY</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofBaseVideoDraws <span class=\"token operator\">&amp;</span> video<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> plane<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getTexturePlanes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> video<span class=\"token punctuation\">.</span><span class=\"token function\">getTexturePlanes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>plane<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">setVideoShaderUniforms</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofBaseVideoDraws <span class=\"token operator\">&amp;</span> video<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofShader <span class=\"token operator\">&amp;</span> shader<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getPixelFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_YUY2<span class=\"token operator\">:</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTextureData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textureTarget<span class=\"token operator\">==</span>GL_TEXTURE_RECTANGLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setUniform1f</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"onePixel\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setUniform1f</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"textureWidth\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setUniform1f</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"onePixel\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token operator\">/</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setUniform1f</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"textureWidth\"</span><span class=\"token punctuation\">,</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setUniformTexture</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"src_tex_unit0\"</span><span class=\"token punctuation\">,</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getTexturePlanes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_NV12<span class=\"token operator\">:</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_NV21<span class=\"token operator\">:</span>\n\t\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setUniformTexture</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ytex\"</span><span class=\"token punctuation\">,</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getTexturePlanes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setUniformTexture</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"UVtex\"</span><span class=\"token punctuation\">,</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getTexturePlanes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTextureData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textureTarget<span class=\"token operator\">==</span>GL_TEXTURE_RECTANGLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setUniform2f</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tex_scaleUV\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">getTextureScaleX</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">getTextureScaleY</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setUniform2f</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tex_scaleUV\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_YV12<span class=\"token operator\">:</span>\n\t\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setUniformTexture</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ytex\"</span><span class=\"token punctuation\">,</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getTexturePlanes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setUniformTexture</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Utex\"</span><span class=\"token punctuation\">,</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getTexturePlanes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setUniformTexture</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Vtex\"</span><span class=\"token punctuation\">,</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getTexturePlanes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTextureData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textureTarget<span class=\"token operator\">==</span>GL_TEXTURE_RECTANGLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setUniform2f</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tex_scaleY\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">getTextureScaleX</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">getTextureScaleY</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setUniform2f</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tex_scaleU\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">getTextureScaleX</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">getTextureScaleY</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setUniform2f</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tex_scaleV\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">getTextureScaleX</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">getTextureScaleY</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setUniform2f</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tex_scaleY\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setUniform2f</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tex_scaleU\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setUniform2f</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tex_scaleV\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">case</span> OF_PIXELS_I420<span class=\"token operator\">:</span>\n\t\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setUniformTexture</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ytex\"</span><span class=\"token punctuation\">,</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getTexturePlanes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setUniformTexture</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Utex\"</span><span class=\"token punctuation\">,</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getTexturePlanes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setUniformTexture</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Vtex\"</span><span class=\"token punctuation\">,</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getTexturePlanes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">.</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getTextureData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>textureTarget<span class=\"token operator\">==</span>GL_TEXTURE_RECTANGLE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setUniform2f</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tex_scaleY\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">getTextureScaleX</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">getTextureScaleY</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setUniform2f</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tex_scaleU\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">getTextureScaleX</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">getTextureScaleY</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setUniform2f</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tex_scaleV\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">getTextureScaleX</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">getTextureScaleY</span><span class=\"token punctuation\">(</span>video<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setUniform2f</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tex_scaleY\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setUniform2f</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tex_scaleU\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setUniform2f</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tex_scaleV\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">getGLVersionMajor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> major<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">getGLVersionMinor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> minor<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">saveFullViewport</span><span class=\"token punctuation\">(</span>ofPixels <span class=\"token operator\">&amp;</span> pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofRectangle v <span class=\"token operator\">=</span> <span class=\"token function\">getCurrentViewport</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">saveScreen</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span>pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">saveScreen</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">,</span> ofPixels <span class=\"token operator\">&amp;</span> pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> sh <span class=\"token operator\">=</span> <span class=\"token function\">getViewportHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_OPENGLES</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\ty <span class=\"token operator\">=</span> sh <span class=\"token operator\">-</span> y<span class=\"token punctuation\">;</span>\n\t\ty <span class=\"token operator\">-</span><span class=\"token operator\">=</span> h<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// top, bottom issues</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">auto</span> pixelFormat <span class=\"token operator\">=</span> OF_PIXELS_BGRA<span class=\"token punctuation\">;</span>\n\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">auto</span> glFormat <span class=\"token operator\">=</span> <span class=\"token function\">ofGetGLFormat</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\tofBufferObject buffer<span class=\"token punctuation\">;</span>\n\tbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> GL_STATIC_READ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>GL_PIXEL_PACK_BUFFER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">glReadPixels</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> glFormat<span class=\"token punctuation\">,</span> GL_UNSIGNED_BYTE<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// read the memory....</span>\n\tbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">unbind</span><span class=\"token punctuation\">(</span>GL_PIXEL_PACK_BUFFER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> p <span class=\"token operator\">=</span> buffer<span class=\"token punctuation\">.</span>map<span class=\"token operator\">&lt;</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>GL_READ_ONLY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tofPixels src<span class=\"token punctuation\">;</span>\n\t\tsrc<span class=\"token punctuation\">.</span><span class=\"token function\">setFromExternalPixels</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>pixelFormat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tsrc<span class=\"token punctuation\">.</span><span class=\"token function\">mirrorTo</span><span class=\"token punctuation\">(</span>pixels<span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tbuffer<span class=\"token punctuation\">.</span><span class=\"token function\">unmap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofGLProgrammableRenderer\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Error saving screen\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\n\t<span class=\"token keyword\">int</span> sw <span class=\"token operator\">=</span> <span class=\"token function\">getViewportWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> numPixels   <span class=\"token operator\">=</span> w<span class=\"token operator\">*</span>h<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> numPixels <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofImage\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"grabScreen(): unable to grab screen, image width and/or height are 0: \"</span> <span class=\"token operator\">&lt;&lt;</span> w <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"x\"</span> <span class=\"token operator\">&lt;&lt;</span> h<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> OF_PIXELS_RGBA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>matrixStack<span class=\"token punctuation\">.</span><span class=\"token function\">getOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> OF_ORIENTATION_UNKNOWN<span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">case</span> OF_ORIENTATION_DEFAULT<span class=\"token operator\">:</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\ty <span class=\"token operator\">=</span> sh <span class=\"token operator\">-</span> y<span class=\"token punctuation\">;</span>   <span class=\"token comment\" spellcheck=\"true\">// screen is flipped vertically.</span>\n\t\t\ty <span class=\"token operator\">-</span><span class=\"token operator\">=</span> h<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token function\">glPixelStorei</span><span class=\"token punctuation\">(</span>GL_PACK_ALIGNMENT<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glReadPixels</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> GL_RGBA<span class=\"token punctuation\">,</span> GL_UNSIGNED_BYTE<span class=\"token punctuation\">,</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">mirror</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_ORIENTATION_180<span class=\"token operator\">:</span>\n\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tx <span class=\"token operator\">=</span> sw <span class=\"token operator\">-</span> x<span class=\"token punctuation\">;</span>   <span class=\"token comment\" spellcheck=\"true\">// screen is flipped horizontally.</span>\n\t\t\tx <span class=\"token operator\">-</span><span class=\"token operator\">=</span> w<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token function\">glPixelStorei</span><span class=\"token punctuation\">(</span>GL_PACK_ALIGNMENT<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glReadPixels</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> GL_RGBA<span class=\"token punctuation\">,</span> GL_UNSIGNED_BYTE<span class=\"token punctuation\">,</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">mirror</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_ORIENTATION_90_RIGHT<span class=\"token operator\">:</span>\n\t\t<span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tx <span class=\"token operator\">=</span> sw <span class=\"token operator\">-</span> x<span class=\"token punctuation\">;</span>   <span class=\"token comment\" spellcheck=\"true\">// screen is flipped horizontally.</span>\n\t\t\tx <span class=\"token operator\">-</span><span class=\"token operator\">=</span> w<span class=\"token punctuation\">;</span>\n\n\t\t\ty <span class=\"token operator\">=</span> sh <span class=\"token operator\">-</span> y<span class=\"token punctuation\">;</span>   <span class=\"token comment\" spellcheck=\"true\">// screen is flipped vertically.</span>\n\t\t\ty <span class=\"token operator\">-</span><span class=\"token operator\">=</span> h<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token function\">glPixelStorei</span><span class=\"token punctuation\">(</span>GL_PACK_ALIGNMENT<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glReadPixels</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> GL_RGBA<span class=\"token punctuation\">,</span> GL_UNSIGNED_BYTE<span class=\"token punctuation\">,</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">mirror</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">case</span> OF_ORIENTATION_90_LEFT<span class=\"token operator\">:</span>\n\t\t<span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">isVFlipped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tx <span class=\"token operator\">=</span> sw <span class=\"token operator\">-</span> x<span class=\"token punctuation\">;</span>   <span class=\"token comment\" spellcheck=\"true\">// screen is flipped horizontally.</span>\n\t\t\tx <span class=\"token operator\">-</span><span class=\"token operator\">=</span> w<span class=\"token punctuation\">;</span>\n\n\t\t\ty <span class=\"token operator\">=</span> sh <span class=\"token operator\">-</span> y<span class=\"token punctuation\">;</span>   <span class=\"token comment\" spellcheck=\"true\">// screen is flipped vertically.</span>\n\t\t\ty <span class=\"token operator\">-</span><span class=\"token operator\">=</span> h<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token function\">glPixelStorei</span><span class=\"token punctuation\">(</span>GL_PACK_ALIGNMENT<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">glReadPixels</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">,</span> GL_RGBA<span class=\"token punctuation\">,</span> GL_UNSIGNED_BYTE<span class=\"token punctuation\">,</span> pixels<span class=\"token punctuation\">.</span><span class=\"token function\">getData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tpixels<span class=\"token punctuation\">.</span><span class=\"token function\">mirror</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> of3dGraphics <span class=\"token operator\">&amp;</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> graphics3d<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nof3dGraphics <span class=\"token operator\">&amp;</span> ofGLProgrammableRenderer<span class=\"token operator\">::</span><span class=\"token function\">get3dGraphics</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> graphics3d<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n","type":"source"}}],"fetch":[]}