{"data":[{"page":{"entry":{"name":"ofQtUtils.cpp","filename":"ofQtUtils.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/video/ofQtUtils.cpp","path":"/openframeworks/video/ofQtUtils_cpp","route":"/openframeworks/video/ofQtUtils.cpp","dir":"../libs/openFrameworks/video","ext":"cpp","type":"source","id":371,"parent":354,"breadcrumbs":[354,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofQtUtils.h\"</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> defined (TARGET_WIN32) || (defined TARGET_OSX &amp;&amp; !defined(MAC_OS_X_VERSION_10_7))</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> !defined(MAC_OS_X_VERSION_10_12) || MAC_OS_X_VERSION_MAX_ALLOWED &lt; MAC_OS_X_VERSION_10_12</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofGraphics.h\"</span></span>\n<span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> bQuicktimeInitialized <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">initializeQuicktime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bQuicktimeInitialized <span class=\"token operator\">==</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//----------------------------------</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// do we have quicktime installed at all?</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// http://www.apple.com/quicktime/download/win.html</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// can gestalt help with versions, or is that only after init?</span>\n\n\t\tOSErr myErr \t<span class=\"token operator\">=</span> noErr<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_WIN32</span>\n\t\t\tmyErr <span class=\"token operator\">=</span> <span class=\"token function\">InitializeQTML</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>myErr <span class=\"token operator\">!=</span> noErr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token function\">ofLogFatalError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQtUtils.h\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"------------------------------------------------------\"</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">ofLogFatalError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQtUtils.h\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"sorry, there wasa problem initing quicktime... exiting\"</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">OF_EXIT_APP</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\tmyErr <span class=\"token operator\">=</span> <span class=\"token function\">EnterMovies</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>myErr <span class=\"token operator\">!=</span> noErr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogFatalError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQtUtils.h\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"------------------------------------------------------\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">ofLogFatalError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQtUtils.h\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"sorry, there is a problem initing quicktime... exiting\"</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token function\">OF_EXIT_APP</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\tbQuicktimeInitialized <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">closeQuicktime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bQuicktimeInitialized <span class=\"token operator\">==</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ExitMovies</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_WIN32</span>\n\t\t\t<span class=\"token function\">TerminateQTML</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\t\tbQuicktimeInitialized <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">convertPixels</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> gWorldPixels<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> rgbPixels<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// ok for macs?</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// ok for intel macs?</span>\n\n\t<span class=\"token keyword\">int</span> <span class=\"token operator\">*</span> rgbaPtr \t\t\t<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> gWorldPixels<span class=\"token punctuation\">;</span>\n\tpix24 <span class=\"token operator\">*</span> rgbPtr \t\t\t<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>pix24 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> rgbPixels<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> rgbaStart<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//\tputting in the boolean, so we can work on</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//\t0,0 in top right...</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//\tbool bFlipVertically \t= true;</span>\n\n\t<span class=\"token keyword\">bool</span> bFlipVertically \t<span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// -------------------------------------------</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// we flip vertically because the 0,0 position in OF</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// is the bottom left (not top left, like processing)</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// since the 0,0 of a picture is top left</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// if we upload and drawf the data as is</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// it will be upside-down....</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// -------------------------------------------</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bFlipVertically<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//----- argb->rgb</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> h<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tpix24 <span class=\"token operator\">*</span> rgbPtr \t\t\t<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>pix24 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> rgbPixels <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> w<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\trgbaStart <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>rgbaPtr<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">memcpy</span> <span class=\"token punctuation\">(</span>rgbPtr<span class=\"token punctuation\">,</span> rgbaStart<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>pix24<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\trgbPtr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t\trgbaPtr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//----- flip while argb->rgb</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> h<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tpix24 <span class=\"token operator\">*</span> rgbPtr \t\t\t<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>pix24 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> rgbPixels <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>h<span class=\"token operator\">-</span>i<span class=\"token number\">-1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> w<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\trgbaStart <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>rgbaPtr<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">memcpy</span> <span class=\"token punctuation\">(</span>rgbPtr<span class=\"token punctuation\">,</span> rgbaStart<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>pix24<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\trgbPtr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t\trgbaPtr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">// osx needs this for modal dialogs.</span>\nBoolean <span class=\"token function\">SeqGrabberModalFilterUPP</span> <span class=\"token punctuation\">(</span>DialogPtr theDialog<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> EventRecord <span class=\"token operator\">*</span>theEvent<span class=\"token punctuation\">,</span> <span class=\"token keyword\">short</span> <span class=\"token operator\">*</span>itemHit<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> refCon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> unused(theDialog, itemHit)</span>\n  \tBoolean  handled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  \t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>theEvent<span class=\"token operator\">-</span><span class=\"token operator\">></span>what <span class=\"token operator\">==</span> updateEvt<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>WindowPtr<span class=\"token punctuation\">)</span> theEvent<span class=\"token operator\">-</span><span class=\"token operator\">></span>message <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span>WindowPtr<span class=\"token punctuation\">)</span> refCon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  \t<span class=\"token punctuation\">{</span>\n    \t<span class=\"token function\">BeginUpdate</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>WindowPtr<span class=\"token punctuation\">)</span> refCon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \t<span class=\"token function\">EndUpdate</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>WindowPtr<span class=\"token punctuation\">)</span> refCon<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \thandled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  \t<span class=\"token punctuation\">}</span>\n  \t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>handled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span>   kCharacteristicHasVideoFrameRate\t\tFOUR_CHAR_CODE('vfrr')</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span>   kCharacteristicIsAnMpegTrack\t\t\tFOUR_CHAR_CODE('mpeg')</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/*\n\nCalculate the static frame rate for a given movie.\n\n*/</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">MovieGetStaticFrameRate</span><span class=\"token punctuation\">(</span>Movie inMovie<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> <span class=\"token operator\">*</span>outStaticFrameRate<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\n  <span class=\"token operator\">*</span>outStaticFrameRate <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  Media movieMedia<span class=\"token punctuation\">;</span>\n  MediaHandler movieMediaHandler<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\" spellcheck=\"true\">/* get the media identifier for the media that contains the first\n    video track's sample data, and also get the media handler for\n    this media. */</span>\n  <span class=\"token function\">MovieGetVideoMediaAndMediaHandler</span><span class=\"token punctuation\">(</span>inMovie<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>movieMedia<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>movieMediaHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>movieMedia <span class=\"token operator\">&amp;&amp;</span> movieMediaHandler<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    Boolean isMPEG <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">/* is this the MPEG-1/MPEG-2 media handler? */</span>\n    OSErr err <span class=\"token operator\">=</span> <span class=\"token function\">IsMPEGMediaHandler</span><span class=\"token punctuation\">(</span>movieMediaHandler<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>isMPEG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err <span class=\"token operator\">==</span> noErr<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isMPEG<span class=\"token punctuation\">)</span> <span class=\"token comment\" spellcheck=\"true\">/* working with MPEG-1/MPEG-2 media */</span>\n      <span class=\"token punctuation\">{</span>\n        Fixed staticFrameRate<span class=\"token punctuation\">;</span>\n        ComponentResult err <span class=\"token operator\">=</span> <span class=\"token function\">MPEGMediaGetStaticFrameRate</span><span class=\"token punctuation\">(</span>movieMediaHandler<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>staticFrameRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err <span class=\"token operator\">==</span> noErr<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n          <span class=\"token comment\" spellcheck=\"true\">/* convert Fixed data result to type double */</span>\n          <span class=\"token operator\">*</span>outStaticFrameRate <span class=\"token operator\">=</span> <span class=\"token function\">Fix2X</span><span class=\"token punctuation\">(</span>staticFrameRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">else</span>  <span class=\"token comment\" spellcheck=\"true\">/* working with non-MPEG-1/MPEG-2 media */</span>\n      <span class=\"token punctuation\">{</span>\n        OSErr err <span class=\"token operator\">=</span> <span class=\"token function\">MediaGetStaticFrameRate</span><span class=\"token punctuation\">(</span>movieMedia<span class=\"token punctuation\">,</span> outStaticFrameRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err <span class=\"token operator\">!=</span> noErr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">ofLogError</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ofQtUtils\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"MovieGetStaticFrameRate(): couldn't get static frame rate: OSErr \"</span> <span class=\"token operator\">&lt;&lt;</span> err<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n        <span class=\"token comment\" spellcheck=\"true\">//assert(err == noErr);</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/*\n\nGet the media identifier for the media that contains the first\nvideo track's sample data, and also get the media handler for\nthis media.\n\n*/</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">MovieGetVideoMediaAndMediaHandler</span><span class=\"token punctuation\">(</span>Movie inMovie<span class=\"token punctuation\">,</span> Media <span class=\"token operator\">*</span>outMedia<span class=\"token punctuation\">,</span> MediaHandler <span class=\"token operator\">*</span>outMediaHandler<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\n  <span class=\"token operator\">*</span>outMedia <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n  <span class=\"token operator\">*</span>outMediaHandler <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">/* get first video track */</span>\n  Track videoTrack <span class=\"token operator\">=</span> <span class=\"token function\">GetMovieIndTrackType</span><span class=\"token punctuation\">(</span>inMovie<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> kCharacteristicHasVideoFrameRate<span class=\"token punctuation\">,</span>\n              movieTrackCharacteristic <span class=\"token operator\">|</span> movieTrackEnabledOnly<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>videoTrack <span class=\"token operator\">!=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">/* get media ref. for track's sample data */</span>\n    <span class=\"token operator\">*</span>outMedia <span class=\"token operator\">=</span> <span class=\"token function\">GetTrackMedia</span><span class=\"token punctuation\">(</span>videoTrack<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>outMedia<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\" spellcheck=\"true\">/* get a reference to the media handler component */</span>\n      <span class=\"token operator\">*</span>outMediaHandler <span class=\"token operator\">=</span> <span class=\"token function\">GetMediaHandler</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>outMedia<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/*\n\nReturn true if media handler reference is from the MPEG-1/MPEG-2 media handler.\nReturn false otherwise.\n\n*/</span>\nOSErr <span class=\"token function\">IsMPEGMediaHandler</span><span class=\"token punctuation\">(</span>MediaHandler inMediaHandler<span class=\"token punctuation\">,</span> Boolean <span class=\"token operator\">*</span>outIsMPEG<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\n  \t<span class=\"token comment\" spellcheck=\"true\">/* is this the MPEG-1/MPEG-2 media handler? */</span>\n\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>OSErr<span class=\"token punctuation\">)</span> <span class=\"token function\">MediaHasCharacteristic</span><span class=\"token punctuation\">(</span>inMediaHandler<span class=\"token punctuation\">,</span>\n\t\t\t\t\tkCharacteristicIsAnMpegTrack<span class=\"token punctuation\">,</span>\n\t\t\t\t\toutIsMPEG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/*\n\nGiven a reference to the media handler used for media in a MPEG-1/MPEG-2\ntrack, return the static frame rate.\n\n*/</span>\nComponentResult <span class=\"token function\">MPEGMediaGetStaticFrameRate</span><span class=\"token punctuation\">(</span>MediaHandler inMPEGMediaHandler<span class=\"token punctuation\">,</span> Fixed <span class=\"token operator\">*</span>outStaticFrameRate<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">*</span>outStaticFrameRate <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n  MHInfoEncodedFrameRateRecord encodedFrameRate<span class=\"token punctuation\">;</span>\n  Size encodedFrameRateSize <span class=\"token operator\">=</span> <span class=\"token keyword\">sizeof</span><span class=\"token punctuation\">(</span>encodedFrameRate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/* get the static frame rate */</span>\n  ComponentResult err <span class=\"token operator\">=</span> <span class=\"token function\">MediaGetPublicInfo</span><span class=\"token punctuation\">(</span>inMPEGMediaHandler<span class=\"token punctuation\">,</span>\n                       kMHInfoEncodedFrameRate<span class=\"token punctuation\">,</span>\n                       <span class=\"token operator\">&amp;</span>encodedFrameRate<span class=\"token punctuation\">,</span>\n                       <span class=\"token operator\">&amp;</span>encodedFrameRateSize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err <span class=\"token operator\">==</span> noErr<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">/* return frame rate at which the track was encoded */</span>\n    <span class=\"token operator\">*</span>outStaticFrameRate <span class=\"token operator\">=</span> encodedFrameRate<span class=\"token punctuation\">.</span>encodedFrameRate<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> err<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/*\n\nGiven a reference to the media that contains the sample data for a track,\ncalculate the static frame rate.\n\n*/</span>\nOSErr <span class=\"token function\">MediaGetStaticFrameRate</span><span class=\"token punctuation\">(</span>Media inMovieMedia<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> <span class=\"token operator\">*</span>outFPS<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">*</span>outFPS <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">/* get the number of samples in the media */</span>\n  <span class=\"token keyword\">long</span> sampleCount <span class=\"token operator\">=</span> <span class=\"token function\">GetMediaSampleCount</span><span class=\"token punctuation\">(</span>inMovieMedia<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  OSErr err <span class=\"token operator\">=</span> <span class=\"token function\">GetMoviesError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sampleCount <span class=\"token operator\">&amp;&amp;</span> err <span class=\"token operator\">==</span> noErr<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\" spellcheck=\"true\">/* find the media duration */</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">//Quicktime 7.0 code</span>\n    <span class=\"token comment\" spellcheck=\"true\">//TimeValue64 duration = GetMediaDisplayDuration(inMovieMedia);</span>\n    TimeValue64 duration <span class=\"token operator\">=</span> <span class=\"token function\">GetMediaDuration</span><span class=\"token punctuation\">(</span>inMovieMedia<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    err <span class=\"token operator\">=</span> <span class=\"token function\">GetMoviesError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err <span class=\"token operator\">==</span> noErr<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\" spellcheck=\"true\">/* get the media time scale */</span>\n      TimeValue64 timeScale <span class=\"token operator\">=</span> <span class=\"token function\">GetMediaTimeScale</span><span class=\"token punctuation\">(</span>inMovieMedia<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      err <span class=\"token operator\">=</span> <span class=\"token function\">GetMoviesError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err <span class=\"token operator\">==</span> noErr<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\" spellcheck=\"true\">/* calculate the frame rate:\n          frame rate = (sample count * media time scale) / media duration\n          */</span>\n        <span class=\"token operator\">*</span>outFPS <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span>sampleCount <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span>timeScale <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span>duration<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> err<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OSX</span>\n<span class=\"token comment\" spellcheck=\"true\">// GetSettingsPreference</span>\n<span class=\"token comment\" spellcheck=\"true\">//    Returns a preference for a specified key as QuickTime UserData</span>\n<span class=\"token comment\" spellcheck=\"true\">// It is your responsibility to dispose of the returned UserData</span>\nOSErr <span class=\"token function\">GetSettingsPreference</span><span class=\"token punctuation\">(</span>CFStringRef inKey<span class=\"token punctuation\">,</span> UserData <span class=\"token operator\">*</span>outUserData<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  CFPropertyListRef theCFSettings<span class=\"token punctuation\">;</span>\n  Handle            theHandle <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n  UserData          theUserData <span class=\"token operator\">=</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">;</span>\n  OSErr             err <span class=\"token operator\">=</span> paramErr<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\" spellcheck=\"true\">// read the new setttings from our preferences</span>\n  theCFSettings <span class=\"token operator\">=</span> <span class=\"token function\">CFPreferencesCopyAppValue</span><span class=\"token punctuation\">(</span>inKey<span class=\"token punctuation\">,</span>\n                                         kCFPreferencesCurrentApplication<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>theCFSettings<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    err <span class=\"token operator\">=</span> <span class=\"token function\">PtrToHand</span><span class=\"token punctuation\">(</span><span class=\"token function\">CFDataGetBytePtr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>CFDataRef<span class=\"token punctuation\">)</span>theCFSettings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>theHandle<span class=\"token punctuation\">,</span>\n                    <span class=\"token function\">CFDataGetLength</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>CFDataRef<span class=\"token punctuation\">)</span>theCFSettings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">CFRelease</span><span class=\"token punctuation\">(</span>theCFSettings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>theHandle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      err <span class=\"token operator\">=</span> <span class=\"token function\">NewUserDataFromHandle</span><span class=\"token punctuation\">(</span>theHandle<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>theUserData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>theUserData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">*</span>outUserData <span class=\"token operator\">=</span> theUserData<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token function\">DisposeHandle</span><span class=\"token punctuation\">(</span>theHandle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> err<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//----------------------------------------</span>\n<span class=\"token comment\" spellcheck=\"true\">// SaveSettingsPreference</span>\n<span class=\"token comment\" spellcheck=\"true\">//    Saves a preference for a specified key from QuickTime UserData</span>\nOSErr <span class=\"token function\">SaveSettingsPreference</span><span class=\"token punctuation\">(</span>CFStringRef inKey<span class=\"token punctuation\">,</span> UserData inUserData<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  CFDataRef theCFSettings<span class=\"token punctuation\">;</span>\n  Handle    hSettings<span class=\"token punctuation\">;</span>\n  OSErr     err<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">nullptr</span> <span class=\"token operator\">==</span> inUserData<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> paramErr<span class=\"token punctuation\">;</span>\n\n  hSettings <span class=\"token operator\">=</span> <span class=\"token function\">NewHandle</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  err <span class=\"token operator\">=</span> <span class=\"token function\">MemError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>noErr <span class=\"token operator\">==</span> err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    err <span class=\"token operator\">=</span> <span class=\"token function\">PutUserDataIntoHandle</span><span class=\"token punctuation\">(</span>inUserData<span class=\"token punctuation\">,</span> hSettings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>noErr <span class=\"token operator\">==</span> err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">HLock</span><span class=\"token punctuation\">(</span>hSettings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      theCFSettings <span class=\"token operator\">=</span> <span class=\"token function\">CFDataCreate</span><span class=\"token punctuation\">(</span>kCFAllocatorDefault<span class=\"token punctuation\">,</span>\n                                   <span class=\"token punctuation\">(</span>UInt8 <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>hSettings<span class=\"token punctuation\">,</span>\n                                   <span class=\"token function\">GetHandleSize</span><span class=\"token punctuation\">(</span>hSettings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>theCFSettings<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">CFPreferencesSetAppValue</span><span class=\"token punctuation\">(</span>inKey<span class=\"token punctuation\">,</span> theCFSettings<span class=\"token punctuation\">,</span>\n                                 kCFPreferencesCurrentApplication<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">CFPreferencesAppSynchronize</span><span class=\"token punctuation\">(</span>kCFPreferencesCurrentApplication<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">CFRelease</span><span class=\"token punctuation\">(</span>theCFSettings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">DisposeHandle</span><span class=\"token punctuation\">(</span>hSettings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> err<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//end mac specific stuff</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span> </span>\n","type":"source"}}],"fetch":[]}