{"data":[{"page":{"entry":{"name":"ofMatrix4x4.cpp","filename":"ofMatrix4x4.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/math/ofMatrix4x4.cpp","path":"/openframeworks/math/ofMatrix4x4_cpp","route":"/openframeworks/math/ofMatrix4x4.cpp","dir":"../libs/openFrameworks/math","ext":"cpp","type":"source","id":290,"parent":284,"breadcrumbs":[284,195],"siblings":[],"translations":{}},"document":"\n\n\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofMatrix4x4.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofConstants.h\"</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;limits></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iomanip></span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> (_MSC_VER)</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">undef</span> min</span>\n<span class=\"token comment\" spellcheck=\"true\">// see: http://stackoverflow.com/questions/1904635/warning-c4003-and-errors-c2589-and-c2059-on-x-stdnumericlimitsintmax</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token keyword\">inline</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">equivalent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> lhs<span class=\"token punctuation\">,</span><span class=\"token keyword\">double</span> rhs<span class=\"token punctuation\">,</span><span class=\"token keyword\">double</span> epsilon<span class=\"token operator\">=</span><span class=\"token number\">1e-6</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span> <span class=\"token keyword\">double</span> delta <span class=\"token operator\">=</span> rhs<span class=\"token operator\">-</span>lhs<span class=\"token punctuation\">;</span> <span class=\"token keyword\">return</span> delta<span class=\"token operator\">&lt;</span><span class=\"token number\">0.0</span><span class=\"token operator\">?</span>delta<span class=\"token operator\">>=</span><span class=\"token operator\">-</span>epsilon<span class=\"token operator\">:</span>delta<span class=\"token operator\">&lt;=</span>epsilon<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\n<span class=\"token keyword\">inline</span> T <span class=\"token function\">square</span><span class=\"token punctuation\">(</span>T v<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> v<span class=\"token operator\">*</span>v<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> SET_ROW(row, v1, v2, v3, v4 )    \\\n_mat[(row)][0] = (v1); \\\n_mat[(row)][1] = (v2); \\\n_mat[(row)][2] = (v3); \\\n_mat[(row)][3] = (v4);</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> INNER_PRODUCT(a,b,r,c) \\\n((a)._mat[r][0] * (b)._mat[0][c]) \\\n+((a)._mat[r][1] * (b)._mat[1][c]) \\\n+((a)._mat[r][2] * (b)._mat[2][c]) \\\n+((a)._mat[r][3] * (b)._mat[3][c])</span>\n\nofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">ofMatrix4x4</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> a00<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a01<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a02<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a03<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t\t <span class=\"token keyword\">float</span> a10<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a11<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a12<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a13<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t\t <span class=\"token keyword\">float</span> a20<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a21<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a22<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a23<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t\t <span class=\"token keyword\">float</span> a30<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a31<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a32<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a33<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">SET_ROW</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> a00<span class=\"token punctuation\">,</span> a01<span class=\"token punctuation\">,</span> a02<span class=\"token punctuation\">,</span> a03 <span class=\"token punctuation\">)</span>\n    <span class=\"token function\">SET_ROW</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> a10<span class=\"token punctuation\">,</span> a11<span class=\"token punctuation\">,</span> a12<span class=\"token punctuation\">,</span> a13 <span class=\"token punctuation\">)</span>\n    <span class=\"token function\">SET_ROW</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> a20<span class=\"token punctuation\">,</span> a21<span class=\"token punctuation\">,</span> a22<span class=\"token punctuation\">,</span> a23 <span class=\"token punctuation\">)</span>\n    <span class=\"token function\">SET_ROW</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> a30<span class=\"token punctuation\">,</span> a31<span class=\"token punctuation\">,</span> a32<span class=\"token punctuation\">,</span> a33 <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> a00<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a01<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a02<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a03<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t<span class=\"token keyword\">float</span> a10<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a11<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a12<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a13<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t<span class=\"token keyword\">float</span> a20<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a21<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a22<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a23<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t<span class=\"token keyword\">float</span> a30<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a31<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a32<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> a33<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">SET_ROW</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> a00<span class=\"token punctuation\">,</span> a01<span class=\"token punctuation\">,</span> a02<span class=\"token punctuation\">,</span> a03 <span class=\"token punctuation\">)</span>\n    <span class=\"token function\">SET_ROW</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> a10<span class=\"token punctuation\">,</span> a11<span class=\"token punctuation\">,</span> a12<span class=\"token punctuation\">,</span> a13 <span class=\"token punctuation\">)</span>\n    <span class=\"token function\">SET_ROW</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> a20<span class=\"token punctuation\">,</span> a21<span class=\"token punctuation\">,</span> a22<span class=\"token punctuation\">,</span> a23 <span class=\"token punctuation\">)</span>\n    <span class=\"token function\">SET_ROW</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> a30<span class=\"token punctuation\">,</span> a31<span class=\"token punctuation\">,</span> a32<span class=\"token punctuation\">,</span> a33 <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> QX  q._v[0]</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> QY  q._v[1]</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> QZ  q._v[2]</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> QW  q._v[3]</span>\n\n<span class=\"token keyword\">void</span> ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">setRotate</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofQuaternion<span class=\"token operator\">&amp;</span> q<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">double</span> length2 <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">length2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>length2<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> std<span class=\"token operator\">::</span>numeric_limits<span class=\"token operator\">&lt;</span><span class=\"token keyword\">double</span><span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n        _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n        _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">double</span> rlength2<span class=\"token punctuation\">;</span>\n        <span class=\"token comment\" spellcheck=\"true\">// normalize quat if required.</span>\n        <span class=\"token comment\" spellcheck=\"true\">// We can avoid the expensive sqrt in this case since all 'coefficients' below are products of two q components.</span>\n        <span class=\"token comment\" spellcheck=\"true\">// That is a square of a square root, so it is possible to avoid that</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>length2 <span class=\"token operator\">!=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            rlength2 <span class=\"token operator\">=</span> <span class=\"token number\">2.0</span><span class=\"token operator\">/</span>length2<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">else</span>\n        <span class=\"token punctuation\">{</span>\n            rlength2 <span class=\"token operator\">=</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">// Source: Gamasutra, Rotating Objects Using Quaternions</span>\n        <span class=\"token comment\" spellcheck=\"true\">//</span>\n        <span class=\"token comment\" spellcheck=\"true\">//http://www.gamasutra.com/features/19980703/quaternions_01.htm</span>\n\n        <span class=\"token keyword\">double</span> wx<span class=\"token punctuation\">,</span> wy<span class=\"token punctuation\">,</span> wz<span class=\"token punctuation\">,</span> xx<span class=\"token punctuation\">,</span> yy<span class=\"token punctuation\">,</span> yz<span class=\"token punctuation\">,</span> xy<span class=\"token punctuation\">,</span> xz<span class=\"token punctuation\">,</span> zz<span class=\"token punctuation\">,</span> x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">,</span> z2<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">// calculate coefficients</span>\n        x2 <span class=\"token operator\">=</span> rlength2<span class=\"token operator\">*</span>QX<span class=\"token punctuation\">;</span>\n        y2 <span class=\"token operator\">=</span> rlength2<span class=\"token operator\">*</span>QY<span class=\"token punctuation\">;</span>\n        z2 <span class=\"token operator\">=</span> rlength2<span class=\"token operator\">*</span>QZ<span class=\"token punctuation\">;</span>\n\n        xx <span class=\"token operator\">=</span> QX <span class=\"token operator\">*</span> x2<span class=\"token punctuation\">;</span>\n        xy <span class=\"token operator\">=</span> QX <span class=\"token operator\">*</span> y2<span class=\"token punctuation\">;</span>\n        xz <span class=\"token operator\">=</span> QX <span class=\"token operator\">*</span> z2<span class=\"token punctuation\">;</span>\n\n        yy <span class=\"token operator\">=</span> QY <span class=\"token operator\">*</span> y2<span class=\"token punctuation\">;</span>\n        yz <span class=\"token operator\">=</span> QY <span class=\"token operator\">*</span> z2<span class=\"token punctuation\">;</span>\n        zz <span class=\"token operator\">=</span> QZ <span class=\"token operator\">*</span> z2<span class=\"token punctuation\">;</span>\n\n        wx <span class=\"token operator\">=</span> QW <span class=\"token operator\">*</span> x2<span class=\"token punctuation\">;</span>\n        wy <span class=\"token operator\">=</span> QW <span class=\"token operator\">*</span> y2<span class=\"token punctuation\">;</span>\n        wz <span class=\"token operator\">=</span> QW <span class=\"token operator\">*</span> z2<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">// Note.  Gamasutra gets the matrix assignments inverted, resulting</span>\n        <span class=\"token comment\" spellcheck=\"true\">// in left-handed rotations, which is contrary to OpenGL and OSG's</span>\n        <span class=\"token comment\" spellcheck=\"true\">// methodology.  The matrix assignment has been altered in the next</span>\n        <span class=\"token comment\" spellcheck=\"true\">// few lines of code to do the right thing.</span>\n        <span class=\"token comment\" spellcheck=\"true\">// Don Burns - Oct 13, 2001</span>\n        _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>yy <span class=\"token operator\">+</span> zz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> xy <span class=\"token operator\">-</span> wz<span class=\"token punctuation\">;</span>\n        _mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> xz <span class=\"token operator\">+</span> wy<span class=\"token punctuation\">;</span>\n\n\n        _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> xy <span class=\"token operator\">+</span> wz<span class=\"token punctuation\">;</span>\n        _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>xx <span class=\"token operator\">+</span> zz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        _mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> yz <span class=\"token operator\">-</span> wx<span class=\"token punctuation\">;</span>\n\n        _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> xz <span class=\"token operator\">-</span> wy<span class=\"token punctuation\">;</span>\n        _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> yz <span class=\"token operator\">+</span> wx<span class=\"token punctuation\">;</span>\n        _mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>xx <span class=\"token operator\">+</span> yy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> 0</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token comment\" spellcheck=\"true\">//ofQuaternion ofMatrix4x4::getRotate() const {</span>\n<span class=\"token comment\" spellcheck=\"true\">//\tofVec4f q;</span>\n<span class=\"token comment\" spellcheck=\"true\">//\tfloat trace = _mat[0][0] + _mat[1][1] + _mat[2][2]; // I removed + 1.0f; see discussion with Ethan</span>\n<span class=\"token comment\" spellcheck=\"true\">//\tif( trace > 0 ) {// I changed M_EPSILON to 0</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t\tfloat s = 0.5f / sqrtf(trace+ 1.0f);</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t\tq.w = 0.25f / s;</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t\tq.x = ( _mat[2][1] - _mat[1][2] ) * s;</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t\tq.y = ( _mat[0][2] - _mat[2][0] ) * s;</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t\tq.z = ( _mat[1][0] - _mat[0][1] ) * s;</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t} else {</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t\tif ( _mat[0][0] > _mat[1][1] &amp;&amp; _mat[0][0] > _mat[2][2] ) {</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t\t\tfloat s = 2.0f * sqrtf( 1.0f + _mat[0][0] - _mat[1][1] - _mat[2][2]);</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t\t\tq.w = (_mat[2][1] - _mat[1][2] ) / s;</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t\t\tq.x = 0.25f * s;</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t\t\tq.y = (_mat[0][1] + _mat[1][0] ) / s;</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t\t\tq.z = (_mat[0][2] + _mat[2][0] ) / s;</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t\t} else if (_mat[1][1] > _mat[2][2]) {</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t\t\tfloat s = 2.0f * sqrtf( 1.0f + _mat[1][1] - _mat[0][0] - _mat[2][2]);</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t\t\tq.w = (_mat[0][2] - _mat[2][0] ) / s;</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t\t\tq.x = (_mat[0][1] + _mat[1][0] ) / s;</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t\t\tq.y = 0.25f * s;</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t\t\tq.z = (_mat[1][2] + _mat[2][1] ) / s;</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t\t} else {</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t\t\tfloat s = 2.0f * sqrtf( 1.0f + _mat[2][2] - _mat[0][0] - _mat[1][1] );</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t\t\tq.w = (_mat[1][0] - _mat[0][1] ) / s;</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t\t\tq.x = (_mat[0][2] + _mat[2][0] ) / s;</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t\t\tq.y = (_mat[1][2] + _mat[2][1] ) / s;</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t\t\tq.z = 0.25f * s;</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t\t}</span>\n<span class=\"token comment\" spellcheck=\"true\">//\t}</span>\n<span class=\"token comment\" spellcheck=\"true\">//\treturn ofQuaternion(q.x, q.y, q.z, q.w);</span>\n<span class=\"token comment\" spellcheck=\"true\">//}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//#define COMPILE_getRotate_David_Spillings_Mk1</span>\n<span class=\"token comment\" spellcheck=\"true\">//#define COMPILE_getRotate_David_Spillings_Mk2</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> COMPILE_getRotate_Original</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> COMPILE_getRotate_David_Spillings_Mk1</span>\n<span class=\"token comment\" spellcheck=\"true\">// David Spillings implementation Mk 1</span>\nofQuaternion ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">getRotate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span>\n<span class=\"token punctuation\">{</span>\n\tofQuaternion q<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">float</span> s<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> tq<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span>    i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// Use tq to store the largest trace</span>\n    tq<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    tq<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">+</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    tq<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    tq<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">-</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// Find the maximum (could also use stacked if's later)</span>\n    j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> j <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>tq<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>tq<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span> i <span class=\"token operator\">:</span> j<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// check the diagonal</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>j<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\" spellcheck=\"true\">/* perform instant calculation */</span>\n        QW <span class=\"token operator\">=</span> tq<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        QX <span class=\"token operator\">=</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        QY <span class=\"token operator\">=</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        QZ <span class=\"token operator\">=</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>j<span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        QW <span class=\"token operator\">=</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        QX <span class=\"token operator\">=</span> tq<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        QY <span class=\"token operator\">=</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        QZ <span class=\"token operator\">=</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>j<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        QW <span class=\"token operator\">=</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        QX <span class=\"token operator\">=</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        QY <span class=\"token operator\">=</span> tq<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        QZ <span class=\"token operator\">=</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token comment\" spellcheck=\"true\">/* if (j==3) */</span>\n    <span class=\"token punctuation\">{</span>\n        QW <span class=\"token operator\">=</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        QX <span class=\"token operator\">=</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        QY <span class=\"token operator\">=</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        QZ <span class=\"token operator\">=</span> tq<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    s <span class=\"token operator\">=</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.25</span><span class=\"token operator\">/</span>tq<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    QW <span class=\"token operator\">*</span><span class=\"token operator\">=</span> s<span class=\"token punctuation\">;</span>\n    QX <span class=\"token operator\">*</span><span class=\"token operator\">=</span> s<span class=\"token punctuation\">;</span>\n    QY <span class=\"token operator\">*</span><span class=\"token operator\">=</span> s<span class=\"token punctuation\">;</span>\n    QZ <span class=\"token operator\">*</span><span class=\"token operator\">=</span> s<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> q<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> COMPILE_getRotate_David_Spillings_Mk2</span>\n<span class=\"token comment\" spellcheck=\"true\">// David Spillings implementation Mk 2</span>\nofQuaternion ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">getRotate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span>\n<span class=\"token punctuation\">{</span>\n    ofQuaternion q<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// From http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm</span>\n    QW <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">*</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span> osg<span class=\"token operator\">::</span><span class=\"token function\">maximum</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">+</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    QX <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">*</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span> osg<span class=\"token operator\">::</span><span class=\"token function\">maximum</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">+</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    QY <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">*</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span> osg<span class=\"token operator\">::</span><span class=\"token function\">maximum</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">-</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    QZ <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">*</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span> osg<span class=\"token operator\">::</span><span class=\"token function\">maximum</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">-</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">if</span> 0</span>\n    <span class=\"token comment\" spellcheck=\"true\">// Robert Osfield, June 7th 2007, arggg this new implementation produces many many errors, so have to revert to sign(..) orignal below.</span>\n    QX <span class=\"token operator\">=</span> QX <span class=\"token operator\">*</span> osg<span class=\"token operator\">::</span><span class=\"token function\">signOrZero</span><span class=\"token punctuation\">(</span>  _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>\n    QY <span class=\"token operator\">=</span> QY <span class=\"token operator\">*</span> osg<span class=\"token operator\">::</span><span class=\"token function\">signOrZero</span><span class=\"token punctuation\">(</span>  _mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>\n    QZ <span class=\"token operator\">=</span> QZ <span class=\"token operator\">*</span> osg<span class=\"token operator\">::</span><span class=\"token function\">signOrZero</span><span class=\"token punctuation\">(</span>  _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n    QX <span class=\"token operator\">=</span> QX <span class=\"token operator\">*</span> osg<span class=\"token operator\">::</span><span class=\"token function\">sign</span><span class=\"token punctuation\">(</span>  _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>\n    QY <span class=\"token operator\">=</span> QY <span class=\"token operator\">*</span> osg<span class=\"token operator\">::</span><span class=\"token function\">sign</span><span class=\"token punctuation\">(</span>  _mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>\n    QZ <span class=\"token operator\">=</span> QZ <span class=\"token operator\">*</span> osg<span class=\"token operator\">::</span><span class=\"token function\">sign</span><span class=\"token punctuation\">(</span>  _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n    <span class=\"token keyword\">return</span> q<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> COMPILE_getRotate_Original</span>\n<span class=\"token comment\" spellcheck=\"true\">// Original implementation</span>\nofQuaternion ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">getRotate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span>\n<span class=\"token punctuation\">{</span>\n    ofQuaternion q<span class=\"token punctuation\">;</span>\n\n    ofMatrix4x4 mat <span class=\"token operator\">=</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    ofVec3f vs <span class=\"token operator\">=</span> mat<span class=\"token punctuation\">.</span><span class=\"token function\">getScale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    mat<span class=\"token punctuation\">.</span><span class=\"token function\">scale</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>vs<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>vs<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>vs<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    ofVec4f<span class=\"token operator\">*</span> m <span class=\"token operator\">=</span> mat<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// Source: Gamasutra, Rotating Objects Using Quaternions</span>\n    <span class=\"token comment\" spellcheck=\"true\">//</span>\n    <span class=\"token comment\" spellcheck=\"true\">//http://www.gamasutra.com/features/programming/19980703/quaternions_01.htm</span>\n\n    <span class=\"token keyword\">float</span>  tr<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> tq<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span>    i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">int</span> nxt<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    tr <span class=\"token operator\">=</span> m<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> m<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> m<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// check the diagonal</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tr <span class=\"token operator\">></span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        s <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token function\">sqrt</span> <span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        QW <span class=\"token operator\">=</span> s <span class=\"token operator\">/</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">;</span>\n        s <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">/</span> s<span class=\"token punctuation\">;</span>\n        QX <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> m<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> s<span class=\"token punctuation\">;</span>\n        QY <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> m<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> s<span class=\"token punctuation\">;</span>\n        QZ <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> m<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> s<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\" spellcheck=\"true\">// diagonal is negative</span>\n        i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> m<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> m<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            i <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        j <span class=\"token operator\">=</span> nxt<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        k <span class=\"token operator\">=</span> nxt<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        s <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span><span class=\"token function\">sqrt</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> m<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        tq<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> s <span class=\"token operator\">*</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s <span class=\"token operator\">!=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span>\n            s <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">/</span> s<span class=\"token punctuation\">;</span>\n\n        tq<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> m<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> s<span class=\"token punctuation\">;</span>\n        tq<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> m<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> s<span class=\"token punctuation\">;</span>\n        tq<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> m<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> s<span class=\"token punctuation\">;</span>\n\n        QX <span class=\"token operator\">=</span> tq<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        QY <span class=\"token operator\">=</span> tq<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        QZ <span class=\"token operator\">=</span> tq<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        QW <span class=\"token operator\">=</span> tq<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> q<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//int ofMatrix4x4::compare(const ofMatrix4x4&amp; m) const</span>\n<span class=\"token comment\" spellcheck=\"true\">//{</span>\n<span class=\"token comment\" spellcheck=\"true\">//    const ofMatrix4x4::float* lhs = reinterpret_cast&lt;const ofMatrix4x4::float*>(_mat);</span>\n<span class=\"token comment\" spellcheck=\"true\">//    const ofMatrix4x4::float* end_lhs = lhs+16;</span>\n<span class=\"token comment\" spellcheck=\"true\">//    const ofMatrix4x4::float* rhs = reinterpret_cast&lt;const ofMatrix4x4::float*>(m._mat);</span>\n<span class=\"token comment\" spellcheck=\"true\">//    for(;lhs!=end_lhs;++lhs,++rhs)</span>\n<span class=\"token comment\" spellcheck=\"true\">//    {</span>\n<span class=\"token comment\" spellcheck=\"true\">//        if (*lhs &lt; *rhs) return -1;</span>\n<span class=\"token comment\" spellcheck=\"true\">//        if (*rhs &lt; *lhs) return 1;</span>\n<span class=\"token comment\" spellcheck=\"true\">//    }</span>\n<span class=\"token comment\" spellcheck=\"true\">//    return 0;</span>\n<span class=\"token comment\" spellcheck=\"true\">//}</span>\n\n<span class=\"token keyword\">void</span> ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">setTranslation</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> tx<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> ty<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> tz <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tx<span class=\"token punctuation\">;</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ty<span class=\"token punctuation\">;</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tz<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">void</span> ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">setTranslation</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> v <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v<span class=\"token punctuation\">.</span><span class=\"token function\">getPtr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v<span class=\"token punctuation\">.</span><span class=\"token function\">getPtr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v<span class=\"token punctuation\">.</span><span class=\"token function\">getPtr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">makeIdentityMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">SET_ROW</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token function\">SET_ROW</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token function\">SET_ROW</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token function\">SET_ROW</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">makeScaleMatrix</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> v <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">makeScaleMatrix</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">.</span><span class=\"token function\">getPtr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">.</span><span class=\"token function\">getPtr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">.</span><span class=\"token function\">getPtr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">makeScaleMatrix</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">SET_ROW</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>    x<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token function\">SET_ROW</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token function\">SET_ROW</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token function\">SET_ROW</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">makeTranslationMatrix</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> v <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">makeTranslationMatrix</span><span class=\"token punctuation\">(</span> v<span class=\"token punctuation\">.</span><span class=\"token function\">getPtr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">.</span><span class=\"token function\">getPtr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">.</span><span class=\"token function\">getPtr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">void</span> ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">makeTranslationMatrix</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">SET_ROW</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token function\">SET_ROW</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token function\">SET_ROW</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>    <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token function\">SET_ROW</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>    x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">makeRotationMatrix</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> from<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> to <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">makeIdentityMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    ofQuaternion quat<span class=\"token punctuation\">;</span>\n    quat<span class=\"token punctuation\">.</span><span class=\"token function\">makeRotate</span><span class=\"token punctuation\">(</span>from<span class=\"token punctuation\">,</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setRotate</span><span class=\"token punctuation\">(</span>quat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">void</span> ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">makeRotationMatrix</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> angle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> axis <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">makeIdentityMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    ofQuaternion quat<span class=\"token punctuation\">;</span>\n    quat<span class=\"token punctuation\">.</span><span class=\"token function\">makeRotate</span><span class=\"token punctuation\">(</span> angle<span class=\"token punctuation\">,</span> axis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setRotate</span><span class=\"token punctuation\">(</span>quat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">makeRotationMatrix</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> angle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">makeIdentityMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    ofQuaternion quat<span class=\"token punctuation\">;</span>\n    quat<span class=\"token punctuation\">.</span><span class=\"token function\">makeRotate</span><span class=\"token punctuation\">(</span> angle<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setRotate</span><span class=\"token punctuation\">(</span>quat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">makeRotationMatrix</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofQuaternion<span class=\"token operator\">&amp;</span> quat <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">makeIdentityMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">setRotate</span><span class=\"token punctuation\">(</span>quat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">makeRotationMatrix</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">float</span> angle1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> axis1<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t   <span class=\"token keyword\">float</span> angle2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> axis2<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t   <span class=\"token keyword\">float</span> angle3<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> axis3<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">makeIdentityMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    ofQuaternion quat<span class=\"token punctuation\">;</span>\n    quat<span class=\"token punctuation\">.</span><span class=\"token function\">makeRotate</span><span class=\"token punctuation\">(</span>angle1<span class=\"token punctuation\">,</span> axis1<span class=\"token punctuation\">,</span>\n                    angle2<span class=\"token punctuation\">,</span> axis2<span class=\"token punctuation\">,</span>\n                    angle3<span class=\"token punctuation\">,</span> axis3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setRotate</span><span class=\"token punctuation\">(</span>quat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">makeFromMultiplicationOf</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofMatrix4x4<span class=\"token operator\">&amp;</span> lhs<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofMatrix4x4<span class=\"token operator\">&amp;</span> rhs <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>lhs<span class=\"token operator\">==</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">postMult</span><span class=\"token punctuation\">(</span>rhs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>rhs<span class=\"token operator\">==</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">preMult</span><span class=\"token punctuation\">(</span>lhs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// PRECONDITION: We assume neither &amp;lhs nor &amp;rhs == this</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// if it did, use preMult or postMult instead</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">INNER_PRODUCT</span><span class=\"token punctuation\">(</span>lhs<span class=\"token punctuation\">,</span> rhs<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">INNER_PRODUCT</span><span class=\"token punctuation\">(</span>lhs<span class=\"token punctuation\">,</span> rhs<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">INNER_PRODUCT</span><span class=\"token punctuation\">(</span>lhs<span class=\"token punctuation\">,</span> rhs<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">INNER_PRODUCT</span><span class=\"token punctuation\">(</span>lhs<span class=\"token punctuation\">,</span> rhs<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">INNER_PRODUCT</span><span class=\"token punctuation\">(</span>lhs<span class=\"token punctuation\">,</span> rhs<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">INNER_PRODUCT</span><span class=\"token punctuation\">(</span>lhs<span class=\"token punctuation\">,</span> rhs<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">INNER_PRODUCT</span><span class=\"token punctuation\">(</span>lhs<span class=\"token punctuation\">,</span> rhs<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">INNER_PRODUCT</span><span class=\"token punctuation\">(</span>lhs<span class=\"token punctuation\">,</span> rhs<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">INNER_PRODUCT</span><span class=\"token punctuation\">(</span>lhs<span class=\"token punctuation\">,</span> rhs<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">INNER_PRODUCT</span><span class=\"token punctuation\">(</span>lhs<span class=\"token punctuation\">,</span> rhs<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">INNER_PRODUCT</span><span class=\"token punctuation\">(</span>lhs<span class=\"token punctuation\">,</span> rhs<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">INNER_PRODUCT</span><span class=\"token punctuation\">(</span>lhs<span class=\"token punctuation\">,</span> rhs<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">INNER_PRODUCT</span><span class=\"token punctuation\">(</span>lhs<span class=\"token punctuation\">,</span> rhs<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">INNER_PRODUCT</span><span class=\"token punctuation\">(</span>lhs<span class=\"token punctuation\">,</span> rhs<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">INNER_PRODUCT</span><span class=\"token punctuation\">(</span>lhs<span class=\"token punctuation\">,</span> rhs<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">INNER_PRODUCT</span><span class=\"token punctuation\">(</span>lhs<span class=\"token punctuation\">,</span> rhs<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">preMult</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofMatrix4x4<span class=\"token operator\">&amp;</span> other <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// brute force method requiring a copy</span>\n    <span class=\"token comment\" spellcheck=\"true\">//ofMatrix4x4 tmp(other* *this);</span>\n    <span class=\"token comment\" spellcheck=\"true\">// *this = tmp;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// more efficient method just use a float[4] for temporary storage.</span>\n    <span class=\"token keyword\">float</span> t<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> col<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> col<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>col<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        t<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">INNER_PRODUCT</span><span class=\"token punctuation\">(</span> other<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> col <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        t<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">INNER_PRODUCT</span><span class=\"token punctuation\">(</span> other<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> col <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        t<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">INNER_PRODUCT</span><span class=\"token punctuation\">(</span> other<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> col <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        t<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">INNER_PRODUCT</span><span class=\"token punctuation\">(</span> other<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> col <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> t<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> t<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        _mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> t<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        _mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> t<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">postMult</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofMatrix4x4<span class=\"token operator\">&amp;</span> other <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// brute force method requiring a copy</span>\n    <span class=\"token comment\" spellcheck=\"true\">//ofMatrix4x4 tmp(*this * other);</span>\n    <span class=\"token comment\" spellcheck=\"true\">// *this = tmp;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// more efficient method just use a float[4] for temporary storage.</span>\n    <span class=\"token keyword\">float</span> t<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> row<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> row<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>row<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        t<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">INNER_PRODUCT</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> other<span class=\"token punctuation\">,</span> row<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        t<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">INNER_PRODUCT</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> other<span class=\"token punctuation\">,</span> row<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        t<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">INNER_PRODUCT</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> other<span class=\"token punctuation\">,</span> row<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        t<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">INNER_PRODUCT</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> other<span class=\"token punctuation\">,</span> row<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">SET_ROW</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">undef</span> INNER_PRODUCT</span>\n\n<span class=\"token comment\" spellcheck=\"true\">// orthoNormalize the 3x3 rotation matrix</span>\n<span class=\"token keyword\">void</span> ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">makeOrthoNormalOf</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofMatrix4x4<span class=\"token operator\">&amp;</span> rhs<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">float</span> x_colMag <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> y_colMag <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> z_colMag <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">equivalent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span>x_colMag<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">equivalent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span>x_colMag<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n\t\tx_colMag <span class=\"token operator\">=</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>x_colMag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> x_colMag<span class=\"token punctuation\">;</span>\n\t\t_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> x_colMag<span class=\"token punctuation\">;</span>\n\t\t_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> x_colMag<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span>\n    <span class=\"token punctuation\">{</span>\n\t\t_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">equivalent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span>y_colMag<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">equivalent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span>y_colMag<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n\t\ty_colMag <span class=\"token operator\">=</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>y_colMag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> y_colMag<span class=\"token punctuation\">;</span>\n\t\t_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> y_colMag<span class=\"token punctuation\">;</span>\n\t\t_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> y_colMag<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span>\n    <span class=\"token punctuation\">{</span>\n\t\t_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">equivalent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span>z_colMag<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">equivalent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span>z_colMag<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n\t\tz_colMag <span class=\"token operator\">=</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>z_colMag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> z_colMag<span class=\"token punctuation\">;</span>\n\t\t_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> z_colMag<span class=\"token punctuation\">;</span>\n\t\t_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> z_colMag<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span>\n    <span class=\"token punctuation\">{</span>\n\t\t_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    _mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/** 4x3 matrix invert, not right hand column is assumed to be 0,0,0,1. */</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">invert_4x3</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofMatrix4x4<span class=\"token operator\">&amp;</span> src<span class=\"token punctuation\">,</span> ofMatrix4x4 <span class=\"token operator\">&amp;</span> dst<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/** full 4x4 matrix invert. */</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">invert_4x4</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofMatrix4x4<span class=\"token operator\">&amp;</span> rhs<span class=\"token punctuation\">,</span> ofMatrix4x4 <span class=\"token operator\">&amp;</span> dst<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">bool</span> ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">makeInvertOf</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofMatrix4x4 <span class=\"token operator\">&amp;</span> rhs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">bool</span> is_4x3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0.0f</span> <span class=\"token operator\">&amp;&amp;</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0.0f</span> <span class=\"token operator\">&amp;&amp;</span>  rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0.0f</span> <span class=\"token operator\">&amp;&amp;</span> rhs<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> is_4x3 <span class=\"token operator\">?</span> <span class=\"token function\">invert_4x3</span><span class=\"token punctuation\">(</span>rhs<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span>  <span class=\"token function\">invert_4x4</span><span class=\"token punctuation\">(</span>rhs<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nofMatrix4x4 ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">getInverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span>\n<span class=\"token punctuation\">{</span>\n    ofMatrix4x4 inverse<span class=\"token punctuation\">;</span>\n    inverse<span class=\"token punctuation\">.</span><span class=\"token function\">makeInvertOf</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> inverse<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n\n\n<span class=\"token comment\" spellcheck=\"true\">/******************************************\n Matrix inversion technique:\n Given a matrix mat, we want to invert it.\n mat = [ r00 r01 r02 a\n r10 r11 r12 b\n r20 r21 r22 c\n tx  ty  tz  d ]\n We note that this matrix can be split into three matrices.\n mat = rot * trans * corr, where rot is rotation part, trans is translation part, and corr is the correction due to perspective (if any).\n rot = [ r00 r01 r02 0\n r10 r11 r12 0\n r20 r21 r22 0\n 0   0   0   1 ]\n trans = [ 1  0  0  0\n 0  1  0  0\n 0  0  1  0\n tx ty tz 1 ]\n corr = [ 1 0 0 px\n 0 1 0 py\n 0 0 1 pz\n 0 0 0 s ]\n where the elements of corr are obtained from linear combinations of the elements of rot, trans, and mat.\n So the inverse is mat' = (trans * corr)' * rot', where rot' must be computed the traditional way, which is easy since it is only a 3x3 matrix.\n This problem is simplified if [px py pz s] = [0 0 0 1], which will happen if mat was composed only of rotations, scales, and translations (which is common).  In this case, we can ignore corr entirely which saves on a lot of computations.\n ******************************************/</span>\n\n<span class=\"token keyword\">bool</span> <span class=\"token function\">invert_4x3</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofMatrix4x4<span class=\"token operator\">&amp;</span> src<span class=\"token punctuation\">,</span> ofMatrix4x4 <span class=\"token operator\">&amp;</span> dst <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>src<span class=\"token operator\">==</span><span class=\"token operator\">&amp;</span>dst<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n\t\tofMatrix4x4 <span class=\"token function\">tm</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">invert_4x3</span><span class=\"token punctuation\">(</span>tm<span class=\"token punctuation\">,</span>dst<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">float</span> r00<span class=\"token punctuation\">,</span> r01<span class=\"token punctuation\">,</span> r02<span class=\"token punctuation\">,</span>\n\tr10<span class=\"token punctuation\">,</span> r11<span class=\"token punctuation\">,</span> r12<span class=\"token punctuation\">,</span>\n\tr20<span class=\"token punctuation\">,</span> r21<span class=\"token punctuation\">,</span> r22<span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// Copy rotation components directly into registers for speed</span>\n    r00 <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> r01 <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> r02 <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    r10 <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> r11 <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> r12 <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    r20 <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> r21 <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> r22 <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// Partially compute inverse of rot</span>\n    dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r11<span class=\"token operator\">*</span>r22 <span class=\"token operator\">-</span> r12<span class=\"token operator\">*</span>r21<span class=\"token punctuation\">;</span>\n    dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r02<span class=\"token operator\">*</span>r21 <span class=\"token operator\">-</span> r01<span class=\"token operator\">*</span>r22<span class=\"token punctuation\">;</span>\n    dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r01<span class=\"token operator\">*</span>r12 <span class=\"token operator\">-</span> r02<span class=\"token operator\">*</span>r11<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// Compute determinant of rot from 3 elements just computed</span>\n    <span class=\"token keyword\">float</span> one_over_det <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>r00<span class=\"token operator\">*</span>dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> r10<span class=\"token operator\">*</span>dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> r20<span class=\"token operator\">*</span>dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    r00 <span class=\"token operator\">*</span><span class=\"token operator\">=</span> one_over_det<span class=\"token punctuation\">;</span> r10 <span class=\"token operator\">*</span><span class=\"token operator\">=</span> one_over_det<span class=\"token punctuation\">;</span> r20 <span class=\"token operator\">*</span><span class=\"token operator\">=</span> one_over_det<span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">// Saves on later computations</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// Finish computing inverse of rot</span>\n    dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span><span class=\"token operator\">=</span> one_over_det<span class=\"token punctuation\">;</span>\n    dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span><span class=\"token operator\">=</span> one_over_det<span class=\"token punctuation\">;</span>\n    dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span><span class=\"token operator\">=</span> one_over_det<span class=\"token punctuation\">;</span>\n    dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n    dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r12<span class=\"token operator\">*</span>r20 <span class=\"token operator\">-</span> r10<span class=\"token operator\">*</span>r22<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// Have already been divided by det</span>\n    dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r00<span class=\"token operator\">*</span>r22 <span class=\"token operator\">-</span> r02<span class=\"token operator\">*</span>r20<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// same</span>\n    dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r02<span class=\"token operator\">*</span>r10 <span class=\"token operator\">-</span> r00<span class=\"token operator\">*</span>r12<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// same</span>\n    dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n    dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r10<span class=\"token operator\">*</span>r21 <span class=\"token operator\">-</span> r11<span class=\"token operator\">*</span>r20<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// Have already been divided by det</span>\n    dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r01<span class=\"token operator\">*</span>r20 <span class=\"token operator\">-</span> r00<span class=\"token operator\">*</span>r21<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// same</span>\n    dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> r00<span class=\"token operator\">*</span>r11 <span class=\"token operator\">-</span> r01<span class=\"token operator\">*</span>r10<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// same</span>\n    dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n    dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// We no longer need the rxx or det variables anymore, so we can reuse them for whatever we want.  But we will still rename them for the sake of clarity.</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> d r22</span>\n    d  <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token function\">square</span><span class=\"token punctuation\">(</span>d<span class=\"token number\">-1.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1.0e-6</span> <span class=\"token punctuation\">)</span>  <span class=\"token comment\" spellcheck=\"true\">// Involves perspective, so we must</span>\n    <span class=\"token punctuation\">{</span>                       <span class=\"token comment\" spellcheck=\"true\">// compute the full inverse</span>\n\n        ofMatrix4x4 TPinv<span class=\"token punctuation\">;</span>\n        dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> px r00</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> py r01</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> pz r02</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> one_over_s  one_over_det</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> a  r10</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> b  r11</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> c  r12</span>\n\n        a  <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> b  <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> c  <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        px <span class=\"token operator\">=</span> dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>a <span class=\"token operator\">+</span> dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>b <span class=\"token operator\">+</span> dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>c<span class=\"token punctuation\">;</span>\n        py <span class=\"token operator\">=</span> dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>a <span class=\"token operator\">+</span> dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>b <span class=\"token operator\">+</span> dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>c<span class=\"token punctuation\">;</span>\n        pz <span class=\"token operator\">=</span> dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>a <span class=\"token operator\">+</span> dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>b <span class=\"token operator\">+</span> dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>c<span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">undef</span> a</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">undef</span> b</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">undef</span> c</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> tx r10</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> ty r11</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> tz r12</span>\n\n        tx <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> ty <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> tz <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        one_over_s  <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>d <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>tx<span class=\"token operator\">*</span>px <span class=\"token operator\">+</span> ty<span class=\"token operator\">*</span>py <span class=\"token operator\">+</span> tz<span class=\"token operator\">*</span>pz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        tx <span class=\"token operator\">*</span><span class=\"token operator\">=</span> one_over_s<span class=\"token punctuation\">;</span> ty <span class=\"token operator\">*</span><span class=\"token operator\">=</span> one_over_s<span class=\"token punctuation\">;</span> tz <span class=\"token operator\">*</span><span class=\"token operator\">=</span> one_over_s<span class=\"token punctuation\">;</span>  <span class=\"token comment\" spellcheck=\"true\">// Reduces number of calculations later on</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">// Compute inverse of trans*corr</span>\n        TPinv<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tx<span class=\"token operator\">*</span>px <span class=\"token operator\">+</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n        TPinv<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ty<span class=\"token operator\">*</span>px<span class=\"token punctuation\">;</span>\n        TPinv<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tz<span class=\"token operator\">*</span>px<span class=\"token punctuation\">;</span>\n        TPinv<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>px <span class=\"token operator\">*</span> one_over_s<span class=\"token punctuation\">;</span>\n        TPinv<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tx<span class=\"token operator\">*</span>py<span class=\"token punctuation\">;</span>\n        TPinv<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ty<span class=\"token operator\">*</span>py <span class=\"token operator\">+</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n        TPinv<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tz<span class=\"token operator\">*</span>py<span class=\"token punctuation\">;</span>\n        TPinv<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>py <span class=\"token operator\">*</span> one_over_s<span class=\"token punctuation\">;</span>\n        TPinv<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tx<span class=\"token operator\">*</span>pz<span class=\"token punctuation\">;</span>\n        TPinv<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> ty<span class=\"token operator\">*</span>pz<span class=\"token punctuation\">;</span>\n        TPinv<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tz<span class=\"token operator\">*</span>pz <span class=\"token operator\">+</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n        TPinv<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>pz <span class=\"token operator\">*</span> one_over_s<span class=\"token punctuation\">;</span>\n        TPinv<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>tx<span class=\"token punctuation\">;</span>\n        TPinv<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>ty<span class=\"token punctuation\">;</span>\n        TPinv<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>tz<span class=\"token punctuation\">;</span>\n        TPinv<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> one_over_s<span class=\"token punctuation\">;</span>\n\n        dst<span class=\"token punctuation\">.</span><span class=\"token function\">preMult</span><span class=\"token punctuation\">(</span>TPinv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// Finish computing full inverse of mat</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">undef</span> px</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">undef</span> py</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">undef</span> pz</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">undef</span> one_over_s</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">undef</span> d</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">else</span> <span class=\"token comment\" spellcheck=\"true\">// Rightmost column is [0; 0; 0; 1] so it can be ignored</span>\n    <span class=\"token punctuation\">{</span>\n        tx <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> ty <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> tz <span class=\"token operator\">=</span> src<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\" spellcheck=\"true\">// Compute translation components of mat'</span>\n        dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>tx<span class=\"token operator\">*</span>dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> ty<span class=\"token operator\">*</span>dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> tz<span class=\"token operator\">*</span>dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>tx<span class=\"token operator\">*</span>dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> ty<span class=\"token operator\">*</span>dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> tz<span class=\"token operator\">*</span>dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>tx<span class=\"token operator\">*</span>dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> ty<span class=\"token operator\">*</span>dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> tz<span class=\"token operator\">*</span>dst<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">undef</span> tx</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">undef</span> ty</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">undef</span> tz</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">template</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">T</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">inline</span> T <span class=\"token function\">SGL_ABS</span><span class=\"token punctuation\">(</span>T a<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">>=</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> a <span class=\"token operator\">:</span> <span class=\"token operator\">-</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> SGL_SWAP</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> SGL_SWAP(a,b,temp) ((temp)=(a),(a)=(b),(b)=(temp))</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token keyword\">bool</span> <span class=\"token function\">invert_4x4</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">const</span> ofMatrix4x4<span class=\"token operator\">&amp;</span> src<span class=\"token punctuation\">,</span> ofMatrix4x4<span class=\"token operator\">&amp;</span>dst <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>src<span class=\"token operator\">==</span><span class=\"token operator\">&amp;</span>dst<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tofMatrix4x4 <span class=\"token function\">tm</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token function\">invert_4x4</span><span class=\"token punctuation\">(</span>tm<span class=\"token punctuation\">,</span>dst<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> indxc<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> indxr<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> ipiv<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">,</span>l<span class=\"token punctuation\">,</span>ll<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> icol <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> irow <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">double</span> temp<span class=\"token punctuation\">,</span> pivinv<span class=\"token punctuation\">,</span> dum<span class=\"token punctuation\">,</span> big<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// copy in place this may be unnecessary</span>\n    dst <span class=\"token operator\">=</span> src<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> ipiv<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n\t\tbig<span class=\"token operator\">=</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ipiv<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>k<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ipiv<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token punctuation\">{</span>\n\t\t\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">SGL_ABS</span><span class=\"token punctuation\">(</span><span class=\"token function\">dst</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> big<span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">{</span>\n\t\t\t\t\t\t\tbig <span class=\"token operator\">=</span> <span class=\"token function\">SGL_ABS</span><span class=\"token punctuation\">(</span><span class=\"token function\">dst</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\tirow<span class=\"token operator\">=</span>j<span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t\ticol<span class=\"token operator\">=</span>k<span class=\"token punctuation\">;</span>\n\t\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ipiv<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token operator\">++</span><span class=\"token punctuation\">(</span>ipiv<span class=\"token punctuation\">[</span>icol<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>irow <span class=\"token operator\">!=</span> icol<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>l<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> l<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> l<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token function\">SGL_SWAP</span><span class=\"token punctuation\">(</span><span class=\"token function\">dst</span><span class=\"token punctuation\">(</span>irow<span class=\"token punctuation\">,</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t <span class=\"token function\">dst</span><span class=\"token punctuation\">(</span>icol<span class=\"token punctuation\">,</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tindxr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>irow<span class=\"token punctuation\">;</span>\n\t\tindxc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>icol<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">dst</span><span class=\"token punctuation\">(</span>icol<span class=\"token punctuation\">,</span>icol<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\t\tpivinv <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token operator\">/</span><span class=\"token function\">dst</span><span class=\"token punctuation\">(</span>icol<span class=\"token punctuation\">,</span>icol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">dst</span><span class=\"token punctuation\">(</span>icol<span class=\"token punctuation\">,</span>icol<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>l<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> l<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> l<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token function\">dst</span><span class=\"token punctuation\">(</span>icol<span class=\"token punctuation\">,</span>l<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span><span class=\"token operator\">=</span> pivinv<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>ll<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> ll<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> ll<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ll <span class=\"token operator\">!=</span> icol<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">{</span>\n\t\t\t\tdum<span class=\"token operator\">=</span><span class=\"token function\">dst</span><span class=\"token punctuation\">(</span>ll<span class=\"token punctuation\">,</span>icol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token function\">dst</span><span class=\"token punctuation\">(</span>ll<span class=\"token punctuation\">,</span>icol<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>l<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> l<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> l<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token function\">dst</span><span class=\"token punctuation\">(</span>ll<span class=\"token punctuation\">,</span>l<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">=</span> <span class=\"token function\">dst</span><span class=\"token punctuation\">(</span>icol<span class=\"token punctuation\">,</span>l<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>dum<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> lx<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> lx<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">--</span>lx<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>indxr<span class=\"token punctuation\">[</span>lx<span class=\"token number\">-1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> indxc<span class=\"token punctuation\">[</span>lx<span class=\"token number\">-1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>k<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token function\">SGL_SWAP</span><span class=\"token punctuation\">(</span><span class=\"token function\">dst</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span>indxr<span class=\"token punctuation\">[</span>lx<span class=\"token number\">-1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t <span class=\"token function\">dst</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span>indxc<span class=\"token punctuation\">[</span>lx<span class=\"token number\">-1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">makeOrthoMatrix</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> left<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> right<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t  <span class=\"token keyword\">double</span> bottom<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> top<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t  <span class=\"token keyword\">double</span> zNear<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> zFar<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// note transpose of ofMatrix4x4 wr.t OpenGL documentation, since the OSG use post multiplication rather than pre.</span>\n    <span class=\"token keyword\">double</span> tx <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>right<span class=\"token operator\">+</span>left<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>right<span class=\"token operator\">-</span>left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">double</span> ty <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>top<span class=\"token operator\">+</span>bottom<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>top<span class=\"token operator\">-</span>bottom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">double</span> tz <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>zFar<span class=\"token operator\">+</span>zNear<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>zFar<span class=\"token operator\">-</span>zNear<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">SET_ROW</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.0</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>right<span class=\"token operator\">-</span>left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>               <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>               <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token function\">SET_ROW</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>              <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">2.0</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>top<span class=\"token operator\">-</span>bottom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>               <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token function\">SET_ROW</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>              <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>               <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token operator\">-</span><span class=\"token number\">2.0</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>zFar<span class=\"token operator\">-</span>zNear<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token function\">SET_ROW</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>               tx<span class=\"token punctuation\">,</span>                ty<span class=\"token punctuation\">,</span>                 tz<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span> <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">getOrtho</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token operator\">&amp;</span> left<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span><span class=\"token operator\">&amp;</span> right<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t <span class=\"token keyword\">double</span><span class=\"token operator\">&amp;</span> bottom<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span><span class=\"token operator\">&amp;</span> top<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t <span class=\"token keyword\">double</span><span class=\"token operator\">&amp;</span> zNear<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span><span class=\"token operator\">&amp;</span> zFar<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token number\">0.0</span> <span class=\"token operator\">||</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token number\">0.0</span> <span class=\"token operator\">||</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token number\">0.0</span> <span class=\"token operator\">||</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n    zNear <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    zFar <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    left <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token operator\">+</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    right <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token operator\">-</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    bottom <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token operator\">+</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    top <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token operator\">-</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">void</span> ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">makeFrustumMatrix</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> left<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> right<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"token keyword\">double</span> bottom<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> top<span class=\"token punctuation\">,</span>\n\t\t\t\t\t\t\t\t\t\t<span class=\"token keyword\">double</span> zNear<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> zFar<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// note transpose of ofMatrix4x4 wr.t OpenGL documentation, since the OSG use post multiplication rather than pre.</span>\n    <span class=\"token keyword\">double</span> A <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>right<span class=\"token operator\">+</span>left<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>right<span class=\"token operator\">-</span>left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">double</span> B <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>top<span class=\"token operator\">+</span>bottom<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>top<span class=\"token operator\">-</span>bottom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">double</span> C <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>zFar<span class=\"token operator\">+</span>zNear<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>zFar<span class=\"token operator\">-</span>zNear<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">double</span> D <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">2.0</span><span class=\"token operator\">*</span>zFar<span class=\"token operator\">*</span>zNear<span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>zFar<span class=\"token operator\">-</span>zNear<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">SET_ROW</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.0</span><span class=\"token operator\">*</span>zNear<span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>right<span class=\"token operator\">-</span>left<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>                    <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token function\">SET_ROW</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>                    <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.0</span><span class=\"token operator\">*</span>zNear<span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>top<span class=\"token operator\">-</span>bottom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token function\">SET_ROW</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>                      A<span class=\"token punctuation\">,</span>                      B<span class=\"token punctuation\">,</span>   C<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1.0</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token function\">SET_ROW</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>                    <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>                    <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span>   D<span class=\"token punctuation\">,</span>  <span class=\"token number\">0.0</span> <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">getFrustum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token operator\">&amp;</span> left<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span><span class=\"token operator\">&amp;</span> right<span class=\"token punctuation\">,</span>\n                                       <span class=\"token keyword\">double</span><span class=\"token operator\">&amp;</span> bottom<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span><span class=\"token operator\">&amp;</span> top<span class=\"token punctuation\">,</span>\n                                       <span class=\"token keyword\">double</span><span class=\"token operator\">&amp;</span> zNear<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span><span class=\"token operator\">&amp;</span> zFar<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token number\">0.0</span> <span class=\"token operator\">||</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token number\">0.0</span> <span class=\"token operator\">||</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token operator\">-</span><span class=\"token number\">1.0</span> <span class=\"token operator\">||</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n\n    zNear <span class=\"token operator\">=</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    zFar <span class=\"token operator\">=</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token operator\">+</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    left <span class=\"token operator\">=</span> zNear <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    right <span class=\"token operator\">=</span> zNear <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token operator\">+</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    top <span class=\"token operator\">=</span> zNear <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0</span><span class=\"token operator\">+</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    bottom <span class=\"token operator\">=</span> zNear <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> _mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">void</span> ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">makePerspectiveMatrix</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> fovy<span class=\"token punctuation\">,</span><span class=\"token keyword\">double</span> aspectRatio<span class=\"token punctuation\">,</span>\n                                            <span class=\"token keyword\">double</span> zNear<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> zFar<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">// calculate the appropriate left, right etc.</span>\n    <span class=\"token keyword\">double</span> tan_fovy <span class=\"token operator\">=</span> <span class=\"token function\">tan</span><span class=\"token punctuation\">(</span>fovy<span class=\"token operator\">*</span><span class=\"token number\">0.5</span><span class=\"token operator\">*</span>DEG_TO_RAD<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">double</span> right  <span class=\"token operator\">=</span>  tan_fovy <span class=\"token operator\">*</span> aspectRatio <span class=\"token operator\">*</span> zNear<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">double</span> left   <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>right<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">double</span> top    <span class=\"token operator\">=</span>  tan_fovy <span class=\"token operator\">*</span> zNear<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">double</span> bottom <span class=\"token operator\">=</span>  <span class=\"token operator\">-</span>top<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">makeFrustumMatrix</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">,</span>right<span class=\"token punctuation\">,</span>bottom<span class=\"token punctuation\">,</span>top<span class=\"token punctuation\">,</span>zNear<span class=\"token punctuation\">,</span>zFar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">getPerspective</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token operator\">&amp;</span> fovy<span class=\"token punctuation\">,</span><span class=\"token keyword\">double</span><span class=\"token operator\">&amp;</span> aspectRatio<span class=\"token punctuation\">,</span>\n                                           <span class=\"token keyword\">double</span><span class=\"token operator\">&amp;</span> zNear<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span><span class=\"token operator\">&amp;</span> zFar<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">double</span> right  <span class=\"token operator\">=</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">double</span> left   <span class=\"token operator\">=</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">double</span> top    <span class=\"token operator\">=</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">double</span> bottom <span class=\"token operator\">=</span>  <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getFrustum</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">,</span>right<span class=\"token punctuation\">,</span>bottom<span class=\"token punctuation\">,</span>top<span class=\"token punctuation\">,</span>zNear<span class=\"token punctuation\">,</span>zFar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        fovy <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">atan</span><span class=\"token punctuation\">(</span>top<span class=\"token operator\">/</span>zNear<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token function\">atan</span><span class=\"token punctuation\">(</span>bottom<span class=\"token operator\">/</span>zNear<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>RAD_TO_DEG<span class=\"token punctuation\">;</span>\n        aspectRatio <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>right<span class=\"token operator\">-</span>left<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>top<span class=\"token operator\">-</span>bottom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">makeLookAtViewMatrix</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> eye<span class=\"token punctuation\">,</span><span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> center<span class=\"token punctuation\">,</span><span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> up<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tofVec3f zaxis <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>eye <span class=\"token operator\">-</span> center<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getNormalized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofVec3f xaxis <span class=\"token operator\">=</span> up<span class=\"token punctuation\">.</span><span class=\"token function\">getCrossed</span><span class=\"token punctuation\">(</span>zaxis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getNormalized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofVec3f yaxis <span class=\"token operator\">=</span> zaxis<span class=\"token punctuation\">.</span><span class=\"token function\">getCrossed</span><span class=\"token punctuation\">(</span>xaxis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>xaxis<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> yaxis<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> zaxis<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>xaxis<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> yaxis<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> zaxis<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>xaxis<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">,</span> yaxis<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">,</span> zaxis<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>xaxis<span class=\"token punctuation\">.</span><span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>eye<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>yaxis<span class=\"token punctuation\">.</span><span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>eye<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>zaxis<span class=\"token punctuation\">.</span><span class=\"token function\">dot</span><span class=\"token punctuation\">(</span>eye<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">makeLookAtMatrix</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> eye<span class=\"token punctuation\">,</span><span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> center<span class=\"token punctuation\">,</span><span class=\"token keyword\">const</span> ofVec3f<span class=\"token operator\">&amp;</span> up<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tofVec3f zaxis <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>eye <span class=\"token operator\">-</span> center<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getNormalized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofVec3f xaxis <span class=\"token operator\">=</span> up<span class=\"token punctuation\">.</span><span class=\"token function\">getCrossed</span><span class=\"token punctuation\">(</span>zaxis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getNormalized</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofVec3f yaxis <span class=\"token operator\">=</span> zaxis<span class=\"token punctuation\">.</span><span class=\"token function\">getCrossed</span><span class=\"token punctuation\">(</span>xaxis<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>xaxis<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> xaxis<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> xaxis<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>yaxis<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> yaxis<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> yaxis<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>zaxis<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> zaxis<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> zaxis<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>eye<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> eye<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> eye<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">getLookAt</span><span class=\"token punctuation\">(</span>ofVec3f<span class=\"token operator\">&amp;</span> eye<span class=\"token punctuation\">,</span>ofVec3f<span class=\"token operator\">&amp;</span> center<span class=\"token punctuation\">,</span>ofVec3f<span class=\"token operator\">&amp;</span> up<span class=\"token punctuation\">,</span><span class=\"token keyword\">float</span> lookDistance<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span>\n<span class=\"token punctuation\">{</span>\n    ofMatrix4x4 inv<span class=\"token punctuation\">;</span>\n    inv<span class=\"token punctuation\">.</span><span class=\"token function\">makeInvertOf</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    eye <span class=\"token operator\">=</span> <span class=\"token function\">ofVec3f</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>inv<span class=\"token punctuation\">;</span>\n    up <span class=\"token operator\">=</span> <span class=\"token function\">transform3x3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token function\">ofVec3f</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    center <span class=\"token operator\">=</span> <span class=\"token function\">transform3x3</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token function\">ofVec3f</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    center<span class=\"token punctuation\">.</span><span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    center <span class=\"token operator\">=</span> eye <span class=\"token operator\">+</span> center<span class=\"token operator\">*</span>lookDistance<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n\n<span class=\"token keyword\">typedef</span> ofQuaternion HVect<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">double</span> _HMatrix<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span>\n<span class=\"token punctuation\">{</span>\n\tofVec4f t<span class=\"token punctuation\">;</span>     <span class=\"token comment\" spellcheck=\"true\">// Translation Component;</span>\n\tofQuaternion q<span class=\"token punctuation\">;</span>           <span class=\"token comment\" spellcheck=\"true\">// Essential Rotation</span>\n\tofQuaternion u<span class=\"token punctuation\">;</span>          <span class=\"token comment\" spellcheck=\"true\">//Stretch rotation</span>\n\tHVect k<span class=\"token punctuation\">;</span>          <span class=\"token comment\" spellcheck=\"true\">//Sign of determinant</span>\n\t<span class=\"token keyword\">double</span> f<span class=\"token punctuation\">;</span>          <span class=\"token comment\" spellcheck=\"true\">// Sign of determinant</span>\n<span class=\"token punctuation\">}</span> _affineParts<span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">enum</span> QuatPart <span class=\"token punctuation\">{</span>X<span class=\"token punctuation\">,</span> Y<span class=\"token punctuation\">,</span> Z<span class=\"token punctuation\">,</span> W<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> SQRTHALF (0.7071067811865475244)</span>\n<span class=\"token keyword\">static</span> ofQuaternion <span class=\"token function\">qxtoz</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>SQRTHALF<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>SQRTHALF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> ofQuaternion <span class=\"token function\">qytoz</span><span class=\"token punctuation\">(</span>SQRTHALF<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>SQRTHALF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> ofQuaternion <span class=\"token function\">qppmm</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> ofQuaternion <span class=\"token function\">qpppp</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> ofQuaternion <span class=\"token function\">qmpmm</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> ofQuaternion <span class=\"token function\">qpppm</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> ofQuaternion <span class=\"token function\">q0001</span><span class=\"token punctuation\">(</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> ofQuaternion <span class=\"token function\">q1000</span><span class=\"token punctuation\">(</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/** Copy nxn matrix A to C using \"gets\" for assignment **/</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> matrixCopy(C, gets, A, n) {int i, j; for (i=0;i&lt;n;i++) for (j=0;j&lt;n;j++)\\\n    C[i][j] gets (A[i][j]);}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/** Copy transpose of nxn matrix A to C using \"gets\" for assignment **/</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> mat_tpose(AT,gets,A,n) {int i,j; for(i=0;i&lt;n;i++) for(j=0;j&lt;n;j++)\\\n    AT[i][j] gets (A[j][i]);}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/** Fill out 3x3 matrix to 4x4 **/</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> mat_pad(A) (A[W][X]=A[X][W]=A[W][Y]=A[Y][W]=A[W][Z]=A[Z][W]=0,A[W][W]=1)</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/** Assign nxn matrix C the element-wise combination of A and B using \"op\" **/</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> matBinop(C,gets,A,op,B,n) {int i,j; for(i=0;i&lt;n;i++) for(j=0;j&lt;n;j++)\\\n    C[i][j] gets (A[i][j]) op (B[i][j]);}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/** Copy nxn matrix A to C using \"gets\" for assignment **/</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> mat_copy(C,gets,A,n) {int i,j; for(i=0;i&lt;n;i++) for(j=0;j&lt;n;j++)\\\n    C[i][j] gets (A[i][j]);}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/** Multiply the upper left 3x3 parts of A and B to get AB **/</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">mat_mult</span><span class=\"token punctuation\">(</span>_HMatrix A<span class=\"token punctuation\">,</span> _HMatrix B<span class=\"token punctuation\">,</span> _HMatrix AB<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        AB<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> A<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>B<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> A<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>B<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> A<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>B<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">double</span> <span class=\"token function\">mat_norm</span><span class=\"token punctuation\">(</span>_HMatrix M<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> tpose<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">double</span> sum<span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">;</span>\n    max <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tpose<span class=\"token punctuation\">)</span> sum <span class=\"token operator\">=</span> <span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span>       sum <span class=\"token operator\">=</span> <span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>max<span class=\"token operator\">&lt;</span>sum<span class=\"token punctuation\">)</span> max <span class=\"token operator\">=</span> sum<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> max<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">double</span> <span class=\"token function\">norm_inf</span><span class=\"token punctuation\">(</span>_HMatrix M<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token function\">mat_norm</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">double</span> <span class=\"token function\">norm_one</span><span class=\"token punctuation\">(</span>_HMatrix M<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> <span class=\"token function\">mat_norm</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">static</span> _HMatrix mat_id <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/** Return index of column of M containing maximum abs entry, or -1 if M=0 **/</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">find_max_col</span><span class=\"token punctuation\">(</span>_HMatrix M<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">double</span> abs<span class=\"token punctuation\">,</span> max<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">;</span>\n    max <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span> col <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        abs <span class=\"token operator\">=</span> M<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>abs<span class=\"token operator\">&lt;</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span> abs <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>abs<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>abs<span class=\"token operator\">></span>max<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>max <span class=\"token operator\">=</span> abs<span class=\"token punctuation\">;</span> col <span class=\"token operator\">=</span> j<span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> col<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">vcross</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> <span class=\"token operator\">*</span>va<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> <span class=\"token operator\">*</span>vb<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> <span class=\"token operator\">*</span>v<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> va<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>vb<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> va<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>vb<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> va<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>vb<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> va<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>vb<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    v<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> va<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>vb<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> va<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>vb<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/** Return dot product of length 3 vectors va and vb **/</span>\n<span class=\"token keyword\">double</span> <span class=\"token function\">vdot</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> <span class=\"token operator\">*</span>va<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> <span class=\"token operator\">*</span>vb<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>va<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>vb<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> va<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>vb<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> va<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>vb<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/** Set MadjT to transpose of inverse of M times determinant of M **/</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">adjoint_transpose</span><span class=\"token punctuation\">(</span>_HMatrix M<span class=\"token punctuation\">,</span> _HMatrix MadjT<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token function\">vcross</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> M<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> MadjT<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">vcross</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> M<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> MadjT<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">vcross</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> M<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> MadjT<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/** Setup u for Household reflection to zero all v components but first **/</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">make_reflector</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> <span class=\"token operator\">*</span>v<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> <span class=\"token operator\">*</span>u<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">double</span> s <span class=\"token operator\">=</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token function\">vdot</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    u<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> u<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    u<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token operator\">-</span>s <span class=\"token operator\">:</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    s <span class=\"token operator\">=</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token number\">2.0</span><span class=\"token operator\">/</span><span class=\"token function\">vdot</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">,</span> u<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    u<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> u<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>s<span class=\"token punctuation\">;</span> u<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> u<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>s<span class=\"token punctuation\">;</span> u<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> u<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>s<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/** Apply Householder reflection represented by u to column vectors of M **/</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">reflect_cols</span><span class=\"token punctuation\">(</span>_HMatrix M<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> <span class=\"token operator\">*</span>u<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">double</span> s <span class=\"token operator\">=</span> u<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>M<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> u<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>M<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> u<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>M<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> M<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span><span class=\"token operator\">=</span> u<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>s<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/** Apply Householder reflection represented by u to row vectors of M **/</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">reflect_rows</span><span class=\"token punctuation\">(</span>_HMatrix M<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> <span class=\"token operator\">*</span>u<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">double</span> s <span class=\"token operator\">=</span> <span class=\"token function\">vdot</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">,</span> M<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> M<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span><span class=\"token operator\">=</span> u<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>s<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/** Find orthogonal factor Q of rank 1 (or less) M **/</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">do_rank1</span><span class=\"token punctuation\">(</span>_HMatrix M<span class=\"token punctuation\">,</span> _HMatrix Q<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">double</span> v1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> v2<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> col<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">mat_copy</span><span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">,</span><span class=\"token operator\">=</span><span class=\"token punctuation\">,</span>mat_id<span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">/* If rank(M) is 1, we should find a non-zero column in M */</span>\n    col <span class=\"token operator\">=</span> <span class=\"token function\">find_max_col</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>col<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">/* Rank is 0 */</span>\n    v1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> M<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> v1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> M<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> v1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> M<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">make_reflector</span><span class=\"token punctuation\">(</span>v1<span class=\"token punctuation\">,</span> v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token function\">reflect_cols</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">,</span> v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    v2<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> M<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> v2<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> M<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> v2<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> M<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">make_reflector</span><span class=\"token punctuation\">(</span>v2<span class=\"token punctuation\">,</span> v2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token function\">reflect_rows</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">,</span> v2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    s <span class=\"token operator\">=</span> M<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>s<span class=\"token operator\">&lt;</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span> Q<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">reflect_cols</span><span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">,</span> v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token function\">reflect_rows</span><span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">,</span> v2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/** Find orthogonal factor Q of rank 2 (or less) M using adjoint transpose **/</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">do_rank2</span><span class=\"token punctuation\">(</span>_HMatrix M<span class=\"token punctuation\">,</span> _HMatrix MadjT<span class=\"token punctuation\">,</span> _HMatrix Q<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">double</span> v1<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> v2<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">double</span> w<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> z<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> col<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">/* If rank(M) is 2, we should find a non-zero column in MadjT */</span>\n    col <span class=\"token operator\">=</span> <span class=\"token function\">find_max_col</span><span class=\"token punctuation\">(</span>MadjT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>col<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token function\">do_rank1</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">,</span> Q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span> <span class=\"token comment\" spellcheck=\"true\">/* Rank&lt;2 */</span>\n    v1<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> MadjT<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> v1<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> MadjT<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> v1<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> MadjT<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">make_reflector</span><span class=\"token punctuation\">(</span>v1<span class=\"token punctuation\">,</span> v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token function\">reflect_cols</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">,</span> v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">vcross</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> M<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> v2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">make_reflector</span><span class=\"token punctuation\">(</span>v2<span class=\"token punctuation\">,</span> v2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token function\">reflect_rows</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">,</span> v2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    w <span class=\"token operator\">=</span> M<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> x <span class=\"token operator\">=</span> M<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> y <span class=\"token operator\">=</span> M<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> z <span class=\"token operator\">=</span> M<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>w<span class=\"token operator\">*</span>z<span class=\"token operator\">></span>x<span class=\"token operator\">*</span>y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        c <span class=\"token operator\">=</span> z<span class=\"token operator\">+</span>w<span class=\"token punctuation\">;</span> s <span class=\"token operator\">=</span> y<span class=\"token operator\">-</span>x<span class=\"token punctuation\">;</span> d <span class=\"token operator\">=</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>c<span class=\"token operator\">*</span>c<span class=\"token operator\">+</span>s<span class=\"token operator\">*</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> c <span class=\"token operator\">=</span> c<span class=\"token operator\">/</span>d<span class=\"token punctuation\">;</span> s <span class=\"token operator\">=</span> s<span class=\"token operator\">/</span>d<span class=\"token punctuation\">;</span>\n        Q<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Q<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span> Q<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        c <span class=\"token operator\">=</span> z<span class=\"token operator\">-</span>w<span class=\"token punctuation\">;</span> s <span class=\"token operator\">=</span> y<span class=\"token operator\">+</span>x<span class=\"token punctuation\">;</span> d <span class=\"token operator\">=</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>c<span class=\"token operator\">*</span>c<span class=\"token operator\">+</span>s<span class=\"token operator\">*</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> c <span class=\"token operator\">=</span> c<span class=\"token operator\">/</span>d<span class=\"token punctuation\">;</span> s <span class=\"token operator\">=</span> s<span class=\"token operator\">/</span>d<span class=\"token punctuation\">;</span>\n        Q<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> Q<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Q<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> s<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    Q<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Q<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Q<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Q<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span> Q<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">reflect_cols</span><span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">,</span> v1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token function\">reflect_rows</span><span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">,</span> v2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/* Return product of quaternion q by scalar w. */</span>\nofQuaternion <span class=\"token function\">Qt_Scale</span><span class=\"token punctuation\">(</span>ofQuaternion q<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> w<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tofQuaternion qq<span class=\"token punctuation\">;</span>\n\tqq<span class=\"token punctuation\">.</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>w<span class=\"token punctuation\">;</span>\n\tqq<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>w<span class=\"token punctuation\">;</span>\n\tqq<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>w<span class=\"token punctuation\">;</span>\n\tqq<span class=\"token punctuation\">.</span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>w<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>qq<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/* Construct a unit quaternion from rotation matrix.  Assumes matrix is\n* used to multiply column vector on the left: vnew = mat vold.  Works\n* correctly for right-handed coordinate system and right-handed rotations.\n* Translation and perspective components ignored. */</span>\n\nofQuaternion <span class=\"token function\">quatFromMatrix</span><span class=\"token punctuation\">(</span>_HMatrix mat<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n   <span class=\"token comment\" spellcheck=\"true\">/* This algorithm avoids near-zero divides by looking for a large component\n\t* - first w, then x, y, or z.  When the trace is greater than zero,\n\t* |w| is greater than 1/2, which is as small as a largest component can be.\n\t* Otherwise, the largest diagonal entry corresponds to the largest of |x|,\n\t* |y|, or |z|, one of which must be larger than |w|, and at least 1/2. */</span>\n   ofQuaternion qu <span class=\"token operator\">=</span> q0001<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">double</span> tr<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">;</span>\n\n   tr <span class=\"token operator\">=</span> mat<span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> mat<span class=\"token punctuation\">[</span>Y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>Y<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span> mat<span class=\"token punctuation\">[</span>Z<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>Z<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tr <span class=\"token operator\">>=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span>\n   <span class=\"token punctuation\">{</span>\n\t   s <span class=\"token operator\">=</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>tr <span class=\"token operator\">+</span> mat<span class=\"token punctuation\">[</span>W<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>W<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t   qu<span class=\"token punctuation\">.</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> s<span class=\"token operator\">*</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n\t   s <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span> <span class=\"token operator\">/</span> s<span class=\"token punctuation\">;</span>\n\t   qu<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>mat<span class=\"token punctuation\">[</span>Z<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>Y<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> mat<span class=\"token punctuation\">[</span>Y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>Z<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> s<span class=\"token punctuation\">;</span>\n\t   qu<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>mat<span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>Z<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> mat<span class=\"token punctuation\">[</span>Z<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> s<span class=\"token punctuation\">;</span>\n\t   qu<span class=\"token punctuation\">.</span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>mat<span class=\"token punctuation\">[</span>Y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> mat<span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>Y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> s<span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n   <span class=\"token keyword\">else</span>\n   <span class=\"token punctuation\">{</span>\n\t   <span class=\"token keyword\">int</span> h <span class=\"token operator\">=</span> X<span class=\"token punctuation\">;</span>\n\t   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mat<span class=\"token punctuation\">[</span>Y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>Y<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> mat<span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> h <span class=\"token operator\">=</span> Y<span class=\"token punctuation\">;</span>\n\t   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mat<span class=\"token punctuation\">[</span>Z<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>Z<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> mat<span class=\"token punctuation\">[</span>h<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>h<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> h <span class=\"token operator\">=</span> Z<span class=\"token punctuation\">;</span>\n\t   <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> caseMacro(i,j,k,I,J,K) \\\n\t\t   case I:\\\n\t\t\t\t  s = sqrt( (mat[I][I] - (mat[J][J]+mat[K][K])) + mat[W][W] );\\\n\t\t   qu.i() = s*0.5;\\\n\t\t   s = 0.5 / s;\\\n\t\t   qu.j() = (mat[I][J] + mat[J][I]) * s;\\\n\t\t   qu.k() = (mat[K][I] + mat[I][K]) * s;\\\n\t\t   qu.w() = (mat[K][J] - mat[J][K]) * s;\\\n\t\t   break</span>\n\t\t   <span class=\"token function\">caseMacro</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">,</span>X<span class=\"token punctuation\">,</span>Y<span class=\"token punctuation\">,</span>Z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t   <span class=\"token function\">caseMacro</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>Y<span class=\"token punctuation\">,</span>Z<span class=\"token punctuation\">,</span>X<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t   <span class=\"token function\">caseMacro</span><span class=\"token punctuation\">(</span>z<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>Z<span class=\"token punctuation\">,</span>X<span class=\"token punctuation\">,</span>Y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t   <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mat<span class=\"token punctuation\">[</span>W<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>W<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span> qu <span class=\"token operator\">=</span> <span class=\"token function\">Qt_Scale</span><span class=\"token punctuation\">(</span>qu<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>mat<span class=\"token punctuation\">[</span>W<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>W<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>qu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">/******* Polar Decomposition *******/</span>\n<span class=\"token comment\" spellcheck=\"true\">/* Polar Decomposition of 3x3 matrix in 4x4,\n * M = QS.  See Nicholas Higham and Robert S. Schreiber,\n * Fast Polar Decomposition of An Arbitrary Matrix,\n * Technical Report 88-942, October 1988,\n * Department of Computer Science, Cornell University.\n */</span>\n\n<span class=\"token keyword\">double</span> <span class=\"token function\">polarDecomp</span><span class=\"token punctuation\">(</span> _HMatrix M<span class=\"token punctuation\">,</span> _HMatrix Q<span class=\"token punctuation\">,</span> _HMatrix S<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> TOL 1.0e-6</span>\n\t_HMatrix Mk<span class=\"token punctuation\">,</span> MadjTk<span class=\"token punctuation\">,</span> Ek<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">double</span> det<span class=\"token punctuation\">,</span> M_one<span class=\"token punctuation\">,</span> M_inf<span class=\"token punctuation\">,</span> MadjT_one<span class=\"token punctuation\">,</span> MadjT_inf<span class=\"token punctuation\">,</span> E_one<span class=\"token punctuation\">,</span> gamma<span class=\"token punctuation\">,</span> g1<span class=\"token punctuation\">,</span> g2<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">mat_tpose</span><span class=\"token punctuation\">(</span>Mk<span class=\"token punctuation\">,</span><span class=\"token operator\">=</span><span class=\"token punctuation\">,</span>M<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tM_one <span class=\"token operator\">=</span> <span class=\"token function\">norm_one</span><span class=\"token punctuation\">(</span>Mk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  M_inf <span class=\"token operator\">=</span> <span class=\"token function\">norm_inf</span><span class=\"token punctuation\">(</span>Mk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">do</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">adjoint_transpose</span><span class=\"token punctuation\">(</span>Mk<span class=\"token punctuation\">,</span> MadjTk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tdet <span class=\"token operator\">=</span> <span class=\"token function\">vdot</span><span class=\"token punctuation\">(</span>Mk<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> MadjTk<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>det<span class=\"token operator\">==</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">do_rank2</span><span class=\"token punctuation\">(</span>Mk<span class=\"token punctuation\">,</span> MadjTk<span class=\"token punctuation\">,</span> Mk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\tMadjT_one <span class=\"token operator\">=</span> <span class=\"token function\">norm_one</span><span class=\"token punctuation\">(</span>MadjTk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tMadjT_inf <span class=\"token operator\">=</span> <span class=\"token function\">norm_inf</span><span class=\"token punctuation\">(</span>MadjTk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tgamma <span class=\"token operator\">=</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>MadjT_one<span class=\"token operator\">*</span>MadjT_inf<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>M_one<span class=\"token operator\">*</span>M_inf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>det<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tg1 <span class=\"token operator\">=</span> gamma<span class=\"token operator\">*</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n\t\tg2 <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>gamma<span class=\"token operator\">*</span>det<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">matrixCopy</span><span class=\"token punctuation\">(</span>Ek<span class=\"token punctuation\">,</span><span class=\"token operator\">=</span><span class=\"token punctuation\">,</span>Mk<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">matBinop</span><span class=\"token punctuation\">(</span>Mk<span class=\"token punctuation\">,</span><span class=\"token operator\">=</span><span class=\"token punctuation\">,</span>g1<span class=\"token operator\">*</span>Mk<span class=\"token punctuation\">,</span><span class=\"token operator\">+</span><span class=\"token punctuation\">,</span>g2<span class=\"token operator\">*</span>MadjTk<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">mat_copy</span><span class=\"token punctuation\">(</span>Ek<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token operator\">=</span><span class=\"token punctuation\">,</span>Mk<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tE_one <span class=\"token operator\">=</span> <span class=\"token function\">norm_one</span><span class=\"token punctuation\">(</span>Ek<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tM_one <span class=\"token operator\">=</span> <span class=\"token function\">norm_one</span><span class=\"token punctuation\">(</span>Mk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tM_inf <span class=\"token operator\">=</span> <span class=\"token function\">norm_inf</span><span class=\"token punctuation\">(</span>Mk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>E_one<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>M_one<span class=\"token operator\">*</span>TOL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">mat_tpose</span><span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">,</span><span class=\"token operator\">=</span><span class=\"token punctuation\">,</span>Mk<span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token function\">mat_pad</span><span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">mat_mult</span><span class=\"token punctuation\">(</span>Mk<span class=\"token punctuation\">,</span> M<span class=\"token punctuation\">,</span> S<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token function\">mat_pad</span><span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span>i<span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t\tS<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> S<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>S<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>det<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/******* Spectral Decomposition *******/</span>\n<span class=\"token comment\" spellcheck=\"true\">/* Compute the spectral decomposition of symmetric positive semi-definite S.\n* Returns rotation in U and scale factors in result, so that if K is a diagonal\n* matrix of the scale factors, then S = U K (U transpose). Uses Jacobi method.\n* See Gene H. Golub and Charles F. Van Loan. Matrix Computations. Hopkins 1983.\n*/</span>\nHVect <span class=\"token function\">spectDecomp</span><span class=\"token punctuation\">(</span>_HMatrix S<span class=\"token punctuation\">,</span> _HMatrix U<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n   HVect kv<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">double</span> Diag<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>OffD<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">/* OffD is off-diag (by omitted index) */</span>\n   <span class=\"token keyword\">double</span> g<span class=\"token punctuation\">,</span>h<span class=\"token punctuation\">,</span>fabsh<span class=\"token punctuation\">,</span>fabsOffDi<span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">,</span>theta<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">,</span>tau<span class=\"token punctuation\">,</span>ta<span class=\"token punctuation\">,</span>OffDq<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">static</span> <span class=\"token keyword\">char</span> nxt<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>Y<span class=\"token punctuation\">,</span>Z<span class=\"token punctuation\">,</span>X<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">int</span> sweep<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">;</span>\n   <span class=\"token function\">mat_copy</span><span class=\"token punctuation\">(</span>U<span class=\"token punctuation\">,</span><span class=\"token operator\">=</span><span class=\"token punctuation\">,</span>mat_id<span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   Diag<span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> S<span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> Diag<span class=\"token punctuation\">[</span>Y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> S<span class=\"token punctuation\">[</span>Y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>Y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> Diag<span class=\"token punctuation\">[</span>Z<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> S<span class=\"token punctuation\">[</span>Z<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>Z<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n   OffD<span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> S<span class=\"token punctuation\">[</span>Y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>Z<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> OffD<span class=\"token punctuation\">[</span>Y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> S<span class=\"token punctuation\">[</span>Z<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> OffD<span class=\"token punctuation\">[</span>Z<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> S<span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>Y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>sweep<span class=\"token operator\">=</span><span class=\"token number\">20</span><span class=\"token punctuation\">;</span> sweep<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> sweep<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t   <span class=\"token keyword\">double</span> sm <span class=\"token operator\">=</span> <span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>OffD<span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>OffD<span class=\"token punctuation\">[</span>Y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>OffD<span class=\"token punctuation\">[</span>Z<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sm<span class=\"token operator\">==</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span>Z<span class=\"token punctuation\">;</span> i<span class=\"token operator\">>=</span>X<span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t   <span class=\"token keyword\">int</span> p <span class=\"token operator\">=</span> nxt<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">int</span> q <span class=\"token operator\">=</span> nxt<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t   fabsOffDi <span class=\"token operator\">=</span> <span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>OffD<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t   g <span class=\"token operator\">=</span> <span class=\"token number\">100.0</span><span class=\"token operator\">*</span>fabsOffDi<span class=\"token punctuation\">;</span>\n\t\t   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fabsOffDi<span class=\"token operator\">></span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t   h <span class=\"token operator\">=</span> Diag<span class=\"token punctuation\">[</span>q<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> Diag<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t   fabsh <span class=\"token operator\">=</span> <span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>fabsh<span class=\"token operator\">+</span>g<span class=\"token operator\">==</span>fabsh<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t   t <span class=\"token operator\">=</span> OffD<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">/</span>h<span class=\"token punctuation\">;</span>\n\t\t\t   <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t   theta <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span><span class=\"token operator\">*</span>h<span class=\"token operator\">/</span>OffD<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t   t <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token operator\">/</span><span class=\"token punctuation\">(</span><span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>theta<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>theta<span class=\"token operator\">*</span>theta<span class=\"token operator\">+</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>theta<span class=\"token operator\">&lt;</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span> t <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>t<span class=\"token punctuation\">;</span>\n\t\t\t   <span class=\"token punctuation\">}</span>\n\t\t\t   c <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token operator\">/</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>t<span class=\"token operator\">*</span>t<span class=\"token operator\">+</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> s <span class=\"token operator\">=</span> t<span class=\"token operator\">*</span>c<span class=\"token punctuation\">;</span>\n\t\t\t   tau <span class=\"token operator\">=</span> s<span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>c<span class=\"token operator\">+</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t   ta <span class=\"token operator\">=</span> t<span class=\"token operator\">*</span>OffD<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> OffD<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n\t\t\t   Diag<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span><span class=\"token operator\">=</span> ta<span class=\"token punctuation\">;</span> Diag<span class=\"token punctuation\">[</span>q<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span><span class=\"token operator\">=</span> ta<span class=\"token punctuation\">;</span>\n\t\t\t   OffDq <span class=\"token operator\">=</span> OffD<span class=\"token punctuation\">[</span>q<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t   OffD<span class=\"token punctuation\">[</span>q<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span><span class=\"token operator\">=</span> s<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>OffD<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> tau<span class=\"token operator\">*</span>OffD<span class=\"token punctuation\">[</span>q<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t   OffD<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span><span class=\"token operator\">=</span> s<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>OffDq   <span class=\"token operator\">-</span> tau<span class=\"token operator\">*</span>OffD<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span>Z<span class=\"token punctuation\">;</span> j<span class=\"token operator\">>=</span>X<span class=\"token punctuation\">;</span> j<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t   a <span class=\"token operator\">=</span> U<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> b <span class=\"token operator\">=</span> U<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>q<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t   U<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span><span class=\"token operator\">=</span> s<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>b <span class=\"token operator\">+</span> tau<span class=\"token operator\">*</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t   U<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>q<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span><span class=\"token operator\">=</span> s<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">-</span> tau<span class=\"token operator\">*</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t   <span class=\"token punctuation\">}</span>\n\t\t   <span class=\"token punctuation\">}</span>\n\t   <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span>\n   kv<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> Diag<span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> kv<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> Diag<span class=\"token punctuation\">[</span>Y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> kv<span class=\"token punctuation\">.</span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> Diag<span class=\"token punctuation\">[</span>Z<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> kv<span class=\"token punctuation\">.</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>kv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/* Return conjugate of quaternion. */</span>\nofQuaternion <span class=\"token function\">Qt_Conj</span><span class=\"token punctuation\">(</span>ofQuaternion q<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tofQuaternion qq<span class=\"token punctuation\">;</span>\n    qq<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> qq<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> qq<span class=\"token punctuation\">.</span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> qq<span class=\"token punctuation\">.</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>qq<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/* Return quaternion product qL * qR.  Note: order is important!\n * To combine rotations, use the product Mul(qSecond, qFirst),\n * which gives the effect of rotating by qFirst then qSecond. */</span>\nofQuaternion <span class=\"token function\">Qt_Mul</span><span class=\"token punctuation\">(</span>ofQuaternion qL<span class=\"token punctuation\">,</span> ofQuaternion qR<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tofQuaternion qq<span class=\"token punctuation\">;</span>\n    qq<span class=\"token punctuation\">.</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> qL<span class=\"token punctuation\">.</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>qR<span class=\"token punctuation\">.</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> qL<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>qR<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> qL<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>qR<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> qL<span class=\"token punctuation\">.</span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>qR<span class=\"token punctuation\">.</span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    qq<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> qL<span class=\"token punctuation\">.</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>qR<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> qL<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>qR<span class=\"token punctuation\">.</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> qL<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>qR<span class=\"token punctuation\">.</span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> qL<span class=\"token punctuation\">.</span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>qR<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    qq<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> qL<span class=\"token punctuation\">.</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>qR<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> qL<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>qR<span class=\"token punctuation\">.</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> qL<span class=\"token punctuation\">.</span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>qR<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> qL<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>qR<span class=\"token punctuation\">.</span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    qq<span class=\"token punctuation\">.</span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> qL<span class=\"token punctuation\">.</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>qR<span class=\"token punctuation\">.</span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> qL<span class=\"token punctuation\">.</span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>qR<span class=\"token punctuation\">.</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> qL<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>qR<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> qL<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>qR<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>qq<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/* Construct a (possibly non-unit) quaternion from real components. */</span>\nofQuaternion <span class=\"token function\">Qt_</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span> w<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\tofQuaternion qq<span class=\"token punctuation\">;</span>\n    qq<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span> qq<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span> qq<span class=\"token punctuation\">.</span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> z<span class=\"token punctuation\">;</span> qq<span class=\"token punctuation\">.</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> w<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>qq<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/******* Spectral Axis Adjustment *******/</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/* Given a unit quaternion, q, and a scale vector, k, find a unit quaternion, p,\n * which permutes the axes and turns freely in the plane of duplicate scale\n * factors, such that q p has the largest possible w component, i.e. the\n * smallest possible angle. Permutes k's components to go with q p instead of q.\n * See Ken Shoemake and Tom Duff. Matrix Animation and Polar Decomposition.\n * Proceedings of Graphics Interface 1992. Details on p. 262-263.\n */</span>\nofQuaternion <span class=\"token function\">snuggle</span><span class=\"token punctuation\">(</span>ofQuaternion q<span class=\"token punctuation\">,</span> HVect <span class=\"token operator\">*</span>k<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> sgn(n,v)    ((n)?-(v):(v))</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> swap(a,i,j) {a[3]=a[i]; a[i]=a[j]; a[j]=a[3];}</span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> cycle(a,p)  if (p) {a[3]=a[0]; a[0]=a[1]; a[1]=a[2]; a[2]=a[3];}\\\n\telse   {a[3]=a[2]; a[2]=a[1]; a[1]=a[0]; a[0]=a[3];}</span>\n\n\tofQuaternion p <span class=\"token operator\">=</span> q0001<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">double</span> ka<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> turn <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\tka<span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> k<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> ka<span class=\"token punctuation\">[</span>Y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> k<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> ka<span class=\"token punctuation\">[</span>Z<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> k<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ka<span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>ka<span class=\"token punctuation\">[</span>Y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ka<span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>ka<span class=\"token punctuation\">[</span>Z<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t\t\tturn <span class=\"token operator\">=</span> W<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">else</span> turn <span class=\"token operator\">=</span> Z<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ka<span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>ka<span class=\"token punctuation\">[</span>Z<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t\t\tturn <span class=\"token operator\">=</span> Y<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ka<span class=\"token punctuation\">[</span>Y<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>ka<span class=\"token punctuation\">[</span>Z<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t\t\tturn <span class=\"token operator\">=</span> X<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>turn<span class=\"token operator\">>=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tofQuaternion qtoz<span class=\"token punctuation\">,</span> qp<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span>  win<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">double</span> mag<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>turn<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">default</span><span class=\"token operator\">:</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token function\">Qt_Conj</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> X<span class=\"token operator\">:</span> q <span class=\"token operator\">=</span> <span class=\"token function\">Qt_Mul</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">,</span> qtoz <span class=\"token operator\">=</span> qxtoz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>ka<span class=\"token punctuation\">,</span>X<span class=\"token punctuation\">,</span>Z<span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> Y<span class=\"token operator\">:</span> q <span class=\"token operator\">=</span> <span class=\"token function\">Qt_Mul</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">,</span> qtoz <span class=\"token operator\">=</span> qytoz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>ka<span class=\"token punctuation\">,</span>Y<span class=\"token punctuation\">,</span>Z<span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> Z<span class=\"token operator\">:</span> qtoz <span class=\"token operator\">=</span> q0001<span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tq <span class=\"token operator\">=</span> <span class=\"token function\">Qt_Conj</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmag<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n\t\tmag<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tmag<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">)</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">bool</span> neg<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\tneg<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>mag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>neg<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> mag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>mag<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mag<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span>mag<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mag<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span>mag<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t\t\t\twin <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">else</span> win <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mag<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span>mag<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> win <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">else</span> win <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>win<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>neg<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> p <span class=\"token operator\">=</span> q1000<span class=\"token punctuation\">;</span> <span class=\"token keyword\">else</span> p <span class=\"token operator\">=</span> q0001<span class=\"token punctuation\">;</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>neg<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> p <span class=\"token operator\">=</span> qppmm<span class=\"token punctuation\">;</span> <span class=\"token keyword\">else</span> p <span class=\"token operator\">=</span> qpppp<span class=\"token punctuation\">;</span> <span class=\"token function\">cycle</span><span class=\"token punctuation\">(</span>ka<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">case</span> <span class=\"token number\">2</span><span class=\"token operator\">:</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>neg<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> p <span class=\"token operator\">=</span> qmpmm<span class=\"token punctuation\">;</span> <span class=\"token keyword\">else</span> p <span class=\"token operator\">=</span> qpppm<span class=\"token punctuation\">;</span> <span class=\"token function\">cycle</span><span class=\"token punctuation\">(</span>ka<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\tqp <span class=\"token operator\">=</span> <span class=\"token function\">Qt_Mul</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tt <span class=\"token operator\">=</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>mag<span class=\"token punctuation\">[</span>win<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tp <span class=\"token operator\">=</span> <span class=\"token function\">Qt_Mul</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token function\">Qt_</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span>qp<span class=\"token punctuation\">.</span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>t<span class=\"token punctuation\">,</span>qp<span class=\"token punctuation\">.</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tp <span class=\"token operator\">=</span> <span class=\"token function\">Qt_Mul</span><span class=\"token punctuation\">(</span>qtoz<span class=\"token punctuation\">,</span> <span class=\"token function\">Qt_Conj</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">double</span> qa<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> pa<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> lo<span class=\"token punctuation\">,</span> hi<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span> par <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">bool</span> neg<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">double</span> all<span class=\"token punctuation\">,</span> big<span class=\"token punctuation\">,</span> two<span class=\"token punctuation\">;</span>\n\t\tqa<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> qa<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> qa<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> qa<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\tpa<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">;</span>\n\t\t\tneg<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>qa<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>neg<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> qa<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>qa<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\tpar <span class=\"token operator\">^</span><span class=\"token operator\">=</span> neg<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">/* Find two largest components, indices in hi and lo */</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>qa<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span>qa<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> lo <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">else</span> lo <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>qa<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span>qa<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> hi <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">else</span> hi <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>qa<span class=\"token punctuation\">[</span>lo<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>qa<span class=\"token punctuation\">[</span>hi<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>qa<span class=\"token punctuation\">[</span>lo<span class=\"token operator\">^</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span>qa<span class=\"token punctuation\">[</span>hi<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\thi <span class=\"token operator\">=</span> lo<span class=\"token punctuation\">;</span> lo <span class=\"token operator\">^</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t\thi <span class=\"token operator\">^</span><span class=\"token operator\">=</span> lo<span class=\"token punctuation\">;</span> lo <span class=\"token operator\">^</span><span class=\"token operator\">=</span> hi<span class=\"token punctuation\">;</span> hi <span class=\"token operator\">^</span><span class=\"token operator\">=</span> lo<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>qa<span class=\"token punctuation\">[</span>hi<span class=\"token operator\">^</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span>qa<span class=\"token punctuation\">[</span>lo<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> lo <span class=\"token operator\">=</span> hi<span class=\"token operator\">^</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\tall <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>qa<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>qa<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>qa<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>qa<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span>\n\t\ttwo <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>qa<span class=\"token punctuation\">[</span>hi<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>qa<span class=\"token punctuation\">[</span>lo<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>SQRTHALF<span class=\"token punctuation\">;</span>\n\t\tbig <span class=\"token operator\">=</span> qa<span class=\"token punctuation\">[</span>hi<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>all<span class=\"token operator\">></span>two<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>all<span class=\"token operator\">></span>big<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token comment\" spellcheck=\"true\">/*all*/</span>\n\t\t\t\t<span class=\"token punctuation\">{</span><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span> <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> pa<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">sgn</span><span class=\"token punctuation\">(</span>neg<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token function\">cycle</span><span class=\"token punctuation\">(</span>ka<span class=\"token punctuation\">,</span>par<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span><span class=\"token comment\" spellcheck=\"true\">/*big*/</span> pa<span class=\"token punctuation\">[</span>hi<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">sgn</span><span class=\"token punctuation\">(</span>neg<span class=\"token punctuation\">[</span>hi<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>two<span class=\"token operator\">></span>big<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\" spellcheck=\"true\">/*two*/</span>\n\t\t\t\tpa<span class=\"token punctuation\">[</span>hi<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">sgn</span><span class=\"token punctuation\">(</span>neg<span class=\"token punctuation\">[</span>hi<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>SQRTHALF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\tpa<span class=\"token punctuation\">[</span>lo<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">sgn</span><span class=\"token punctuation\">(</span>neg<span class=\"token punctuation\">[</span>lo<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> SQRTHALF<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lo<span class=\"token operator\">></span>hi<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t\thi <span class=\"token operator\">^</span><span class=\"token operator\">=</span> lo<span class=\"token punctuation\">;</span> lo <span class=\"token operator\">^</span><span class=\"token operator\">=</span> hi<span class=\"token punctuation\">;</span> hi <span class=\"token operator\">^</span><span class=\"token operator\">=</span> lo<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hi<span class=\"token operator\">==</span>W<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\t\thi <span class=\"token operator\">=</span> <span class=\"token string\">\"\\001\\002\\000\"</span><span class=\"token punctuation\">[</span>lo<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tlo <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token operator\">-</span>hi<span class=\"token operator\">-</span>lo<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t<span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>ka<span class=\"token punctuation\">,</span>hi<span class=\"token punctuation\">,</span>lo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span><span class=\"token comment\" spellcheck=\"true\">/*big*/</span>\n\t\t\t\tpa<span class=\"token punctuation\">[</span>hi<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">sgn</span><span class=\"token punctuation\">(</span>neg<span class=\"token punctuation\">[</span>hi<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\tp<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>pa<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>pa<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>pa<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> pa<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tk<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> ka<span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> k<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> ka<span class=\"token punctuation\">[</span>Y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> k<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> ka<span class=\"token punctuation\">[</span>Z<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/******* Decompose Affine Matrix *******/</span>\n\n<span class=\"token comment\" spellcheck=\"true\">/* Decompose 4x4 affine matrix A as TFRUK(U transpose), where t contains the\n * translation components, q contains the rotation R, u contains U, k contains\n * scale factors, and f contains the sign of the determinant.\n * Assumes A transforms column vectors in right-handed coordinates.\n * See Ken Shoemake and Tom Duff. Matrix Animation and Polar Decomposition.\n * Proceedings of Graphics Interface 1992.\n */</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">decompAffine</span><span class=\"token punctuation\">(</span>_HMatrix A<span class=\"token punctuation\">,</span> _affineParts <span class=\"token operator\">*</span> parts<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t_HMatrix Q<span class=\"token punctuation\">,</span> S<span class=\"token punctuation\">,</span> U<span class=\"token punctuation\">;</span>\n\tofQuaternion p<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//Translation component.</span>\n\tparts<span class=\"token operator\">-</span><span class=\"token operator\">></span>t <span class=\"token operator\">=</span> <span class=\"token function\">ofVec4f</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>W<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> A<span class=\"token punctuation\">[</span>Y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>W<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> A<span class=\"token punctuation\">[</span>Z<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>W<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">double</span> det <span class=\"token operator\">=</span> <span class=\"token function\">polarDecomp</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">,</span> Q<span class=\"token punctuation\">,</span> S<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>det<span class=\"token operator\">&lt;</span><span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">matrixCopy</span><span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">,</span> <span class=\"token operator\">=</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>Q<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tparts<span class=\"token operator\">-</span><span class=\"token operator\">></span>f <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span>\n\t\tparts<span class=\"token operator\">-</span><span class=\"token operator\">></span>f <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n\tparts<span class=\"token operator\">-</span><span class=\"token operator\">></span>q <span class=\"token operator\">=</span> <span class=\"token function\">quatFromMatrix</span><span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tparts<span class=\"token operator\">-</span><span class=\"token operator\">></span>k <span class=\"token operator\">=</span> <span class=\"token function\">spectDecomp</span><span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">,</span> U<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tparts<span class=\"token operator\">-</span><span class=\"token operator\">></span>u <span class=\"token operator\">=</span> <span class=\"token function\">quatFromMatrix</span><span class=\"token punctuation\">(</span>U<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tp <span class=\"token operator\">=</span> <span class=\"token function\">snuggle</span><span class=\"token punctuation\">(</span>parts<span class=\"token operator\">-</span><span class=\"token operator\">></span>u<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>parts<span class=\"token operator\">-</span><span class=\"token operator\">></span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tparts<span class=\"token operator\">-</span><span class=\"token operator\">></span>u <span class=\"token operator\">=</span> <span class=\"token function\">Qt_Mul</span><span class=\"token punctuation\">(</span>parts<span class=\"token operator\">-</span><span class=\"token operator\">></span>u<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofMatrix4x4<span class=\"token operator\">::</span><span class=\"token function\">decompose</span><span class=\"token punctuation\">(</span> ofVec3f<span class=\"token operator\">&amp;</span> t<span class=\"token punctuation\">,</span>\n\t\t   ofQuaternion<span class=\"token operator\">&amp;</span> r<span class=\"token punctuation\">,</span>\n\t\t   ofVec3f<span class=\"token operator\">&amp;</span> s<span class=\"token punctuation\">,</span>\n\t\t   ofQuaternion<span class=\"token operator\">&amp;</span> so <span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n\n\t_affineParts parts<span class=\"token punctuation\">;</span>\n    _HMatrix hmatrix<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// Transpose copy of LTW</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            hmatrix<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">decompAffine</span><span class=\"token punctuation\">(</span>hmatrix<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>parts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">double</span> mul <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>parts<span class=\"token punctuation\">.</span>t<span class=\"token punctuation\">[</span>W<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span>\n        mul <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> parts<span class=\"token punctuation\">.</span>t<span class=\"token punctuation\">[</span>W<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    t<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> parts<span class=\"token punctuation\">.</span>t<span class=\"token punctuation\">[</span>X<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> mul<span class=\"token punctuation\">;</span>\n    t<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> parts<span class=\"token punctuation\">.</span>t<span class=\"token punctuation\">[</span>Y<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> mul<span class=\"token punctuation\">;</span>\n    t<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> parts<span class=\"token punctuation\">.</span>t<span class=\"token punctuation\">[</span>Z<span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> mul<span class=\"token punctuation\">;</span>\n\n    r<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>parts<span class=\"token punctuation\">.</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> parts<span class=\"token punctuation\">.</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> parts<span class=\"token punctuation\">.</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> parts<span class=\"token punctuation\">.</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    mul <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>parts<span class=\"token punctuation\">.</span>k<span class=\"token punctuation\">.</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span>\n        mul <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span> <span class=\"token operator\">/</span> parts<span class=\"token punctuation\">.</span>k<span class=\"token punctuation\">.</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// mul be sign of determinant to support negative scales.</span>\n    mul <span class=\"token operator\">*</span><span class=\"token operator\">=</span> parts<span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">;</span>\n    s<span class=\"token punctuation\">.</span>x<span class=\"token operator\">=</span> parts<span class=\"token punctuation\">.</span>k<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> mul<span class=\"token punctuation\">;</span>\n    s<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> parts<span class=\"token punctuation\">.</span>k<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> mul<span class=\"token punctuation\">;</span>\n    s<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> parts<span class=\"token punctuation\">.</span>k<span class=\"token punctuation\">.</span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> mul<span class=\"token punctuation\">;</span>\n\n    so<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>parts<span class=\"token punctuation\">.</span>u<span class=\"token punctuation\">.</span><span class=\"token function\">x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> parts<span class=\"token punctuation\">.</span>u<span class=\"token punctuation\">.</span><span class=\"token function\">y</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> parts<span class=\"token punctuation\">.</span>u<span class=\"token punctuation\">.</span><span class=\"token function\">z</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> parts<span class=\"token punctuation\">.</span>u<span class=\"token punctuation\">.</span><span class=\"token function\">w</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">undef</span> SET_ROW</span>\n\nstd<span class=\"token operator\">::</span>ostream<span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>ostream<span class=\"token operator\">&amp;</span> os<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> ofMatrix4x4<span class=\"token operator\">&amp;</span> M<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> w <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n\tos\t<span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span><span class=\"token function\">setw</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">&lt;&lt;</span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span><span class=\"token function\">setw</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">&lt;&lt;</span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span><span class=\"token function\">setw</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">&lt;&lt;</span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span><span class=\"token function\">setw</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">&lt;&lt;</span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n\n\tos\t<span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span><span class=\"token function\">setw</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">&lt;&lt;</span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span><span class=\"token function\">setw</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">&lt;&lt;</span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span><span class=\"token function\">setw</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">&lt;&lt;</span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span><span class=\"token function\">setw</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">&lt;&lt;</span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n\n\tos\t<span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span><span class=\"token function\">setw</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">&lt;&lt;</span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span><span class=\"token function\">setw</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">&lt;&lt;</span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span><span class=\"token function\">setw</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">&lt;&lt;</span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span><span class=\"token function\">setw</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">&lt;&lt;</span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span>\n\n\tos\t<span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span><span class=\"token function\">setw</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">&lt;&lt;</span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span><span class=\"token function\">setw</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">&lt;&lt;</span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span><span class=\"token function\">setw</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">&lt;&lt;</span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\", \"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span><span class=\"token function\">setw</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token operator\">&lt;&lt;</span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">return</span> os<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nstd<span class=\"token operator\">::</span>istream<span class=\"token operator\">&amp;</span> <span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>istream<span class=\"token operator\">&amp;</span> is<span class=\"token punctuation\">,</span> ofMatrix4x4<span class=\"token operator\">&amp;</span> M<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tis <span class=\"token operator\">>></span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">ignore</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tis <span class=\"token operator\">>></span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">ignore</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tis <span class=\"token operator\">>></span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">ignore</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tis <span class=\"token operator\">>></span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">ignore</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tis <span class=\"token operator\">>></span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">ignore</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tis <span class=\"token operator\">>></span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">ignore</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tis <span class=\"token operator\">>></span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">ignore</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tis <span class=\"token operator\">>></span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">ignore</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tis <span class=\"token operator\">>></span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">ignore</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tis <span class=\"token operator\">>></span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">ignore</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tis <span class=\"token operator\">>></span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">ignore</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tis <span class=\"token operator\">>></span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">ignore</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tis <span class=\"token operator\">>></span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">ignore</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tis <span class=\"token operator\">>></span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">ignore</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tis <span class=\"token operator\">>></span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> is<span class=\"token punctuation\">.</span><span class=\"token function\">ignore</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tis <span class=\"token operator\">>></span> M<span class=\"token punctuation\">.</span>_mat<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> is<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n","type":"source"}}],"fetch":[]}