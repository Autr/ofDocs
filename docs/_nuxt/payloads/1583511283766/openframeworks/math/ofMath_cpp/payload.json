{"data":[{"page":{"entry":{"name":"ofMath.cpp","filename":"ofMath.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/libs/openFrameworks/math/ofMath.cpp","path":"/openframeworks/math/ofMath_cpp","route":"/openframeworks/math/ofMath.cpp","dir":"../libs/openFrameworks/math","ext":"cpp","type":"source","id":285,"parent":284,"breadcrumbs":[284,195],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofMath.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofUtils.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"float.h\"</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">ifndef</span> TARGET_WIN32</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sys/time.h></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofNoise.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofPolyline.h\"</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofNextPow2</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// from nehe.gamedev.net lesson 43</span>\n\t<span class=\"token keyword\">int</span> rval<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>rval<span class=\"token operator\">&lt;</span>a<span class=\"token punctuation\">)</span> rval<span class=\"token operator\">&lt;&lt;=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> rval<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSeedRandom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// good info here:</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// http://stackoverflow.com/questions/322938/recommended-way-to-initialize-srand</span>\n\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_WIN32</span>\n\t\t<span class=\"token function\">srand</span><span class=\"token punctuation\">(</span><span class=\"token function\">GetTickCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">elif</span> !defined(TARGET_EMSCRIPTEN)</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// use XOR'd second, microsecond precision AND pid as seed</span>\n\t\t<span class=\"token keyword\">struct</span> timeval tv<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">gettimeofday</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>tv<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">long</span> <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>tv<span class=\"token punctuation\">.</span>tv_sec <span class=\"token operator\">^</span> tv<span class=\"token punctuation\">.</span>tv_usec<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token function\">getpid</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">srand</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n\t\t<span class=\"token keyword\">struct</span> timeval tv<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">gettimeofday</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>tv<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">long</span> <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>tv<span class=\"token punctuation\">.</span>tv_sec <span class=\"token operator\">^</span> tv<span class=\"token punctuation\">.</span>tv_usec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">srand</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">ofSeedRandom</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> val<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">srand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span><span class=\"token punctuation\">)</span> val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofRandom</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> max<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>max <span class=\"token operator\">*</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">float</span><span class=\"token punctuation\">(</span>RAND_MAX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0f</span> <span class=\"token operator\">-</span> std<span class=\"token operator\">::</span>numeric_limits<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">epsilon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofRandom</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">float</span> high <span class=\"token operator\">=</span> <span class=\"token function\">MAX</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">float</span> low <span class=\"token operator\">=</span> <span class=\"token function\">MIN</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>low<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>low <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>high <span class=\"token operator\">-</span> low<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">float</span><span class=\"token punctuation\">(</span>RAND_MAX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0f</span> <span class=\"token operator\">-</span> std<span class=\"token operator\">::</span>numeric_limits<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">epsilon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofRandomf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1.0f</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2.0f</span> <span class=\"token operator\">*</span> <span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">float</span><span class=\"token punctuation\">(</span>RAND_MAX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0f</span> <span class=\"token operator\">-</span> std<span class=\"token operator\">::</span>numeric_limits<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">epsilon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofRandomuf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token function\">rand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token keyword\">float</span><span class=\"token punctuation\">(</span>RAND_MAX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1.0f</span> <span class=\"token operator\">-</span> std<span class=\"token operator\">::</span>numeric_limits<span class=\"token operator\">&lt;</span><span class=\"token keyword\">float</span><span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">epsilon</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//---- new to 006</span>\n<span class=\"token comment\" spellcheck=\"true\">//from the forums http://www.openframeworks.cc/forum/viewtopic.php?t=1413</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofNormalize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> value<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> min<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> max<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofClamp</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">-</span> min<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>max <span class=\"token operator\">-</span> min<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//check for division by zero???</span>\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofMap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> value<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> inputMin<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> inputMax<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> outputMin<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> outputMax<span class=\"token punctuation\">,</span> <span class=\"token keyword\">bool</span> clamp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>inputMin <span class=\"token operator\">-</span> inputMax<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> FLT_EPSILON<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> outputMin<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">float</span> outVal <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">-</span> inputMin<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>inputMax <span class=\"token operator\">-</span> inputMin<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>outputMax <span class=\"token operator\">-</span> outputMin<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> outputMin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> clamp <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>outputMax <span class=\"token operator\">&lt;</span> outputMin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> outVal <span class=\"token operator\">&lt;</span> outputMax <span class=\"token punctuation\">)</span>outVal <span class=\"token operator\">=</span> outputMax<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> outVal <span class=\"token operator\">></span> outputMin <span class=\"token punctuation\">)</span>outVal <span class=\"token operator\">=</span> outputMin<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> outVal <span class=\"token operator\">></span> outputMax <span class=\"token punctuation\">)</span>outVal <span class=\"token operator\">=</span> outputMax<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> outVal <span class=\"token operator\">&lt;</span> outputMin <span class=\"token punctuation\">)</span>outVal <span class=\"token operator\">=</span> outputMin<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">return</span> outVal<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofDist</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x1 <span class=\"token operator\">-</span> x2<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>x1 <span class=\"token operator\">-</span> x2<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>y1 <span class=\"token operator\">-</span> y2<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>y1 <span class=\"token operator\">-</span> y2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofDist</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x1 <span class=\"token operator\">-</span> x2<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>x1 <span class=\"token operator\">-</span> x2<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>y1 <span class=\"token operator\">-</span> y2<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>y1 <span class=\"token operator\">-</span> y2<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>z1 <span class=\"token operator\">-</span> z2<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>z1 <span class=\"token operator\">-</span> z2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofDistSquared</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>x1 <span class=\"token operator\">-</span> x2<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>x1 <span class=\"token operator\">-</span> x2<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>y1 <span class=\"token operator\">-</span> y2<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>y1 <span class=\"token operator\">-</span> y2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofDistSquared</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>x1 <span class=\"token operator\">-</span> x2<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>x1 <span class=\"token operator\">-</span> x2<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>y1 <span class=\"token operator\">-</span> y2<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>y1 <span class=\"token operator\">-</span> y2<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>z1 <span class=\"token operator\">-</span> z2<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>z1 <span class=\"token operator\">-</span> z2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofClamp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> value<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> min<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> max<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> value <span class=\"token operator\">&lt;</span> min <span class=\"token operator\">?</span> min <span class=\"token operator\">:</span> value <span class=\"token operator\">></span> max <span class=\"token operator\">?</span> max <span class=\"token operator\">:</span> value<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">ofSign</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> n <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">bool</span> <span class=\"token function\">ofInRange</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> t<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> min<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> max<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> t<span class=\"token operator\">>=</span>min <span class=\"token operator\">&amp;&amp;</span> t<span class=\"token operator\">&lt;=</span>max<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofRadToDeg</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> radians<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> radians <span class=\"token operator\">*</span> RAD_TO_DEG<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofDegToRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> degrees<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> degrees <span class=\"token operator\">*</span> DEG_TO_RAD<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofLerp</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> start<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> stop<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> amt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> start <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>stop<span class=\"token operator\">-</span>start<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> amt<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofWrap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> value<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> from<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// algorithm from http://stackoverflow.com/a/5852628/599884</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>from <span class=\"token operator\">></span> to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>from<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">float</span> cycle <span class=\"token operator\">=</span> to <span class=\"token operator\">-</span> from<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofIsFloatEqual</span><span class=\"token punctuation\">(</span>cycle<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> to<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> value <span class=\"token operator\">-</span> cycle <span class=\"token operator\">*</span> <span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>value <span class=\"token operator\">-</span> from<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> cycle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofWrapRadians</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> angle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> from<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofWrap</span><span class=\"token punctuation\">(</span>angle<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofWrapDegrees</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> angle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> from<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofWrap</span><span class=\"token punctuation\">(</span>angle<span class=\"token punctuation\">,</span> from<span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofLerpDegrees</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> currentAngle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> targetAngle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> pct<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> currentAngle <span class=\"token operator\">+</span> <span class=\"token function\">ofAngleDifferenceDegrees</span><span class=\"token punctuation\">(</span>currentAngle<span class=\"token punctuation\">,</span>targetAngle<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> pct<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofLerpRadians</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> currentAngle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> targetAngle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> pct<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> currentAngle <span class=\"token operator\">+</span> <span class=\"token function\">ofAngleDifferenceRadians</span><span class=\"token punctuation\">(</span>currentAngle<span class=\"token punctuation\">,</span>targetAngle<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> pct<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofNoise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">_slang_library_noise1</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">0.5f</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofNoise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">_slang_library_noise2</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">0.5f</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofNoise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2<span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofNoise</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>y <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofNoise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">_slang_library_noise3</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">0.5f</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofNoise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofNoise</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>z <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofNoise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">_slang_library_noise4</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">0.5f</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofNoise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec4<span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofNoise</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>w <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofSignedNoise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">_slang_library_noise1</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofSignedNoise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">_slang_library_noise2</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofSignedNoise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec2<span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofSignedNoise</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>y <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofSignedNoise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">_slang_library_noise3</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofSignedNoise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofSignedNoise</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>z <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofSignedNoise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">_slang_library_noise4</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>z<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofSignedNoise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> glm<span class=\"token operator\">::</span>vec4<span class=\"token operator\">&amp;</span> p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofSignedNoise</span><span class=\"token punctuation\">(</span> p<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>w <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofAngleDifferenceDegrees</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> currentAngle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> targetAngle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">ofWrapDegrees</span><span class=\"token punctuation\">(</span>targetAngle <span class=\"token operator\">-</span> currentAngle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------</span>\n<span class=\"token keyword\">float</span> <span class=\"token function\">ofAngleDifferenceRadians</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> currentAngle<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> targetAngle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span>  <span class=\"token function\">ofWrapRadians</span><span class=\"token punctuation\">(</span>targetAngle <span class=\"token operator\">-</span> currentAngle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n\n","type":"source"}}],"fetch":[]}