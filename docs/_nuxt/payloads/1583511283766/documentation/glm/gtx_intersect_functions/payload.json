{"data":[{"page":{"entry":{"name":"gtx_intersect_functions","filename":"gtx_intersect_functions.markdown","absolute":"/Users/Gilbert/Code/openFrameworks/ofSite/documentation/glm/gtx_intersect_functions.markdown","path":"/documentation/glm/gtx_intersect_functions","route":"/documentation/glm/gtx_intersect_functions.markdown","dir":"../ofSite/documentation/glm","ext":"markdown","type":"page","id":2044,"parent":1985,"breadcrumbs":[1985,1718],"siblings":[],"translations":{}},"description":{},"methods":[null,{"syntax":"glm::intersectLineSphere(&point0, &point1, &sphereCenter, sphereRadius, &intersectionPosition1, &intersectionNormal1, &intersectionPosition2, &intersectionNormal2)","name":"glm::intersectLineSphere","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>point0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>point1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>sphereCenter<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> genType<span class=\"token operator\">::</span>value_type sphereRadius<span class=\"token punctuation\">,</span> genType <span class=\"token operator\">&amp;</span>intersectionPosition1<span class=\"token punctuation\">,</span> genType <span class=\"token operator\">&amp;</span>intersectionNormal1<span class=\"token punctuation\">,</span> genType <span class=\"token operator\">&amp;</span>intersectionPosition2<span class=\"token punctuation\">,</span> genType <span class=\"token operator\">&amp;</span>intersectionNormal2","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Compute the intersection of a line and a sphere.\nFrom GLM_GTX_intersect extension</p>\n","desc":""},{"syntax":"glm::intersectLineTriangle(&orig, &dir, &vert0, &vert1, &vert2, &position)","name":"glm::intersectLineTriangle","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>orig<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>dir<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>vert0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>vert1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>vert2<span class=\"token punctuation\">,</span> genType <span class=\"token operator\">&amp;</span>position","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Compute the intersection of a line and a triangle.\nFrom GLM_GTX_intersect extension.</p>\n","desc":""},{"syntax":"glm::intersectRayPlane(&orig, &dir, &planeOrig, &planeNormal, &intersectionDistance)","name":"glm::intersectRayPlane","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>orig<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>dir<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>planeOrig<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>planeNormal<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> genType<span class=\"token operator\">::</span>value_type <span class=\"token operator\">&amp;</span>intersectionDistance","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Compute the intersection of a ray and a plane.\nRay direction and plane normal must be unit length.\nFrom GLM_GTX_intersect extension.</p>\n","desc":""},{"syntax":"glm::intersectRaySphere(&rayStarting, &rayNormalizedDirection, &sphereCenter, sphereRadius, &intersectionPosition, &intersectionNormal)","name":"glm::intersectRaySphere","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>rayStarting<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>rayNormalizedDirection<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>sphereCenter<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">typename</span> genType<span class=\"token operator\">::</span>value_type sphereRadius<span class=\"token punctuation\">,</span> genType <span class=\"token operator\">&amp;</span>intersectionPosition<span class=\"token punctuation\">,</span> genType <span class=\"token operator\">&amp;</span>intersectionNormal","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Compute the intersection of a ray and a sphere.\nFrom GLM_GTX_intersect extension.</p>\n","desc":""},{"syntax":"glm::intersectRaySphere(&rayStarting, &rayNormalizedDirection, &sphereCenter, sphereRadiusSquered, &intersectionDistance)","name":"glm::intersectRaySphere","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>rayStarting<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>rayNormalizedDirection<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>sphereCenter<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">typename</span> genType<span class=\"token operator\">::</span>value_type sphereRadiusSquered<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> genType<span class=\"token operator\">::</span>value_type <span class=\"token operator\">&amp;</span>intersectionDistance","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Compute the intersection distance of a ray and a sphere.\nThe ray direction vector is unit length.\nFrom GLM_GTX_intersect extension.</p>\n","desc":""},{"syntax":"glm::intersectRayTriangle(&orig, &dir, &vert0, &vert1, &vert2, &baryPosition)","name":"glm::intersectRayTriangle","returns":"bool","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>orig<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>dir<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>vert0<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>vert1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> genType <span class=\"token operator\">&amp;</span>vert2<span class=\"token punctuation\">,</span> genType <span class=\"token operator\">&amp;</span>baryPosition","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Compute the intersection of a ray and a triangle.\nFrom GLM_GTX_intersect extension.</p>\n","desc":""},{}],"document":"<p>#functions</p>\n<p>&lt;!--\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>##Description</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool glm::intersectLineSphere(&amp;point0, &amp;point1, &amp;sphereCenter, sphereRadius, &amp;intersectionPosition1, &amp;intersectionNormal1, &amp;intersectionPosition2, &amp;intersectionNormal2)</p>\n<p>&lt;!--\n<em>syntax: glm::intersectLineSphere(&amp;point0, &amp;point1, &amp;sphereCenter, sphereRadius, &amp;intersectionPosition1, &amp;intersectionNormal1, &amp;intersectionPosition2, &amp;intersectionNormal2)</em>\n<em>name: glm::intersectLineSphere</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: const genType &amp;point0, const genType &amp;point1, const genType &amp;sphereCenter, typename genType::value_type sphereRadius, genType &amp;intersectionPosition1, genType &amp;intersectionNormal1, genType &amp;intersectionPosition2, genType &amp;intersectionNormal2</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Compute the intersection of a line and a sphere.\nFrom GLM_GTX_intersect extension</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool glm::intersectLineTriangle(&amp;orig, &amp;dir, &amp;vert0, &amp;vert1, &amp;vert2, &amp;position)</p>\n<p>&lt;!--\n<em>syntax: glm::intersectLineTriangle(&amp;orig, &amp;dir, &amp;vert0, &amp;vert1, &amp;vert2, &amp;position)</em>\n<em>name: glm::intersectLineTriangle</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: const genType &amp;orig, const genType &amp;dir, const genType &amp;vert0, const genType &amp;vert1, const genType &amp;vert2, genType &amp;position</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Compute the intersection of a line and a triangle.\nFrom GLM_GTX_intersect extension.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool glm::intersectRayPlane(&amp;orig, &amp;dir, &amp;planeOrig, &amp;planeNormal, &amp;intersectionDistance)</p>\n<p>&lt;!--\n<em>syntax: glm::intersectRayPlane(&amp;orig, &amp;dir, &amp;planeOrig, &amp;planeNormal, &amp;intersectionDistance)</em>\n<em>name: glm::intersectRayPlane</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: const genType &amp;orig, const genType &amp;dir, const genType &amp;planeOrig, const genType &amp;planeNormal, typename genType::value_type &amp;intersectionDistance</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Compute the intersection of a ray and a plane.\nRay direction and plane normal must be unit length.\nFrom GLM_GTX_intersect extension.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool glm::intersectRaySphere(&amp;rayStarting, &amp;rayNormalizedDirection, &amp;sphereCenter, sphereRadius, &amp;intersectionPosition, &amp;intersectionNormal)</p>\n<p>&lt;!--\n<em>syntax: glm::intersectRaySphere(&amp;rayStarting, &amp;rayNormalizedDirection, &amp;sphereCenter, sphereRadius, &amp;intersectionPosition, &amp;intersectionNormal)</em>\n<em>name: glm::intersectRaySphere</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: const genType &amp;rayStarting, const genType &amp;rayNormalizedDirection, const genType &amp;sphereCenter, const typename genType::value_type sphereRadius, genType &amp;intersectionPosition, genType &amp;intersectionNormal</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Compute the intersection of a ray and a sphere.\nFrom GLM_GTX_intersect extension.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool glm::intersectRaySphere(&amp;rayStarting, &amp;rayNormalizedDirection, &amp;sphereCenter, sphereRadiusSquered, &amp;intersectionDistance)</p>\n<p>&lt;!--\n<em>syntax: glm::intersectRaySphere(&amp;rayStarting, &amp;rayNormalizedDirection, &amp;sphereCenter, sphereRadiusSquered, &amp;intersectionDistance)</em>\n<em>name: glm::intersectRaySphere</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: const genType &amp;rayStarting, const genType &amp;rayNormalizedDirection, const genType &amp;sphereCenter, const typename genType::value_type sphereRadiusSquered, typename genType::value_type &amp;intersectionDistance</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Compute the intersection distance of a ray and a sphere.\nThe ray direction vector is unit length.\nFrom GLM_GTX_intersect extension.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool glm::intersectRayTriangle(&amp;orig, &amp;dir, &amp;vert0, &amp;vert1, &amp;vert2, &amp;baryPosition)</p>\n<p>&lt;!--\n<em>syntax: glm::intersectRayTriangle(&amp;orig, &amp;dir, &amp;vert0, &amp;vert1, &amp;vert2, &amp;baryPosition)</em>\n<em>name: glm::intersectRayTriangle</em>\n<em>returns: bool</em>\n_returns_description: _\n<em>parameters: const genType &amp;orig, const genType &amp;dir, const genType &amp;vert0, const genType &amp;vert1, const genType &amp;vert2, genType &amp;baryPosition</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Compute the intersection of a ray and a triangle.\nFrom GLM_GTX_intersect extension.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n","raw":"#functions\n\n\n<!--\n_visible: True_\n_advanced: False_\n-->\n\n##Description\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool glm::intersectLineSphere(&point0, &point1, &sphereCenter, sphereRadius, &intersectionPosition1, &intersectionNormal1, &intersectionPosition2, &intersectionNormal2)\n\n<!--\n_syntax: glm::intersectLineSphere(&point0, &point1, &sphereCenter, sphereRadius, &intersectionPosition1, &intersectionNormal1, &intersectionPosition2, &intersectionNormal2)_\n_name: glm::intersectLineSphere_\n_returns: bool_\n_returns_description: _\n_parameters: const genType &point0, const genType &point1, const genType &sphereCenter, typename genType::value_type sphereRadius, genType &intersectionPosition1, genType &intersectionNormal1, genType &intersectionPosition2, genType &intersectionNormal2_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Compute the intersection of a line and a sphere.\n From GLM_GTX_intersect extension\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool glm::intersectLineTriangle(&orig, &dir, &vert0, &vert1, &vert2, &position)\n\n<!--\n_syntax: glm::intersectLineTriangle(&orig, &dir, &vert0, &vert1, &vert2, &position)_\n_name: glm::intersectLineTriangle_\n_returns: bool_\n_returns_description: _\n_parameters: const genType &orig, const genType &dir, const genType &vert0, const genType &vert1, const genType &vert2, genType &position_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Compute the intersection of a line and a triangle.\n From GLM_GTX_intersect extension.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool glm::intersectRayPlane(&orig, &dir, &planeOrig, &planeNormal, &intersectionDistance)\n\n<!--\n_syntax: glm::intersectRayPlane(&orig, &dir, &planeOrig, &planeNormal, &intersectionDistance)_\n_name: glm::intersectRayPlane_\n_returns: bool_\n_returns_description: _\n_parameters: const genType &orig, const genType &dir, const genType &planeOrig, const genType &planeNormal, typename genType::value_type &intersectionDistance_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Compute the intersection of a ray and a plane.\n Ray direction and plane normal must be unit length.\n From GLM_GTX_intersect extension.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool glm::intersectRaySphere(&rayStarting, &rayNormalizedDirection, &sphereCenter, sphereRadius, &intersectionPosition, &intersectionNormal)\n\n<!--\n_syntax: glm::intersectRaySphere(&rayStarting, &rayNormalizedDirection, &sphereCenter, sphereRadius, &intersectionPosition, &intersectionNormal)_\n_name: glm::intersectRaySphere_\n_returns: bool_\n_returns_description: _\n_parameters: const genType &rayStarting, const genType &rayNormalizedDirection, const genType &sphereCenter, const typename genType::value_type sphereRadius, genType &intersectionPosition, genType &intersectionNormal_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Compute the intersection of a ray and a sphere.\n From GLM_GTX_intersect extension.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool glm::intersectRaySphere(&rayStarting, &rayNormalizedDirection, &sphereCenter, sphereRadiusSquered, &intersectionDistance)\n\n<!--\n_syntax: glm::intersectRaySphere(&rayStarting, &rayNormalizedDirection, &sphereCenter, sphereRadiusSquered, &intersectionDistance)_\n_name: glm::intersectRaySphere_\n_returns: bool_\n_returns_description: _\n_parameters: const genType &rayStarting, const genType &rayNormalizedDirection, const genType &sphereCenter, const typename genType::value_type sphereRadiusSquered, typename genType::value_type &intersectionDistance_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Compute the intersection distance of a ray and a sphere.\n The ray direction vector is unit length.\n From GLM_GTX_intersect extension.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool glm::intersectRayTriangle(&orig, &dir, &vert0, &vert1, &vert2, &baryPosition)\n\n<!--\n_syntax: glm::intersectRayTriangle(&orig, &dir, &vert0, &vert1, &vert2, &baryPosition)_\n_name: glm::intersectRayTriangle_\n_returns: bool_\n_returns_description: _\n_parameters: const genType &orig, const genType &dir, const genType &vert0, const genType &vert1, const genType &vert2, genType &baryPosition_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n Compute the intersection of a ray and a triangle.\n From GLM_GTX_intersect extension.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page"}}],"fetch":[]}