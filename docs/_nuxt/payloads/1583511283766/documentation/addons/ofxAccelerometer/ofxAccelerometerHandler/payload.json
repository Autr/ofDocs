{"data":[{"page":{"entry":{"name":"ofxAccelerometerHandler","filename":"ofxAccelerometerHandler.markdown","absolute":"/Users/Gilbert/Code/openFrameworks/ofSite/documentation/addons/ofxAccelerometer/ofxAccelerometerHandler.markdown","path":"/documentation/addons/ofxAccelerometer/ofxAccelerometerHandler","route":"/documentation/addons/ofxAccelerometer/ofxAccelerometerHandler.markdown","dir":"../ofSite/documentation/addons/ofxAccelerometer","ext":"markdown","type":"page","id":1746,"parent":1742,"breadcrumbs":[1742,1743,1718],"siblings":[],"translations":{}},"description":{"short":"","full":"<p>This addon allows you access to the acceleromete on devices that support one. At the moment both Android and iOS are supported.</p>\n<p>To get values from the accelerometer in polling mode, request them:</p>\n<pre><code>\n<span class=\"token keyword\">void</span> testApp<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofxAccelerometer<span class=\"token punctuation\">.</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// this initializes the accelerometer</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> testApp<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  ofVec3f accel <span class=\"token operator\">=</span> ofxAccelerometer<span class=\"token punctuation\">.</span><span class=\"token function\">getForce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ofVec2f orientation <span class=\"token operator\">=</span> ofxAccelerometer<span class=\"token punctuation\">.</span><span class=\"token function\">getOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>To register an event handler for the accelerometer values changing, do something like the following:</p>\n<pre><code><span class=\"token function\">ofAddListener</span><span class=\"token punctuation\">(</span>ofxAccelerometer<span class=\"token punctuation\">.</span>accelChanged<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>amp<span class=\"token punctuation\">;</span>ofApp<span class=\"token operator\">::</span>accelerationChanged<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h1></h1>\n"},"config":{"visible":"True","advanced":"False","istemplated":"False","extends":null},"methods":[{"syntax":"exit()","name":"exit","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>Stops ofxAccelerometer from receiving updates from the underlying system.</p>\n"},{"syntax":"getForce()","name":"getForce","returns":"ofPoint &","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>Gets the current smoothed accelerometer data (value in number of g's (1g = gravity, 9.8m/s^2). The smoothing prevents sudden spikes but can potentially make detecting gestures or other sudden moments difficult.</p>\n"},{"syntax":"getMatrix()","name":"getMatrix","returns":"GLfloat *","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>This returns a 3x3 matrix with the following values set:</p>\n<p>First column is gravity vector.\nSecond column as an arbitrary vector in the plane perpendicular to the gravity vector {Gx, Gy, Gz} defined by by the equation &quot;Gx * x + Gy * y + Gz * z = 0&quot; in which we arbitrarily set x=0 and y=1.\nThird column as the cross product of the first two.</p>\n"},{"syntax":"getOrientation()","name":"getOrientation","returns":"ofPoint &","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>Gets current orientation in degrees as an ofPoint (x: pitch, y: roll, z: not used).</p>\n<p><img src=\"yaw_axis_corrected.png\" alt=\"yaw-pitch\"></p>\n"},{"syntax":"getRawAcceleration()","name":"getRawAcceleration","returns":"ofPoint &","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>Gets current real accelerometer data (value in number of g's (1g = gravity, 9.8m/s^2)</p>\n"},{"syntax":"ofxAccelerometerHandler()","name":"ofxAccelerometerHandler","returns":null,"returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"setCallback(new_callback)","name":"setCallback","returns":"void","returns_description":null,"parameters":"ofxAccelCB new_callback","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>This allows you to set a callback that can be called whenever motion is detected.</p>\n"},{"syntax":"setForceSmoothing(forceSmoothing)","name":"setForceSmoothing","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> forceSmoothing","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>This sets amount of smoothing on force data (0: no smooth, 1:very smooth)</p>\n"},{"syntax":"setOrientationSmoothing(orientationSmoothing)","name":"setOrientationSmoothing","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> orientationSmoothing","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>This sets amount of smoothing on orientation data (0: no smooth, 1:very smooth)</p>\n"},{"syntax":"setup()","name":"setup","returns":"void","returns_description":null,"parameters":null,"access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>You must call setup() before polling ofxAccelerometer for force or orientation values.</p>\n"},{"syntax":"update(x, y, z)","name":"update","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> z","access":"public","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":"<p>This is called by your underlying OS to update all the orientation matrices.</p>\n"},{"syntax":"updateMatrix()","name":"updateMatrix","returns":"void","returns_description":null,"parameters":null,"access":"protected","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"updateOrientation()","name":"updateOrientation","returns":"void","returns_description":null,"parameters":null,"access":"protected","version_started":"007","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"short":"","desc":""},{"name":"accelForce","type":"ofPoint","access":"protected","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"accelOrientation","type":"ofPoint","access":"protected","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"accelReal","type":"ofPoint","access":"protected","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"callback","type":"ofxAccelCB","access":"protected","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"forceSmoothing","type":"float","access":"protected","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"matrix","type":"GLfloat","access":"protected","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"matrixDirty","type":"bool","access":"protected","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"orientDirty","type":"bool","access":"protected","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"orientation","type":"ofPoint","access":"protected","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{"name":"orientationSmoothing","type":"float","access":"protected","version_started":"007","version_deprecated":null,"summary":null,"visible":"True","constant":"True","advanced":"False","short":"","desc":""},{}],"document":"<p>#class ofxAccelerometerHandler</p>\n<p>&lt;!--\n<em>visible: True</em>\n<em>advanced: False</em>\n<em>istemplated: False</em>\n_extends: _\n--&gt;</p>\n<p>##InlineDescription</p>\n<p>##Description</p>\n<p>This addon allows you access to the acceleromete on devices that support one. At the moment both Android and iOS are supported.</p>\n<p>To get values from the accelerometer in polling mode, request them:</p>\n<pre><code>\n<span class=\"token keyword\">void</span> testApp<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofxAccelerometer<span class=\"token punctuation\">.</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// this initializes the accelerometer</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> testApp<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n  ofVec3f accel <span class=\"token operator\">=</span> ofxAccelerometer<span class=\"token punctuation\">.</span><span class=\"token function\">getForce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  ofVec2f orientation <span class=\"token operator\">=</span> ofxAccelerometer<span class=\"token punctuation\">.</span><span class=\"token function\">getOrientation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>To register an event handler for the accelerometer values changing, do something like the following:</p>\n<pre><code><span class=\"token function\">ofAddListener</span><span class=\"token punctuation\">(</span>ofxAccelerometer<span class=\"token punctuation\">.</span>accelChanged<span class=\"token punctuation\">,</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>amp<span class=\"token punctuation\">;</span>ofApp<span class=\"token operator\">::</span>accelerationChanged<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>##Methods</p>\n<p>###void exit()</p>\n<p>&lt;!--\n<em>syntax: exit()</em>\n<em>name: exit</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>Stops ofxAccelerometer from receiving updates from the underlying system.</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofPoint &amp; getForce()</p>\n<p>&lt;!--\n<em>syntax: getForce()</em>\n<em>name: getForce</em>\n<em>returns: ofPoint &amp;</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>Gets the current smoothed accelerometer data (value in number of g's (1g = gravity, 9.8m/s^2). The smoothing prevents sudden spikes but can potentially make detecting gestures or other sudden moments difficult.</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###GLfloat * getMatrix()</p>\n<p>&lt;!--\n<em>syntax: getMatrix()</em>\n<em>name: getMatrix</em>\n<em>returns: GLfloat *</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>This returns a 3x3 matrix with the following values set:</p>\n<p>First column is gravity vector.\nSecond column as an arbitrary vector in the plane perpendicular to the gravity vector {Gx, Gy, Gz} defined by by the equation &quot;Gx * x + Gy * y + Gz * z = 0&quot; in which we arbitrarily set x=0 and y=1.\nThird column as the cross product of the first two.</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofPoint &amp; getOrientation()</p>\n<p>&lt;!--\n<em>syntax: getOrientation()</em>\n<em>name: getOrientation</em>\n<em>returns: ofPoint &amp;</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>Gets current orientation in degrees as an ofPoint (x: pitch, y: roll, z: not used).</p>\n<p><img src=\"yaw_axis_corrected.png\" alt=\"yaw-pitch\"></p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofPoint &amp; getRawAcceleration()</p>\n<p>&lt;!--\n<em>syntax: getRawAcceleration()</em>\n<em>name: getRawAcceleration</em>\n<em>returns: ofPoint &amp;</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>Gets current real accelerometer data (value in number of g's (1g = gravity, 9.8m/s^2)</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<h3>ofxAccelerometerHandler()</h3>\n<p>&lt;!--\n<em>syntax: ofxAccelerometerHandler()</em>\n<em>name: ofxAccelerometerHandler</em>\n_returns: _\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setCallback(new_callback)</p>\n<p>&lt;!--\n<em>syntax: setCallback(new_callback)</em>\n<em>name: setCallback</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: ofxAccelCB new_callback</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>This allows you to set a callback that can be called whenever motion is detected.</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setForceSmoothing(forceSmoothing)</p>\n<p>&lt;!--\n<em>syntax: setForceSmoothing(forceSmoothing)</em>\n<em>name: setForceSmoothing</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float forceSmoothing</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>This sets amount of smoothing on force data (0: no smooth, 1:very smooth)</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setOrientationSmoothing(orientationSmoothing)</p>\n<p>&lt;!--\n<em>syntax: setOrientationSmoothing(orientationSmoothing)</em>\n<em>name: setOrientationSmoothing</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float orientationSmoothing</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>This sets amount of smoothing on orientation data (0: no smooth, 1:very smooth)</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void setup()</p>\n<p>&lt;!--\n<em>syntax: setup()</em>\n<em>name: setup</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>You must call setup() before polling ofxAccelerometer for force or orientation values.</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void update(x, y, z)</p>\n<p>&lt;!--\n<em>syntax: update(x, y, z)</em>\n<em>name: update</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float x, float y, float z</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>This is called by your underlying OS to update all the orientation matrices.</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void updateMatrix()</p>\n<p>&lt;!--\n<em>syntax: updateMatrix()</em>\n<em>name: updateMatrix</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: protected</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void updateOrientation()</p>\n<p>&lt;!--\n<em>syntax: updateOrientation()</em>\n<em>name: updateOrientation</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n<em>access: protected</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>##Variables</p>\n<p>###ofEvent&lt; ofPoint &gt; accelChanged</p>\n<p>&lt;!--\n<em>name: accelChanged</em>\n<em>type: ofEvent&lt; ofPoint &gt;</em>\n<em>access: public</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofPoint accelForce</p>\n<p>&lt;!--\n<em>name: accelForce</em>\n<em>type: ofPoint</em>\n<em>access: protected</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofPoint accelOrientation</p>\n<p>&lt;!--\n<em>name: accelOrientation</em>\n<em>type: ofPoint</em>\n<em>access: protected</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofPoint accelReal</p>\n<p>&lt;!--\n<em>name: accelReal</em>\n<em>type: ofPoint</em>\n<em>access: protected</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofxAccelCB callback</p>\n<p>&lt;!--\n<em>name: callback</em>\n<em>type: ofxAccelCB</em>\n<em>access: protected</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###float forceSmoothing</p>\n<p>&lt;!--\n<em>name: forceSmoothing</em>\n<em>type: float</em>\n<em>access: protected</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###GLfloat matrix</p>\n<p>&lt;!--\n<em>name: matrix</em>\n<em>type: GLfloat</em>\n<em>access: protected</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool matrixDirty</p>\n<p>&lt;!--\n<em>name: matrixDirty</em>\n<em>type: bool</em>\n<em>access: protected</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###bool orientDirty</p>\n<p>&lt;!--\n<em>name: orientDirty</em>\n<em>type: bool</em>\n<em>access: protected</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###ofPoint orientation</p>\n<p>&lt;!--\n<em>name: orientation</em>\n<em>type: ofPoint</em>\n<em>access: protected</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###float orientationSmoothing</p>\n<p>&lt;!--\n<em>name: orientationSmoothing</em>\n<em>type: float</em>\n<em>access: protected</em>\n<em>version_started: 007</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n","raw":"#class ofxAccelerometerHandler\n\n\n<!--\n_visible: True_\n_advanced: False_\n_istemplated: False_\n_extends: _\n-->\n\n##InlineDescription\n\n\n\n\n\n\n##Description\n\nThis addon allows you access to the acceleromete on devices that support one. At the moment both Android and iOS are supported. \n\nTo get values from the accelerometer in polling mode, request them:\n~~~~{.cpp}\n\nvoid testApp::setup(){\n\tofxAccelerometer.setup(); // this initializes the accelerometer\n}\n\nvoid testApp::update()\n{\n  ofVec3f accel = ofxAccelerometer.getForce();\n  ofVec2f orientation = ofxAccelerometer.getOrientation();\n}\n~~~~\n\nTo register an event handler for the accelerometer values changing, do something like the following:\n\n~~~~{.cpp}\nofAddListener(ofxAccelerometer.accelChanged,this,&ofApp::accelerationChanged);\n~~~~\n\n\n\n\n\n##Methods\n\n\n\n###void exit()\n\n<!--\n_syntax: exit()_\n_name: exit_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nStops ofxAccelerometer from receiving updates from the underlying system.\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofPoint & getForce()\n\n<!--\n_syntax: getForce()_\n_name: getForce_\n_returns: ofPoint &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nGets the current smoothed accelerometer data (value in number of g's (1g = gravity, 9.8m/s^2). The smoothing prevents sudden spikes but can potentially make detecting gestures or other sudden moments difficult.\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###GLfloat * getMatrix()\n\n<!--\n_syntax: getMatrix()_\n_name: getMatrix_\n_returns: GLfloat *_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nThis returns a 3x3 matrix with the following values set:\n\nFirst column is gravity vector.\nSecond column as an arbitrary vector in the plane perpendicular to the gravity vector {Gx, Gy, Gz} defined by by the equation \"Gx * x + Gy * y + Gz * z = 0\" in which we arbitrarily set x=0 and y=1.\nThird column as the cross product of the first two.\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofPoint & getOrientation()\n\n<!--\n_syntax: getOrientation()_\n_name: getOrientation_\n_returns: ofPoint &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nGets current orientation in degrees as an ofPoint (x: pitch, y: roll, z: not used).\n\n![yaw-pitch](yaw_axis_corrected.png)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofPoint & getRawAcceleration()\n\n<!--\n_syntax: getRawAcceleration()_\n_name: getRawAcceleration_\n_returns: ofPoint &_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nGets current real accelerometer data (value in number of g's (1g = gravity, 9.8m/s^2)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n### ofxAccelerometerHandler()\n\n<!--\n_syntax: ofxAccelerometerHandler()_\n_name: ofxAccelerometerHandler_\n_returns: _\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setCallback(new_callback)\n\n<!--\n_syntax: setCallback(new_callback)_\n_name: setCallback_\n_returns: void_\n_returns_description: _\n_parameters: ofxAccelCB new_callback_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nThis allows you to set a callback that can be called whenever motion is detected.\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setForceSmoothing(forceSmoothing)\n\n<!--\n_syntax: setForceSmoothing(forceSmoothing)_\n_name: setForceSmoothing_\n_returns: void_\n_returns_description: _\n_parameters: float forceSmoothing_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nThis sets amount of smoothing on force data (0: no smooth, 1:very smooth)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setOrientationSmoothing(orientationSmoothing)\n\n<!--\n_syntax: setOrientationSmoothing(orientationSmoothing)_\n_name: setOrientationSmoothing_\n_returns: void_\n_returns_description: _\n_parameters: float orientationSmoothing_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nThis sets amount of smoothing on orientation data (0: no smooth, 1:very smooth)\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void setup()\n\n<!--\n_syntax: setup()_\n_name: setup_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nYou must call setup() before polling ofxAccelerometer for force or orientation values.\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void update(x, y, z)\n\n<!--\n_syntax: update(x, y, z)_\n_name: update_\n_returns: void_\n_returns_description: _\n_parameters: float x, float y, float z_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\nThis is called by your underlying OS to update all the orientation matrices.\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void updateMatrix()\n\n<!--\n_syntax: updateMatrix()_\n_name: updateMatrix_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: protected_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void updateOrientation()\n\n<!--\n_syntax: updateOrientation()_\n_name: updateOrientation_\n_returns: void_\n_returns_description: _\n_parameters: _\n_access: protected_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n##Variables\n\n\n\n###ofEvent< ofPoint > accelChanged\n\n<!--\n_name: accelChanged_\n_type: ofEvent< ofPoint >_\n_access: public_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofPoint accelForce\n\n<!--\n_name: accelForce_\n_type: ofPoint_\n_access: protected_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofPoint accelOrientation\n\n<!--\n_name: accelOrientation_\n_type: ofPoint_\n_access: protected_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofPoint accelReal\n\n<!--\n_name: accelReal_\n_type: ofPoint_\n_access: protected_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofxAccelCB callback\n\n<!--\n_name: callback_\n_type: ofxAccelCB_\n_access: protected_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float forceSmoothing\n\n<!--\n_name: forceSmoothing_\n_type: float_\n_access: protected_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###GLfloat matrix\n\n<!--\n_name: matrix_\n_type: GLfloat_\n_access: protected_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool matrixDirty\n\n<!--\n_name: matrixDirty_\n_type: bool_\n_access: protected_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###bool orientDirty\n\n<!--\n_name: orientDirty_\n_type: bool_\n_access: protected_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###ofPoint orientation\n\n<!--\n_name: orientation_\n_type: ofPoint_\n_access: protected_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float orientationSmoothing\n\n<!--\n_name: orientationSmoothing_\n_type: float_\n_access: protected_\n_version_started: 007_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page"}}],"fetch":[]}