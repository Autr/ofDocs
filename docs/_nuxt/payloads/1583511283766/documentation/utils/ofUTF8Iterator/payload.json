{"data":[{"page":{"entry":{"name":"ofUTF8Iterator","filename":"ofUTF8Iterator.markdown","absolute":"/Users/Gilbert/Code/openFrameworks/ofSite/documentation/utils/ofUTF8Iterator.markdown","path":"/documentation/utils/ofUTF8Iterator","route":"/documentation/utils/ofUTF8Iterator.markdown","dir":"../ofSite/documentation/utils","ext":"markdown","type":"page","id":2228,"parent":2195,"breadcrumbs":[2195,1718],"siblings":[],"translations":{}},"description":{"short":"<p>Allows to iterate over a string's utf8 codepoints.\nThe easiest way to use it is with a c++11 range style\nfor loop like:</p>\n<p>for(auto c: ofUTF8Iterator(str)){\n...\n}</p>\n<p>which will iterate through all the utf8 codepoints in the\nstring.</p>\n","full":"<h1></h1>\n"},"config":{"visible":"True","advanced":"False","istemplated":"False","extends":null},"methods":[{"syntax":"begin()","name":"begin","returns":"int","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"end()","name":"end","returns":"int","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"ofUTF8Iterator(&str)","name":"ofUTF8Iterator","returns":null,"returns_description":null,"parameters":"<span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span>str","access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"rbegin()","name":"rbegin","returns":"int","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"rend()","name":"rend","returns":"int","returns_description":null,"parameters":null,"access":"public","version_started":"0.9.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"name":"src_valid","type":"string","access":"private","version_started":"0.9.0","version_deprecated":null,"summary":null,"visible":"True","constant":"False","advanced":"False","short":"","desc":""},{}],"document":"<p>#class ofUTF8Iterator</p>\n<p>&lt;!--\n<em>visible: True</em>\n<em>advanced: False</em>\n<em>istemplated: False</em>\n_extends: _\n--&gt;</p>\n<p>##InlineDescription</p>\n<p>Allows to iterate over a string's utf8 codepoints.\nThe easiest way to use it is with a c++11 range style\nfor loop like:</p>\n<p>for(auto c: ofUTF8Iterator(str)){\n...\n}</p>\n<p>which will iterate through all the utf8 codepoints in the\nstring.</p>\n<p>##Description</p>\n<p>##Methods</p>\n<p>###int begin()</p>\n<p>&lt;!--\n<em>syntax: begin()</em>\n<em>name: begin</em>\n<em>returns: int</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###int end()</p>\n<p>&lt;!--\n<em>syntax: end()</em>\n<em>name: end</em>\n<em>returns: int</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<h3>ofUTF8Iterator(&amp;str)</h3>\n<p>&lt;!--\n<em>syntax: ofUTF8Iterator(&amp;str)</em>\n<em>name: ofUTF8Iterator</em>\n_returns: _\n_returns_description: _\n<em>parameters: const string &amp;str</em>\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###int rbegin()</p>\n<p>&lt;!--\n<em>syntax: rbegin()</em>\n<em>name: rbegin</em>\n<em>returns: int</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###int rend()</p>\n<p>&lt;!--\n<em>syntax: rend()</em>\n<em>name: rend</em>\n<em>returns: int</em>\n_returns_description: _\n_parameters: _\n<em>access: public</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>##Variables</p>\n<p>###string src_valid</p>\n<p>&lt;!--\n<em>name: src_valid</em>\n<em>type: string</em>\n<em>access: private</em>\n<em>version_started: 0.9.0</em>\n_version_deprecated: _\n_summary: _\n<em>visible: True</em>\n<em>constant: False</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n","raw":"#class ofUTF8Iterator\n\n\n<!--\n_visible: True_\n_advanced: False_\n_istemplated: False_\n_extends: _\n-->\n\n##InlineDescription\n\nAllows to iterate over a string's utf8 codepoints.\nThe easiest way to use it is with a c++11 range style\nfor loop like:\n\nfor(auto c: ofUTF8Iterator(str)){\n...\n}\n\nwhich will iterate through all the utf8 codepoints in the\nstring.\n\n\n\n\n\n##Description\n\n\n\n\n\n##Methods\n\n\n\n###int begin()\n\n<!--\n_syntax: begin()_\n_name: begin_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int end()\n\n<!--\n_syntax: end()_\n_name: end_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n### ofUTF8Iterator(&str)\n\n<!--\n_syntax: ofUTF8Iterator(&str)_\n_name: ofUTF8Iterator_\n_returns: _\n_returns_description: _\n_parameters: const string &str_\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int rbegin()\n\n<!--\n_syntax: rbegin()_\n_name: rbegin_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###int rend()\n\n<!--\n_syntax: rend()_\n_name: rend_\n_returns: int_\n_returns_description: _\n_parameters: _\n_access: public_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n##Variables\n\n\n\n###string src_valid\n\n<!--\n_name: src_valid_\n_type: string_\n_access: private_\n_version_started: 0.9.0_\n_version_deprecated: _\n_summary: _\n_visible: True_\n_constant: False_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page"}}],"fetch":[]}