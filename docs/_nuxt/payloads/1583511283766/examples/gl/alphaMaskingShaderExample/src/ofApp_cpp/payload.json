{"data":[{"page":{"entry":{"name":"ofApp.cpp","filename":"ofApp.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/examples/gl/alphaMaskingShaderExample/src/ofApp.cpp","path":"/examples/gl/alphaMaskingShaderExample/src/ofApp_cpp","route":"/examples/gl/alphaMaskingShaderExample/src/ofApp.cpp","dir":"../examples/gl/alphaMaskingShaderExample/src","ext":"cpp","type":"source","id":788,"parent":786,"breadcrumbs":[786,782,783,436],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofApp.h\"</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">ofEnableAlphaBlending</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    srcImg<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    dstImg<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B.jpg\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    brushImg<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"brush.png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">int</span> width <span class=\"token operator\">=</span> srcImg<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> height <span class=\"token operator\">=</span> srcImg<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    maskFbo<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    fbo<span class=\"token punctuation\">.</span><span class=\"token function\">allocate</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">// There are 3 of ways of loading a shader:</span>\n    <span class=\"token comment\" spellcheck=\"true\">//</span>\n    <span class=\"token comment\" spellcheck=\"true\">//  1 - Using just the name of the shader and ledding ofShader look for .frag and .vert: </span>\n    <span class=\"token comment\" spellcheck=\"true\">//      Ex.: shader.load( \"myShader\");</span>\n    <span class=\"token comment\" spellcheck=\"true\">//</span>\n    <span class=\"token comment\" spellcheck=\"true\">//  2 - Giving the right file names for each one: </span>\n    <span class=\"token comment\" spellcheck=\"true\">//      Ex.: shader.load( \"myShader.vert\",\"myShader.frag\");</span>\n    <span class=\"token comment\" spellcheck=\"true\">//</span>\n    <span class=\"token comment\" spellcheck=\"true\">//  3 - And the third one it�s passing the shader programa on a single string;</span>\n    <span class=\"token comment\" spellcheck=\"true\">//</span>\n\n\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">ifdef</span> TARGET_OPENGLES</span>\n    shader<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"shaders_gles/alphamask.vert\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"shaders_gles/alphamask.frag\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">else</span></span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofIsGLProgrammableRenderer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    \tstring vertex <span class=\"token operator\">=</span> <span class=\"token string\">\"#version 150\\n\\\n    \t\\n\\\n\t\tuniform mat4 projectionMatrix;\\n\\\n\t\tuniform mat4 modelViewMatrix;\\n\\\n    \tuniform mat4 modelViewProjectionMatrix;\\n\\\n    \t\\n\\\n    \t\\n\\\n    \tin vec4  position;\\n\\\n    \tin vec2  texcoord;\\n\\\n    \t\\n\\\n    \tout vec2 texCoordVarying;\\n\\\n    \t\\n\\\n    \tvoid main()\\n\\\n    \t{\\n\\\n\t        texCoordVarying = texcoord;\\\n    \t\tgl_Position = modelViewProjectionMatrix * position;\\n\\\n    \t}\"</span><span class=\"token punctuation\">;</span>\n\t\tstring fragment <span class=\"token operator\">=</span> <span class=\"token string\">\"#version 150\\n\\\n\t\t\\n\\\n\t\tuniform sampler2DRect tex0;\\\n\t\tuniform sampler2DRect maskTex;\\\n        in vec2 texCoordVarying;\\n\\\n\t\t\\\n        out vec4 fragColor;\\n\\\n\t\tvoid main (void){\\\n\t\tvec2 pos = texCoordVarying;\\\n\t\t\\\n\t\tvec3 src = texture(tex0, pos).rgb;\\\n\t\tfloat mask = texture(maskTex, pos).r;\\\n\t\t\\\n\t\tfragColor = vec4( src , mask);\\\n\t\t}\"</span><span class=\"token punctuation\">;</span>\n\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GL_VERTEX_SHADER<span class=\"token punctuation\">,</span> vertex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GL_FRAGMENT_SHADER<span class=\"token punctuation\">,</span> fragment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">bindDefaults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">linkProgram</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tstring shaderProgram <span class=\"token operator\">=</span> <span class=\"token string\">\"#version 120\\n \\\n\t\t#extension GL_ARB_texture_rectangle : enable\\n \\\n\t\t\\\n\t\tuniform sampler2DRect tex0;\\\n\t\tuniform sampler2DRect maskTex;\\\n\t\t\\\n\t\tvoid main (void){\\\n\t\tvec2 pos = gl_TexCoord[0].st;\\\n\t\t\\\n\t\tvec3 src = texture2DRect(tex0, pos).rgb;\\\n\t\tfloat mask = texture2DRect(maskTex, pos).r;\\\n\t\t\\\n\t\tgl_FragColor = vec4( src , mask);\\\n\t\t}\"</span><span class=\"token punctuation\">;</span>\n\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">setupShaderFromSource</span><span class=\"token punctuation\">(</span>GL_FRAGMENT_SHADER<span class=\"token punctuation\">,</span> shaderProgram<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tshader<span class=\"token punctuation\">.</span><span class=\"token function\">linkProgram</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token macro property\">#<span class=\"token directive keyword\">endif</span></span>\n\n    <span class=\"token comment\" spellcheck=\"true\">// Let�s clear the FBO�s</span>\n    <span class=\"token comment\" spellcheck=\"true\">// otherwise it will bring some junk with it from the memory    </span>\n    maskFbo<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">ofClear</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    maskFbo<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    fbo<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">ofClear</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    fbo<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    bBrushDown <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">// MASK (frame buffer object)</span>\n    <span class=\"token comment\" spellcheck=\"true\">//</span>\n    maskFbo<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bBrushDown<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        brushImg<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>mouseX<span class=\"token number\">-25</span><span class=\"token punctuation\">,</span>mouseY<span class=\"token number\">-25</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    maskFbo<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">// HERE the shader-masking happends</span>\n    <span class=\"token comment\" spellcheck=\"true\">//</span>\n    fbo<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\" spellcheck=\"true\">// Cleaning everthing with alpha mask on 0 in order to make it transparent for default</span>\n    <span class=\"token function\">ofClear</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    \n    shader<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    shader<span class=\"token punctuation\">.</span><span class=\"token function\">setUniformTexture</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"maskTex\"</span><span class=\"token punctuation\">,</span> maskFbo<span class=\"token punctuation\">.</span><span class=\"token function\">getTexture</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    srcImg<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    shader<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    fbo<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    dstImg<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    fbo<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">ofDrawBitmapString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Drag the Mouse to draw\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">ofDrawBitmapString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Press spacebar to clear\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">keyPressed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    maskFbo<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">ofClear</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    maskFbo<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">keyReleased</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseMoved</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseDragged</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mousePressed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    bBrushDown <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseReleased</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    bBrushDown <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseEntered</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseExited</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">windowResized</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">gotMessage</span><span class=\"token punctuation\">(</span>ofMessage msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">dragEvent</span><span class=\"token punctuation\">(</span>ofDragInfo dragInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> \n\n<span class=\"token punctuation\">}</span>\n","type":"source"}}],"fetch":[]}