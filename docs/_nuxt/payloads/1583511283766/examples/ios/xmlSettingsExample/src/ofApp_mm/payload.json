{"data":[{"page":{"entry":{"name":"ofApp.mm","filename":"ofApp.mm","absolute":"/Users/Gilbert/Code/openFrameworks/examples/ios/xmlSettingsExample/src/ofApp.mm","path":"/examples/ios/xmlSettingsExample/src/ofApp_mm","route":"/examples/ios/xmlSettingsExample/src/ofApp.mm","dir":"../examples/ios/xmlSettingsExample/src","ext":"mm","type":"source","id":1440,"parent":1436,"breadcrumbs":[1436,1437,1193,436],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofApp.h\"</span></span>\n\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofSetOrientation</span><span class=\"token punctuation\">(</span>OF_ORIENTATION_90_RIGHT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\" spellcheck=\"true\">//Set iOS to Orientation Landscape Right</span>\n\n\t<span class=\"token function\">ofBackground</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//-----------</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//the string is printed at the top of the app</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//to give the user some feedback</span>\n\tmessage <span class=\"token operator\">=</span> <span class=\"token string\">\"loading mySettings.xml\"</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//we load our settings file</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//initially we do this from the data/ folder</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//but when we save we are saving to the documents folder which is the only place we have write access to</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//thats why we check if the file exists in the documents folder. </span>\n\t\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> XML<span class=\"token punctuation\">.</span><span class=\"token function\">loadFile</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofxiOSGetDocumentsDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"mySettings.xml\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tmessage <span class=\"token operator\">=</span> <span class=\"token string\">\"mySettings.xml loaded from documents folder!\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> XML<span class=\"token punctuation\">.</span><span class=\"token function\">loadFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mySettings.xml\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tmessage <span class=\"token operator\">=</span> <span class=\"token string\">\"mySettings.xml loaded from data folder!\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tmessage <span class=\"token operator\">=</span> <span class=\"token string\">\"unable to load mySettings.xml check data/ folder\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//read the colors from XML</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//if the settings file doesn't exist we assigns default values (170, 190, 240)</span>\n\tred\t\t<span class=\"token operator\">=</span> XML<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BACKGROUND:COLOR:RED\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">170</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tgreen\t<span class=\"token operator\">=</span> XML<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BACKGROUND:COLOR:GREEN\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">190</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tblue\t<span class=\"token operator\">=</span> XML<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BACKGROUND:COLOR:BLUE\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">240</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">/*\n\t\t\"BACKGROUND:COLOR:RED\" referes to a structure like this:\n\n\t\t&lt;BACKGROUND>\n\t\t\t&lt;COLOR>\n\t\t\t\t&lt;RED>101.103516&lt;/RED>\n\t\t\t&lt;/COLOR>\n\t\t&lt;/BACKGROUND>\n\t*/</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//we initalize some of our variables</span>\n\tlastTagNumber\t<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tpointCount\t\t<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tlineCount\t\t<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\n\t<span class=\"token comment\" spellcheck=\"true\">//-------</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//this is a more advanced use of ofXMLSettings</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//we are going to be reading multiple tags with the same name</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//lets see how many &lt;STROKE> &lt;/STROKE> tags there are in the xml file</span>\n\t<span class=\"token keyword\">int</span> numDragTags <span class=\"token operator\">=</span> XML<span class=\"token punctuation\">.</span><span class=\"token function\">getNumTags</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"STROKE:PT\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//if there is at least one &lt;STROKE> tag we can read the list of points</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//and then try and draw it as a line on the screen</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>numDragTags <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//we push into the last STROKE tag</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//this temporarirly treats the tag as</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//the document root.</span>\n\t\tXML<span class=\"token punctuation\">.</span><span class=\"token function\">pushTag</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"STROKE\"</span><span class=\"token punctuation\">,</span> numDragTags<span class=\"token number\">-1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//we see how many points we have stored in &lt;PT> tags</span>\n\t\t\t<span class=\"token keyword\">int</span> numPtTags <span class=\"token operator\">=</span> XML<span class=\"token punctuation\">.</span><span class=\"token function\">getNumTags</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PT\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>numPtTags <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//We then read those x y values into our</span>\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//array - so that we can then draw the points as</span>\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//a line on the screen</span>\n\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//we have only allocated a certan amount of space for our array</span>\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//so we don't want to read more than that amount of points</span>\n\t\t\t\t<span class=\"token keyword\">int</span> totalToRead <span class=\"token operator\">=</span> <span class=\"token function\">MIN</span><span class=\"token punctuation\">(</span>numPtTags<span class=\"token punctuation\">,</span> NUM_PTS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> totalToRead<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//the last argument of getValue can be used to specify</span>\n\t\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//which tag out of multiple tags you are refering to.</span>\n\t\t\t\t\t<span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> XML<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PT:X\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\t<span class=\"token keyword\">int</span> y <span class=\"token operator\">=</span> XML<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PT:Y\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tdragPts<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tpointCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//this pops us out of the STROKE tag</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//sets the root back to the xml document</span>\n\t\tXML<span class=\"token punctuation\">.</span><span class=\"token function\">popTag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//load a monospaced font</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//which we will use to show part of the xml structure</span>\n\tTTF<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"mono.ttf\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//we change the background color here based on the values</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//affected by the mouse position</span>\n\t<span class=\"token function\">ofBackground</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>red<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>green<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>blue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\tstring drawString <span class=\"token operator\">=</span> <span class=\"token string\">\"How the data is stored:\\n\\n\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>xmlStructure<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofEnableAlphaBlending</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token operator\">-</span>red<span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token operator\">-</span>green<span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token operator\">-</span>blue<span class=\"token punctuation\">,</span> <span class=\"token number\">180</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\t\tdrawString <span class=\"token operator\">+</span><span class=\"token operator\">=</span> xmlStructure<span class=\"token operator\">+</span><span class=\"token string\">\"&lt;/STROKE>\"</span><span class=\"token punctuation\">;</span>\n\t\tTTF<span class=\"token punctuation\">.</span><span class=\"token function\">drawString</span><span class=\"token punctuation\">(</span>drawString<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//---------</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//Lets draw the stroke as a continous line</span>\n\t<span class=\"token function\">ofSetHexColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x222222</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofNoFill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofBeginShape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> pointCount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofVertex</span><span class=\"token punctuation\">(</span>dragPts<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> dragPts<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">ofEndShape</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">ofFill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//the message bars at the top and bottom of the app</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//ofSetHexColor(0xDDDDDD);</span>\n\t<span class=\"token function\">ofEnableAlphaBlending</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">ofDrawRectangle</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofDrawRectangle</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//we draw our status message at the top</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//ofSetColor(210, 90, 100);</span>\n\t<span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">240</span><span class=\"token punctuation\">,</span> <span class=\"token number\">240</span><span class=\"token punctuation\">,</span> <span class=\"token number\">240</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tTTF<span class=\"token punctuation\">.</span><span class=\"token function\">drawString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Settings are automatically saved to app documents folder\\nmouse drag changes background color and records stroke\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//instructions at the bottom</span>\n\tTTF<span class=\"token punctuation\">.</span><span class=\"token function\">drawString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Status: \"</span><span class=\"token operator\">+</span>message<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">touchDown</span><span class=\"token punctuation\">(</span>ofTouchEventArgs <span class=\"token operator\">&amp;</span> touch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> touch<span class=\"token punctuation\">.</span>id <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//we can also add tags with the same name.</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//here we are just adding an empty tag</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//and when the user drags their mouse</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//we will store the pts in this tag</span>\n\t\tlastTagNumber\t<span class=\"token operator\">=</span> XML<span class=\"token punctuation\">.</span><span class=\"token function\">addTag</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"STROKE\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\txmlStructure\t<span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;STROKE>\\n\"</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//We start a new stroke</span>\n\t\tlineCount\t\t<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\tpointCount\t\t<span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">touchMoved</span><span class=\"token punctuation\">(</span>ofTouchEventArgs <span class=\"token operator\">&amp;</span> touch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> touch<span class=\"token punctuation\">.</span>id <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//-------</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//we change the background color based on</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//the two mouse coords coming in</span>\n\t\t<span class=\"token keyword\">float</span> xpct <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>touch<span class=\"token punctuation\">.</span>x <span class=\"token operator\">/</span> <span class=\"token function\">ofGetWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">float</span> ypct <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>touch<span class=\"token punctuation\">.</span>y <span class=\"token operator\">/</span> <span class=\"token function\">ofGetHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tred\t\t\t<span class=\"token operator\">=</span> xpct <span class=\"token operator\">*</span> <span class=\"token number\">255.0</span><span class=\"token punctuation\">;</span>\n\t\tgreen\t\t<span class=\"token operator\">=</span> ypct <span class=\"token operator\">*</span> <span class=\"token number\">255.0</span><span class=\"token punctuation\">;</span>\n\t\tblue\t\t<span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>red <span class=\"token operator\">-</span> green<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//-------------</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//we also want to record the stroke</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//lets store the drag of the user.</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//we will push into the most recent</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//&lt;STROKE> tag - add the mouse points</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//then pop out</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> XML<span class=\"token punctuation\">.</span><span class=\"token function\">pushTag</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"STROKE\"</span><span class=\"token punctuation\">,</span> lastTagNumber<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//now we will add a pt tag - with two</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//children - X and Y</span>\n\n\t\t\t<span class=\"token keyword\">int</span> tagNum <span class=\"token operator\">=</span> XML<span class=\"token punctuation\">.</span><span class=\"token function\">addTag</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PT\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tXML<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PT:X\"</span><span class=\"token punctuation\">,</span> touch<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> tagNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tXML<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PT:Y\"</span><span class=\"token punctuation\">,</span> touch<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> tagNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t\tXML<span class=\"token punctuation\">.</span><span class=\"token function\">popTag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//-------------</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//here we make a string of text that looks like how the xml data</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//is stored in the settings file - this is just so people can</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//visually see how the data is stored.</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//if the text is about to go off screen</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>lineCount <span class=\"token operator\">></span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//we find the first &lt;PT> tag with the</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//x and y data and we remove it from the begining</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//this way the displayed text always shows the newest data</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//without going offscreen.</span>\n\t\t\t<span class=\"token keyword\">int</span> pos <span class=\"token operator\">=</span> xmlStructure<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;/PT>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\txmlStructure <span class=\"token operator\">=</span> xmlStructure<span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span>pos<span class=\"token operator\">+</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//here we add the most recent point to our fake xml string</span>\n\t\txmlStructure <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token string\">\"    &lt;PT>\\n        &lt;X>\"</span><span class=\"token operator\">+</span><span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>touch<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"&lt;/X>\\n        &lt;Y>\"</span><span class=\"token operator\">+</span><span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span>touch<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\"&lt;/Y>\\n    &lt;/PT>\\n\"</span><span class=\"token punctuation\">;</span>\n\t\tlineCount<span class=\"token operator\">+</span><span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//we have added 4 lines so increment by 4</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//------------</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//we also record the x y points into an array - so we can draw it</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>pointCount <span class=\"token operator\">&lt;</span> NUM_PTS <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tdragPts<span class=\"token punctuation\">[</span>pointCount<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>touch<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> touch<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tpointCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">touchUp</span><span class=\"token punctuation\">(</span>ofTouchEventArgs <span class=\"token operator\">&amp;</span> touch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//update the colors to the XML structure when the mouse is released</span>\n\tXML<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BACKGROUND:COLOR:RED\"</span><span class=\"token punctuation\">,</span> red<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tXML<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BACKGROUND:COLOR:GREEN\"</span><span class=\"token punctuation\">,</span> green<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tXML<span class=\"token punctuation\">.</span><span class=\"token function\">setValue</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"BACKGROUND:COLOR:BLUE\"</span><span class=\"token punctuation\">,</span> blue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tXML<span class=\"token punctuation\">.</span><span class=\"token function\">saveFile</span><span class=\"token punctuation\">(</span> <span class=\"token function\">ofxiOSGetDocumentsDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"mySettings.xml\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tmessage <span class=\"token operator\">=</span> <span class=\"token string\">\"mySettings.xml saved to app documents folder\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">touchDoubleTap</span><span class=\"token punctuation\">(</span>ofTouchEventArgs <span class=\"token operator\">&amp;</span> touch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">touchCancelled</span><span class=\"token punctuation\">(</span>ofTouchEventArgs <span class=\"token operator\">&amp;</span> touch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">lostFocus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">gotFocus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">gotMemoryWarning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">deviceOrientationChanged</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> newOrientation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    \n<span class=\"token punctuation\">}</span>\n\n","type":"source"}}],"fetch":[]}