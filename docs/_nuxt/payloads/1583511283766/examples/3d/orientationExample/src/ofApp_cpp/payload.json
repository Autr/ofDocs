{"data":[{"page":{"entry":{"name":"ofApp.cpp","filename":"ofApp.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/examples/3d/orientationExample/src/ofApp.cpp","path":"/examples/3d/orientationExample/src/ofApp_cpp","route":"/examples/3d/orientationExample/src/ofApp.cpp","dir":"../examples/3d/orientationExample/src","ext":"cpp","type":"source","id":528,"parent":526,"breadcrumbs":[526,523,435,436],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofApp.h\"</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">/*\n\trotateToNormal will rotate everything using a rotation matrix which is generated using a quaternion (glm::quat).\n\tfor this we use the function glm::rotation(glm::vec3 v1, glm::vec3 v2) which takes in two normalized vectors and returns\n\ta quaternion that represents the rotation between these two vectors.\n\tWe will use the normal which is passed to this function and the standard z axis.\n */</span>\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">rotateToNormal</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span>vec3 normal<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// the normal must be normalized.</span>\n\tnormal <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>normal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// the standard Z axis.</span>\n\tglm<span class=\"token operator\">::</span>vec3 <span class=\"token function\">axis</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// create the quaternion which represents the rotation between normal and axis</span>\n\tglm<span class=\"token operator\">::</span>quat rotation <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">rotation</span><span class=\"token punctuation\">(</span>axis<span class=\"token punctuation\">,</span> normal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// transform the quaternion to a 4x4 matrix using the glm function for such.</span>\n\tglm<span class=\"token operator\">::</span>mat4 rotationMatrix <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">toMat4</span><span class=\"token punctuation\">(</span>rotation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">// multiply the rotation matrix with the current matrix.</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// This means that the rotation matrix, thus the transformation it represents, will be applied on over the current transformation matrix.</span>\n\t<span class=\"token function\">ofMultMatrix</span><span class=\"token punctuation\">(</span> rotationMatrix <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ofSetVerticalSync</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// draw the vertices in pathLines as a line strip</span>\n\tpathLines<span class=\"token punctuation\">.</span><span class=\"token function\">setMode</span><span class=\"token punctuation\">(</span>OF_PRIMITIVE_LINE_STRIP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tprevious <span class=\"token operator\">=</span> current<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// generate a noisy 3d position over time</span>\n\t<span class=\"token keyword\">float</span> t <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token function\">ofGetElapsedTimef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">.</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\tcurrent<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token function\">ofSignedNoise</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcurrent<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token function\">ofSignedNoise</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcurrent<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> <span class=\"token function\">ofSignedNoise</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tcurrent <span class=\"token operator\">*</span><span class=\"token operator\">=</span> <span class=\"token number\">400</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// scale from -1,+1 range to -400,+400</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// add the current position to the pathVertices deque</span>\n\tpathVertices<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>current<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// if we have too many vertices in the deque, get rid of the oldest ones</span>\n\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>pathVertices<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tpathVertices<span class=\"token punctuation\">.</span><span class=\"token function\">pop_front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// clear the pathLines ofMesh from any old vertices</span>\n\tpathLines<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// add all the vertices from pathVertices</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> pathVertices<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tpathLines<span class=\"token punctuation\">.</span><span class=\"token function\">addVertex</span><span class=\"token punctuation\">(</span>pathVertices<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tofColor cyan <span class=\"token operator\">=</span> ofColor<span class=\"token operator\">::</span><span class=\"token function\">fromHex</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x00abec</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofColor magenta <span class=\"token operator\">=</span> ofColor<span class=\"token operator\">::</span><span class=\"token function\">fromHex</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xec008c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofColor yellow <span class=\"token operator\">=</span> ofColor<span class=\"token operator\">::</span><span class=\"token function\">fromHex</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xffee00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">ofBackgroundGradient</span><span class=\"token punctuation\">(</span>magenta <span class=\"token operator\">*</span> <span class=\"token punctuation\">.</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> magenta <span class=\"token operator\">*</span> <span class=\"token punctuation\">.</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofNoFill</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\teasyCam<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofRotateXDeg</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofDrawGrid</span><span class=\"token punctuation\">(</span><span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// draw the path of the box</span>\n\t<span class=\"token function\">ofSetLineWidth</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span>cyan<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tpathLines<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// draw a line connecting the box to the grid</span>\n\t<span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span>yellow<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofDrawLine</span><span class=\"token punctuation\">(</span>current<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> current<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> current<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">,</span> current<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> current<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token function\">ofTranslate</span><span class=\"token punctuation\">(</span>current<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> current<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> current<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> glm<span class=\"token operator\">::</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span>current <span class=\"token operator\">-</span> previous <span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0.0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\" spellcheck=\"true\">// translate and rotate every 3D object after this line to the current position and orientation of our line, but only if the line is longer than 0 or has a length</span>\n        <span class=\"token function\">rotateToNormal</span><span class=\"token punctuation\">(</span>current <span class=\"token operator\">-</span> previous<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofDrawBox</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofDrawAxis</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\teasyCam<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">keyPressed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">keyReleased</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseMoved</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseDragged</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mousePressed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseReleased</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> button<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseEntered</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">mouseExited</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">windowResized</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> w<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">gotMessage</span><span class=\"token punctuation\">(</span>ofMessage msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//--------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> ofApp<span class=\"token operator\">::</span><span class=\"token function\">dragEvent</span><span class=\"token punctuation\">(</span>ofDragInfo dragInfo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n","type":"source"}}],"fetch":[]}