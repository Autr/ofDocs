{"data":[{"page":{"entry":{"name":"Swarm.cpp","filename":"Swarm.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/examples/3d/advanced3dExample/src/Swarm.cpp","path":"/examples/3d/advanced3dExample/src/Swarm_cpp","route":"/examples/3d/advanced3dExample/src/Swarm.cpp","dir":"../examples/3d/advanced3dExample/src","ext":"cpp","type":"source","id":457,"parent":450,"breadcrumbs":[450,451,435,436],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Swarm.h\"</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">// This 'swarm' object demonstrates a simple particle system</span>\n<span class=\"token comment\" spellcheck=\"true\">//  with 'simple harmonic motion'</span>\n\nswarm<span class=\"token operator\">::</span><span class=\"token function\">swarm</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tlight<span class=\"token punctuation\">.</span><span class=\"token function\">setAmbientColor</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> swarm<span class=\"token operator\">::</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> nParticles<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> positionDispersion<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> velocityDispersion<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// Check if we've already initialised</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>particles<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// clear out old data</span>\n\t\t<span class=\"token function\">ofLogWarning</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"swarm\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span>  <span class=\"token string\">\"Swarm: Already initialised\"</span><span class=\"token punctuation\">;</span>\n\n\t\tparticles<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token function\">ofSeedRandom</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\tglm<span class=\"token operator\">::</span>vec3 position<span class=\"token punctuation\">,</span> velocity<span class=\"token punctuation\">;</span>\n\tofColor color<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> nParticles<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tposition<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ofRandom</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">*</span> positionDispersion<span class=\"token punctuation\">;</span>\n\t\tposition<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ofRandom</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">*</span> positionDispersion<span class=\"token punctuation\">;</span>\n\t\tposition<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ofRandom</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">*</span> positionDispersion<span class=\"token punctuation\">;</span>\n\n\t\tvelocity<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ofRandom</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">*</span> velocityDispersion<span class=\"token punctuation\">;</span>\n\t\tvelocity<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ofRandom</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">*</span> velocityDispersion<span class=\"token punctuation\">;</span>\n\t\tvelocity<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ofRandom</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0.5f</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">*</span> velocityDispersion<span class=\"token punctuation\">;</span>\n\n\t\tcolor<span class=\"token punctuation\">.</span>r <span class=\"token operator\">=</span> <span class=\"token function\">ofRandom</span><span class=\"token punctuation\">(</span><span class=\"token number\">255.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tcolor<span class=\"token punctuation\">.</span>g <span class=\"token operator\">=</span> <span class=\"token function\">ofRandom</span><span class=\"token punctuation\">(</span><span class=\"token number\">255.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tcolor<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> <span class=\"token number\">150.0f</span><span class=\"token punctuation\">;</span>\n\t\tcolor<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token number\">255.0f</span><span class=\"token punctuation\">;</span>\n\n\t\tparticle newParticle<span class=\"token punctuation\">;</span>\n\t\tnewParticle<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> position<span class=\"token punctuation\">;</span>\n\t\tnewParticle<span class=\"token punctuation\">.</span>velocity <span class=\"token operator\">=</span> velocity<span class=\"token punctuation\">;</span>\n\t\tnewParticle<span class=\"token punctuation\">.</span>color <span class=\"token operator\">=</span> color<span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// add our new particle to the vector</span>\n\t\tparticles<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>newParticle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> swarm<span class=\"token operator\">::</span><span class=\"token function\">customDraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// We run the update ourselves manually. ofNode does</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//  not do this for us.</span>\n\t<span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\n\t<span class=\"token comment\" spellcheck=\"true\">//--</span>\n\t<span class=\"token comment\" spellcheck=\"true\">// Draw particles</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// We use the position of the first</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//  particle as the position of the</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//  light.</span>\n\t<span class=\"token function\">ofPushStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tlight<span class=\"token punctuation\">.</span><span class=\"token function\">enable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tlight<span class=\"token punctuation\">.</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>particles<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> particles<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//ofPushStyle();</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//ofSetColor(particles[i].color);</span>\n\t\tmaterial<span class=\"token punctuation\">.</span><span class=\"token function\">setDiffuseColor</span><span class=\"token punctuation\">(</span>particles<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tmaterial<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">ofDrawSphere</span><span class=\"token punctuation\">(</span>particles<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//ofPopStyle();</span>\n\t<span class=\"token punctuation\">}</span>\n\tmaterial<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\tlight<span class=\"token punctuation\">.</span><span class=\"token function\">disable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofDisableLighting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//--</span>\n\n\n\n\t<span class=\"token comment\" spellcheck=\"true\">// Render light as white sphere</span>\n\t<span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofDrawSphere</span><span class=\"token punctuation\">(</span>light<span class=\"token punctuation\">.</span><span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofSetDrawBitmapMode</span><span class=\"token punctuation\">(</span>OF_BITMAPMODE_MODEL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofDrawBitmapString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" light\"</span><span class=\"token punctuation\">,</span> particles<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofPopStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> swarm<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// Calculate time past per frame</span>\n\t<span class=\"token keyword\">float</span> dt <span class=\"token operator\">=</span> <span class=\"token function\">ofGetLastFrameTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">// Update positions, velocities</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> particles<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// -----------</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//\tMOTION MATHS</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//\t\t'Simple Harmonic Motion' + a little extra</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// ----</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// [1] apply velocity to postion</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//  (i.e. integrate velocity)</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//  v = dx / dt (*)</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//  x = x + dx [every frame]</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// therefore</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//  x = x + v * dt (*)</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// (velcotity is taken from previous frame)</span>\n\t\tparticles<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>position <span class=\"token operator\">+</span><span class=\"token operator\">=</span> particles<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>velocity <span class=\"token operator\">*</span> dt<span class=\"token punctuation\">;</span>\n\n\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// [2] apply spring force to velocity</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//  (i.e. integrate acceleration)</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//  a = -k * x (this is the shm restoring force, aka spring force)</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//  a = dv / dt</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// therefore from (*)s above</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//  (v = v + dv)</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//  v = v + (dt * a)</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//  v = v + (dt * -k * x)</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t\tparticles<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>velocity <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token operator\">-</span>SPRING_CONSTANT <span class=\"token operator\">*</span> particles<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>position <span class=\"token operator\">*</span> dt<span class=\"token punctuation\">;</span>\n\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// [3] to get a super simple kind of 'flocking' behaviour</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//  we add a second spring force to velocity relative</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//  to the position of the light</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// NOTICE: THIS ISN'T REAL FLOCKING!</span>\n\t\tparticles<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>velocity <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token operator\">-</span>SPRING_CONSTANT <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>particles<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>position <span class=\"token operator\">-</span> light<span class=\"token punctuation\">.</span><span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> dt<span class=\"token punctuation\">;</span>\n\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">// [4] Force a maximum velocity</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>glm<span class=\"token operator\">::</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span>particles<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>velocity<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> MAX_VELOCITY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tparticles<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>velocity <span class=\"token operator\">/</span><span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span>particles<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>velocity<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> MAX_VELOCITY<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\t<span class=\"token comment\" spellcheck=\"true\">//</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// -----------</span>\n\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n","type":"source"}}],"fetch":[]}