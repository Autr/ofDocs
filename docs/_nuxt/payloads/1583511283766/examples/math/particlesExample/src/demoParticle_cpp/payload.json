{"data":[{"page":{"entry":{"name":"demoParticle.cpp","filename":"demoParticle.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/examples/math/particlesExample/src/demoParticle.cpp","path":"/examples/math/particlesExample/src/demoParticle_cpp","route":"/examples/math/particlesExample/src/demoParticle.cpp","dir":"../examples/math/particlesExample/src","ext":"cpp","type":"source","id":1469,"parent":1468,"breadcrumbs":[1468,1465,1442,436],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"demoParticle.h\"</span></span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------</span>\ndemoParticle<span class=\"token operator\">::</span><span class=\"token function\">demoParticle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tattractPoints <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> demoParticle<span class=\"token operator\">::</span><span class=\"token function\">setMode</span><span class=\"token punctuation\">(</span>particleMode newMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tmode <span class=\"token operator\">=</span> newMode<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> demoParticle<span class=\"token operator\">::</span><span class=\"token function\">setAttractPoints</span><span class=\"token punctuation\">(</span> vector <span class=\"token operator\">&lt;</span>glm<span class=\"token operator\">::</span>vec3<span class=\"token operator\">></span> <span class=\"token operator\">*</span> attract <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\tattractPoints <span class=\"token operator\">=</span> attract<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> demoParticle<span class=\"token operator\">::</span><span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\" spellcheck=\"true\">//the unique val allows us to set properties slightly differently for each particle</span>\n\tuniqueVal <span class=\"token operator\">=</span> <span class=\"token function\">ofRandom</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">10000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\tpos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token function\">ofRandomWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tpos<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token function\">ofRandomHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    pos<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> \n\t\n\tvel<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token function\">ofRandom</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3.9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tvel<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token function\">ofRandom</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3.9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    vel<span class=\"token punctuation\">.</span>z <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\n\tfrc   <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">vec3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\tscale <span class=\"token operator\">=</span> <span class=\"token function\">ofRandom</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> mode <span class=\"token operator\">==</span> PARTICLE_MODE_NOISE <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tdrag  <span class=\"token operator\">=</span> <span class=\"token function\">ofRandom</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.97</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.99</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tvel<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token function\">fabs</span><span class=\"token punctuation\">(</span>vel<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">3.0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//make the particles all be going down</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\tdrag  <span class=\"token operator\">=</span> <span class=\"token function\">ofRandom</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.998</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> demoParticle<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token comment\" spellcheck=\"true\">//1 - APPLY THE FORCES BASED ON WHICH MODE WE ARE IN </span>\n\t\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> mode <span class=\"token operator\">==</span> PARTICLE_MODE_ATTRACT <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tglm<span class=\"token operator\">::</span>vec3 <span class=\"token function\">attractPt</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetMouseX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetMouseY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tfrc <span class=\"token operator\">=</span> attractPt<span class=\"token operator\">-</span>pos<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// we get the attraction force/vector by looking at the mouse pos relative to our pos</span>\n\t\tfrc <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>frc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//by normalizing we disregard how close the particle is to the attraction point</span>\n\t\t\n\t\tvel <span class=\"token operator\">*</span><span class=\"token operator\">=</span> drag<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//apply drag</span>\n\t\tvel <span class=\"token operator\">+</span><span class=\"token operator\">=</span> frc <span class=\"token operator\">*</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//apply force</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> mode <span class=\"token operator\">==</span> PARTICLE_MODE_REPEL <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tglm<span class=\"token operator\">::</span>vec3 <span class=\"token function\">attractPt</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetMouseX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetMouseY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tfrc <span class=\"token operator\">=</span> attractPt<span class=\"token operator\">-</span>pos<span class=\"token punctuation\">;</span> \n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">//let get the distance and only repel points close to the mouse</span>\n\t\t<span class=\"token keyword\">float</span> dist <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">length</span><span class=\"token punctuation\">(</span>frc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tfrc <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span>frc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\tvel <span class=\"token operator\">*</span><span class=\"token operator\">=</span> drag<span class=\"token punctuation\">;</span> \n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> dist <span class=\"token operator\">&lt;</span> <span class=\"token number\">150</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tvel <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token operator\">-</span>frc <span class=\"token operator\">*</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">//notice the frc is negative </span>\n\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//if the particles are not close to us, lets add a little bit of random movement using noise. this is where uniqueVal comes in handy. \t\t\t</span>\n\t\t\tfrc<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token function\">ofSignedNoise</span><span class=\"token punctuation\">(</span>uniqueVal<span class=\"token punctuation\">,</span> pos<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetElapsedTimef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tfrc<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token function\">ofSignedNoise</span><span class=\"token punctuation\">(</span>uniqueVal<span class=\"token punctuation\">,</span> pos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetElapsedTimef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\tvel <span class=\"token operator\">+</span><span class=\"token operator\">=</span> frc <span class=\"token operator\">*</span> <span class=\"token number\">0.04</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> mode <span class=\"token operator\">==</span> PARTICLE_MODE_NOISE <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//lets simulate falling snow </span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//the fake wind is meant to add a shift to the particles based on where in x they are</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">//we add pos.y as an arg so to prevent obvious vertical banding around x values - try removing the pos.y * 0.006 to see the banding</span>\n\t\t<span class=\"token keyword\">float</span> fakeWindX <span class=\"token operator\">=</span> <span class=\"token function\">ofSignedNoise</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> <span class=\"token number\">0.003</span><span class=\"token punctuation\">,</span> pos<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> <span class=\"token number\">0.006</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetElapsedTimef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\tfrc<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> fakeWindX <span class=\"token operator\">*</span> <span class=\"token number\">0.25</span> <span class=\"token operator\">+</span> <span class=\"token function\">ofSignedNoise</span><span class=\"token punctuation\">(</span>uniqueVal<span class=\"token punctuation\">,</span> pos<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> <span class=\"token number\">0.04</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.6</span><span class=\"token punctuation\">;</span>\n\t\tfrc<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token function\">ofSignedNoise</span><span class=\"token punctuation\">(</span>uniqueVal<span class=\"token punctuation\">,</span> pos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> <span class=\"token number\">0.006</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetElapsedTimef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">0.09</span> <span class=\"token operator\">+</span> <span class=\"token number\">0.18</span><span class=\"token punctuation\">;</span>\n\n\t\tvel <span class=\"token operator\">*</span><span class=\"token operator\">=</span> drag<span class=\"token punctuation\">;</span> \n\t\tvel <span class=\"token operator\">+</span><span class=\"token operator\">=</span> frc <span class=\"token operator\">*</span> <span class=\"token number\">0.4</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token comment\" spellcheck=\"true\">//we do this so as to skip the bounds check for the bottom and make the particles go back to the top of the screen</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> pos<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> vel<span class=\"token punctuation\">.</span>y <span class=\"token operator\">></span> <span class=\"token function\">ofGetHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\tpos<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span><span class=\"token operator\">=</span> <span class=\"token function\">ofGetHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> mode <span class=\"token operator\">==</span> PARTICLE_MODE_NEAREST_POINTS <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> attractPoints <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//1 - find closest attractPoint </span>\n\t\t\tglm<span class=\"token operator\">::</span>vec3 closestPt<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">int</span> closest <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> \n\t\t\t<span class=\"token keyword\">float</span> closestDist <span class=\"token operator\">=</span> <span class=\"token number\">9999999</span><span class=\"token punctuation\">;</span>\n\t\t\t\n\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> attractPoints<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t<span class=\"token keyword\">float</span> lenSq <span class=\"token operator\">=</span> glm<span class=\"token operator\">::</span><span class=\"token function\">length2</span><span class=\"token punctuation\">(</span> attractPoints<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">at</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>pos <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> lenSq <span class=\"token operator\">&lt;</span> closestDist <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\tclosestDist <span class=\"token operator\">=</span> lenSq<span class=\"token punctuation\">;</span>\n\t\t\t\t\tclosest <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\n\t\t\t<span class=\"token comment\" spellcheck=\"true\">//2 - if we have a closest point - lets calcuate the force towards it</span>\n\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> closest <span class=\"token operator\">!=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\tclosestPt <span class=\"token operator\">=</span> attractPoints<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">at</span><span class=\"token punctuation\">(</span>closest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t\t\t\t\n\t\t\t\t<span class=\"token keyword\">float</span> dist <span class=\"token operator\">=</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>closestDist<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//in this case we don't normalize as we want to have the force proportional to distance </span>\n\t\t\t\tfrc <span class=\"token operator\">=</span> closestPt <span class=\"token operator\">-</span> pos<span class=\"token punctuation\">;</span>\n\t\t\n\t\t\t\tvel <span class=\"token operator\">*</span><span class=\"token operator\">=</span> drag<span class=\"token punctuation\">;</span>\n\t\t\t\t \n\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//lets also limit our attraction to a certain distance and don't apply if 'f' key is pressed</span>\n\t\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> dist <span class=\"token operator\">&lt;</span> <span class=\"token number\">300</span> <span class=\"token operator\">&amp;&amp;</span> dist <span class=\"token operator\">></span> <span class=\"token number\">40</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">ofGetKeyPressed</span><span class=\"token punctuation\">(</span><span class=\"token string\">'f'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\tvel <span class=\"token operator\">+</span><span class=\"token operator\">=</span> frc <span class=\"token operator\">*</span> <span class=\"token number\">0.003</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n\t\t\t\t\t<span class=\"token comment\" spellcheck=\"true\">//if the particles are not close to us, lets add a little bit of random movement using noise. this is where uniqueVal comes in handy. \t\t\t</span>\n\t\t\t\t\tfrc<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token function\">ofSignedNoise</span><span class=\"token punctuation\">(</span>uniqueVal<span class=\"token punctuation\">,</span> pos<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetElapsedTimef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tfrc<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token function\">ofSignedNoise</span><span class=\"token punctuation\">(</span>uniqueVal<span class=\"token punctuation\">,</span> pos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> <span class=\"token number\">0.01</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ofGetElapsedTimef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t\t\tvel <span class=\"token operator\">+</span><span class=\"token operator\">=</span> frc <span class=\"token operator\">*</span> <span class=\"token number\">0.4</span><span class=\"token punctuation\">;</span>\n\t\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t\t\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\n\t<span class=\"token punctuation\">}</span>\n\t\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//2 - UPDATE OUR POSITION</span>\n\t\n\tpos <span class=\"token operator\">+</span><span class=\"token operator\">=</span> vel<span class=\"token punctuation\">;</span> \n\t\n\t\n\t<span class=\"token comment\" spellcheck=\"true\">//3 - (optional) LIMIT THE PARTICLES TO STAY ON SCREEN </span>\n\t<span class=\"token comment\" spellcheck=\"true\">//we could also pass in bounds to check - or alternatively do this at the ofApp level</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> pos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">></span> <span class=\"token function\">ofGetWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tpos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token function\">ofGetWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tvel<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span><span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> pos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tpos<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\tvel<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span><span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> pos<span class=\"token punctuation\">.</span>y <span class=\"token operator\">></span> <span class=\"token function\">ofGetHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tpos<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token function\">ofGetHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tvel<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span><span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> pos<span class=\"token punctuation\">.</span>y <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tpos<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\tvel<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span><span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\t\n\t\t\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\" spellcheck=\"true\">//------------------------------------------------------------------</span>\n<span class=\"token keyword\">void</span> demoParticle<span class=\"token operator\">::</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> mode <span class=\"token operator\">==</span> PARTICLE_MODE_ATTRACT <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">180</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> mode <span class=\"token operator\">==</span> PARTICLE_MODE_REPEL <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">208</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">63</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> mode <span class=\"token operator\">==</span> PARTICLE_MODE_NOISE <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> mode <span class=\"token operator\">==</span> PARTICLE_MODE_NEAREST_POINTS <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">ofSetColor</span><span class=\"token punctuation\">(</span><span class=\"token number\">103</span><span class=\"token punctuation\">,</span> <span class=\"token number\">160</span><span class=\"token punctuation\">,</span> <span class=\"token number\">237</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\t\t\n\t<span class=\"token function\">ofDrawCircle</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> pos<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> scale <span class=\"token operator\">*</span> <span class=\"token number\">4.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n","type":"source"}}],"fetch":[]}