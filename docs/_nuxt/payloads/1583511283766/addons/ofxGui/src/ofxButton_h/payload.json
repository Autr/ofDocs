{"data":[{"page":{"entry":{"name":"ofxButton.h","filename":"ofxButton.h","absolute":"/Users/Gilbert/Code/openFrameworks/addons/ofxGui/src/ofxButton.h","path":"/addons/ofxGui/src/ofxButton_h","route":"/addons/ofxGui/src/ofxButton.h","dir":"../addons/ofxGui/src","ext":"h","type":"source","id":91,"parent":86,"breadcrumbs":[86,87,36],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxToggle.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofParameter.h\"</span></span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxButton</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofxToggle<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">friend</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ofPanel</span><span class=\"token punctuation\">;</span>\n\t\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n\t<span class=\"token function\">ofxButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">ofxButton</span><span class=\"token punctuation\">(</span>ofParameter<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span> _bVal<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width <span class=\"token operator\">=</span> defaultWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height <span class=\"token operator\">=</span> defaultHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token operator\">~</span><span class=\"token function\">ofxButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tofxButton<span class=\"token operator\">*</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>ofParameter<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span> _bVal<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width <span class=\"token operator\">=</span> defaultWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height <span class=\"token operator\">=</span> defaultHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ofxButton<span class=\"token operator\">*</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> toggleName<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> width <span class=\"token operator\">=</span> defaultWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">float</span> height <span class=\"token operator\">=</span> defaultHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">mouseReleased</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">mouseMoved</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">mousePressed</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">virtual</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">mouseDragged</span><span class=\"token punctuation\">(</span>ofMouseEventArgs <span class=\"token operator\">&amp;</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">ListenerClass</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> ListenerMethod<span class=\"token operator\">></span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>ListenerClass <span class=\"token operator\">*</span> listener<span class=\"token punctuation\">,</span> ListenerMethod method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tparameter<span class=\"token punctuation\">.</span><span class=\"token function\">addListener</span><span class=\"token punctuation\">(</span>listener<span class=\"token punctuation\">,</span>method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token class-name\">ListenerClass</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> ListenerMethod<span class=\"token operator\">></span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">removeListener</span><span class=\"token punctuation\">(</span>ListenerClass <span class=\"token operator\">*</span> listener<span class=\"token punctuation\">,</span> ListenerMethod method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tparameter<span class=\"token punctuation\">.</span><span class=\"token function\">removeListener</span><span class=\"token punctuation\">(</span>listener<span class=\"token punctuation\">,</span>method<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">virtual</span> ofAbstractParameter <span class=\"token operator\">&amp;</span> <span class=\"token function\">getParameter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\tofParameter<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span> parameter<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">valueChanged</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> <span class=\"token operator\">&amp;</span> v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n","type":"source"}}],"fetch":[]}