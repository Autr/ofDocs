{"data":[{"page":{"entry":{"name":"ofxThreadedImageLoader.h","filename":"ofxThreadedImageLoader.h","absolute":"/Users/Gilbert/Code/openFrameworks/addons/ofxThreadedImageLoader/src/ofxThreadedImageLoader.h","path":"/addons/ofxThreadedImageLoader/src/ofxThreadedImageLoader_h","route":"/addons/ofxThreadedImageLoader/src/ofxThreadedImageLoader.h","dir":"../addons/ofxThreadedImageLoader/src","ext":"h","type":"source","id":182,"parent":179,"breadcrumbs":[179,180,36],"siblings":[],"translations":{}},"document":"<span class=\"token macro property\">#<span class=\"token directive keyword\">pragma</span> once</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofThread.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofImage.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofURLFileLoader.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofTypes.h\"</span> </span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofThreadChannel.h\"</span></span>\n\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ofxThreadedImageLoader</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">public</span> ofThread <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n    <span class=\"token function\">ofxThreadedImageLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token operator\">~</span><span class=\"token function\">ofxThreadedImageLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">loadFromDisk</span><span class=\"token punctuation\">(</span>ofImage<span class=\"token operator\">&amp;</span> image<span class=\"token punctuation\">,</span> string file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">loadFromURL</span><span class=\"token punctuation\">(</span>ofImage<span class=\"token operator\">&amp;</span> image<span class=\"token punctuation\">,</span> string url<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span>ofEventArgs <span class=\"token operator\">&amp;</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">virtual</span> <span class=\"token keyword\">void</span> <span class=\"token function\">threadedFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">urlResponse</span><span class=\"token punctuation\">(</span>ofHttpResponse <span class=\"token operator\">&amp;</span> response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\" spellcheck=\"true\">// Entry to load.</span>\n    <span class=\"token keyword\">struct</span> ofImageLoaderEntry <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ofImageLoaderEntry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            image <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n        <span class=\"token function\">ofImageLoaderEntry</span><span class=\"token punctuation\">(</span>ofImage <span class=\"token operator\">&amp;</span> pImage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            image <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>pImage<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        ofImage<span class=\"token operator\">*</span> image<span class=\"token punctuation\">;</span>\n        string filename<span class=\"token punctuation\">;</span>\n        string url<span class=\"token punctuation\">;</span>\n        string name<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token keyword\">typedef</span> map<span class=\"token operator\">&lt;</span>string<span class=\"token punctuation\">,</span> ofImageLoaderEntry<span class=\"token operator\">></span><span class=\"token operator\">::</span>iterator entry_iterator<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">int</span>                 nextID<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span>                 lastUpdate<span class=\"token punctuation\">;</span>\n\n\tmap<span class=\"token operator\">&lt;</span>string<span class=\"token punctuation\">,</span>ofImageLoaderEntry<span class=\"token operator\">></span> images_async_loading<span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// keeps track of images which are loading async</span>\n\tofThreadChannel<span class=\"token operator\">&lt;</span>ofImageLoaderEntry<span class=\"token operator\">></span> images_to_load_from_disk<span class=\"token punctuation\">;</span>\n\tofThreadChannel<span class=\"token operator\">&lt;</span>ofImageLoaderEntry<span class=\"token operator\">></span> images_to_update<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n","type":"source"}}],"fetch":[]}