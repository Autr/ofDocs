{"data":[{"page":{"entry":{"name":"ofxAssimpAnimation.cpp","filename":"ofxAssimpAnimation.cpp","absolute":"/Users/Gilbert/Code/openFrameworks/addons/ofxAssimpModelLoader/src/ofxAssimpAnimation.cpp","path":"/addons/ofxAssimpModelLoader/src/ofxAssimpAnimation_cpp","route":"/addons/ofxAssimpModelLoader/src/ofxAssimpAnimation.cpp","dir":"../addons/ofxAssimpModelLoader/src","ext":"cpp","type":"source","id":63,"parent":61,"breadcrumbs":[61,62,36],"siblings":[],"translations":{}},"document":"<span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token comment\" spellcheck=\"true\">//  ofxAssimpAnimation.cpp</span>\n<span class=\"token comment\" spellcheck=\"true\">//  Created by Lukasz Karluk on 4/12/12.</span>\n<span class=\"token comment\" spellcheck=\"true\">//</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofxAssimpAnimation.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofAppRunner.h\"</span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">\"ofMath.h\"</span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\nofxAssimpAnimation<span class=\"token operator\">::</span><span class=\"token function\">ofxAssimpAnimation</span><span class=\"token punctuation\">(</span>shared_ptr<span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span> aiScene<span class=\"token operator\">></span> scene<span class=\"token punctuation\">,</span> aiAnimation <span class=\"token operator\">*</span> animation<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>scene <span class=\"token operator\">=</span> scene<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>animation <span class=\"token operator\">=</span> animation<span class=\"token punctuation\">;</span>\n    animationCurrTime <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    animationPrevTime <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    bPlay <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    bPause <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    loopType <span class=\"token operator\">=</span> OF_LOOP_NONE<span class=\"token punctuation\">;</span>\n    progress <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    progressInSeconds <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    progressInMilliSeconds <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    durationInSeconds <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    durationInMilliSeconds <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    speed <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>animation <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        durationInSeconds <span class=\"token operator\">=</span> animation<span class=\"token operator\">-</span><span class=\"token operator\">></span>mDuration<span class=\"token punctuation\">;</span>\n        durationInMilliSeconds <span class=\"token operator\">=</span> durationInSeconds <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nofxAssimpAnimation<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">ofxAssimpAnimation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\" spellcheck=\"true\">//</span>\n<span class=\"token punctuation\">}</span>\n\naiAnimation <span class=\"token operator\">*</span> ofxAssimpAnimation<span class=\"token operator\">::</span><span class=\"token function\">getAnimation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> animation<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAssimpAnimation<span class=\"token operator\">::</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    animationPrevTime <span class=\"token operator\">=</span> animationCurrTime<span class=\"token punctuation\">;</span>\n    animationCurrTime <span class=\"token operator\">=</span> <span class=\"token function\">ofGetElapsedTimef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">double</span> tps <span class=\"token operator\">=</span> animation<span class=\"token operator\">-</span><span class=\"token operator\">></span>mTicksPerSecond <span class=\"token operator\">?</span> animation<span class=\"token operator\">-</span><span class=\"token operator\">></span>mTicksPerSecond <span class=\"token operator\">:</span> <span class=\"token number\">25</span><span class=\"token punctuation\">.</span>f<span class=\"token punctuation\">;</span>\n    animationCurrTime <span class=\"token operator\">*</span><span class=\"token operator\">=</span> tps<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bPlay <span class=\"token operator\">||</span> bPause<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">float</span> duration <span class=\"token operator\">=</span> <span class=\"token function\">getDurationInSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> timeStep <span class=\"token operator\">=</span> animationCurrTime <span class=\"token operator\">-</span> animationPrevTime<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> positionStep <span class=\"token operator\">=</span> timeStep <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>duration<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> position <span class=\"token operator\">=</span> <span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> positionStep<span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>position <span class=\"token operator\">></span> <span class=\"token number\">1.0</span> <span class=\"token operator\">&amp;&amp;</span> loopType <span class=\"token operator\">==</span> OF_LOOP_NONE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        position <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>position <span class=\"token operator\">></span> <span class=\"token number\">1.0</span> <span class=\"token operator\">&amp;&amp;</span> loopType <span class=\"token operator\">==</span> OF_LOOP_NORMAL<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        position <span class=\"token operator\">=</span> <span class=\"token function\">fmod</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">,</span> <span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>position <span class=\"token operator\">></span> <span class=\"token number\">1.0</span> <span class=\"token operator\">&amp;&amp;</span> loopType <span class=\"token operator\">==</span> OF_LOOP_PALINDROME<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\" spellcheck=\"true\">// TODO.</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>position <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.0</span> <span class=\"token operator\">&amp;&amp;</span> loopType <span class=\"token operator\">==</span> OF_LOOP_PALINDROME<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\" spellcheck=\"true\">// TODO.</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAssimpAnimation<span class=\"token operator\">::</span><span class=\"token function\">updateAnimationNodes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>animation<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumChannels<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> aiNodeAnim <span class=\"token operator\">*</span> channel <span class=\"token operator\">=</span> animation<span class=\"token operator\">-</span><span class=\"token operator\">></span>mChannels<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        aiNode <span class=\"token operator\">*</span> targetNode <span class=\"token operator\">=</span> scene<span class=\"token operator\">-</span><span class=\"token operator\">></span>mRootNode<span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">FindNode</span><span class=\"token punctuation\">(</span>channel<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNodeName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        aiVector3D <span class=\"token function\">presentPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>channel<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumPositionKeys <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> frame <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>frame <span class=\"token operator\">&lt;</span> channel<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumPositionKeys <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>progressInSeconds <span class=\"token operator\">&lt;</span> channel<span class=\"token operator\">-</span><span class=\"token operator\">></span>mPositionKeys<span class=\"token punctuation\">[</span>frame<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mTime<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                frame<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            \n            <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> nextFrame <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>frame <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> channel<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumPositionKeys<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">const</span> aiVectorKey <span class=\"token operator\">&amp;</span> key <span class=\"token operator\">=</span> channel<span class=\"token operator\">-</span><span class=\"token operator\">></span>mPositionKeys<span class=\"token punctuation\">[</span>frame<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">const</span> aiVectorKey <span class=\"token operator\">&amp;</span> nextKey <span class=\"token operator\">=</span> channel<span class=\"token operator\">-</span><span class=\"token operator\">></span>mPositionKeys<span class=\"token punctuation\">[</span>nextFrame<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">double</span> diffTime <span class=\"token operator\">=</span> nextKey<span class=\"token punctuation\">.</span>mTime <span class=\"token operator\">-</span> key<span class=\"token punctuation\">.</span>mTime<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>diffTime <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                diffTime <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token function\">getDurationInSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>diffTime <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">float</span> factor <span class=\"token operator\">=</span> <span class=\"token keyword\">float</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>progressInSeconds <span class=\"token operator\">-</span> key<span class=\"token punctuation\">.</span>mTime<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> diffTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                presentPosition <span class=\"token operator\">=</span> key<span class=\"token punctuation\">.</span>mValue <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>nextKey<span class=\"token punctuation\">.</span>mValue <span class=\"token operator\">-</span> key<span class=\"token punctuation\">.</span>mValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> factor<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                presentPosition <span class=\"token operator\">=</span> key<span class=\"token punctuation\">.</span>mValue<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        \n        aiQuaternion <span class=\"token function\">presentRotation</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>channel<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumRotationKeys <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> frame <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>frame <span class=\"token operator\">&lt;</span> channel<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumRotationKeys <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>progressInSeconds <span class=\"token operator\">&lt;</span> channel<span class=\"token operator\">-</span><span class=\"token operator\">></span>mRotationKeys<span class=\"token punctuation\">[</span>frame<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mTime<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                frame<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            \n            <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> nextFrame <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>frame <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> channel<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumRotationKeys<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">const</span> aiQuatKey<span class=\"token operator\">&amp;</span> key <span class=\"token operator\">=</span> channel<span class=\"token operator\">-</span><span class=\"token operator\">></span>mRotationKeys<span class=\"token punctuation\">[</span>frame<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">const</span> aiQuatKey<span class=\"token operator\">&amp;</span> nextKey <span class=\"token operator\">=</span> channel<span class=\"token operator\">-</span><span class=\"token operator\">></span>mRotationKeys<span class=\"token punctuation\">[</span>nextFrame<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">double</span> diffTime <span class=\"token operator\">=</span> nextKey<span class=\"token punctuation\">.</span>mTime <span class=\"token operator\">-</span> key<span class=\"token punctuation\">.</span>mTime<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>diffTime <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                diffTime <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token function\">getDurationInSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>diffTime <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">float</span> factor <span class=\"token operator\">=</span> <span class=\"token keyword\">float</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>progressInSeconds <span class=\"token operator\">-</span> key<span class=\"token punctuation\">.</span>mTime<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> diffTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                aiQuaternion<span class=\"token operator\">::</span><span class=\"token function\">Interpolate</span><span class=\"token punctuation\">(</span>presentRotation<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">.</span>mValue<span class=\"token punctuation\">,</span> nextKey<span class=\"token punctuation\">.</span>mValue<span class=\"token punctuation\">,</span> factor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n                presentRotation <span class=\"token operator\">=</span> key<span class=\"token punctuation\">.</span>mValue<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        \n        aiVector3D <span class=\"token function\">presentScaling</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>channel<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumScalingKeys <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> frame <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>frame <span class=\"token operator\">&lt;</span> channel<span class=\"token operator\">-</span><span class=\"token operator\">></span>mNumScalingKeys <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>progressInSeconds <span class=\"token operator\">&lt;</span> channel<span class=\"token operator\">-</span><span class=\"token operator\">></span>mScalingKeys<span class=\"token punctuation\">[</span>frame<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mTime<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                frame<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n            \n            presentScaling <span class=\"token operator\">=</span> channel<span class=\"token operator\">-</span><span class=\"token operator\">></span>mScalingKeys<span class=\"token punctuation\">[</span>frame<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>mValue<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        \n        aiMatrix4x4 mat <span class=\"token operator\">=</span> <span class=\"token function\">aiMatrix4x4</span><span class=\"token punctuation\">(</span>presentRotation<span class=\"token punctuation\">.</span><span class=\"token function\">GetMatrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mat<span class=\"token punctuation\">.</span>a1 <span class=\"token operator\">*</span><span class=\"token operator\">=</span> presentScaling<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span> mat<span class=\"token punctuation\">.</span>b1 <span class=\"token operator\">*</span><span class=\"token operator\">=</span> presentScaling<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span> mat<span class=\"token punctuation\">.</span>c1 <span class=\"token operator\">*</span><span class=\"token operator\">=</span> presentScaling<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n        mat<span class=\"token punctuation\">.</span>a2 <span class=\"token operator\">*</span><span class=\"token operator\">=</span> presentScaling<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span> mat<span class=\"token punctuation\">.</span>b2 <span class=\"token operator\">*</span><span class=\"token operator\">=</span> presentScaling<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span> mat<span class=\"token punctuation\">.</span>c2 <span class=\"token operator\">*</span><span class=\"token operator\">=</span> presentScaling<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n        mat<span class=\"token punctuation\">.</span>a3 <span class=\"token operator\">*</span><span class=\"token operator\">=</span> presentScaling<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span> mat<span class=\"token punctuation\">.</span>b3 <span class=\"token operator\">*</span><span class=\"token operator\">=</span> presentScaling<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span> mat<span class=\"token punctuation\">.</span>c3 <span class=\"token operator\">*</span><span class=\"token operator\">=</span> presentScaling<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span>\n        mat<span class=\"token punctuation\">.</span>a4 <span class=\"token operator\">=</span> presentPosition<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span> mat<span class=\"token punctuation\">.</span>b4 <span class=\"token operator\">=</span> presentPosition<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span> mat<span class=\"token punctuation\">.</span>c4 <span class=\"token operator\">=</span> presentPosition<span class=\"token punctuation\">.</span>z<span class=\"token punctuation\">;</span>\n        \n        targetNode<span class=\"token operator\">-</span><span class=\"token operator\">></span>mTransformation <span class=\"token operator\">=</span> mat<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAssimpAnimation<span class=\"token operator\">::</span><span class=\"token function\">play</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>animation <span class=\"token operator\">==</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bPlay<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\" spellcheck=\"true\">// if already playing, ignore.</span>\n        bPause <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// if paused, then unpause.</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    bPlay <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    bPause <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAssimpAnimation<span class=\"token operator\">::</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>bPlay<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    bPlay <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    bPause <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAssimpAnimation<span class=\"token operator\">::</span><span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofxAssimpAnimation<span class=\"token operator\">::</span><span class=\"token function\">isFrameNew</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>bPlay <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>bPause<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// assume its always a new frame when playing and not paused.</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofxAssimpAnimation<span class=\"token operator\">::</span><span class=\"token function\">isPaused</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> bPause<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofxAssimpAnimation<span class=\"token operator\">::</span><span class=\"token function\">isPlaying</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> bPlay<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">bool</span> ofxAssimpAnimation<span class=\"token operator\">::</span><span class=\"token function\">isFinished</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span>bPlay <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> ofxAssimpAnimation<span class=\"token operator\">::</span><span class=\"token function\">getPosition</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> progress<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> ofxAssimpAnimation<span class=\"token operator\">::</span><span class=\"token function\">getPositionInSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> progressInSeconds<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxAssimpAnimation<span class=\"token operator\">::</span><span class=\"token function\">getPositionInMilliSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> progressInMilliSeconds<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> ofxAssimpAnimation<span class=\"token operator\">::</span><span class=\"token function\">getSpeed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> speed<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">float</span> ofxAssimpAnimation<span class=\"token operator\">::</span><span class=\"token function\">getDurationInSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> durationInSeconds<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> ofxAssimpAnimation<span class=\"token operator\">::</span><span class=\"token function\">getDurationInMilliSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> durationInMilliSeconds<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAssimpAnimation<span class=\"token operator\">::</span><span class=\"token function\">setPaused</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">bool</span> paused<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    bPause <span class=\"token operator\">=</span> paused<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAssimpAnimation<span class=\"token operator\">::</span><span class=\"token function\">setPosition</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> position<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    position <span class=\"token operator\">=</span> <span class=\"token function\">ofClamp</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">,</span> <span class=\"token number\">0.0f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>progress <span class=\"token operator\">==</span> position<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    progress <span class=\"token operator\">=</span> position<span class=\"token punctuation\">;</span>\n    progressInSeconds <span class=\"token operator\">=</span> progress <span class=\"token operator\">*</span> <span class=\"token function\">getDurationInSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    progressInMilliSeconds <span class=\"token operator\">=</span> progress <span class=\"token operator\">*</span> <span class=\"token function\">getDurationInMilliSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token function\">updateAnimationNodes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAssimpAnimation<span class=\"token operator\">::</span><span class=\"token function\">setLoopState</span><span class=\"token punctuation\">(</span>ofLoopType state<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    loopType <span class=\"token operator\">=</span> state<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> ofxAssimpAnimation<span class=\"token operator\">::</span><span class=\"token function\">setSpeed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> speed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    speed <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\" spellcheck=\"true\">// TODO.</span>\n<span class=\"token punctuation\">}</span>\n","type":"source"}}],"fetch":[]}