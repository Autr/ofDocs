{"entry":{"name":"ofPixels_functions","filename":"ofPixels_functions.markdown","absolute":"/Users/Gilbert/Code/openFrameworks/ofSite/documentation/graphics/ofPixels_functions.markdown","path":"/documentation/graphics/ofPixels_functions","route":"/documentation/graphics/ofPixels_functions.markdown","dir":"../ofSite/documentation/graphics","ext":"markdown","type":"page","id":379,"parent":358,"breadcrumbs":[358,1],"siblings":[],"translations":{}},"description":{},"methods":[null,{"syntax":"ofToString(&pixelType)","name":"ofToString","returns":"string","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> ofPixelFormat <span class=\"token operator\">&amp;</span>pixelType","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"","desc":""},{"syntax":"ofToString(&v)","name":"ofToString","returns":"string","returns_description":null,"parameters":"<span class=\"token keyword\">const</span> T <span class=\"token operator\">&amp;</span>v","version_started":"0.10.0","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>\\section String Conversion\nConvert a value to a string.</p>\n<p>ofToString does its best to convert any value to a string. If the data type\nimplements a stream &lt;&lt; operator, then it will be converted.</p>\n<p>Example:</p>\n<pre><code>\t\tstd<span class=\"token operator\">::</span>string str <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span>framerate is <span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n\t\tstr <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetFrameRate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span> fps<span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// The string now containes something like &amp;quot;framerate is 60 fps&amp;quot;.</span>\n</code></pre>\n<p>\\tparam T The data type of the value to convert to a string.</p>\n<p><strong>Parameters:</strong></p>\n<p>value The value to convert to a string.</p>\n<p><strong>Returns</strong>: A string representing the value or an empty string on failure.</p>\n","desc":""},{}],"document":"<p>#functions</p>\n<p>&lt;!--\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>##Description</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###string ofToString(&amp;pixelType)</p>\n<p>&lt;!--\n<em>syntax: ofToString(&amp;pixelType)</em>\n<em>name: ofToString</em>\n<em>returns: string</em>\n_returns_description: _\n<em>parameters: const ofPixelFormat &amp;pixelType</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###string ofToString(&amp;v)</p>\n<p>&lt;!--\n<em>syntax: ofToString(&amp;v)</em>\n<em>name: ofToString</em>\n<em>returns: string</em>\n_returns_description: _\n<em>parameters: const T &amp;v</em>\n<em>version_started: 0.10.0</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>\\section String Conversion\nConvert a value to a string.</p>\n<p>ofToString does its best to convert any value to a string. If the data type\nimplements a stream &lt;&lt; operator, then it will be converted.</p>\n<p>Example:</p>\n<pre><code>\t\tstd<span class=\"token operator\">::</span>string str <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span>framerate is <span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n\t\tstr <span class=\"token operator\">+</span><span class=\"token operator\">=</span> <span class=\"token function\">ofToString</span><span class=\"token punctuation\">(</span><span class=\"token function\">ofGetFrameRate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span> fps<span class=\"token operator\">&amp;</span>quot<span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\" spellcheck=\"true\">// The string now containes something like &amp;quot;framerate is 60 fps&amp;quot;.</span>\n</code></pre>\n<p>\\tparam T The data type of the value to convert to a string.</p>\n<p><strong>Parameters:</strong></p>\n<p>value The value to convert to a string.</p>\n<p><strong>Returns</strong>: A string representing the value or an empty string on failure.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n","raw":"#functions\n\n\n<!--\n_visible: True_\n_advanced: False_\n-->\n\n##Description\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###string ofToString(&pixelType)\n\n<!--\n_syntax: ofToString(&pixelType)_\n_name: ofToString_\n_returns: string_\n_returns_description: _\n_parameters: const ofPixelFormat &pixelType_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###string ofToString(&v)\n\n<!--\n_syntax: ofToString(&v)_\n_name: ofToString_\n_returns: string_\n_returns_description: _\n_parameters: const T &v_\n_version_started: 0.10.0_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\n\\section String Conversion\nConvert a value to a string.\n\nofToString does its best to convert any value to a string. If the data type\nimplements a stream << operator, then it will be converted.\n\nExample:\n~~~~{.cpp}\n\t\tstd::string str = \"framerate is \";\n\t\tstr += ofToString(ofGetFrameRate()) + \" fps\";\n\t\t// The string now containes something like \"framerate is 60 fps\".\n~~~~\n\n\\tparam T The data type of the value to convert to a string.\n\n**Parameters:**\n\nvalue The value to convert to a string.\n\n**Returns**: A string representing the value or an empty string on failure.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page"}