{"entry":{"name":"ofSoundPlayer_functions","filename":"ofSoundPlayer_functions.markdown","absolute":"/Users/Gilbert/Code/openFrameworks/ofSite/documentation/sound/ofSoundPlayer_functions.markdown","path":"/documentation/sound/ofSoundPlayer_functions","route":"/documentation/sound/ofSoundPlayer_functions.markdown","dir":"../ofSite/documentation/sound","ext":"markdown","type":"page","id":432,"parent":422,"breadcrumbs":[422,1],"siblings":[],"translations":{}},"description":{},"methods":[null,{"syntax":"ofSoundGetSpectrum(nBands)","name":"ofSoundGetSpectrum","returns":"float *","returns_description":null,"parameters":"<span class=\"token keyword\">int</span> nBands","version_started":null,"version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Gets a frequency spectrum sample, taking all current sound players into account.</p>\n<p>Each band will be represented as a float between 0 and 1.</p>\n<p><strong>Warning</strong>: This isn't implemented on mobile &amp; embedded platforms.</p>\n<p><strong>Parameters:</strong></p>\n<p>nBands number of spectrum bands to return, max 512.\n\\return pointer to an FFT sample, sample size is equal to the nBands parameter.</p>\n","desc":""},{"syntax":"ofSoundSetVolume(vol)","name":"ofSoundSetVolume","returns":"void","returns_description":null,"parameters":"<span class=\"token keyword\">float</span> vol","version_started":"006","version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Sets global volume for FMOD-based sound players (windows, osx).</p>\n<p><strong>Parameters:</strong></p>\n<p>vol range is 0 to 1.</p>\n","desc":"<p>Sets the volume of all ofSoundPlayer objects to the volume (vol) specified. 0.0 - 1.0 range. 0.0 is silent and 1.0 is full volume.</p>\n"},{"syntax":"ofSoundShutdown()","name":"ofSoundShutdown","returns":"void","returns_description":null,"parameters":null,"version_started":null,"version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Cleans up FMOD (windows, osx).</p>\n","desc":""},{"syntax":"ofSoundStopAll()","name":"ofSoundStopAll","returns":"void","returns_description":null,"parameters":null,"version_started":null,"version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Stops all active sound players on FMOD-based systems (windows, osx).</p>\n","desc":""},{"syntax":"ofSoundUpdate()","name":"ofSoundUpdate","returns":"void","returns_description":null,"parameters":null,"version_started":null,"version_deprecated":null,"summary":null,"constant":"False","static":"False","visible":"True","advanced":"False","short":"<p>Call in your app's update() to update FMOD-based sound players.</p>\n","desc":"<p>Updates sound engine. This should be called every frame.</p>\n"},{}],"document":"<p>#functions</p>\n<p>&lt;!--\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>##Description</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###float * ofSoundGetSpectrum(nBands)</p>\n<p>&lt;!--\n<em>syntax: ofSoundGetSpectrum(nBands)</em>\n<em>name: ofSoundGetSpectrum</em>\n<em>returns: float *</em>\n_returns_description: _\n<em>parameters: int nBands</em>\n_version_started: _\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Gets a frequency spectrum sample, taking all current sound players into account.</p>\n<p>Each band will be represented as a float between 0 and 1.</p>\n<p><strong>Warning</strong>: This isn't implemented on mobile &amp; embedded platforms.</p>\n<p><strong>Parameters:</strong></p>\n<p>nBands number of spectrum bands to return, max 512.\n\\return pointer to an FFT sample, sample size is equal to the nBands parameter.</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void ofSoundSetVolume(vol)</p>\n<p>&lt;!--\n<em>syntax: ofSoundSetVolume(vol)</em>\n<em>name: ofSoundSetVolume</em>\n<em>returns: void</em>\n_returns_description: _\n<em>parameters: float vol</em>\n<em>version_started: 006</em>\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Sets global volume for FMOD-based sound players (windows, osx).</p>\n<p><strong>Parameters:</strong></p>\n<p>vol range is 0 to 1.</p>\n<p>_description: _</p>\n<p>Sets the volume of all ofSoundPlayer objects to the volume (vol) specified. 0.0 - 1.0 range. 0.0 is silent and 1.0 is full volume.</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void ofSoundShutdown()</p>\n<p>&lt;!--\n<em>syntax: ofSoundShutdown()</em>\n<em>name: ofSoundShutdown</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n_version_started: _\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Cleans up FMOD (windows, osx).</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void ofSoundStopAll()</p>\n<p>&lt;!--\n<em>syntax: ofSoundStopAll()</em>\n<em>name: ofSoundStopAll</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n_version_started: _\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Stops all active sound players on FMOD-based systems (windows, osx).</p>\n<p>_description: _</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n<p>###void ofSoundUpdate()</p>\n<p>&lt;!--\n<em>syntax: ofSoundUpdate()</em>\n<em>name: ofSoundUpdate</em>\n<em>returns: void</em>\n_returns_description: _\n_parameters: _\n_version_started: _\n_version_deprecated: _\n_summary: _\n<em>constant: False</em>\n<em>static: False</em>\n<em>visible: True</em>\n<em>advanced: False</em>\n--&gt;</p>\n<p>_inlined_description: _</p>\n<p>Call in your app's update() to update FMOD-based sound players.</p>\n<p>_description: _</p>\n<p>Updates sound engine. This should be called every frame.</p>\n<p>&lt;!-----------------------------------------------------------------------------&gt;</p>\n","raw":"#functions\n\n\n<!--\n_visible: True_\n_advanced: False_\n-->\n\n##Description\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###float * ofSoundGetSpectrum(nBands)\n\n<!--\n_syntax: ofSoundGetSpectrum(nBands)_\n_name: ofSoundGetSpectrum_\n_returns: float *_\n_returns_description: _\n_parameters: int nBands_\n_version_started: _\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nGets a frequency spectrum sample, taking all current sound players into account.\n\nEach band will be represented as a float between 0 and 1.\n\n\n**Warning**: This isn't implemented on mobile & embedded platforms.\n\n**Parameters:**\n\nnBands number of spectrum bands to return, max 512.\n\\return pointer to an FFT sample, sample size is equal to the nBands parameter.\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void ofSoundSetVolume(vol)\n\n<!--\n_syntax: ofSoundSetVolume(vol)_\n_name: ofSoundSetVolume_\n_returns: void_\n_returns_description: _\n_parameters: float vol_\n_version_started: 006_\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nSets global volume for FMOD-based sound players (windows, osx).\n\n**Parameters:**\n\nvol range is 0 to 1.\n\n\n\n\n\n_description: _\n\nSets the volume of all ofSoundPlayer objects to the volume (vol) specified. 0.0 - 1.0 range. 0.0 is silent and 1.0 is full volume.\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void ofSoundShutdown()\n\n<!--\n_syntax: ofSoundShutdown()_\n_name: ofSoundShutdown_\n_returns: void_\n_returns_description: _\n_parameters: _\n_version_started: _\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nCleans up FMOD (windows, osx).\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void ofSoundStopAll()\n\n<!--\n_syntax: ofSoundStopAll()_\n_name: ofSoundStopAll_\n_returns: void_\n_returns_description: _\n_parameters: _\n_version_started: _\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nStops all active sound players on FMOD-based systems (windows, osx).\n\n\n\n\n\n_description: _\n\n\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n###void ofSoundUpdate()\n\n<!--\n_syntax: ofSoundUpdate()_\n_name: ofSoundUpdate_\n_returns: void_\n_returns_description: _\n_parameters: _\n_version_started: _\n_version_deprecated: _\n_summary: _\n_constant: False_\n_static: False_\n_visible: True_\n_advanced: False_\n-->\n\n_inlined_description: _\n\nCall in your app's update() to update FMOD-based sound players.\n\n\n\n\n\n_description: _\n\nUpdates sound engine. This should be called every frame.\n\n\n\n\n\n<!----------------------------------------------------------------------------->\n\n","type":"page"}